<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.3.18" created="2024-08-03 13:32" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>日々の暮らしを楽にしたい技術メモブログ</title>
	<link>https://tech.blog.uribou.me</link>
	<description>Pythonプログラミング、電子工作ネタが多め</description>
	<pubDate>Sat, 03 Aug 2024 13:32:23 +0000</pubDate>
	<language>ja</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://uribou.me/</wp:base_site_url>
	<wp:base_blog_url>https://tech.blog.uribou.me</wp:base_blog_url>

		<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[takashi]]></wp:author_login><wp:author_email><![CDATA[takashi7ando@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[Takashi]]></wp:author_display_name><wp:author_first_name><![CDATA[Takashi]]></wp:author_first_name><wp:author_last_name><![CDATA[Ando]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=5.3.18</generator>

		<item>
		<title>macのSSD容量を増やす</title>
		<link>https://tech.blog.uribou.me/?p=1608</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1608</guid>
		<description></description>
		<content:encoded><![CDATA[<a data-flickr-embed="true" data-footer="true" href="https://www.flickr.com/gp/29110932@N07/7nHeD6" title="mac upgrade"><img src="https://c1.staticflickr.com/6/5481/29879100313_c37d2313a0_z.jpg" width="640" height="275" alt="mac upgrade"></a>
<a href="https://discussions.apple.com/thread/1507263?start=0&amp;tstart=0">Restore Failure: Could not validate source - error 254</a>
<a href="http://www.macfixz.com/apple-error-254-get-corrupted-deleted-mac-data-recovered">Apple error 254 : Get Corrupted Deleted Mac Data Recovered</a>
<code>asr</code>コマンド
<a href="http://blog.livedoor.jp/dankogai/archives/51177018.html">tips - Mac OS X - asrでボリューム全コピー</a>
以下、引用。
<blockquote>
  ボリュームの全コピーは、asrを使うと以下の一行コマンドで済む。
  Mac OS X Manual Page For asr(8)
  sudo asr restore --source /Volumes/Classic --target /Volumes/install
  起動ボリュームだったら、こう。
  sudo asr restore --source / --target /Volumes/newdisk
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1608</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[macnossdrong-liang-wozeng-yasu]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mac"><![CDATA[mac]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%8e%e3%82%a6%e3%83%8f%e3%82%a6"><![CDATA[ノウハウ]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:63:"https://c1.staticflickr.com/6/5481/29879100313_c37d2313a0_z.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a data-flickr-embed="true" data-footer="true"  href="https://www.flickr.com/gp/29110932@N07/7nHeD6" title="mac upgrade"><img src="https://c1.staticflickr.com/6/5481/29879100313_c37d2313a0_z.jpg" width="640" height="275" alt="mac upgrade"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p><a href="https://discussions.apple.com/thread/1507263?start=0&amp;tstart=0">Restore Failure: Could not validate source - error 254</a></p>

<p><a href="http://www.macfixz.com/apple-error-254-get-corrupted-deleted-mac-data-recovered">Apple error 254 : Get Corrupted Deleted Mac Data Recovered</a></p>

<p><code>asr</code>コマンド</p>

<p><a href="http://blog.livedoor.jp/dankogai/archives/51177018.html">tips - Mac OS X - asrでボリューム全コピー</a></p>

<p>以下、引用。</p>

<blockquote>
  <p>ボリュームの全コピーは、asrを使うと以下の一行コマンドで済む。</p>
  
  <p>Mac OS X Manual Page For asr(8)
  sudo asr restore --source /Volumes/Classic --target /Volumes/install</p>
  
  <p>起動ボリュームだったら、こう。</p>
  
  <p>sudo asr restore --source / --target /Volumes/newdisk</p>
</blockquote>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>車載太陽光発電用途で超絶に使い勝手がよい、24V用DC/DCコンバータ（トラック用）の紹介。</title>
		<link>https://tech.blog.uribou.me/?p=1612</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1612</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/note-pc-can-work-on-car-with-solar-system/"></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1612</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[24v_dc_converter]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/note-pc-can-work-on-car-with-solar-system/"></a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3321]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Keen IOで太陽光発電モニタリングシステムを自作する方法。</title>
		<link>https://tech.blog.uribou.me/?p=1615</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1615</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://keen.io/docs/sdks/">SDKも多種多様</a>
<a href="http://keen.github.io/dashboards/">Keen IOに貯めたデータを可視化するためのOSSダッシュボード</a>
ダッシュボードのソースは<a href="https://github.com/keen/dashboards">github</a>にあるのでカスタマイズ仕放題。
<a href="https://github.com/keen/keen-js/blob/master/docs/visualization.md#area-chart">ダッシュボードが多用している可視化ライブラリのドキュメント</a>。チャートのオプション詳細説明が載っている。
<a href="https://github.com/keen/keen-js/blob/master/docs/visualization.md#metric">ダッシュボード内で使用しているkeen-jsのKeen clientオブジェクトの使い方説明</a>。大概のことはここでわかる。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1615</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[keeniowoshi-idao-site-monitaringusisutemuwozi-zuo-surufang-fa]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="keenio"><![CDATA[keenio]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://keen.io/docs/sdks/">SDKも多種多様</a></p>

<p><a href="http://keen.github.io/dashboards/">Keen IOに貯めたデータを可視化するためのOSSダッシュボード</a></p>

<p>ダッシュボードのソースは<a href="https://github.com/keen/dashboards">github</a>にあるのでカスタマイズ仕放題。</p>

<p><a href="https://github.com/keen/keen-js/blob/master/docs/visualization.md#area-chart">ダッシュボードが多用している可視化ライブラリのドキュメント</a>。チャートのオプション詳細説明が載っている。</p>

<p><a href="https://github.com/keen/keen-js/blob/master/docs/visualization.md#metric">ダッシュボード内で使用しているkeen-jsのKeen clientオブジェクトの使い方説明</a>。大概のことはここでわかる。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>OpenVPN client android編</title>
		<link>https://tech.blog.uribou.me/?p=1620</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1620</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://docs.openvpn.net/docs/openvpn-connect/openvpn-connect-android-faq.html">OpenVPN client android FAQ</a>の通り。
<pre><code>Q: How do I set up my profile for server failover?
A: You can provide OpenVPN with a list of servers to connect to. On connection failure, OpenVPN will rotate through the list until it finds a responsive server. For example, the following entries in the profile will first try to connect to server A via UDP port 1194, then TCP port 443, then repeat the process with server B. OpenVPN will continue to retry until it successfully connects or hits the Connection Timeout, which can be configured in the Preferences.
remote server-a.example.tld 1194 udp
remote server-a.example.tld 443 tcp
remote server-b.example.tld 1194 udp
remote server-b.example.tld 443 tcp
</code></pre>
<pre><code>Q: I am having trouble importing my .ovpn file.
A: Here are some basic pointers for importing .ovpn files:
When you import a .ovpn file, make sure that all files referenced by the .ovpn file such as ca, cert, and key files are in the same directory on the device as the .ovpn file.
Profiles must be UTF-8 (or ASCII) and under 256 KB in size.
Consider using the unified format for OpenVPN profiles which allows all certs and keys to be embedded into the .ovpn file. This eases management of the OpenVPN configuration because it integrates all elements of the configuration into a single file.
For example, a traditional OpenVPN profile might specify certs and keys as follows:
ca ca.crt
cert client.crt
key client.key
tls-auth ta.key 1
</code></pre>
または全てを.ovpnにXML風に記述する。
<pre><code>You can convert this usage to unified form by pasting the content of the certificate and key files directly into the OpenVPN profile as follows using an XML-like syntax:
&lt;ca&gt;
-----BEGIN CERTIFICATE-----
MIIBszCCARygAwIBAgIE...
. . .
/NygscQs1bxBSZ0X3KRk...
Lq9iNBNgWg==
-----END CERTIFICATE-----
&lt;/ca&gt;
&lt;cert&gt;
-----BEGIN CERTIFICATE-----
. . .
&lt;/cert&gt;
&lt;key&gt;
-----BEGIN RSA PRIVATE KEY-----
. . .
&lt;/key&gt;
key-direction 1
&lt;tls-auth&gt;
-----BEGIN OpenVPN Static key V1-----
. . .
&lt;/tls-auth&gt;
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1620</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[openvpn-client-androidbian]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openvpn"><![CDATA[OpenVPN]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://docs.openvpn.net/docs/openvpn-connect/openvpn-connect-android-faq.html">OpenVPN client android FAQ</a>の通り。</p>

<pre><code>Q: How do I set up my profile for server failover?

A: You can provide OpenVPN with a list of servers to connect to. On connection failure, OpenVPN will rotate through the list until it finds a responsive server. For example, the following entries in the profile will first try to connect to server A via UDP port 1194, then TCP port 443, then repeat the process with server B. OpenVPN will continue to retry until it successfully connects or hits the Connection Timeout, which can be configured in the Preferences.

remote server-a.example.tld 1194 udp  
remote server-a.example.tld 443 tcp  
remote server-b.example.tld 1194 udp  
remote server-b.example.tld 443 tcp  
</code></pre>

<pre><code>Q: I am having trouble importing my .ovpn file.

A: Here are some basic pointers for importing .ovpn files:

When you import a .ovpn file, make sure that all files referenced by the .ovpn file such as ca, cert, and key files are in the same directory on the device as the .ovpn file.

Profiles must be UTF-8 (or ASCII) and under 256 KB in size.

Consider using the unified format for OpenVPN profiles which allows all certs and keys to be embedded into the .ovpn file. This eases management of the OpenVPN configuration because it integrates all elements of the configuration into a single file.

For example, a traditional OpenVPN profile might specify certs and keys as follows:

ca ca.crt  
cert client.crt  
key client.key  
tls-auth ta.key 1  
</code></pre>

<p>または全てを.ovpnにXML風に記述する。</p>

<pre><code>You can convert this usage to unified form by pasting the content of the certificate and key files directly into the OpenVPN profile as follows using an XML-like syntax:

&lt;ca&gt;  
-----BEGIN CERTIFICATE-----
MIIBszCCARygAwIBAgIE...  
. . .
/NygscQs1bxBSZ0X3KRk...
Lq9iNBNgWg==  
-----END CERTIFICATE-----
&lt;/ca&gt;

&lt;cert&gt;  
-----BEGIN CERTIFICATE-----
. . .
&lt;/cert&gt;

&lt;key&gt;  
-----BEGIN RSA PRIVATE KEY-----
. . .
&lt;/key&gt;

key-direction 1  
&lt;tls-auth&gt;  
-----BEGIN OpenVPN Static key V1-----
. . .
&lt;/tls-auth&gt;  
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>スマホから電源スイッチのリモート操作を可能にするWebアプリケーションの作り方。</title>
		<link>https://tech.blog.uribou.me/?p=1622</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1622</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://flask.pocoo.org/docs/0.11/python3/#requirements">flaskの公式ドキュメント</a>にPython 3.2以下はサポートしませんとあるので注意。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1622</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sumahokaradian-yuan-suitutinorimotocao-zuo-woke-neng-nisuruwebapurikesiyonnozuo-rifang]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://flask.pocoo.org/docs/0.11/python3/#requirements">flaskの公式ドキュメント</a>にPython 3.2以下はサポートしませんとあるので注意。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1623]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>setup.pyのみで必要なインストール作業全て賄うには。</title>
		<link>https://tech.blog.uribou.me/?p=1624</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1624</guid>
		<description></description>
		<content:encoded><![CDATA[https://docs.python.org/3.4/distutils/setupscript.html#installing-additional-files]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1624</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[setup-pynomidebi-yao-nainsutoruzuo-ye-quan-tehui-uniha]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://docs.python.org/3.4/distutils/setupscript.html#installing-additional-files">https://docs.python.org/3.4/distutils/setupscript.html#installing-additional-files</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>日本の男性は、働きすぎだ。</title>
		<link>https://tech.blog.uribou.me/?p=1626</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1626</guid>
		<description></description>
		<content:encoded><![CDATA[男性は、仕事もして家事育児もしてるとイクメンと言われる。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">今日書いた記事。/「 <a href="https://twitter.com/hashtag/%E3%82%82%E3%81%97%E3%82%82%E5%AE%9A%E6%99%82%E3%81%A7%E5%B8%B0%E3%82%8C%E3%81%9F%E3%82%89?src=hash">#もしも定時で帰れたら</a>」 が切実で日本やばいと思った。 : まだ東京で消耗してるの？ <a href="https://t.co/CLHvCxxdtG">https://t.co/CLHvCxxdtG</a> <a href="https://t.co/LMS8LjiNAg">pic.twitter.com/LMS8LjiNAg</a></p>&mdash; イケダハヤト (@IHayato) <a href="https://twitter.com/IHayato/status/807538305248198656">2016年12月10日</a></blockquote>

子供が熱を出しても、奥さんに任せておけばいいんじゃないか？という意識の上司もまだまだ多いらしい。
確かに仕事から疲れて帰って来てから、やるべきことを終わるべき時間までにやることは大変。
でも、それは今の時代、働く子持ち女性でもほぼ毎日当たり前のように、大体のお母さんは、旦那さんの帰りが遅く、誰に褒められる訳でもなくそれを一人でやっている。
終身雇用もなくなり、給与の羽振りも変わり、物価も学費も高くなり。
一馬力では不安が多い世の中になった。
もちろん女性の生き方に、選択肢が増えているプラス面もあるけど。
昔とはもう全然違うのに、男性の働き方は昔と変わっていない。
日本の男性は、働きすぎだ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1626</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mens-workstyle]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>男性は、仕事もして家事育児もしてるとイクメンと言われる。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">今日書いた記事。/「 <a href="https://twitter.com/hashtag/%E3%82%82%E3%81%97%E3%82%82%E5%AE%9A%E6%99%82%E3%81%A7%E5%B8%B0%E3%82%8C%E3%81%9F%E3%82%89?src=hash">#もしも定時で帰れたら</a>」 が切実で日本やばいと思った。 : まだ東京で消耗してるの？ <a href="https://t.co/CLHvCxxdtG">https://t.co/CLHvCxxdtG</a> <a href="https://t.co/LMS8LjiNAg">pic.twitter.com/LMS8LjiNAg</a></p>&mdash; イケダハヤト (@IHayato) <a href="https://twitter.com/IHayato/status/807538305248198656">2016年12月10日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>子供が熱を出しても、奥さんに任せておけばいいんじゃないか？という意識の上司もまだまだ多いらしい。</p>

<p>確かに仕事から疲れて帰って来てから、やるべきことを終わるべき時間までにやることは大変。</p>

<p>でも、それは今の時代、働く子持ち女性でもほぼ毎日当たり前のように、大体のお母さんは、旦那さんの帰りが遅く、誰に褒められる訳でもなくそれを一人でやっている。</p>

<p>終身雇用もなくなり、給与の羽振りも変わり、物価も学費も高くなり。</p>

<p>一馬力では不安が多い世の中になった。</p>

<p>もちろん女性の生き方に、選択肢が増えているプラス面もあるけど。</p>

<p>昔とはもう全然違うのに、男性の働き方は昔と変わっていない。</p>

<p>日本の男性は、働きすぎだ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>xively png</title>
		<link>https://tech.blog.uribou.me/?p=1627</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1627</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://api.xively.com/v2/feeds/1031061917/datastreams/MicroSievertPerHour.png?t=RadiationMonitor&amp;b=true&amp;g=true" alt="" />
https://personal.xively.com/dev/docs/api/data/read/single_datastream/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1627</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xively-png]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="xively"><![CDATA[xively]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:119:"https://api.xively.com/v2/feeds/1031061917/datastreams/MicroSievertPerHour.png?t=RadiationMonitor&amp;b=true&amp;g=true";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><img src="https://api.xively.com/v2/feeds/1031061917/datastreams/MicroSievertPerHour.png?t=RadiationMonitor&amp;b=true&amp;g=true" alt="" /></p>

<p><a href="https://personal.xively.com/dev/docs/api/data/read/single_datastream/">https://personal.xively.com/dev/docs/api/data/read/single_datastream/</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>asyncioのリソース管理</title>
		<link>https://tech.blog.uribou.me/?p=1630</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1630</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Lock</h1>
<h2>実装を確認してみる</h2>
<pre><code class="python">class _ContextManagerMixin:
    def __enter__(self):
        raise RuntimeError(
            '"yield from" should be used as context manager expression')
    def __exit__(self, *args):
        pass
    @coroutine
    def __iter__(self):
        yield from self.acquire()
        return _ContextManager(self)
    if compat.PY35:
        def __await__(self):
            # To make "with await lock" work.
            yield from self.acquire()
            return _ContextManager(self)
        @coroutine
        def __aenter__(self):
            yield from self.acquire()
            # We have no use for the "as ..."  clause in the with
            # statement for locks.
            return None
        @coroutine
        def __aexit__(self, exc_type, exc, tb):
            self.release()
class Lock(_ContextManagerMixin):
    """Primitive lock objects.
    ...
    """
    @coroutine
    def acquire(self):
        """Acquire a lock.
        This method blocks until the lock is unlocked, then sets it to
        locked and returns True.
        """
        if not self._waiters and not self._locked:
            self._locked = True
            return True
        fut = futures.Future(loop=self._loop)
        self._waiters.append(fut)
        try:
            yield from fut
            self._locked = True
            return True
        finally:
            self._waiters.remove(fut)
    def release(self):
        """Release a lock.
        When the lock is locked, reset it to unlocked, and return.
        If any other coroutines are blocked waiting for the lock to become
        unlocked, allow exactly one of them to proceed.
        When invoked on an unlocked lock, a RuntimeError is raised.
        There is no return value.
        """
        if self._locked:
            self._locked = False
            # Wake up the first waiter who isn't cancelled.
            for fut in self._waiters:
                if not fut.done():
                    fut.set_result(True)
                    break
        else:
            raise RuntimeError('Lock is not acquired.')
</code></pre>
<h2>使い方</h2>
<pre><code class="python"><br />Usage:
    lock = asyncio.Lock()
    ...
    yield from lock
    try:
        ...
    finally:
        lock.release()
Context manager usage:
    lock = asyncio.Lock()
    ...
    with (yield from lock):
         ...
Lock objects can be tested for locking state:
    if not lock.locked():
       yield from lock
    else:
       # lock is acquired
       ...
</code></pre>
<h1>Semaphore</h1>
<h2>実装を確認してみる</h2>
<pre><code class="python">class Semaphore(_ContextManagerMixin):
    """A Semaphore implementation.
    ...
    """
    @coroutine
    def acquire(self):
        """Acquire a semaphore.
        If the internal counter is larger than zero on entry,
        decrement it by one and return True immediately.  If it is
        zero on entry, block, waiting until some other coroutine has
        called release() to make it larger than 0, and then return
        True.
        """
        while self._value &lt;= 0:
            fut = futures.Future(loop=self._loop)
            self._waiters.append(fut)
            try:
                yield from fut
            except:
                # See the similar code in Queue.get.
                fut.cancel()
                if self._value &gt; 0 and not fut.cancelled():
                    self._wake_up_next()
                raise
        self._value -= 1
        return True
    def release(self):
        """Release a semaphore, incrementing the internal counter by one.
        When it was zero on entry and another coroutine is waiting for it to
        become larger than zero again, wake up that coroutine.
        """
        self._value += 1
        self._wake_up_next()
</code></pre>
<h2>使い方</h2>
<pre><code class="python">Init signature: asyncio.Semaphore(value=1, *, loop=None)
Docstring:
A Semaphore implementation.
A semaphore manages an internal counter which is decremented by each
acquire() call and incremented by each release() call. The counter
can never go below zero; when acquire() finds that it is zero, it blocks,
waiting until some other thread calls release().
Semaphores also support the context management protocol.
The optional argument gives the initial value for the internal
counter; it defaults to 1. If the value given is less than 0,
ValueError is raised.
</code></pre>
<h2>使い方</h2>
<h1>Queue</h1>
<h2>put/getの実装を確認してみる</h2>
<pre><code class="python">class Queue:
    """A queue, useful for coordinating producer and consumer coroutines.
    ...
    """
    def __init__(self, maxsize=0, *, loop=None):
        ...
    @coroutine
    def put(self, item):
        """Put an item into the queue.
        Put an item into the queue. If the queue is full, wait until a free
        slot is available before adding item.
        This method is a coroutine.
        """
        while self.full():
            putter = futures.Future(loop=self._loop)
            self._putters.append(putter)
            try:
                yield from putter
            except:
                putter.cancel()  # Just in case putter is not done yet.
                if not self.full() and not putter.cancelled():
                    # We were woken up by get_nowait(), but can't take
                    # the call.  Wake up the next in line.
                    self._wakeup_next(self._putters)
                raise
        return self.put_nowait(item)
    @coroutine
    def get(self):
        """Remove and return an item from the queue.
        If queue is empty, wait until an item is available.
        This method is a coroutine.
        """
        while self.empty():
            getter = futures.Future(loop=self._loop)
            self._getters.append(getter)
            try:
                yield from getter
            except:
                getter.cancel()  # Just in case getter is not done yet.
                if not self.empty() and not getter.cancelled():
                    # We were woken up by put_nowait(), but can't take
                    # the call.  Wake up the next in line.
                    self._wakeup_next(self._getters)
                raise
        return self.get_nowait()
    @coroutine
    def join(self):
        """Block until all items in the queue have been gotten and processed.
        The count of unfinished tasks goes up whenever an item is added to the
        queue. The count goes down whenever a consumer calls task_done() to
        indicate that the item was retrieved and all work on it is complete.
        When the count of unfinished tasks drops to zero, join() unblocks.
        """
        if self._unfinished_tasks &gt; 0:
            yield from self._finished.wait()
    def get_nowait(self):
        """Remove and return an item from the queue.
        Return an item if one is immediately available, else raise QueueEmpty.
        """
        if self.empty():
            raise QueueEmpty
        item = self._get()
        self._wakeup_next(self._putters)
        return item
</code></pre>
<h2>使い方</h2>
<pre><code class="python">Init signature: asyncio.Queue(maxsize=0, *, loop=None)
Docstring:
A queue, useful for coordinating producer and consumer coroutines.
If maxsize is less than or equal to zero, the queue size is infinite. If it
is an integer greater than 0, then "yield from put()" will block when the
queue reaches maxsize, until an item is removed by get().
Unlike the standard library Queue, you can reliably know this Queue's size
with qsize(), since your single-threaded asyncio application won't be
interrupted between calling qsize() and doing an operation on the Queue.
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1630</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[asyncionorisosuguan-li]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="phv"><![CDATA[PHV]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<h1 id="lock">Lock</h1>

<h2 id="">実装を確認してみる</h2>

<pre><code class="language-python">class _ContextManagerMixin:  
    def __enter__(self):
        raise RuntimeError(
            '"yield from" should be used as context manager expression')

    def __exit__(self, *args):
        pass

    @coroutine
    def __iter__(self):
        yield from self.acquire()
        return _ContextManager(self)

    if compat.PY35:
        def __await__(self):
            # To make "with await lock" work.
            yield from self.acquire()
            return _ContextManager(self)

        @coroutine
        def __aenter__(self):
            yield from self.acquire()
            # We have no use for the "as ..."  clause in the with
            # statement for locks.
            return None

        @coroutine
        def __aexit__(self, exc_type, exc, tb):
            self.release()

class Lock(_ContextManagerMixin):  
    """Primitive lock objects.
    ...
    """
    @coroutine
    def acquire(self):
        """Acquire a lock.

        This method blocks until the lock is unlocked, then sets it to
        locked and returns True.
        """
        if not self._waiters and not self._locked:
            self._locked = True
            return True

        fut = futures.Future(loop=self._loop)
        self._waiters.append(fut)
        try:
            yield from fut
            self._locked = True
            return True
        finally:
            self._waiters.remove(fut)

    def release(self):
        """Release a lock.

        When the lock is locked, reset it to unlocked, and return.
        If any other coroutines are blocked waiting for the lock to become
        unlocked, allow exactly one of them to proceed.

        When invoked on an unlocked lock, a RuntimeError is raised.

        There is no return value.
        """
        if self._locked:
            self._locked = False
            # Wake up the first waiter who isn't cancelled.
            for fut in self._waiters:
                if not fut.done():
                    fut.set_result(True)
                    break
        else:
            raise RuntimeError('Lock is not acquired.')
</code></pre>

<h2 id="">使い方</h2>

<pre><code class="language-python">Usage:

    lock = asyncio.Lock()
    ...
    yield from lock
    try:
        ...
    finally:
        lock.release()

Context manager usage:

    lock = asyncio.Lock()
    ...
    with (yield from lock):
         ...

Lock objects can be tested for locking state:

    if not lock.locked():
       yield from lock
    else:
       # lock is acquired
       ...
</code></pre>

<h1 id="semaphore">Semaphore</h1>

<h2 id="">実装を確認してみる</h2>

<pre><code class="language-python">class Semaphore(_ContextManagerMixin):  
    """A Semaphore implementation.
    ...
    """
    @coroutine
    def acquire(self):
        """Acquire a semaphore.

        If the internal counter is larger than zero on entry,
        decrement it by one and return True immediately.  If it is
        zero on entry, block, waiting until some other coroutine has
        called release() to make it larger than 0, and then return
        True.
        """
        while self._value &lt;= 0:
            fut = futures.Future(loop=self._loop)
            self._waiters.append(fut)
            try:
                yield from fut
            except:
                # See the similar code in Queue.get.
                fut.cancel()
                if self._value &gt; 0 and not fut.cancelled():
                    self._wake_up_next()
                raise
        self._value -= 1
        return True

    def release(self):
        """Release a semaphore, incrementing the internal counter by one.
        When it was zero on entry and another coroutine is waiting for it to
        become larger than zero again, wake up that coroutine.
        """
        self._value += 1
        self._wake_up_next()
</code></pre>

<h2 id="">使い方</h2>

<pre><code class="language-python">Init signature: asyncio.Semaphore(value=1, *, loop=None)  
Docstring:  
A Semaphore implementation.

A semaphore manages an internal counter which is decremented by each  
acquire() call and incremented by each release() call. The counter  
can never go below zero; when acquire() finds that it is zero, it blocks,  
waiting until some other thread calls release().

Semaphores also support the context management protocol.

The optional argument gives the initial value for the internal  
counter; it defaults to 1. If the value given is less than 0,  
ValueError is raised.  
</code></pre>

<h2 id="">使い方</h2>

<h1 id="queue">Queue</h1>

<h2 id="putget">put/getの実装を確認してみる</h2>

<pre><code class="language-python">class Queue:  
    """A queue, useful for coordinating producer and consumer coroutines.
    ...
    """

    def __init__(self, maxsize=0, *, loop=None):
        ...

    @coroutine
    def put(self, item):
        """Put an item into the queue.

        Put an item into the queue. If the queue is full, wait until a free
        slot is available before adding item.

        This method is a coroutine.
        """
        while self.full():
            putter = futures.Future(loop=self._loop)
            self._putters.append(putter)
            try:
                yield from putter
            except:
                putter.cancel()  # Just in case putter is not done yet.
                if not self.full() and not putter.cancelled():
                    # We were woken up by get_nowait(), but can't take
                    # the call.  Wake up the next in line.
                    self._wakeup_next(self._putters)
                raise
        return self.put_nowait(item)

    @coroutine
    def get(self):
        """Remove and return an item from the queue.

        If queue is empty, wait until an item is available.

        This method is a coroutine.
        """
        while self.empty():
            getter = futures.Future(loop=self._loop)
            self._getters.append(getter)
            try:
                yield from getter
            except:
                getter.cancel()  # Just in case getter is not done yet.
                if not self.empty() and not getter.cancelled():
                    # We were woken up by put_nowait(), but can't take
                    # the call.  Wake up the next in line.
                    self._wakeup_next(self._getters)
                raise
        return self.get_nowait()

    @coroutine
    def join(self):
        """Block until all items in the queue have been gotten and processed.

        The count of unfinished tasks goes up whenever an item is added to the
        queue. The count goes down whenever a consumer calls task_done() to
        indicate that the item was retrieved and all work on it is complete.
        When the count of unfinished tasks drops to zero, join() unblocks.
        """
        if self._unfinished_tasks &gt; 0:
            yield from self._finished.wait()

    def get_nowait(self):
        """Remove and return an item from the queue.

        Return an item if one is immediately available, else raise QueueEmpty.
        """
        if self.empty():
            raise QueueEmpty
        item = self._get()
        self._wakeup_next(self._putters)
        return item
</code></pre>

<h2 id="">使い方</h2>

<pre><code class="language-python">Init signature: asyncio.Queue(maxsize=0, *, loop=None)  
Docstring:  
A queue, useful for coordinating producer and consumer coroutines.

If maxsize is less than or equal to zero, the queue size is infinite. If it  
is an integer greater than 0, then "yield from put()" will block when the  
queue reaches maxsize, until an item is removed by get().

Unlike the standard library Queue, you can reliably know this Queue's size  
with qsize(), since your single-threaded asyncio application won't be  
interrupted between calling qsize() and doing an operation on the Queue.  
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>HTTPサーバの脆弱性をチェックするには</title>
		<link>https://tech.blog.uribou.me/?p=1632</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1632</guid>
		<description></description>
		<content:encoded><![CDATA[
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">OSSのWebサーバスキャナ、Nikto。まずはローカルネットワークのApacheをチェックしてみよう。ボロカスに指摘されるに違いない。<a href="https://t.co/Fm33oPTqXh">https://t.co/Fm33oPTqXh</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/828143768926695424">2017年2月5日</a></blockquote>

<pre><code class="bash">- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          xxx.xxx.xxx.xxx
+ Target Hostname:    xxx.sakura.ne.jp
+ Target Port:        80
+ Start Time:         2017-02-05 20:19:19 (GMT9)
---------------------------------------------------------------------------
+ Server: Apache/2.4.18 (Ubuntu)
+ Server leaks inodes via ETags, header found with file /, fields: 0x2c39 0x547b737654e0e
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.20). Apache 2.2.31 is also current for the 2.x branch.
+ Allowed HTTP Methods: OPTIONS, GET, HEAD, POST
+ Uncommon header 'x-ob_mode' found, with contents: 1
+ OSVDB-3233: /icons/README: Apache default file found.
+ /phpmyadmin/: phpMyAdmin directory found
+ 7892 requests: 0 error(s) and 9 item(s) reported on remote host
+ End Time:           2017-02-05 20:20:57 (GMT9) (98 seconds)
---------------------------------------------------------------------------
</code></pre>
<ul>
<li>conf-available/security.conf
<ul>
<li>ServerTokensをOSからProdに変更</li>
<li>ServerSignatureをOnからOffに変更</li>
</ul></li>
<li>mods-enabled/alias.conf
<ul>
<li>iconsディレクトリの公開を止める</li>
</ul></li>
</ul>
と、以下の結果に。
<pre><code class="bash">- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          xxx.xxx.xxx.xxx
+ Target Hostname:    xxx.sakura.ne.jp
+ Target Port:        80
+ Start Time:         2017-02-06 05:44:26 (GMT9)
---------------------------------------------------------------------------
+ Server: Apache
+ Server leaks inodes via ETags, header found with file /, fields: 0x2c39 0x547b737654e0e
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Allowed HTTP Methods: OPTIONS, GET, HEAD, POST
+ Uncommon header 'x-ob_mode' found, with contents: 1
+ /phpmyadmin/: phpMyAdmin directory found
+ 7892 requests: 0 error(s) and 7 item(s) reported on remote host
+ End Time:           2017-02-06 05:45:59 (GMT9) (93 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
</code></pre>
diff取るとこんな感じ。
<pre><code class="diff">--- before.log  2017-02-06 05:50:13.000000000 +0900
+++ after.log   2017-02-06 05:50:32.000000000 +0900
@@ -3,20 +3,19 @@
 + Target IP:          xxx.xxx.xxx.xxx
 + Target Hostname:    xxx.sakura.ne.jp
 + Target Port:        80
-+ Start Time:         2017-02-05 20:19:19 (GMT9)
++ Start Time:         2017-02-06 05:44:26 (GMT9)
 ---------------------------------------------------------------------------
-+ Server: Apache/2.4.18 (Ubuntu)
++ Server: Apache
 + Server leaks inodes via ETags, header found with file /, fields: 0x2c39 0x547b737654e0e
 + The anti-clickjacking X-Frame-Options header is not present.
 + The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
 + The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
 + No CGI Directories found (use '-C all' to force check all possible dirs)
-+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.20). Apache 2.2.31 is also current for the 2.x branch.
 + Allowed HTTP Methods: OPTIONS, GET, HEAD, POST
 + Uncommon header 'x-ob_mode' found, with contents: 1
-+ OSVDB-3233: /icons/README: Apache default file found.
 + /phpmyadmin/: phpMyAdmin directory found
-+ 7892 requests: 0 error(s) and 9 item(s) reported on remote host
-+ End Time:           2017-02-05 20:20:57 (GMT9) (98 seconds)
++ 7892 requests: 0 error(s) and 7 item(s) reported on remote host
++ End Time:           2017-02-06 05:45:59 (GMT9) (93 seconds)
 ---------------------------------------------------------------------------
++ 1 host(s) tested
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1632</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-check-by-nikto]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="tong-qin"><![CDATA[通勤]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">OSSのWebサーバスキャナ、Nikto。まずはローカルネットワークのApacheをチェックしてみよう。ボロカスに指摘されるに違いない。<a href="https://t.co/Fm33oPTqXh">https://t.co/Fm33oPTqXh</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/828143768926695424">2017年2月5日</a></blockquote>  </p>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<pre><code class="language-bash">- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          xxx.xxx.xxx.xxx
+ Target Hostname:    xxx.sakura.ne.jp
+ Target Port:        80
+ Start Time:         2017-02-05 20:19:19 (GMT9)
---------------------------------------------------------------------------
+ Server: Apache/2.4.18 (Ubuntu)
+ Server leaks inodes via ETags, header found with file /, fields: 0x2c39 0x547b737654e0e 
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.20). Apache 2.2.31 is also current for the 2.x branch.
+ Allowed HTTP Methods: OPTIONS, GET, HEAD, POST 
+ Uncommon header 'x-ob_mode' found, with contents: 1
+ OSVDB-3233: /icons/README: Apache default file found.
+ /phpmyadmin/: phpMyAdmin directory found
+ 7892 requests: 0 error(s) and 9 item(s) reported on remote host
+ End Time:           2017-02-05 20:20:57 (GMT9) (98 seconds)
---------------------------------------------------------------------------
</code></pre>

<ul>
<li>conf-available/security.conf
<ul><li>ServerTokensをOSからProdに変更</li>
<li>ServerSignatureをOnからOffに変更</li></ul></li>
<li>mods-enabled/alias.conf
<ul><li>iconsディレクトリの公開を止める</li></ul></li>
</ul>

<p>と、以下の結果に。</p>

<pre><code class="language-bash">- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          xxx.xxx.xxx.xxx
+ Target Hostname:    xxx.sakura.ne.jp
+ Target Port:        80
+ Start Time:         2017-02-06 05:44:26 (GMT9)
---------------------------------------------------------------------------
+ Server: Apache
+ Server leaks inodes via ETags, header found with file /, fields: 0x2c39 0x547b737654e0e 
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Allowed HTTP Methods: OPTIONS, GET, HEAD, POST 
+ Uncommon header 'x-ob_mode' found, with contents: 1
+ /phpmyadmin/: phpMyAdmin directory found
+ 7892 requests: 0 error(s) and 7 item(s) reported on remote host
+ End Time:           2017-02-06 05:45:59 (GMT9) (93 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
</code></pre>

<p>diff取るとこんな感じ。</p>

<pre><code class="language-diff">--- before.log    2017-02-06 05:50:13.000000000 +0900
+++ after.log    2017-02-06 05:50:32.000000000 +0900
@@ -3,20 +3,19 @@
 + Target IP:          xxx.xxx.xxx.xxx
 + Target Hostname:    xxx.sakura.ne.jp
 + Target Port:        80
-+ Start Time:         2017-02-05 20:19:19 (GMT9)
++ Start Time:         2017-02-06 05:44:26 (GMT9)
 ---------------------------------------------------------------------------
-+ Server: Apache/2.4.18 (Ubuntu)
++ Server: Apache
 + Server leaks inodes via ETags, header found with file /, fields: 0x2c39 0x547b737654e0e 
 + The anti-clickjacking X-Frame-Options header is not present.
 + The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
 + The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
 + No CGI Directories found (use '-C all' to force check all possible dirs)
-+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.20). Apache 2.2.31 is also current for the 2.x branch.
 + Allowed HTTP Methods: OPTIONS, GET, HEAD, POST 
 + Uncommon header 'x-ob_mode' found, with contents: 1
-+ OSVDB-3233: /icons/README: Apache default file found.
 + /phpmyadmin/: phpMyAdmin directory found
-+ 7892 requests: 0 error(s) and 9 item(s) reported on remote host
-+ End Time:           2017-02-05 20:20:57 (GMT9) (98 seconds)
++ 7892 requests: 0 error(s) and 7 item(s) reported on remote host
++ End Time:           2017-02-06 05:45:59 (GMT9) (93 seconds)
 ---------------------------------------------------------------------------
++ 1 host(s) tested
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>plantumlではER図が書けない… のでerdを使う。</title>
		<link>https://tech.blog.uribou.me/?p=1637</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1637</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
<br />
plantumlはER図をサポートしていないので、クラス図で代用する人も中にはいましたが・・・
erdというHaskellで書いたツールを知ったので試してみました。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/plantuml?src=hash">#plantuml</a> がサポートしていない <a href="https://twitter.com/hashtag/ER%E5%9B%B3?src=hash">#ER図</a> をテキストベースで書けるらしい。 by <a href="https://twitter.com/nori3tsu">@nori3tsu</a> on <a href="https://twitter.com/Qiita">@Qiita</a> <a href="https://t.co/J1tpWS89yJ">https://t.co/J1tpWS89yJ</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/834596069975564288">2017年2月23日</a></blockquote>

まずはHaskellのパッケージ管理システムcabalを入れるため、Homebrewで色々インストール。
<pre><code class="bash">moca:sql $ brew install ghc
Updating Homebrew...
==&gt; Auto-updated Homebrew!
Updated 1 tap (homebrew/core).
==&gt; Updated Formulae
akka                       cjdns                      gitlab-ci-multi-runner     libsigsegv                 node                       putty
casperjs                   geoserver                  jump                       mitmproxy                  parallel                   tile38
==&gt; Downloading https://homebrew.bintray.com/bottles/ghc-8.0.2.sierra.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring ghc-8.0.2.sierra.bottle.tar.gz
==&gt; Using the sandbox
==&gt; /usr/local/Cellar/ghc/8.0.2/bin/ghc-pkg recache
_  /usr/local/Cellar/ghc/8.0.2: 5,777 files, 1G
moca:sql $ ghci
GHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help
Prelude&gt; putStrLn "hello"
hello
Prelude&gt;
Leaving GHCi.
moca:sql $ brew install cabal-install
Updating Homebrew...
==&gt; Downloading https://homebrew.bintray.com/bottles/cabal-install-1.24.0.2_3.sierra.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring cabal-install-1.24.0.2_3.sierra.bottle.tar.gz
==&gt; Caveats
Bash completion has been installed to:
  /usr/local/etc/bash_completion.d
==&gt; Summary
  /usr/local/Cellar/cabal-install/1.24.0.2_3: 7 files, 27.7M
</code></pre>
そしてcabalでerdをインストール…　しようとしたら、依存関係でエラーが。。
<pre><code class="bash">moca:sql $ cabal install erd
Resolving dependencies...
cabal: Could not resolve dependencies:
trying: erd-0.1.3.0 (user goal)
next goal: base (dependency of erd-0.1.3.0)
rejecting: base-4.9.1.0/installed-4.9... (conflict: erd =&gt; base==4.7.*)
rejecting: base-4.9.1.0, base-4.9.0.0, base-4.8.2.0, base-4.8.1.0,
base-4.8.0.0, base-4.7.0.2, base-4.7.0.1, base-4.7.0.0, base-4.6.0.1,
base-4.6.0.0, base-4.5.1.0, base-4.5.0.0, base-4.4.1.0, base-4.4.0.0,
babase-4.3.1.0, base-4.3.0.0, base-4.2.0.2, base-4.2.0.1, base-4.2.0.0,
base-4.1.0.0, base-4.0.0.0, base-3.0.3.2, base-3.0.3.1 (constraint from
non-upgradeable package requires installed instance)
Dependency tree exhaustively searched.
</code></pre>
うーむ、ちょっとめんどくさいな…
ということで、ソースからコンパイルすることにしました。
<ul>
<li><a href="https://github.com/BurntSushi/erd">BurntSushi/erd</a></li>
</ul>
手順はgithubにpushされたREADME.mdに詳しく書かれているので、そのまま実施します。
<pre><code class="bash">moca:erd $ cabal configure
Resolving dependencies...
Warning: solver failed to find a solution:
Could not resolve dependencies:
trying: erd-0.1.3.0 (user goal)
next goal: parsec (dependency of erd-0.1.3.0)
Dependency tree exhaustively searched.
Trying configure anyway.
Configuring erd-0.1.3.0...
cabal: Encountered missing dependencies:
graphviz ==2999.*, parsec ==3.1.*, text ==1.*
moca:erd $ cabal build
Package has never been configured. Configuring with default flags. If this
fails, please run configure manually.
Resolving dependencies...
Warning: solver failed to find a solution:
Could not resolve dependencies:
trying: erd-0.1.3.0 (user goal)
next goal: parsec (dependency of erd-0.1.3.0)
Dependency tree exhaustively searched.
Trying configure anyway.
Configuring erd-0.1.3.0...
cabal: Encountered missing dependencies:
graphviz ==2999.*, parsec ==3.1.*, text ==1.*
</code></pre>
おや、graphvizが入っていないとな。
入れてリトライします。
<pre><code class="bash">moca:erd $ cabal install graphviz
moca:erd $ cabal configure
Resolving dependencies...
Configuring erd-0.1.3.0...
moca:erd $ cabal build
Building erd-0.1.3.0...
Preprocessing executable 'erd' for erd-0.1.3.0...
[1 of 4] Compiling ER               ( src/ER.hs, dist/build/erd/erd-tmp/ER.o )
[2 of 4] Compiling Parse            ( src/Parse.hs, dist/build/erd/erd-tmp/Parse.o )
[3 of 4] Compiling Config           ( src/Config.hs, dist/build/erd/erd-tmp/Config.o )
[4 of 4] Compiling Main             ( src/Main.hs, dist/build/erd/erd-tmp/Main.o )
Linking dist/build/erd/erd ...
</code></pre>
ビルドできました！
ちゃんと実行できます。
<pre><code class="bash">moca:erd $ ./dist/build/erd/erd -h
Usage: erd [flags]
  -i FILE  --input=FILE   When set, input will be read from the given file.
                          Otherwise, stdin will be used.
  -o FILE  --output=FILE  When set, output will be written to the given file.
                          Otherwise, stdout will be used.
                          If given and if --fmt is omitted, then the format will be
                          guessed from the file extension.
  -h       --help         Show this usage message.
  -f FMT   --fmt=FMT      Force the output format to one of:
                          bmp, dot, eps, gif, jpg, pdf, plain, png, ps, ps2, svg, tiff
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1637</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[plantumldehaertu-gashu-kenai-nodeerdwoshi-u]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="detabesu"><![CDATA[データベース]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
<br> <br />
plantumlはER図をサポートしていないので、クラス図で代用する人も中にはいましたが・・・</p>

<p>erdというHaskellで書いたツールを知ったので試してみました。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/plantuml?src=hash">#plantuml</a> がサポートしていない <a href="https://twitter.com/hashtag/ER%E5%9B%B3?src=hash">#ER図</a> をテキストベースで書けるらしい。 by <a href="https://twitter.com/nori3tsu">@nori3tsu</a> on <a href="https://twitter.com/Qiita">@Qiita</a> <a href="https://t.co/J1tpWS89yJ">https://t.co/J1tpWS89yJ</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/834596069975564288">2017年2月23日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>まずはHaskellのパッケージ管理システムcabalを入れるため、Homebrewで色々インストール。</p>

<pre><code class="language-bash">moca:sql $ brew install ghc  
Updating Homebrew...  
==&gt; Auto-updated Homebrew!
Updated 1 tap (homebrew/core).  
==&gt; Updated Formulae
akka                       cjdns                      gitlab-ci-multi-runner     libsigsegv                 node                       putty  
casperjs                   geoserver                  jump                       mitmproxy                  parallel                   tile38

==&gt; Downloading https://homebrew.bintray.com/bottles/ghc-8.0.2.sierra.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring ghc-8.0.2.sierra.bottle.tar.gz
==&gt; Using the sandbox
==&gt; /usr/local/Cellar/ghc/8.0.2/bin/ghc-pkg recache
_  /usr/local/Cellar/ghc/8.0.2: 5,777 files, 1G
moca:sql $ ghci  
GHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help  
Prelude&gt; putStrLn "hello"  
hello  
Prelude&gt;  
Leaving GHCi.  
moca:sql $ brew install cabal-install  
Updating Homebrew...  
==&gt; Downloading https://homebrew.bintray.com/bottles/cabal-install-1.24.0.2_3.sierra.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring cabal-install-1.24.0.2_3.sierra.bottle.tar.gz
==&gt; Caveats
Bash completion has been installed to:  
  /usr/local/etc/bash_completion.d
==&gt; Summary
_  /usr/local/Cellar/cabal-install/1.24.0.2_3: 7 files, 27.7M
</code></pre>

<p>そしてcabalでerdをインストール…　しようとしたら、依存関係でエラーが。。</p>

<pre><code class="language-bash">moca:sql $ cabal install erd  
Resolving dependencies...  
cabal: Could not resolve dependencies:  
trying: erd-0.1.3.0 (user goal)  
next goal: base (dependency of erd-0.1.3.0)  
rejecting: base-4.9.1.0/installed-4.9... (conflict: erd =&gt; base==4.7.*)  
rejecting: base-4.9.1.0, base-4.9.0.0, base-4.8.2.0, base-4.8.1.0,  
base-4.8.0.0, base-4.7.0.2, base-4.7.0.1, base-4.7.0.0, base-4.6.0.1,  
base-4.6.0.0, base-4.5.1.0, base-4.5.0.0, base-4.4.1.0, base-4.4.0.0,  
base-4.3.1.0, base-4.3.0.0, base-4.2.0.2, base-4.2.0.1, base-4.2.0.0,  
base-4.1.0.0, base-4.0.0.0, base-3.0.3.2, base-3.0.3.1 (constraint from  
non-upgradeable package requires installed instance)  
Dependency tree exhaustively searched.  
</code></pre>

<p>うーむ、ちょっとめんどくさいな…</p>

<p>ということで、ソースからコンパイルすることにしました。</p>

<ul>
<li><a href="https://github.com/BurntSushi/erd">BurntSushi/erd</a></li>
</ul>

<p>手順はgithubにpushされたREADME.mdに詳しく書かれているので、そのまま実施します。</p>

<pre><code class="language-bash">moca:erd $ cabal configure  
Resolving dependencies...  
Warning: solver failed to find a solution:  
Could not resolve dependencies:  
trying: erd-0.1.3.0 (user goal)  
next goal: parsec (dependency of erd-0.1.3.0)  
Dependency tree exhaustively searched.  
Trying configure anyway.  
Configuring erd-0.1.3.0...  
cabal: Encountered missing dependencies:  
graphviz ==2999.*, parsec ==3.1.*, text ==1.*  
moca:erd $ cabal build  
Package has never been configured. Configuring with default flags. If this  
fails, please run configure manually.  
Resolving dependencies...  
Warning: solver failed to find a solution:  
Could not resolve dependencies:  
trying: erd-0.1.3.0 (user goal)  
next goal: parsec (dependency of erd-0.1.3.0)  
Dependency tree exhaustively searched.  
Trying configure anyway.  
Configuring erd-0.1.3.0...  
cabal: Encountered missing dependencies:  
graphviz ==2999.*, parsec ==3.1.*, text ==1.*  
</code></pre>

<p>おや、graphvizが入っていないとな。</p>

<p>入れてリトライします。</p>

<pre><code class="language-bash">moca:erd $ cabal install graphviz  
moca:erd $ cabal configure  
Resolving dependencies...  
Configuring erd-0.1.3.0...  
moca:erd $ cabal build  
Building erd-0.1.3.0...  
Preprocessing executable 'erd' for erd-0.1.3.0...  
[1 of 4] Compiling ER               ( src/ER.hs, dist/build/erd/erd-tmp/ER.o )
[2 of 4] Compiling Parse            ( src/Parse.hs, dist/build/erd/erd-tmp/Parse.o )
[3 of 4] Compiling Config           ( src/Config.hs, dist/build/erd/erd-tmp/Config.o )
[4 of 4] Compiling Main             ( src/Main.hs, dist/build/erd/erd-tmp/Main.o )
Linking dist/build/erd/erd ...  
</code></pre>

<p>ビルドできました！</p>

<p>ちゃんと実行できます。</p>

<pre><code class="language-bash">moca:erd $ ./dist/build/erd/erd -h  
Usage: erd [flags]  
  -i FILE  --input=FILE   When set, input will be read from the given file.
                          Otherwise, stdin will be used.
  -o FILE  --output=FILE  When set, output will be written to the given file.
                          Otherwise, stdout will be used.
                          If given and if --fmt is omitted, then the format will be
                          guessed from the file extension.
  -h       --help         Show this usage message.
  -f FMT   --fmt=FMT      Force the output format to one of:
                          bmp, dot, eps, gif, jpg, pdf, plain, png, ps, ps2, svg, tiff
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>プチオフグリッドシステムの作り方その１。見積もり編</title>
		<link>https://tech.blog.uribou.me/?p=1638</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1638</guid>
		<description></description>
		<content:encoded><![CDATA[バッテリー
12v 20ah
3850円
https://www.amazon.co.jp/dp/B005JQBN2E/ref=cm_sw_r_cp_awdb_4zlTyb1F2AD34
パネル２０W
18v 1.1a
3950円
https://r10.to/hObnsx
チャージコントローラ
12v 20aマデ
3516+340円
https://www.amazon.co.jp/dp/B00EU7ZZD6/ref=cm_sw_r_cp_awdb_5HlTybJ1W0DM7
USB変換
40vマデ
250円
https://www.amazon.co.jp/dp/B00IZ8DRTU/ref=cm_sw_r_cp_awdb_2PlTybG4B7YG4
ケーブル、端子もろもろ
数百円？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1638</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-make-smallest-offgrid-system]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>バッテリー
12v 20ah <br />
3850円 <br />
<a href="https://www.amazon.co.jp/dp/B005JQBN2E/ref=cm">https://www.amazon.co.jp/dp/B005JQBN2E/ref=cm</a><em>sw</em>r<em>cp</em>awdb_4zlTyb1F2AD34</p>

<p>パネル２０W
18v 1.1a <br />
3950円 <br />
<a href="https://r10.to/hObnsx">https://r10.to/hObnsx</a></p>

<p>チャージコントローラ
12v 20aマデ <br />
3516+340円 <br />
<a href="https://www.amazon.co.jp/dp/B00EU7ZZD6/ref=cm">https://www.amazon.co.jp/dp/B00EU7ZZD6/ref=cm</a><em>sw</em>r<em>cp</em>awdb_5HlTybJ1W0DM7</p>

<p>USB変換 <br />
40vマデ <br />
250円 <br />
<a href="https://www.amazon.co.jp/dp/B00IZ8DRTU/ref=cm">https://www.amazon.co.jp/dp/B00IZ8DRTU/ref=cm</a><em>sw</em>r<em>cp</em>awdb_2PlTybG4B7YG4</p>

<p>ケーブル、端子もろもろ
数百円？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>賃貸アパートでオフグリッドしよう。太陽光パネルの選びかた。</title>
		<link>https://tech.blog.uribou.me/?p=1639</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1639</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>概要</h1>
最終的な構成は以下の通りで、工具類も合わせた総額は30万円くらい。庭の広さや日当たりがよければ、もう少し規模を大きくしたかったのですが…。月々の電気代に換算してペイするかという視点では考えず、<strong>材料の製造過程で使用した電力量を上回る電力を発電可能か</strong>といった視点で考えます。
<ul>
<li>SunPower社製 327W x 2枚</li>
<li>中古蓄電池 古川電池製 MSE300(2V 300Ah) x 6個</li>
<li>MORNINGSTAR社製 TS-MPPT-60 x 1個</li>
<li>大橋産業(BAL) 3WAY正弦波インバーター 400W x 1個</li>
<li>その他（パネルを設置する鉄パイプ、ケーブル、箱等）</li>
</ul>
<hr />
<h1>お世話になった方々</h1>
<ul>
<li><a href="https://www.takigen.co.jp/jp/contents/feature/pv/index.html">TAKIGEN</a>
<ul>
<li>単管パイプで製作した架台に太陽光パネルを設置するための金具を取り扱う</li>
<li>高耐食溶融めっき鋼でサビに強い</li>
</ul></li>
<li>ジョイフル本田
<ul>
<li>工具などはこちらで買い揃えました</li>
</ul></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1639</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ren-dai-apatodeohuguritudosiyou-tai-yang-guang-panerunoxuan-bikata]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<h1 id="">概要</h1>

<p>最終的な構成は以下の通りで、工具類も合わせた総額は30万円くらい。庭の広さや日当たりがよければ、もう少し規模を大きくしたかったのですが…。月々の電気代に換算してペイするかという視点では考えず、<strong>材料の製造過程で使用した電力量を上回る電力を発電可能か</strong>といった視点で考えます。</p>

<ul>
<li>SunPower社製 327W x 2枚</li>
<li>中古蓄電池 古川電池製 MSE300(2V 300Ah) x 6個</li>
<li>MORNINGSTAR社製 TS-MPPT-60 x 1個</li>
<li>大橋産業(BAL) 3WAY正弦波インバーター 400W x 1個</li>
<li>その他（パネルを設置する鉄パイプ、ケーブル、箱等）</li>
</ul>

<hr />

<h1 id="">お世話になった方々</h1>

<ul>
<li><a href="https://www.takigen.co.jp/jp/contents/feature/pv/index.html">TAKIGEN</a>
<ul><li>単管パイプで製作した架台に太陽光パネルを設置するための金具を取り扱う</li>
<li>高耐食溶融めっき鋼でサビに強い</li></ul></li>
<li>ジョイフル本田
<ul><li>工具などはこちらで買い揃えました</li></ul></li>
</ul>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>賃貸アパートでオフグリッドしよう。蓄電池の選びかた。</title>
		<link>https://tech.blog.uribou.me/?p=1640</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1640</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1640</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ren-dai-apatodeohuguritudosiyou-xu-dian-chi-noxuan-bikata]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>賃貸アパートでオフグリッドしよう。交流インバータの選びかた。</title>
		<link>https://tech.blog.uribou.me/?p=1641</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1641</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1641</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ren-dai-apatodeohuguritudosiyou-jiao-liu-inbatanoxuan-bikata]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>iPhoneが外部メディア（SDカード）にデータを書き出せることを今更知った。</title>
		<link>https://tech.blog.uribou.me/?p=1646</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1646</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB019YTEML0%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/212suQfOWRL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB019YTEML0%2Fref%3Dnosim" target="_blank" rel="noopener">ADATA 2WAY Lightningカードリーダー SD,microSD両対応 AMFICRWH</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> Adata 2015-12-28    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DADATA%25202WAY%2520Lightning%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%2520SD%252CmicroSD%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FADATA%25202WAY%2520Lightning%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%2520SD%252CmicroSD%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1646</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[iphonegawai-bu-medeia-sdkado-nidetawoshu-kichu-serukotowojin-geng-zhi-tuta]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="iphone"><![CDATA[iPhone]]></category>
		<category domain="post_tag" nicename="%e3%82%ac%e3%82%b8%e3%82%a7%e3%83%83%e3%83%88"><![CDATA[ガジェット]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:72:"https://images-fe.ssl-images-amazon.com/images/I/212suQfOWRL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB019YTEML0%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/212suQfOWRL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB019YTEML0%2Fref%3Dnosim" target="_blank" >ADATA 2WAY Lightningカードリーダー SD,microSD両対応 AMFICRWH</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> Adata 2015-12-28    </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DADATA%25202WAY%2520Lightning%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%2520SD%252CmicroSD%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FADATA%25202WAY%2520Lightning%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%2520SD%252CmicroSD%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ロボホンを動かしてみた。</title>
		<link>https://tech.blog.uribou.me/?p=1648</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1648</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://robohon.com/sdk/">SDK</a>
<a href="https://robohon.robotstart.jp/forums/topic/%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/">チュートリアル</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1648</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[robohontiyutoriaru]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e3%83%ad%e3%83%9c%e3%83%9b%e3%83%b3"><![CDATA[ロボホン]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://robohon.com/sdk/">SDK</a></p>

<p><a href="https://robohon.robotstart.jp/forums/topic/%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/">チュートリアル</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>How to run MySQL server installed on OSX with homebrew</title>
		<link>https://tech.blog.uribou.me/?p=1649</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1649</guid>
		<description></description>
		<content:encoded><![CDATA[何はともあれインストールする。
<pre><code class="bash">$ brew install mysql
</code></pre>
mysqlパッケージの情報を確認。
<pre><code class="bash">$ brew info mysql
mysql: stable 5.7.18 (bottled)
Open source relational database management system
https://dev.mysql.com/doc/refman/5.7/en/
Conflicts with: mariadb, mariadb-connector-c, mysql-cluster, mysql-connector-c, percona-server
/usr/local/Cellar/mysql/5.7.17 (321 files, 234.4MB) *
  Poured from bottle on 2017-02-15 at 23:36:11
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/mysql.rb
==&gt; Dependencies
Build: cmake _
Required: openssl _
==&gt; Requirements
Required: macOS &gt;= 10.7 _
==&gt; Options
--with-archive-storage-engine
    Compile with the ARCHIVE storage engine enabled
--with-blackhole-storage-engine
    Compile with the BLACKHOLE storage engine enabled
--with-debug
    Build with debug support
--with-embedded
    Build the embedded server
--with-local-infile
    Build with local infile loading support
--with-test
    Build with unit tests
==&gt; Caveats
We've installed your MySQL database without a root password. To secure it run:
    mysql_secure_installation
MySQL is configured to only allow connections from localhost by default
To connect run:
    mysql -uroot
To have launchd start mysql now and restart at login:
  brew services start mysql
Or, if you don't want/need a background service you can just run:
  mysql.server start
</code></pre>
rootユーザの初期パスワードは設定されていないので<code>$ mysql -u root</code>でログインできてしまう。
まずはrootユーザのパスワードを設定する。
<pre><code class="bash">$ mysqladmin -u root password "hoge"
</code></pre>
これで<code>$ mysql -u root -phoge</code>のようにログイン時のパスワードが必要になる。
データベース作成。
<pre><code class="sql">CREATE DATABASE hoge;
</code></pre>
ほぼ<a href="https://www.dbonline.jp/mysql/user/index6.html">参考URL</a>のままなだけど、以下のようにして権限付与する。
<pre><code class="sql">create user 'hoge_manager'@'localhost' identified by 'password';
grant select,update,drop on hoge to 'hoge_manager'@'localhost';
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1649</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-run-mysql-server-installed-on-osx-with-homebrew]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>何はともあれインストールする。</p>

<pre><code class="language-bash">$ brew install mysql
</code></pre>

<p>mysqlパッケージの情報を確認。</p>

<pre><code class="language-bash">$ brew info mysql
mysql: stable 5.7.18 (bottled)  
Open source relational database management system  
https://dev.mysql.com/doc/refman/5.7/en/  
Conflicts with: mariadb, mariadb-connector-c, mysql-cluster, mysql-connector-c, percona-server  
/usr/local/Cellar/mysql/5.7.17 (321 files, 234.4MB) *
  Poured from bottle on 2017-02-15 at 23:36:11
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/mysql.rb  
==&gt; Dependencies
Build: cmake _  
Required: openssl _  
==&gt; Requirements
Required: macOS &gt;= 10.7 _  
==&gt; Options
--with-archive-storage-engine
    Compile with the ARCHIVE storage engine enabled
--with-blackhole-storage-engine
    Compile with the BLACKHOLE storage engine enabled
--with-debug
    Build with debug support
--with-embedded
    Build the embedded server
--with-local-infile
    Build with local infile loading support
--with-test
    Build with unit tests
==&gt; Caveats
We've installed your MySQL database without a root password. To secure it run:  
    mysql_secure_installation

MySQL is configured to only allow connections from localhost by default

To connect run:  
    mysql -uroot

To have launchd start mysql now and restart at login:  
  brew services start mysql
Or, if you don't want/need a background service you can just run:  
  mysql.server start
</code></pre>

<p>rootユーザの初期パスワードは設定されていないので<code>$ mysql -u root</code>でログインできてしまう。</p>

<p>まずはrootユーザのパスワードを設定する。</p>

<pre><code class="language-bash">$ mysqladmin -u root password "hoge"
</code></pre>

<p>これで<code>$ mysql -u root -phoge</code>のようにログイン時のパスワードが必要になる。</p>

<p>データベース作成。</p>

<pre><code class="language-sql">CREATE DATABASE hoge;  
</code></pre>

<p>ほぼ<a href="https://www.dbonline.jp/mysql/user/index6.html">参考URL</a>のままなだけど、以下のようにして権限付与する。</p>

<pre><code class="language-sql">create user 'hoge_manager'@'localhost' identified by 'password';  
grant select,update,drop on hoge to 'hoge_manager'@'localhost';  
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>お天気情報をREST APIでGetして、明日の天気を常に表示してくれるガジェットを作りたい。</title>
		<link>https://tech.blog.uribou.me/?p=1650</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1650</guid>
		<description></description>
		<content:encoded><![CDATA[結構簡単に作れそうな気がする。
<a href="http://openweathermap.org/forecast5">OpenWeatherMap</a>というサービスがあって、
<pre><code>http://api.openweathermap.org/data/2.5/forecast?q=Akishima,JP&amp;appid=xxxx
</code></pre>
<code>appid</code>には、マイページでAPIKEYを発行したのち、１０分程度待ってから使用可能になる。
10分経過しないとなんか401エラーが返ってきてビビる。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1650</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[otian-qi-qing-bao-worest-apidegetsite-ming-ri-notian-qi-wochang-nibiao-shi-sitekurerugazietutowozuo-ritai]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>結構簡単に作れそうな気がする。</p>

<p><a href="http://openweathermap.org/forecast5">OpenWeatherMap</a>というサービスがあって、</p>

<pre><code>http://api.openweathermap.org/data/2.5/forecast?q=Akishima,JP&amp;appid=xxxx  
</code></pre>

<p><code>appid</code>には、マイページでAPIKEYを発行したのち、１０分程度待ってから使用可能になる。</p>

<p>10分経過しないとなんか401エラーが返ってきてビビる。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>AI for Engineer @Graspy 自然言語</title>
		<link>https://tech.blog.uribou.me/?p=2364</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2364</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
 	<li>TF-IDF</li>
 	<li>Bag of Words（BoW）</li>
 	<li>One-Hot表現</li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2364</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:34:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[graspy-ai-natural-language-section]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>3.11当日</title>
		<link>https://tech.blog.uribou.me/?p=1408</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1408</guid>
		<description></description>
		<content:encoded><![CDATA[震災の日、東京にある本社ビルの36階で研修を受けてました。今時の高層ビルには大抵備わっている免震ゴム。これのおかげで倒壊は免れましたが、<strong>上の階ほど振れ幅が大きくなる上、揺れが収まらない</strong>…。余震も含めてゆうに２０〜３０分は揺れ続けたと思います。自分も含め、ほとんどの人が酔いました。中には床に突っ伏す人も…。
その日はエレベータも電車もストップ、道路は大渋滞で車の赤いテールランプは延々と続き、テレビではリアルタイムで津波の映像が流れ、東京湾の向こう岸の石油コンビナートで巨大な炎が上がるのを目の当たりにし…。何時間も繋がらなかった電話越しに妻と会話できた時、言葉では表現しきれないほど安堵したことを覚えています。
<hr />
地震発生が夕方だったこともあり、その日はそのまま本社ビルの会議室で一泊。椅子の上だったこともあり、あまりよく眠れず、朝５時過ぎには目を覚まして本社を後にしました。この時同僚（後輩）の一人が別階に泊まっていて、何も言わずに置いていくのも気が咎めましたが…　電話口での妻の不安な声を思うとのんびりしてられず、足早に家の方角に向かいました。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1408</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[my311]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="3-11"><![CDATA[3.11]]></category>
		<category domain="post_tag" nicename="%e5%8b%95%e6%a9%9f"><![CDATA[動機]]></category>
		<category domain="post_tag" nicename="%e5%9c%b0%e9%9c%87"><![CDATA[地震]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="zai-hai"><![CDATA[災害]]></category>
		<category domain="post_tag" nicename="zhen-zai"><![CDATA[震災]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>震災の日、東京にある本社ビルの36階で研修を受けてました。今時の高層ビルには大抵備わっている免震ゴム。これのおかげで倒壊は免れましたが、<strong>上の階ほど振れ幅が大きくなる上、揺れが収まらない</strong>…。余震も含めてゆうに２０〜３０分は揺れ続けたと思います。自分も含め、ほとんどの人が酔いました。中には床に突っ伏す人も…。</p>

<p>その日はエレベータも電車もストップ、道路は大渋滞で車の赤いテールランプは延々と続き、テレビではリアルタイムで津波の映像が流れ、東京湾の向こう岸の石油コンビナートで巨大な炎が上がるのを目の当たりにし…。何時間も繋がらなかった電話越しに妻と会話できた時、言葉では表現しきれないほど安堵したことを覚えています。</p>

<hr />

<p>地震発生が夕方だったこともあり、その日はそのまま本社ビルの会議室で一泊。椅子の上だったこともあり、あまりよく眠れず、朝５時過ぎには目を覚まして本社を後にしました。この時同僚（後輩）の一人が別階に泊まっていて、何も言わずに置いていくのも気が咎めましたが…　電話口での妻の不安な声を思うとのんびりしてられず、足早に家の方角に向かいました。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>副業と言えるほどではないけれど…</title>
		<link>https://tech.blog.uribou.me/?p=1451</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1451</guid>
		<description></description>
		<content:encoded><![CDATA[ブログを始めた理由は主にこれ
セルフ部ランディング部ランディング
http://blog.tinect.jp/?p=10204
<pre><code>「一つの会社の中だけで、求められたことをやり続ける」ことは、どう考えてもリスクが高い。
会社の寿命はますます短くなり、あなたが働く年数よりも、会社が存続する年数のほうがはるかに短いからだ。結局のところ、人生を勤め先に委ねることは、あなたの人生を会社の都合、上司の都合に合わせる、ということと同じなのだ。
それから脱却するには、どうすればよいか。
一つの方法は「稼ぐ力」を身に付けることだ。少額でもいい。「作って、告知して、売る」という商売の基本的な活動を自分でもやってみることが大事だ。そして、これからの企業はますます「作って、告知して、売る」という活動ができる人を求めるようになる。
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1451</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fu-ye-t]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ブログを始めた理由は主にこれ</p>

<p>セルフ部ランディング部ランディング</p>

<p><a href="http://blog.tinect.jp/?p=10204">http://blog.tinect.jp/?p=10204</a></p>

<pre><code>「一つの会社の中だけで、求められたことをやり続ける」ことは、どう考えてもリスクが高い。

会社の寿命はますます短くなり、あなたが働く年数よりも、会社が存続する年数のほうがはるかに短いからだ。結局のところ、人生を勤め先に委ねることは、あなたの人生を会社の都合、上司の都合に合わせる、ということと同じなのだ。

それから脱却するには、どうすればよいか。

一つの方法は「稼ぐ力」を身に付けることだ。少額でもいい。「作って、告知して、売る」という商売の基本的な活動を自分でもやってみることが大事だ。そして、これからの企業はますます「作って、告知して、売る」という活動ができる人を求めるようになる。
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>pythonパッケージをPyPIに公開してみる。</title>
		<link>https://tech.blog.uribou.me/?p=1460</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1460</guid>
		<description></description>
		<content:encoded><![CDATA[tsmppt60-driverをPyPIに公開しました。
https://pypi.python.org/pypi/tsmppt60-driver
膨大な量の<a href="https://pythonhosted.org/setuptools/setuptools.html">setuptoolsヘルプ</a>...
<h1>setup.pyを作る</h1>
classifiersは<a href="https://pypi.python.org/pypi?%3Aaction=list_classifiers">pypi提供のclassifiers list</a>からそれっぽいものを選択して記述する
<h1>ローカルにPyPiクローンのサーバを立てて実験する</h1>
いきなりPyPiにアップロードするのは怖いので、ローカルにPyPiクローンのサーバを立てて実験する
<h2>devpi-server quick start</h2>
<a href="http://doc.devpi.net/latest/quickstart-pypimirror.html">devpi documentation</a>の通りなんですが一応
<h3>インストールと起動</h3>
<pre><code class="bash">$ pip install -U devpi-server devpi-web
$ devpi-server --start
2016-01-28 23:52:31,663 INFO  NOCTX Loading node info from /tmp/home/.devpi/server/.nodeinfo
2016-01-28 23:52:31,663 INFO  NOCTX generated uuid: 16302e59f47940589e1a4b5c8dde499b
...
</code></pre>
<h2>devpi-server サーバ化</h2>
<a href="http://doc.devpi.net/latest/quickstart-server.html#quickstart-server">devpi documentation</a>の通りなんですが一応
nginx用設定ファイルなんかも吐き出してくれちゃいます。
<pre><code class="bash">$ devpi-server --port 4040 --serverdir ~/mydevpiserver --gen-config
wrote gen-config/supervisor-devpi.conf
wrote gen-config/nginx-devpi.conf
wrote gen-config/crontab
wrote gen-config/net.devpi.plist
wrote gen-config/devpi.service
</code></pre>
<h1>pypiへのパッケージ登録</h1>
パッケージをpypiへ登録します。
<pre><code class="bash">$ python setup.py register
</code></pre>
以下のコマンドをたたいてパッケージをpypiへアップロードします
<pre><code class="bash">$ python setup.py sdist upload -r pypi
</code></pre>
<h2>sdist形式とbdist形式とwheel形式の違い</h2>
以下のコマンドはbdist(バイナリ)形式でアップロードします
<pre><code class="bash">$ python setup.py bdist upload -r pypi
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1460</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ts-mppt-60-python-driverwogong-kai-simasita]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>tsmppt60-driverをPyPIに公開しました。 <br />
<a href="https://pypi.python.org/pypi/tsmppt60-driver">https://pypi.python.org/pypi/tsmppt60-driver</a></p>

<p>膨大な量の<a href="https://pythonhosted.org/setuptools/setuptools.html">setuptoolsヘルプ</a>...</p>

<h1 id="setuppy">setup.pyを作る</h1>

<p>classifiersは<a href="https://pypi.python.org/pypi?%3Aaction=list_classifiers">pypi提供のclassifiers list</a>からそれっぽいものを選択して記述する</p>

<h1 id="pypi">ローカルにPyPiクローンのサーバを立てて実験する</h1>

<p>いきなりPyPiにアップロードするのは怖いので、ローカルにPyPiクローンのサーバを立てて実験する</p>

<h2 id="devpiserverquickstart">devpi-server quick start</h2>

<p><a href="http://doc.devpi.net/latest/quickstart-pypimirror.html">devpi documentation</a>の通りなんですが一応</p>

<h3 id="">インストールと起動</h3>

<pre><code class="language-bash">$ pip install -U devpi-server devpi-web
$ devpi-server --start
2016-01-28 23:52:31,663 INFO  NOCTX Loading node info from /tmp/home/.devpi/server/.nodeinfo  
2016-01-28 23:52:31,663 INFO  NOCTX generated uuid: 16302e59f47940589e1a4b5c8dde499b  
...
</code></pre>

<h2 id="devpiserver">devpi-server サーバ化</h2>

<p><a href="http://doc.devpi.net/latest/quickstart-server.html#quickstart-server">devpi documentation</a>の通りなんですが一応
nginx用設定ファイルなんかも吐き出してくれちゃいます。</p>

<pre><code class="language-bash">$ devpi-server --port 4040 --serverdir ~/mydevpiserver --gen-config
wrote gen-config/supervisor-devpi.conf  
wrote gen-config/nginx-devpi.conf  
wrote gen-config/crontab  
wrote gen-config/net.devpi.plist  
wrote gen-config/devpi.service  
</code></pre>

<h1 id="pypi">pypiへのパッケージ登録</h1>

<p>パッケージをpypiへ登録します。</p>

<pre><code class="language-bash">$ python setup.py register
</code></pre>

<p>以下のコマンドをたたいてパッケージをpypiへアップロードします</p>

<pre><code class="language-bash">$ python setup.py sdist upload -r pypi
</code></pre>

<h2 id="sdistbdistwheel">sdist形式とbdist形式とwheel形式の違い</h2>

<p>以下のコマンドはbdist(バイナリ)形式でアップロードします</p>

<pre><code class="language-bash">$ python setup.py bdist upload -r pypi
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3112]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3113]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3115]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>pythonのメモリリークを検証してみる。</title>
		<link>https://tech.blog.uribou.me/?p=1481</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1481</guid>
		<description></description>
		<content:encoded><![CDATA[https://pythonhosted.org/Pympler/tutorials/muppy_tutorial.html
<pre><code class="python">from pympler import muppy
from pympler import summary
_sum = summary.summarize(muppy.get_objects())
some_func()
_diff = summary.get_diff(_sum, summary.summarize(muppy.get_objects()))
summary.print_(_diff)
</code></pre>
<pre><code>                               types |   # objects |   total size
==================================== | =========== | ============
                        &lt;class 'list |        4760 |    446.26 KB
                         &lt;class 'str |        4758 |    335.69 KB
                         &lt;class 'int |         861 |     23.55 KB
                        &lt;class 'dict |           9 |      1.41 KB
           &lt;class 'collections.deque |           2 |      1.23 KB
                        &lt;class 'type |           0 |    576     B
            &lt;class 'coverage.CTracer |           2 |    368     B
  &lt;class 'builtin_function_or_method |           4 |    288     B
                     &lt;class 'weakref |           2 |    160     B
             &lt;class 'threading.Event |           2 |    112     B
         &lt;class 'threading.Condition |           2 |    112     B
                &lt;class '_thread.lock |           2 |     80     B
                      &lt;class 'method |           1 |     64     B
        &lt;class 'logging.PercentStyle |           1 |     56     B
           &lt;class 'logging.Formatter |           1 |     56     B
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1481</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pythondememoririkuwojian-zhi-suru]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://pythonhosted.org/Pympler/tutorials/muppy_tutorial.html">https://pythonhosted.org/Pympler/tutorials/muppy_tutorial.html</a></p>

<pre><code class="language-python">from pympler import muppy  
from pympler import summary

_sum = summary.summarize(muppy.get_objects())

some_func()

_diff = summary.get_diff(_sum, summary.summarize(muppy.get_objects()))  
summary.print_(_diff)  
</code></pre>

<pre><code>                               types |   # objects |   total size
==================================== | =========== | ============
                        &lt;class 'list |        4760 |    446.26 KB
                         &lt;class 'str |        4758 |    335.69 KB
                         &lt;class 'int |         861 |     23.55 KB
                        &lt;class 'dict |           9 |      1.41 KB
           &lt;class 'collections.deque |           2 |      1.23 KB
                        &lt;class 'type |           0 |    576     B
            &lt;class 'coverage.CTracer |           2 |    368     B
  &lt;class 'builtin_function_or_method |           4 |    288     B
                     &lt;class 'weakref |           2 |    160     B
             &lt;class 'threading.Event |           2 |    112     B
         &lt;class 'threading.Condition |           2 |    112     B
                &lt;class '_thread.lock |           2 |     80     B
                      &lt;class 'method |           1 |     64     B
        &lt;class 'logging.PercentStyle |           1 |     56     B
           &lt;class 'logging.Formatter |           1 |     56     B
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>プログラミング言語Pythonを極めたい。</title>
		<link>https://tech.blog.uribou.me/?p=1484</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1484</guid>
		<description></description>
		<content:encoded><![CDATA[データサイエンスの入り口に立ってみると、今の中途hなパナ自分の立ち位置
ハイパフォーマンスPython

実践Python3

EffectivePython
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1484</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[puroguraminguyan-yu-pythonwoji-metai]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>データサイエンスの入り口に立ってみると、今の中途hなパナ自分の立ち位置</p>

<p>ハイパフォーマンスPython </p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117402&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>実践Python3</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117399&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>EffectivePython  </p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117569&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>年休を取得するのは悪。</title>
		<link>https://tech.blog.uribou.me/?p=1495</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1495</guid>
		<description></description>
		<content:encoded><![CDATA[会社がゴタついていたので、しばらく遊びに行けていなかった姉宅を久しぶりに訪問。
年が近い従姉妹同士で遊ぶ子供たちを見てると和みます。
が、姉から聞いて初めて知った事実。
若者を応援するブログとか書いておいて？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1495</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nian-xiu-woqu-de-surunohae-rasii]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="dong-kifang"><![CDATA[働き方]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>会社がゴタついていたので、しばらく遊びに行けていなかった姉宅を久しぶりに訪問。</p>

<p>年が近い従姉妹同士で遊ぶ子供たちを見てると和みます。</p>

<p>が、姉から聞いて初めて知った事実。</p>

<p>若者を応援するブログとか書いておいて？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>(Untitled)</title>
		<link>https://tech.blog.uribou.me/?p=1520</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1520</guid>
		<description></description>
		<content:encoded><![CDATA[バレエの大川先生が雑誌のインタビューで、最近の子は、勉強プラススマホとゲームで、びっくりくるぐらい体が凝ってるどころか、顔も固い子が増えたと。
いや、なんかこう感情を出すっていう機会が少ないんだと。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1520</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>バレエの大川先生が雑誌のインタビューで、最近の子は、勉強プラススマホとゲームで、びっくりくるぐらい体が凝ってるどころか、顔も固い子が増えたと。</p>

<p>いや、なんかこう感情を出すっていう機会が少ないんだと。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Edubuntu Linuxで子供にIT教育を。</title>
		<link>https://tech.blog.uribou.me/?p=1523</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1523</guid>
		<description></description>
		<content:encoded><![CDATA[http://cdimage.ubuntu.com/edubuntu/releases/14.04.2/release/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1523</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:36:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu-linuxdezi-gong-niitjiao-yu-wo]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://cdimage.ubuntu.com/edubuntu/releases/14.04.2/release/">http://cdimage.ubuntu.com/edubuntu/releases/14.04.2/release/</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>データサイエンティストレベルは多分3くらい。実務レベルを100として。</title>
		<link>https://tech.blog.uribou.me/?p=1524</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1524</guid>
		<description></description>
		<content:encoded><![CDATA[http://ritsuan.com/blog/3031/
基礎統計：本１冊で足りる
機械学習までいかずに可視化だけで済む話が多い
ただし、可視化の話は体系化されておらず、学びにくい
機械学習で必要な知識：回帰、分類、クラスタリング
以下の２冊で大体分かる


<ul>
<li>The R Tips―テ<em>ータ解析環境Rの基本技・ク</em>ラフィックス活用集
書いてあることが大まかに思い出せるくらいには努力が必要。</li>
</ul>
<h1>ベイズ統計</h1>
<ul>
<li>道具としてのベイズ統計</li>
<li>市場最高これならわかるベイズ統計</li>
</ul>
重回帰分析で必要なのは以下３つの結果
<ul>
<li>補正R2</li>
<li>有意F（計算式が成り立たない確率 0.05より小さければまぁOK）</li>
<li>P値（単位を考慮していないのが係数、考慮したのがt、…P値が小さなものが目的変数に与える影響大）</li>
</ul>
機械学習は重回帰分析とほぼ同じ
機械学習＝データマイニング＝多変量解析
データマイニングという単語の方が検索結果が多いはず。
学順序としては、
基礎統計→多変量解析→データマイニング→機械学習
<h1>機械学習の種類</h1>
<ul>
<li>教師あり学習</li>
<li>教師なし学習（分類orクラスタリング　主にビジネスで使う場面多い）</li>
<li>強化学習（上級者向け　試行錯誤を繰り返すことで環境に適応していく）</li>
</ul>
<h2>教師なし学習</h2>
<ul>
<li>階層クラスタリング（あらかじめ配分されるグループの目星がついている場合）</li>
<li>主成分分析（例えば10個の説明変数を2個に圧縮したい、など）</li>
</ul>
機械学習は最終的にデータ最適化に帰着する]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1524</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[detasaienteisutoreberuhaduo-fen-3kurai-shi-wu-reberuwo100tosite]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://ritsuan.com/blog/3031/">http://ritsuan.com/blog/3031/</a></p>

<p>基礎統計：本１冊で足りる</p>

<p>機械学習までいかずに可視化だけで済む話が多い
ただし、可視化の話は体系化されておらず、学びにくい</p>

<p>機械学習で必要な知識：回帰、分類、クラスタリング
以下の２冊で大体分かる</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4774142700&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>  

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4534034210&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<ul>
<li>The R Tips―テ_ータ解析環境Rの基本技・ク_ラフィックス活用集
書いてあることが大まかに思い出せるくらいには努力が必要。</li>
</ul>

<h1 id="">ベイズ統計</h1>

<ul>
<li>道具としてのベイズ統計</li>
<li>市場最高これならわかるベイズ統計</li>
</ul>

<p>重回帰分析で必要なのは以下３つの結果</p>

<ul>
<li>補正R2</li>
<li>有意F（計算式が成り立たない確率 0.05より小さければまぁOK）</li>
<li>P値（単位を考慮していないのが係数、考慮したのがt、…P値が小さなものが目的変数に与える影響大）</li>
</ul>

<p>機械学習は重回帰分析とほぼ同じ</p>

<p>機械学習＝データマイニング＝多変量解析
データマイニングという単語の方が検索結果が多いはず。</p>

<p>学順序としては、
基礎統計→多変量解析→データマイニング→機械学習</p>

<h1 id="">機械学習の種類</h1>

<ul>
<li>教師あり学習</li>
<li>教師なし学習（分類orクラスタリング　主にビジネスで使う場面多い）</li>
<li>強化学習（上級者向け　試行錯誤を繰り返すことで環境に適応していく）</li>
</ul>

<h2 id="">教師なし学習</h2>

<ul>
<li>階層クラスタリング（あらかじめ配分されるグループの目星がついている場合）</li>
<li>主成分分析（例えば10個の説明変数を2個に圧縮したい、など）</li>
</ul>

<p>機械学習は最終的にデータ最適化に帰着する</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>udemyの機械学習をお勧めする三つの理由。</title>
		<link>https://tech.blog.uribou.me/?p=1525</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1525</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>飽きがこない</h1>
細かく章立てした動画コンテンツ、少しずつ難易度アップする内容
時々刺激的？な分析データを使って
<h1>専門用語を理解していなくても始められる</h1>
指示通りにコードを書けば、グラフなどで視覚的に結果が得られるので、理解しようとするモチベーションが高まる
復習は必要
溜まってた本を体系的に勉強しようと思うきっかけになる
<h1>データマイニング</h1>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1525</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:36:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[detasaiensuguan-lian-noxiao-nan-siiyong-yu-wofan-yi-sitemita]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<h1 id="">飽きがこない</h1>

<p>細かく章立てした動画コンテンツ、少しずつ難易度アップする内容</p>

<p>時々刺激的？な分析データを使って</p>

<h1 id="">専門用語を理解していなくても始められる</h1>

<p>指示通りにコードを書けば、グラフなどで視覚的に結果が得られるので、理解しようとするモチベーションが高まる</p>

<p>復習は必要</p>

<p>溜まってた本を体系的に勉強しようと思うきっかけになる</p>

<h1 id="">データマイニング</h1>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>データサイエンスの小難しい用語を自分なりに翻訳してみた。</title>
		<link>https://tech.blog.uribou.me/?p=1527</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1527</guid>
		<description></description>
		<content:encoded><![CDATA[小難しい用語をアホな感じに翻訳してみた。
<h1>線形回帰</h1>
たくさんのデータがどんな傾向を示すのか、ざっくり示せる直線を引くこと。
中学生の頃に習った y=ax+b のような直線ですね。
<h2>単回帰分析</h2>
どうにかしてy=ax+bのaとbを求めるために分析すること。
<h2>重回帰分析</h2>
<h1>ロジスティック回帰</h1>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1527</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[detasaiensunoxiao-nan-siiyong-yu-wozi-fen-narinifan-yi-sitemita]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>小難しい用語をアホな感じに翻訳してみた。</p>

<h1 id="">線形回帰</h1>

<p>たくさんのデータがどんな傾向を示すのか、ざっくり示せる直線を引くこと。</p>

<p>中学生の頃に習った y=ax+b のような直線ですね。</p>

<h2 id="">単回帰分析</h2>

<p>どうにかしてy=ax+bのaとbを求めるために分析すること。</p>

<h2 id="">重回帰分析</h2>

<h1 id="">ロジスティック回帰</h1>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>珈琲生豆が買えるお店、ムラリ@昭島市</title>
		<link>https://tech.blog.uribou.me/?p=1528</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1528</guid>
		<description></description>
		<content:encoded><![CDATA[http://ameblo.jp/sweetmurari/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1528</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:36:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jia-bei-sheng-dou-gamai-eruodian-murarizhao-dao-shi]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="di-chan-di-xiao"><![CDATA[地産地消]]></category>
		<category domain="category" nicename="%e7%8f%88%e7%90%b2"><![CDATA[珈琲]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://ameblo.jp/sweetmurari/">http://ameblo.jp/sweetmurari/</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>IT/ICT技術力を売りにしている会社の許せない実態5つ。</title>
		<link>https://tech.blog.uribou.me/?p=1532</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1532</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1532</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:36:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[it]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>リストラで実際に行動に移した損得勘定。</title>
		<link>https://tech.blog.uribou.me/?p=1536</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1536</guid>
		<description></description>
		<content:encoded><![CDATA[それなりに規模が大きい、名の知れた大企業の正社員でしたが、2015年に起きたある問題を契機に、会社全体がかたむ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1536</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:36:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hui-she-gaqing-iterisutoranolan-gajuan-kiqi-kotutashi-tou-nifu-kandeshi-ji-nixing-dong-niyi-sitasun-de-kan-ding]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>それなりに規模が大きい、名の知れた大企業の正社員でしたが、2015年に起きたある問題を契機に、会社全体がかたむ</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>手続き型のC言語しか知らない人でも、オブジェクト指向デザインパターンが勉強できる良書。</title>
		<link>https://tech.blog.uribou.me/?p=1567</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1567</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00HWLJEKW%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/5192xSA0-KL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00HWLJEKW%2Fref%3Dnosim" target="_blank" rel="noopener">モダンC言語プログラミング　統合開発環境、デザインパターン、エクストリーム・プログラミング、テスト駆動開発、リファクタリング、継続的インテグレーションの活用 (アスキー書籍)[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">花井 志生 KADOKAWA / アスキー・メディアワークス 2014-01-23    </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00HWLJEKW%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4048913093%2F" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                                  </div></div><div class="booklink-footer"></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1567</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[modern-c-language]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="c"><![CDATA[C]]></category>
		<category domain="post_tag" nicename="%e3%82%aa%e3%83%96%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88%e6%8c%87%e5%90%91"><![CDATA[オブジェクト指向]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/5192xSA0-KL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br></p>

<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00HWLJEKW%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/5192xSA0-KL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00HWLJEKW%2Fref%3Dnosim" target="_blank" >モダンC言語プログラミング　統合開発環境、デザインパターン、エクストリーム・プログラミング、テスト駆動開発、リファクタリング、継続的インテグレーションの活用 (アスキー書籍)[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">花井 志生 KADOKAWA / アスキー・メディアワークス 2014-01-23    </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00HWLJEKW%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4048913093%2F" target="_blank" >Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>                                                    </div></div><div class="booklink-footer"></div></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>AWS コマンドラインインターフェイス</title>
		<link>https://tech.blog.uribou.me/?p=1572</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1572</guid>
		<description></description>
		<content:encoded><![CDATA[pythonコマンドラインインタフェース
https://aws.amazon.com/jp/cli/
http://docs.aws.amazon.com/cli/latest/reference/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1572</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aws-komandorainintahueisu]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>pythonコマンドラインインタフェース</p>

<p><a href="https://aws.amazon.com/jp/cli/">https://aws.amazon.com/jp/cli/</a></p>

<p><a href="http://docs.aws.amazon.com/cli/latest/reference/">http://docs.aws.amazon.com/cli/latest/reference/</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Atomエディタon OSX</title>
		<link>https://tech.blog.uribou.me/?p=1575</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1575</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Homebrew Cask</h1>
<pre><code class="bash">$ brew install caskroom/cask/brew-cask
$ brew cask install atom
</code></pre>
<h1>Atomプラグイン</h1>
<a href="http://qiita.com/t9md/items/17754b3383932aa8e782">vim-mode-plus</a>
<pre><code class="bash">$ apm install vim-mode-plus
$ apm install plantuml-viewer
$ apm install language-plantuml
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1575</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[atomedeitaon-osx]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="atom"><![CDATA[Atom]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<h1 id="homebrewcask">Homebrew Cask</h1>

<pre><code class="language-bash">$ brew install caskroom/cask/brew-cask
$ brew cask install atom
</code></pre>

<h1 id="atom">Atomプラグイン</h1>

<p><a href="http://qiita.com/t9md/items/17754b3383932aa8e782">vim-mode-plus</a></p>

<pre><code class="language-bash">$ apm install vim-mode-plus
$ apm install plantuml-viewer
$ apm install language-plantuml
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Twitter bot</title>
		<link>https://tech.blog.uribou.me/?p=1581</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1581</guid>
		<description></description>
		<content:encoded><![CDATA[アプリケーションを登録
https://apps.twitter.com
read&amp;write用key and access tokenを発行
permissionをread&amp;writeに変更
tweepyを使う
http://docs.tweepy.org/en/v3.5.0/auth_tutorial.html?highlight=set_access_token#introduction
<pre><code class="python">auth = tweepy.OAuthHandler(
    consumer_key="{Application SettingsのConsumer Key (API Key)}",
    consumer_secret="{Application SettingsのConsumer Secret (API Secret)}")
auth.set_access_token(
    key="{Your Access TokenのAccess Token}",
    secret="{Your Access TokenのAccess Token Secret}")
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1581</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[twitter-bot]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>アプリケーションを登録</p>

<p><a href="https://apps.twitter.com">https://apps.twitter.com</a></p>

<p>read&amp;write用key and access tokenを発行</p>

<p>permissionをread&amp;writeに変更</p>

<p>tweepyを使う <br />
<a href="http://docs.tweepy.org/en/v3.5.0/auth">http://docs.tweepy.org/en/v3.5.0/auth</a><em>tutorial.html?highlight=set</em>access_token#introduction</p>

<pre><code class="language-python">auth = tweepy.OAuthHandler(  
    consumer_key="{Application SettingsのConsumer Key (API Key)}",
    consumer_secret="{Application SettingsのConsumer Secret (API Secret)}")

auth.set_access_token(  
    key="{Your Access TokenのAccess Token}",
    secret="{Your Access TokenのAccess Token Secret}")
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>OSXでRaspberry Pi起動ディスクを短時間で作成する方法。</title>
		<link>https://tech.blog.uribou.me/?p=1591</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1591</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="bash">~ $ diskutil list
...
/dev/disk2 (external, physical):
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *7.9 GB     disk2
   1:                 DOS_FAT_32 NO NAME                 7.9 GB     disk2s1
</code></pre>
<pre><code class="bash">~ $ diskutil info /dev/disk2
   Device Identifier:        disk2
   Device Node:              /dev/disk2
   Whole:                    Yes
   Part of Whole:            disk2
   Device / Media Name:      USB3.0 CRW   -SD
   Volume Name:              Not applicable (no file system)
   Mounted:                  Not applicable (no file system)
   File System:              None
   Content (IOContent):      FDisk_partition_scheme
   OS Can Be Installed:      No
   Media Type:               Generic
   Protocol:                 USB
   SMART Status:             Not Supported
   Total Size:               7.9 GB (7948206080 Bytes) (exactly 15523840 512-Byte-Units)
   Volume Free Space:        Not applicable (no file system)
   Device Block Size:        512 Bytes
   Read-Only Media:          No
   Read-Only Volume:         Not applicable (no file system)
   Device Location:          External
   Removable Media:          Yes
   Media Removal:            Software-Activated
   Virtual:                  No
   OS 9 Drivers:             No
   Low Level Format:         Not supported
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1591</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[osxderaspberry-piqi-dong-deisukuwoduan-shi-jian-dezuo-cheng-surufang-fa]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="raspberrypi"><![CDATA[RaspberryPi]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<pre><code class="language-bash">~ $ diskutil list
...
/dev/disk2 (external, physical):
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *7.9 GB     disk2
   1:                 DOS_FAT_32 NO NAME                 7.9 GB     disk2s1
</code></pre>

<pre><code class="language-bash">~ $ diskutil info /dev/disk2
   Device Identifier:        disk2
   Device Node:              /dev/disk2
   Whole:                    Yes
   Part of Whole:            disk2
   Device / Media Name:      USB3.0 CRW   -SD

   Volume Name:              Not applicable (no file system)

   Mounted:                  Not applicable (no file system)

   File System:              None

   Content (IOContent):      FDisk_partition_scheme
   OS Can Be Installed:      No
   Media Type:               Generic
   Protocol:                 USB
   SMART Status:             Not Supported

   Total Size:               7.9 GB (7948206080 Bytes) (exactly 15523840 512-Byte-Units)
   Volume Free Space:        Not applicable (no file system)
   Device Block Size:        512 Bytes

   Read-Only Media:          No
   Read-Only Volume:         Not applicable (no file system)

   Device Location:          External
   Removable Media:          Yes
   Media Removal:            Software-Activated

   Virtual:                  No
   OS 9 Drivers:             No
   Low Level Format:         Not supported
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>requirements.txtにPyPI以外の（例えばgithubのプライベートな）リポジトリがある場合のsetup.pyの書き方。</title>
		<link>https://tech.blog.uribou.me/?p=1601</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1601</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="diff">diff --git a/setup.py b/setup.py
index 810b903..501d956 100755
--- a/setup.py
+++ b/setup.py
@@ -17,7 +17,17 @@ def readme():
 def requires():
     try:
         with open('requirements.txt', 'r') as _f:
-            return _f.readlines()
+            _r = [line for line in _f.readlines() if "-e " not in line]
+            return _r
+    except:
+        return []
+
+
+def depends():
+    try:
+        with open('requirements.txt', 'r') as _f:
+            _r = [line for line in _f.readlines() if "-e " in line]
+            return _r
     except:
         return []
@@ -31,6 +41,7 @@ setup(
     author='Takashi Ando',
     url='https://github.com/dodo5522/radiation_monitor.git',
     install_requires=requires(),
+    dependency_links=depends(),
     packages=find_packages(),
     entry_points={
         'console_scripts': [
</code></pre>
https://pip.readthedocs.io/en/1.1/requirements.html#the-requirements-file-format
<pre><code>-e git+http://svn.myproject.org/svn/MyProject/trunk#egg=MyProject
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1601</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:35:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[setup-py-with-requirements-text-with-github]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<pre><code class="language-diff">diff --git a/setup.py b/setup.py  
index 810b903..501d956 100755  
--- a/setup.py
+++ b/setup.py
@@ -17,7 +17,17 @@ def readme():
 def requires():
     try:
         with open('requirements.txt', 'r') as _f:
-            return _f.readlines()
+            _r = [line for line in _f.readlines() if "-e " not in line]
+            return _r
+    except:
+        return []
+
+
+def depends():
+    try:
+        with open('requirements.txt', 'r') as _f:
+            _r = [line for line in _f.readlines() if "-e " in line]
+            return _r
     except:
         return []

@@ -31,6 +41,7 @@ setup(
     author='Takashi Ando',
     url='https://github.com/dodo5522/radiation_monitor.git',
     install_requires=requires(),
+    dependency_links=depends(),
     packages=find_packages(),
     entry_points={
         'console_scripts': [
</code></pre>

<p><a href="https://pip.readthedocs.io/en/1.1/requirements.html#the-requirements-file-format">https://pip.readthedocs.io/en/1.1/requirements.html#the-requirements-file-format</a></p>

<pre><code>-e git+http://svn.myproject.org/svn/MyProject/trunk#egg=MyProject
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>市民のための太陽光発電標準化セミナー</title>
		<link>https://tech.blog.uribou.me/?p=1448</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1448</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>導入</h1>
太陽光発電設備は普及した
最大何Wの発電能力があることはわかるようになっている
しかし、実際の発電量がどの程度か、知る術がない（公開されていない）
消費者（市民）が求めるPVとは・・・
情報の標準化？
FIT制度の実態
交換、インテグレート可能なシステム（メーカーの押し付けシステムを購入するしか手段がない）
DIYという選択肢があってもいいじゃん
JEMAでの標準化
むずい
ここから太陽光発電が一般に定着するのは無理なのでは？
<h1>よくわかる標準化</h1>
講師：福島再生可能エネルギー研究所　近藤道雄
<h2>標準化とは？</h2>
公平性
例えばスポーツ
人が決めたルールに乗るのは必ずしも有利にならない
自分に有利なルールを作る
消費者側からみたら標準化されると便利で安くなる
メーカから見ると競争で儲からなくなるが、コスト低減が図れる、市場が大きくなる
太陽電池の出力は25℃環境下で計測される（モンゴルならOK）
<h2>標準化とは？</h2>
従来は公平性（互換性やインタフェースの整合）のために
今は競争力強化のための意味合いが強い（自分が勝つためのルールを作る）
作り手は場合によっては標準化したくない　自分が勝つためのルールが欲しい
受け手は自分が便利、楽しいと感じることを望む　消費者がもっと作り手にルール作りの注文を出すことが必要
太陽電池に関する特許の国ごとの割合
日本の件数が世界で７割　ただし、ノルマ特許が大部分
もっと標準化を視野に入れた特許が必要
<h2>太陽光発電におけるFAQ</h2>
どう設計すればいいのか？
企業の自己宣言が信頼できるか？
10年保証、モジュール出力保証世界最長25年保証　などの謳い文句
保証の内容をちゃんと見てますか？
例：某アメリカ企業は25年保証、シャープは10年保証
<ol>
<li>会社がなくなったらどうするの？</li>
<li>壊れたパネルを外すのは誰？</li>
<li>壊れたパネルをどうやって送るのか？</li>
</ol>
<h3>性能</h3>
同じ「100W」と謳っても、実際に屋外に置いて発電する電力量は、パネル（材料）ごとに差がある
ラベルを見ただけではどのパネルが最も得か、わからない
屋外発電量という規格でそれを標準化しようとしている
<h3>信頼性</h3>
メーカ公表の故障率はあてにあるか？
検証に時間がかかる、結果が出た時には新技術が出ている
使っている人が自分で関心を持って毎日接することが大事
<h2>品質保証システム作成中</h2>
どうやって作っているかは問題ではない
どうやって作り方を決めているか、管理しているかを判断する必要がある
<h2>標準化に対する消費者の必要な取り組み</h2>
規格に興味を持つ
規格に対する不満、要望を伝える
<h1>太陽発電システムの標準化の現状と課題</h1>
<h2>標準化の進め方</h2>
<ol>
<li>デジュール標準</li>
<li>フォーラム標準</li>
<li>デファクト標準</li>
</ol>
<h2>太陽光発電システムでの標準化とは？</h2>
<ul>
<li>太陽電池モジュール（アレイ）
** 性能
*** 電気的、機械的、耐候性
** 安全性
*** 耐衝撃、火災、切断
** 表示
*** 製造業者名、製造番号など</li>
<li>接続箱</li>
<li>パワコン</li>
</ul>
<h2>標準化の広がり</h2>
|WG1|用語|
|WG2|非集光形モジュール|
|WG3|システム|
|WG4|(蓄電池:休会)|
|WG5|(モジュールの認証規格:IECEEに移行)|
|WG6|周辺機器|
|WG7|集光形モジュール|
|WG8|セルの光劣化試験|
|JWG1|村落電化|]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1448</wp:post_id>
		<wp:post_date><![CDATA[2020-02-24 12:37:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-min-notamenotai-yang-guang-fa-dian-biao-zhun-hua-semina]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<h1 id="">導入</h1>

<p>太陽光発電設備は普及した
最大何Wの発電能力があることはわかるようになっている
しかし、実際の発電量がどの程度か、知る術がない（公開されていない）</p>

<p>消費者（市民）が求めるPVとは・・・
情報の標準化？
FIT制度の実態 <br />
交換、インテグレート可能なシステム（メーカーの押し付けシステムを購入するしか手段がない）
DIYという選択肢があってもいいじゃん</p>

<p>JEMAでの標準化 <br />
むずい
ここから太陽光発電が一般に定着するのは無理なのでは？</p>

<h1 id="">よくわかる標準化</h1>

<p>講師：福島再生可能エネルギー研究所　近藤道雄</p>

<h2 id="">標準化とは？</h2>

<p>公平性
例えばスポーツ
人が決めたルールに乗るのは必ずしも有利にならない
自分に有利なルールを作る</p>

<p>消費者側からみたら標準化されると便利で安くなる
メーカから見ると競争で儲からなくなるが、コスト低減が図れる、市場が大きくなる</p>

<p>太陽電池の出力は25℃環境下で計測される（モンゴルならOK）</p>

<h2 id="">標準化とは？</h2>

<p>従来は公平性（互換性やインタフェースの整合）のために
今は競争力強化のための意味合いが強い（自分が勝つためのルールを作る）</p>

<p>作り手は場合によっては標準化したくない　自分が勝つためのルールが欲しい
受け手は自分が便利、楽しいと感じることを望む　消費者がもっと作り手にルール作りの注文を出すことが必要</p>

<p>太陽電池に関する特許の国ごとの割合
日本の件数が世界で７割　ただし、ノルマ特許が大部分
もっと標準化を視野に入れた特許が必要</p>

<h2 id="faq">太陽光発電におけるFAQ</h2>

<p>どう設計すればいいのか？</p>

<p>企業の自己宣言が信頼できるか？
10年保証、モジュール出力保証世界最長25年保証　などの謳い文句 <br />
保証の内容をちゃんと見てますか？
例：某アメリカ企業は25年保証、シャープは10年保証</p>

<ol>
<li>会社がなくなったらどうするの？  </li>
<li>壊れたパネルを外すのは誰？  </li>
<li>壊れたパネルをどうやって送るのか？</li>
</ol>

<h3 id="">性能</h3>

<p>同じ「100W」と謳っても、実際に屋外に置いて発電する電力量は、パネル（材料）ごとに差がある
ラベルを見ただけではどのパネルが最も得か、わからない
屋外発電量という規格でそれを標準化しようとしている</p>

<h3 id="">信頼性</h3>

<p>メーカ公表の故障率はあてにあるか？
検証に時間がかかる、結果が出た時には新技術が出ている
使っている人が自分で関心を持って毎日接することが大事</p>

<h2 id="">品質保証システム作成中</h2>

<p>どうやって作っているかは問題ではない
どうやって作り方を決めているか、管理しているかを判断する必要がある</p>

<h2 id="">標準化に対する消費者の必要な取り組み</h2>

<p>規格に興味を持つ
規格に対する不満、要望を伝える</p>

<h1 id="">太陽発電システムの標準化の現状と課題</h1>

<h2 id="">標準化の進め方</h2>

<ol>
<li>デジュール標準  </li>
<li>フォーラム標準  </li>
<li>デファクト標準</li>
</ol>

<h2 id="">太陽光発電システムでの標準化とは？</h2>

<ul>
<li>太陽電池モジュール（アレイ）
<em>* 性能
<strong></em> 電気的、機械的、耐候性
<em>* 安全性
*</strong> 耐衝撃、火災、切断
*</em> 表示
<em>*</em> 製造業者名、製造番号など</li>
<li>接続箱</li>
<li>パワコン</li>
</ul>

<h2 id="">標準化の広がり</h2>

<p>|WG1|用語|
|WG2|非集光形モジュール|
|WG3|システム|
|WG4|(蓄電池:休会)|
|WG5|(モジュールの認証規格:IECEEに移行)|
|WG6|周辺機器|
|WG7|集光形モジュール|
|WG8|セルの光劣化試験|
|JWG1|村落電化|</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>pythonのunittestフレームワーク、doctest+MiniMock</title>
		<link>https://tech.blog.uribou.me/pythonnounittesthuremuwakudoctestgabian-li-sugiru/</link>
		<pubDate>Sat, 15 Jul 2017 00:37:35 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1449</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="python">class IntUtil:
    def twice(self, n):
        """ 引数を 2 倍して返す関数
        &gt;&gt;&gt; mine.twice(8)
        16
        &gt;&gt;&gt; mine.twice(1850923)
        3701846
        """
        return n * 2
if __name__ == "__main__":
    import doctest
    doctest.testmod(extraglobs = {'mine': IntUtil()})
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1449</wp:post_id>
		<wp:post_date><![CDATA[2017-07-15 09:37:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-15 00:37:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pythonnounittesthuremuwakudoctestgabian-li-sugiru]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<pre><code class="language-python">class IntUtil:
    def twice(self, n):
        """ 引数を 2 倍して返す関数
        &gt;&gt;&gt; mine.twice(8)
        16
        &gt;&gt;&gt; mine.twice(1850923)
        3701846
        """
        return n * 2
if __name__ == "__main__":
    import doctest
    doctest.testmod(extraglobs = {'mine': IntUtil()})
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PythonのMockフレームワーク、unittest.mockを試す</title>
		<link>https://tech.blog.uribou.me/pythonnomockhuremuwaku-unittest-mockwoshi-su/</link>
		<pubDate>Sat, 15 Jul 2017 00:36:43 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1480</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="bash">$ nosetests --with-coverage --cover-html --cover-html-dir=html --include=solar_monitor/.
...
html.py                                                       37     37     0%   5-132
html/entities.py                                               9      9     0%   3-2509
http/cookiejar.py                                           1100   1100     0%   28-2092
http/cookies.py                                              246    246     0%   39-636
mimetypes.py                                                 194    194     0%   26-593
unittest/mock.py                                            1278   1278     0%   7-2373
uuid.py                                                      331    331     0%   47-615
solar_monitor.py                                               0      0   100%
solar_monitor/cloud.py                                         0      0   100%
solar_monitor/cloud/base.py                                    6      2    67%   33, 36
solar_monitor/cloud/keenio.py                                 20     13    35%   34, 39, 42-55
solar_monitor/cloud/xively.py                                 19     11    42%   36-37, 40, 43-59
solar_monitor/event.py                                         0      0   100%
solar_monitor/event/base.py                                   82     12    85%   94, 103, 177, 180, 183, 194, 203-206, 260, 270
solar_monitor/event/handler.py                                31     17    45%   29-30, 38-48, 55-56, 66-67, 74-75, 84-85
solar_monitor/event/trigger.py                                38     26    32%   51-53, 67-85, 99-101, 115-133
solar_monitor/logger.py                                       22     13    41%   38-50, 70, 80, 90, 100
solar_monitor/timer.py                                        60      3    95%   115, 166-167
----------------------------------------------------------------------------------------
TOTAL                                                       9621   8108    16%
----------------------------------------------------------------------
</code></pre>
<pre><code class="python"><br />&gt;&gt;&gt; import requests
&gt;&gt;&gt; requests.get("https://www.google.co.jp")
&lt;Response [200]&gt;
&gt;&gt;&gt; p = patch("requests.get", autospec=True)
&gt;&gt;&gt; m = p.start()
&gt;&gt;&gt; m.return_value = "hogehoge"
&gt;&gt;&gt; requests.get("https://www.google.co.jp")
'hogehoge'
&gt;&gt;&gt; p.stop()
&gt;&gt;&gt; requests.get("https://www.google.co.jp")
&lt;Response [200]&gt;
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1480</wp:post_id>
		<wp:post_date><![CDATA[2017-07-15 09:36:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-15 00:36:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pythonnomockhuremuwaku-unittest-mockwoshi-su]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<pre><code class="language-bash">$ nosetests --with-coverage --cover-html --cover-html-dir=html --include=solar_monitor/.
...
html.py                                                       37     37     0%   5-132
html/entities.py                                               9      9     0%   3-2509
http/cookiejar.py                                           1100   1100     0%   28-2092
http/cookies.py                                              246    246     0%   39-636
mimetypes.py                                                 194    194     0%   26-593
unittest/mock.py                                            1278   1278     0%   7-2373
uuid.py                                                      331    331     0%   47-615
solar_monitor.py                                               0      0   100%
solar_monitor/cloud.py                                         0      0   100%
solar_monitor/cloud/base.py                                    6      2    67%   33, 36
solar_monitor/cloud/keenio.py                                 20     13    35%   34, 39, 42-55
solar_monitor/cloud/xively.py                                 19     11    42%   36-37, 40, 43-59
solar_monitor/event.py                                         0      0   100%
solar_monitor/event/base.py                                   82     12    85%   94, 103, 177, 180, 183, 194, 203-206, 260, 270
solar_monitor/event/handler.py                                31     17    45%   29-30, 38-48, 55-56, 66-67, 74-75, 84-85
solar_monitor/event/trigger.py                                38     26    32%   51-53, 67-85, 99-101, 115-133
solar_monitor/logger.py                                       22     13    41%   38-50, 70, 80, 90, 100
solar_monitor/timer.py                                        60      3    95%   115, 166-167
----------------------------------------------------------------------------------------
TOTAL                                                       9621   8108    16%
----------------------------------------------------------------------
</code></pre>
<pre><code class="language-python">&gt;&gt;&gt; import requests
&gt;&gt;&gt; requests.get("https://www.google.co.jp")
&lt;Response [200]&gt;
&gt;&gt;&gt; p = patch("requests.get", autospec=True)
&gt;&gt;&gt; m = p.start()
&gt;&gt;&gt; m.return_value = "hogehoge"
&gt;&gt;&gt; requests.get("https://www.google.co.jp")
'hogehoge'
&gt;&gt;&gt; p.stop()
&gt;&gt;&gt; requests.get("https://www.google.co.jp")
&lt;Response [200]&gt;
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Pythonによる簡易HTTPサーバ起動方法</title>
		<link>https://tech.blog.uribou.me/simple-web-server-with-python/</link>
		<pubDate>Sat, 15 Jul 2017 00:37:42 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1560</guid>
		<description></description>
		<content:encoded><![CDATA[ほうほう。
<pre><code class="python">In [1]: import requests
In [2]: requests.post("http://localhost:8000", data={"test": 1})
Out[2]: &lt;Response [501]&gt;
In [3]: requests.post("http://localhost:8000", params={"test": 1})
Out[3]: &lt;Response [501]&gt;
</code></pre>
<pre><code class="bash">~ $ python -m http.server
Serving HTTP on 0.0.0.0 port 8000 ...
127.0.0.1 - - [06/Jul/2016 20:45:37] code 501, message Unsupported method ('POST')
127.0.0.1 - - [06/Jul/2016 20:45:37] "POST / HTTP/1.1" 501 -
127.0.0.1 - - [06/Jul/2016 20:46:29] code 501, message Unsupported method ('POST')
127.0.0.1 - - [06/Jul/2016 20:46:29] "POST /?test=1 HTTP/1.1" 501 -
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1560</wp:post_id>
		<wp:post_date><![CDATA[2017-07-15 09:37:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-15 00:37:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[simple-web-server-with-python]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ほうほう。</p>
<pre><code class="language-python">In [1]: import requests
In [2]: requests.post("http://localhost:8000", data={"test": 1})
Out[2]: &lt;Response [501]&gt;
In [3]: requests.post("http://localhost:8000", params={"test": 1})
Out[3]: &lt;Response [501]&gt;
</code></pre>
<pre><code class="language-bash">~ $ python -m http.server
Serving HTTP on 0.0.0.0 port 8000 ...
127.0.0.1 - - [06/Jul/2016 20:45:37] code 501, message Unsupported method ('POST')
127.0.0.1 - - [06/Jul/2016 20:45:37] "POST / HTTP/1.1" 501 -
127.0.0.1 - - [06/Jul/2016 20:46:29] code 501, message Unsupported method ('POST')
127.0.0.1 - - [06/Jul/2016 20:46:29] "POST /?test=1 HTTP/1.1" 501 -
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989894088]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Pythonが動くArduino Wifi付きみたいなモジュール</title>
		<link>https://tech.blog.uribou.me/pythongadong-kuarduino-wififu-kimitainamoziyuru/</link>
		<pubDate>Sat, 15 Jul 2017 00:37:43 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1611</guid>
		<description></description>
		<content:encoded><![CDATA[使いきれないな…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1611</wp:post_id>
		<wp:post_date><![CDATA[2017-07-15 09:37:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-15 00:37:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pythongadong-kuarduino-wififu-kimitainamoziyuru]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>使いきれないな…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989893914]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>GhostからWordPressへ （３） 〜GhostデータをWordPressにインポート〜</title>
		<link>https://tech.blog.uribou.me/post-1696/</link>
		<pubDate>Wed, 14 Jun 2017 12:46:12 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1696</guid>
		<description></description>
		<content:encoded><![CDATA[* [Really Simple CSV Importerの導入方法](https://liginc.co.jp/web/wp/plug-in/58046)
* [How to: convert XML or JSON into spreadsheets using Open Refine](https://onlinejournalismblog.com/2015/10/21/how-to-convert-xml-or-json-into-spreadsheets-using-open-refine/)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1696</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 21:46:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:46:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-1696]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1975]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989666877]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>GhostからWordpressへ （４） 〜リダイレクト用Webサーバ構築〜</title>
		<link>https://tech.blog.uribou.me/post-1700/</link>
		<pubDate>Wed, 14 Jun 2017 12:51:42 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1700</guid>
		<description></description>
		<content:encoded><![CDATA[[TOC]
[前回](http://tech.uribou.tokyo/ghost_to_wordpress_plan/)も触れた通り、目的は **新ドメインへの移行** です。
てことは、旧ドメインのブログにアクセスしたら新ドメインのブログに[301リダイレクト](https://www.seohacks.net/basic/terms/301_redirect/)すれば良いだけで、DNSサーバのTTLをいじる必要なんてないじゃん。
&gt; 301リダイレクトは、URLが恒久的に変更された場合に用いられる転送処理のステータスコードです。転送のステータスコードとして他に302リダイレクトがありますが、302リダイレクトは「一時的な転送」を表すものであり、その意味が異なります。
&gt;
&gt; 301リダイレクトによって転送される場合、検索エンジンは転送前のURLが持っていた被リンク等の評価を、転送先のURLに引き継がせます。
という指摘をもらいそうなので言い訳しておくと…。
もちろん当初はそうしようとしたんですが、nodejsのGhostと、それを稼働させたVPS、管理者のスキル不足が重なり、そう簡単にはいかなかったんですね。
リダイレクトするだけのWebサーバを立ち上げ、旧ドメインをそのWebサーバに向けることで、旧URLへのアクセスを新URLにリダイレクトさせることにしました。
## wsgi.py
```python
#!/usr/bin/env python
import os
from flask import Flask, redirect
REDIRECTING_URL = "http://tech.uribou.tokyo/"
application = Flask("hoge")
@application.route("//")
def index1(slug):
    return redirect(REDIRECTING_URL + slug, code=301)
@application.route("/")
def index2(slug):
    return redirect(REDIRECTING_URL + slug, code=301)
```
## requirements.txt
```
flask
```
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1700</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 21:51:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:51:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-1700]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="post_tag" nicename="ghost"><![CDATA[ghost]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989666854]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>FlaskのViewクラスを使う。</title>
		<link>https://tech.blog.uribou.me/recommendation_flask_view_class/</link>
		<pubDate>Tue, 27 Jun 2017 21:53:20 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1827</guid>
		<description></description>
		<content:encoded><![CDATA[言わずと知れた、Pythonの軽量Webアプリケーションフレームワーク、Flask。
最もお手軽で、よく紹介される使い方がこちら↓、routeデコレータです。
```python
from flask import Flask
app = Flask("hoge")
@app.route('/users/')
def show_users(page):
    users = User.query.all()
    return render_template('users.html', users=users)
if __name__ = "__main__":
    app.run(host="0.0.0.0", port=80)
```
手軽にroute追加できるのは有難いんですが、複数モジュールに分割してコードを書くと、同一appインスタンスを参照してrouteを設定する必要が出てくるので、モジュール間の依存関係が面倒なことになります。
## Pluggable Views
作るアプリの規模が大きくなってきたら、View / MethodViewクラスを使うのがお勧め。
&gt; Flask 0.7 introduces pluggable views inspired by the generic views from Django which are based on classes instead of functions. The main intention is that you can replace parts of the implementations and this way have customizable pluggable views.
```python
In [2]: MethodView.as_view??
Signature: MethodView.as_view(name, *class_args, **class_kwargs)
Source:
    @classmethod
    def as_view(cls, name, *class_args, **class_kwargs):
        """Converts the class into an actual view function that can be used
        with the routing system.  Internally this generates a function on the
        fly which will instantiate the :class:`View` on each request and call
        the :meth:`dispatch_request` method on it.
        The arguments passed to :meth:`as_view` are forwarded to the
        constructor of the class.
        """
        def view(*args, **kwargs):
            self = view.view_class(*class_args, **class_kwargs)
            return self.dispatch_request(*args, **kwargs)
        if cls.decorators:
            view.__name__ = name
            view.__module__ = cls.__module__
            for decorator in cls.decorators:
                view = decorator(view)
        # We attach the view class to the view function for two reasons:
        # first of all it allows us to easily figure out what class-based
        # view this thing came from, secondly it's also used for instantiating
        # the view class so you can actually replace it with something else
        # for testing purposes and debugging.
        view.view_class = cls
        view.__name__ = name
        view.__doc__ = cls.__doc__
        view.__module__ = cls.__module__
        view.methods = cls.methods
        return view
File:      ~/.anyenv/envs/pyenv/versions/3.5.1/envs/dev_necco/lib/python3.5/site-packages/flask/views.py
Type:      method
```
## おまけ
冒頭に出てきた`route`メソッド、実は内部で`add_url_rule`を呼んでいるのでした。
```python
In [4]: Flask.route??
Signature: Flask.route(self, rule, **options)
Source:
    def route(self, rule, **options):
        """A decorator that is used to register a view function for a
        given URL rule.  This does the same thing as :meth:`add_url_rule`
        but is intended for decorator usage::
            @app.route('/')
            def index():
                return 'Hello World'
        For more information refer to :ref:`url-route-registrations`.
        :param rule: the URL rule as string
        :param endpoint: the endpoint for the registered URL rule.  Flask
                         itself assumes the name of the view function as
                         endpoint
        :param options: the options to be forwarded to the underlying
                        :class:`~werkzeug.routing.Rule` object.  A change
                        to Werkzeug is handling of method options.  methods
                        is a list of methods this rule should be limited
                        to (``GET``, ``POST`` etc.).  By default a rule
                        just listens for ``GET`` (and implicitly ``HEAD``).
                        Starting with Flask 0.6, ``OPTIONS`` is implicitly
                        added and handled by the standard request handling.
        """
        def decorator(f):
            endpoint = options.pop('endpoint', None)
            self.add_url_rule(rule, endpoint, f, **options)
            return f
        return decorator
File:      ~/.anyenv/envs/pyenv/versions/3.5.1/envs/dev_necco/lib/python3.5/site-packages/flask/app.py
Type:      function
```
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1827</wp:post_id>
		<wp:post_date><![CDATA[2017-06-28 06:53:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-27 21:53:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[recommendation_flask_view_class]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5946995117]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>動作不能に陥っていたacdcliが再び使用可能に。</title>
		<link>https://tech.blog.uribou.me/acdcli_can_be_used_again/</link>
		<pubDate>Sat, 08 Jul 2017 20:59:44 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1918</guid>
		<description></description>
		<content:encoded><![CDATA[写真ならRawデータも容量無制限でアップロード可能なAmazon Cloud Drive。
コマンドラインでアクセス可能な`acdcli`が[動作不能に陥ってしまい](http://tech.uribou.tokyo/acdcli_404_error/)、途方にくれながら[github](https://github.com/yadayada/acd_cli/issues/572#issuecomment-306607038)のコメントを眺めていたら、**works very well**の文字が。
![](https://farm5.staticflickr.com/4289/35634387492_7b05f04a88_z_d.jpg)
半信半疑ながらも、とりあえず試してみる。
この部分。
&gt; I just re-created a new oauth.json token with https://drivesink.appspot.com/config And pasted it ~/.cache/acd_cli/
![](https://farm5.staticflickr.com/4231/35763167596_9ba85e2962_z_d.jpg)
https://drivesink.appspot.com/
https://github.com/caseymrm/drivesink
https://www.antun.net/tips/api/amazonDrive.html
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1918</wp:post_id>
		<wp:post_date><![CDATA[2017-07-09 05:59:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-08 20:59:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[acdcli_can_be_used_again]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5974349688]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_227c94c92b547346ac6ad56da4ba9b12]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_bbaaa914a244a512a24a7f4d8a45117f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8f27c1f004ad038b585a9a0050f6098a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_961e0b3d3d6b54cadaef4e212cb68f78]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5e4656ab9a6cad379f7ee71cab1ec086]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e7693accdbb41c5d23fa0ff2f4c75707]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>TypeScriptコード補完プラグインtsuquyomi。シンタックスチェッカーsyntasticとの連携がとてもシンプルで良い。。</title>
		<link>https://tech.blog.uribou.me/vim_plugin_typescript/</link>
		<pubDate>Mon, 10 Jul 2017 22:07:44 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1932</guid>
		<description></description>
		<content:encoded><![CDATA[とりあえずシンタックスハイライトします。
https://github.com/leafgarland/typescript-vim
NeoBundle 'leafgarland/typescript-vim'
コード補完もしたくなります。
https://github.com/clausreinke/typescript-tools
NeoBundle 'Quramy/tsuquyomi'
以下のメッセージが。
duplicateしていないリポジトリどこやねん。
https://github.com/clausreinke/typescript-tools/blob/master/ftplugin/typescript_tss.vim#L2
```vim
echomsg "typescript-tools vim plugin has moved to separate repo:"
```
ほっといても使えるけど鬱陶しい。
後回しにしてsyntasticとの連携を調べる。
https://github.com/vim-syntastic/
&gt; 4.15. Q. What happened to the tsc checker?
&gt;
&gt; A. It didn't meet people's expectations and it has been removed. The plugin **tsuquyomi** comes packaged with a checker for TypeScript. If you install this plugin the checker should be picked up automatically by syntastic.
ほう。
勝手に連携してくれるとな。
https://github.com/Quramy/tsuquyomi/
こんな設定もあるらしい。
http://pospome.hatenablog.com/entry/20150630/1435631383
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1932</wp:post_id>
		<wp:post_date><![CDATA[2017-07-11 07:07:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-10 22:07:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vim_plugin_typescript]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="typescript"><![CDATA[TypeScript]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://d33wubrfki0l68.cloudfront.net/e23b8e4a3472ea6219092fc2be5eeeb2d83e3e9f/aea63/media/2014/04/superman.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f35296df5462f98adf1199f583e421c9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_388f4b516f3b2822a726001f6abd097e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9113f9b5915dbf584850ad1d3881ff06]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_094a70d8223237b0ddf17ff2e833b676]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_1d24a969f403a381d82ce760848711ab]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_57a01b6cea865066963cfc821d721a9b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5979262618]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5215ba62395046433482f6fb343d2462]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f3163d44f60bcd91d4dcbd01810f74f4]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2b5014f44924b395f0da525d2ba77723]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_235dc3f2ee2206d034d5a2484da5ef01]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_69bfbd62d5762c31cf2bed6d230cc04e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ゼロから作るニューラルネットワーク@Udemy TensorFlow fast style transferを試してみた</title>
		<link>https://tech.blog.uribou.me/tensorflow-cnn-for-fast-style-transferudemy/</link>
		<pubDate>Sun, 30 Jul 2017 23:29:44 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2072</guid>
		<description></description>
		<content:encoded><![CDATA[少しずつ進めている、[ゼロから作るニューラルネットワーク@Udemy](https://www.udemy.com/neuralnet/learn/v4/questions/2614507?show_review_popup=true)。
その中でも比較的すぐに試せる[Evaluating Style Transfer Networks](https://github.com/lengstrom/fast-style-transfer/blob/master/README.md#evaluating-style-transfer-networks)の実行結果をご紹介。
```bash
moca:fast-style-transfer $ time python evaluate.py --checkpoint ../wave.ckpt --in-path ~/Pictures/2017年賀状.png --out-path test.png
2017-07-31 07:58:17.667412: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-07-31 07:58:17.667455: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
real	16m22.815s
user	3m20.612s
sys	3m43.280s
```
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/36141416921/in/photostream/" title="2017年賀状_元"><img src="https://farm5.staticflickr.com/4310/36141416921_0dddf953e2_z.jpg" width="433" height="640" alt="2017年賀状_元"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/36141418281/in/photostream/" title="2017年賀状_北斎風"><img src="https://farm5.staticflickr.com/4304/36141418281_03b0c334f7_z.jpg" width="434" height="640" alt="2017年賀状_北斎風"></a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2072</wp:post_id>
		<wp:post_date><![CDATA[2017-07-31 08:29:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-30 23:29:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tensorflow-cnn-for-fast-style-transferudemy]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="tensorflow"><![CDATA[TensorFlow]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6029066027]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:64:"https://farm5.staticflickr.com/4310/36141416921_0dddf953e2_z.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Ubuntu Server起動不良の原因を探る</title>
		<link>https://tech.blog.uribou.me/investigate_cause_of_noboot_ubuntu_server/</link>
		<pubDate>Sat, 26 Aug 2017 23:29:16 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2122</guid>
		<description></description>
		<content:encoded><![CDATA[
HDD(rootfs)がマウントできていないっぽい。
rescueモードで解決を図る。
`/dev/mapper/espresso--vg-root`をマウント、ログイン後に各パーティションをマウントする。
```bash
mount /dev/mapper/espresso--vg-home /home
mount /dev/mapper/espresso--vg-var /var
```
aptを使えるようにするため、`nameserver`を設定する。
```bash
resolvconf -u
```
生成された`resolv.conf`を編集
```bash
echo "nameserver 8.8.8.8" &gt; /run/resolvconf/resolv.conf
```
apt
```bash
apt-get update
apt-get upgrade
apt-get dist-upgrade
apt-get install --reinstall ubuntu-server
```
`update-initramfs`で警告が出ていたような。
```bash
update-initramfs -u
```
おお、動き出した。
でもやっぱりFAILEDがいくつか。
## “Enabling additional executable binary formats” fails
[reinstalling binfmt-support fixed this issue. Thanks.](https://unix.stackexchange.com/questions/136970/enabling-additional-executable-binary-formats-fails)とあるので、再びrescue modeで試してみる。
`binfmt-support`とは？
&gt; The binfmt_misc kernel module, contained in versions 2.1.43 and later of the Linux kernel, allows system administrators to register interpreters for various binary formats based on a magic number or their file extension, and cause the appropriate interpreter to be invoked whenever a matching file is executed. Think of it as a more flexible version of the #! executable interpreter mechanism.
&gt;
&gt; binfmt-support provides an update-binfmts script with which package maintainers can register interpreters to be used with this module without having to worry about writing their own init.d scripts, and which sysadmins can use for a slightly higher-level interface to this module.
apt-get install --reinstall binfmt-support
## Failed to start Create Volatile Files and Directories.
[Solved by removing /var/log/journal folder. (you should mv it to journal.bak to be safe)](https://bbs.archlinux.org/viewtopic.php?id=196341)とあるので、再びrescue modeで試してみる。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2122</wp:post_id>
		<wp:post_date><![CDATA[2017-08-27 08:29:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-26 23:29:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[investigate_cause_of_noboot_ubuntu_server]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6098562613]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>組み込みSIer → 大手電機メーカー → 派遣 → 派遣+副業フリーランス（今ここ）</title>
		<link>https://tech.blog.uribou.me/working-history/</link>
		<pubDate>Thu, 31 Aug 2017 23:17:28 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2132</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;
去年2016年9月に、10年近く勤めた某大手電機メーカーを退職し、株式会社リツアンSTCという <span class="strike">怪しげな</span> 会社に転職しました。
<blockquote class="twitter-tweet" data-lang="ja">
<p dir="ltr" lang="ja">一番読まれている記事。
リツアンSTC 代表野中のブログ「ピンハネ屋と呼ばれて」<a href="https://twitter.com/hashtag/%E5%B0%B1%E6%B4%BB?src=hash">#就活</a> <a href="https://twitter.com/hashtag/%E8%BB%A2%E8%81%B7?src=hash">#転職</a> <a href="https://twitter.com/hashtag/IT?src=hash">#IT</a> <a href="https://twitter.com/hashtag/%E6%9D%B1%E4%BA%AC?src=hash">#東京</a> <a href="https://twitter.com/hashtag/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2?src=hash">#エンジニア</a> <a href="https://twitter.com/hashtag/%E3%83%94%E3%83%B3%E3%83%8F%E3%83%8D%E5%B1%8B?src=hash">#ピンハネ屋</a><a href="https://t.co/Tx6xu7041U">https://t.co/Tx6xu7041U</a></p>
— リツアンSTC (@rstc_tokyo) <a href="https://twitter.com/rstc_tokyo/status/900625943059775488">2017年8月24日</a></blockquote>

リツアンを知るきっかけは、色々と病んでいた時期にたまたま見かけたこの方のツイート ↓
<blockquote class="twitter-tweet" data-lang="ja">
<p dir="ltr" lang="ja">パートナー企業の「リツアンSTC」はすごい派遣会社で、なんせ社長ブログのタイトルが「『ピンハネ屋』と呼ばれて」w 熱いですよ。/ <a href="https://t.co/MMWu1gJf6O">https://t.co/MMWu1gJf6O</a></p>
— イケダハヤト@仮想通貨 (@IHayato) <a href="https://twitter.com/IHayato/status/717849863136874497">2016年4月6日</a></blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2132</wp:post_id>
		<wp:post_date><![CDATA[2017-09-01 08:17:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-31 23:17:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[working-history]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="%e5%89%af%e6%a5%ad"><![CDATA[副業]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6134022895]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>MacBook (13-inch, Late 2009)の環境やデータをそのままに、内蔵HDDをSSDに換装。</title>
		<link>https://tech.blog.uribou.me/hdd-to-ssd-on-mac/</link>
		<pubDate>Thu, 07 Sep 2017 23:33:54 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2144</guid>
		<description></description>
		<content:encoded><![CDATA[【内容】
macのハードディスクをSSDに換装する。
【参考サイト】
機種・型番から選ぶ内蔵ストレージ（ハードディスク/SSD）
http://www.akibakan.com/model_internal_hdd/#macbook
【MacBookモデル情報】
MacBook (13-inch, Late 2009)
機種 ID：MacBook 6,1
Model ID: MC207xx/A
https://support.apple.com/kb/SP579?locale=ja_JP&amp;viewlocale=ja_JP
【HDD情報】
  空き領域：	226.23 GB（226,232,168,448 バイト）
  容量：	249.2 GB（249,199,591,424 バイト）
  マウントポイント：	/
  ファイルシステム：	HFS+（ジャーナリング）
  書き込み可能：	はい
  所有権を無視：	いいえ
  BSD 名：	disk0s2
  ボリュームの UUID：	87B25A96-8396-3A49-9594-AD528BA35BEB
  物理ドライブ：
  メディア名：	Hitachi HTS545025B9SA02 Media
  メディアのタイプ：回転
  プロトコル：	SATA
  内部：	はい
  パーティションマップのタイプ：	GPT（GUID パーティションテーブル）
【SSD候補】
上記ハードウェア情報と「機種・型番から選ぶ内蔵ストレージ」サイトより。
最大容量2.5" SSD/2TBまで。Serial ATAであれば何でもよい。速度を重視したい。
特殊工具（星型ドライバ）：
https://af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VB8ANQ%2Fref%3Dnosim
HDD/SSDケース（データ転送に必要）：
https://af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01JOPMKYU%2Fref%3Dnosim
SSD（サムスン製 Read/Write性能重視）：
https://af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00QIH3RWW%2Fref%3Dnosim
【部品工具代小計】
小計 (3 点): ￥ 13,175
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2144</wp:post_id>
		<wp:post_date><![CDATA[2017-09-08 08:33:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-07 23:33:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hdd-to-ssd-on-mac]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="%e5%89%af%e6%a5%ad"><![CDATA[副業]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c9fa438d5e6f538f320adea436dda130]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5f05acdd6c8d659bd71e623ee3b3c26d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e6b697f176f02ae2fca625d365d95d2e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_27738ab9bd6ca3e5e8e5ba4825495333]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_da3fbaacef352712ccb2993cbb99a5e2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_19f6eceec0adf52410c5ce8062b0d792]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>SONYハンディカムHDR-PJ760で撮影したAVCHD動画を自動的にチャプタ毎分割するには（３）</title>
		<link>https://tech.blog.uribou.me/split-avchd-movie-automatically3/</link>
		<pubDate>Tue, 10 Apr 2018 15:13:00 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2212</guid>
		<description></description>
		<content:encoded><![CDATA[[前回](http://tech.uribou.tokyo/split-avchd-movie-automatically2/)の続き。
色々試して調べるうちに、`tsMuxeR`コマンドでMPLファイルをパースした結果を元にごにょごにょすることで、得られたチャプタ情報を元にMTSファイルを結合、mp4エンコードすることができました！
そこそこ使いやすくbashスクリプトにまとめたので、必要なら使ってください。
<code data-gist-id="a29a7e495b53e0548ccdc3da6f51e121" data-gist-line="1-16"></code>
1. aaa
2. bbb
3. ccc
そのパースしたデータを眺めていると、`Marks`というワードが出てくるセクション（と呼んでいいものか）と出てこないセクションがあることに気づきます。
これ↓は全て`Marks`あり。
```
File #00000 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00003.MTS
Duration: 00:00:45.545
start-time: 45751
Marks: 00:00:00.000
File #00001 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00000.MTS
Duration: 00:01:45.605
start-time: 45751
Marks: 00:00:45.545
File #00002 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00001.MTS
Duration: 00:00:29.028
start-time: 45751
Marks: 00:02:31.150
```
こちら↓は全て`Marks`なし。
```
File #00070 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00070.MTS
Duration: 00:10:36.135
start-time: 45751
Marks: 03:58:19.785
File #00071 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00071.MTS
Duration: 00:10:35.634
start-time: 45751
File #00072 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00072.MTS
Duration: 00:10:35.634
start-time: 45751
File #00073 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00073.MTS
Duration: 00:09:49.589
start-time: 45751
File #00074 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00074.MTS
Duration: 00:10:36.135
start-time: 45751
Marks: 04:39:56.779
```
`ls`してファイルサイズをチェックしてみると分かるんですが、
```
$ ls -alh /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/0007?.MTS
-rwxrwxrwx 1 root root 2.0G 10月 29 11:51 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00070.MTS
-rwxrwxrwx 1 root root 2.0G 10月 29 12:02 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00071.MTS
-rwxrwxrwx 1 root root 2.0G 10月 29 12:13 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00072.MTS
-rwxrwxrwx 1 root root 1.9G 10月 29 12:22 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00073.MTS
-rwxrwxrwx 1 root root 2.0G 10月 29 13:09 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00074.MTS
-rwxrwxrwx 1 root root 2.0G 10月 29 13:19 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00075.MTS
-rwxrwxrwx 1 root root 2.0G 10月 29 13:30 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00076.MTS
-rwxrwxrwx 1 root root 752M 10月 29 13:34 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00077.MTS
-rwxrwxrwx 1 root root 2.0G 12月  7 10:06 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00078.MTS
-rwxrwxrwx 1 root root 2.0G 12月  7 10:17 /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00079.MTS
```
FAT16フォーマットされたメディアに記録することを考慮しての規格になっているんでしょうね。１つの動画をFAT16時代のファイルサイズ上限2GBで区切ってます。 <span class="strike">余計なことを…</span>
```
618 tsMuxeR /media/sdcard/PRIVATE/AVCHD/BDMV/PLAYLIST/00000.MPL | grep -A 3 -B 1 Duration | head -n 40
619 tsMuxeR /media/sdcard/PRIVATE/AVCHD/BDMV/PLAYLIST/00000.MPL | grep -A 3 -B 1 Duration | head -n 20
620 tsMuxeR /media/sdcard/PRIVATE/AVCHD/BDMV/PLAYLIST/00000.MPL | grep -A 3 -B 1 Duration
621 cat /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00015.MTS &gt; /symlinks/videos/temp.MTS
622 cat /media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00016.MTS &gt;&gt; /symlinks/videos/temp.MTS
623 ffmpeg -i /symlinks/videos/temp.MTS -profile:v baseline -level:v 3.1 temp.mp4
624 ffmpeg -i /symlinks/videos/temp.MTS -profile:v baseline -level:v 3.1 -acodec aac -strict experimental temp.mp4
625 ffmpeg -i /symlinks/videos/temp.MTS -profile:v baseline -level:v 3.1 -acodec aac -strict experimental -s 1280x720 -aspect 16:9 temp.mp4
626 ffmpeg -i /symlinks/videos/temp.MTS -profile:v baseline -level:v 3.1 -acodec aac -strict experimental -s 1280x720 -aspect 16:9 -vf fps=29.97 temp.mp4
627 mv temp.mp4 /symlinks/videos/
```
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2212</wp:post_id>
		<wp:post_date><![CDATA[2018-04-11 00:13:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-10 15:13:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[split-avchd-movie-automatically3]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6618831175]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Zapier/IFTTTをあっさり超えたと噂のintegromatでgitlabとLINEを連携してみたところ、本当に最強だった話</title>
		<link>https://tech.blog.uribou.me/automated-gitlab-to-line/</link>
		<pubDate>Sat, 12 May 2018 08:52:13 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2237</guid>
		<description></description>
		<content:encoded><![CDATA[会社の内部課題管理にgitlabのチケットシステムを使うことにしたのだけど、関係者は非エンジニア比率が高く、コミュニケーションツールはslackよりLINEやメールがメイン。
機能面でslackには劣るがメールよりはマシということでLINE継続することにして後から気づいたのだけど、LINE notifyは公式にはgitlabとの連携をサポートしていない様子。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/27198614317/in/album-72157656738282903/" title="line.02"><img src="https://farm1.staticflickr.com/825/27198614317_37ecbbe2fa_z.jpg" width="640" height="393" alt="line.02"></a>
ならIFTTTみたいな3rd partyサービスで連携しようとちょっとググったら、
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/gitlab?src=hash&amp;ref_src=twsrc%5Etfw">#gitlab</a> と <a href="https://twitter.com/hashtag/LINE?src=hash&amp;ref_src=twsrc%5Etfw">#LINE</a> の連携にIFTTTを使おうと調べてたら気になる記事を発見、試したところ本当に最強だった。<br />最強連携サービス「 <a href="https://twitter.com/hashtag/Integromat?src=hash&amp;ref_src=twsrc%5Etfw">#Integromat</a> 」がZapier/IFTTTをあっさり超えるラスボス感 <a href="https://t.co/kbjwXxYz69">https://t.co/kbjwXxYz69</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/995236968173731840?ref_src=twsrc%5Etfw">2018年5月12日</a></blockquote>

<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42068761031/in/album-72157656738282903/" title="line.00"><img src="https://farm1.staticflickr.com/827/42068761031_231d297f1f_z.jpg" width="640" height="403" alt="line.00"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42068760961/in/album-72157656738282903/" title="line.01"><img src="https://farm1.staticflickr.com/976/42068760961_f191c9b89d_z.jpg" width="640" height="403" alt="line.01"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/41168662845/in/album-72157656738282903/" title="line.03"><img src="https://farm1.staticflickr.com/958/41168662845_db1354fba3_z.jpg" width="640" height="265" alt="line.03"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/41168662825/in/album-72157656738282903/" title="line.04"><img src="https://farm1.staticflickr.com/970/41168662825_1e02cf083c_z.jpg" width="640" height="509" alt="line.04"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42068760771/in/album-72157656738282903/" title="line.05"><img src="https://farm1.staticflickr.com/979/42068760771_e1752e09e8_z.jpg" width="640" height="440" alt="line.05"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/27198614147/in/album-72157656738282903/" title="line.06"><img src="https://farm1.staticflickr.com/975/27198614147_8bf41cc2c1_z.jpg" width="640" height="440" alt="line.06"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024157752/in/album-72157656738282903/" title="gitlab.00"><img src="https://farm1.staticflickr.com/961/42024157752_ea74f7dbd2_z.jpg" width="640" height="273" alt="gitlab.00"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024157642/in/album-72157656738282903/" title="gitlab.01"><img src="https://farm1.staticflickr.com/947/42024157642_1bb1091d5b_z.jpg" width="640" height="461" alt="gitlab.01"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024157542/in/album-72157656738282903/" title="gitlab.02"><img src="https://farm1.staticflickr.com/946/42024157542_58084276b3_z.jpg" width="640" height="461" alt="gitlab.02"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024157442/in/album-72157656738282903/" title="gitlab.03"><img src="https://farm1.staticflickr.com/911/42024157442_a4176ce699_z.jpg" width="640" height="316" alt="gitlab.03"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504102/in/album-72157656738282903/" title="integromat0"><img src="https://farm1.staticflickr.com/967/42024504102_43b2474f98_z.jpg" width="640" height="440" alt="integromat0"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504192/in/album-72157656738282903/" title="integromat1"><img src="https://farm1.staticflickr.com/828/42024504192_0faa982b10_z.jpg" width="640" height="440" alt="integromat1"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196534508/in/album-72157656738282903/" title="integromat3"><img src="https://farm1.staticflickr.com/971/28196534508_138bdeaa3d_z.jpg" width="640" height="399" alt="integromat3"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024503982/in/album-72157656738282903/" title="integromat4"><img src="https://farm1.staticflickr.com/828/42024503982_fa1a1a239c_z.jpg" width="640" height="399" alt="integromat4"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024503852/in/album-72157656738282903/" title="integromat5"><img src="https://farm1.staticflickr.com/975/42024503852_2b2d34ddb7_z.jpg" width="640" height="399" alt="integromat5"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535248/in/album-72157656738282903/" title="integromat6"><img src="https://farm1.staticflickr.com/972/28196535248_47ff8d4596_z.jpg" width="640" height="399" alt="integromat6"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504632/in/album-72157656738282903/" title="integromat7"><img src="https://farm1.staticflickr.com/830/42024504632_b7ecfdbba3_z.jpg" width="640" height="399" alt="integromat7"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535208/in/album-72157656738282903/" title="integromat9"><img src="https://farm1.staticflickr.com/831/28196535208_7f95e49254_z.jpg" width="640" height="399" alt="integromat9"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504372/in/album-72157656738282903/" title="integromat10"><img src="https://farm1.staticflickr.com/949/42024504372_c3ca7c135e_z.jpg" width="640" height="399" alt="integromat10"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504322/in/album-72157656738282903/" title="integromat11"><img src="https://farm1.staticflickr.com/966/42024504322_f0ac9c60ce_z.jpg" width="640" height="399" alt="integromat11"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535648/in/album-72157656738282903/" title="integromat12"><img src="https://farm1.staticflickr.com/832/28196535648_f745ebc55b_z.jpg" width="640" height="399" alt="integromat12"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42069164541/in/album-72157656738282903/" title="integromat13"><img src="https://farm1.staticflickr.com/973/42069164541_ca6d84e80a_z.jpg" width="640" height="399" alt="integromat13"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535428/in/album-72157656738282903/" title="integromat14"><img src="https://farm1.staticflickr.com/969/28196535428_f57065b09f_z.jpg" width="640" height="399" alt="integromat14"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535408/in/album-72157656738282903/" title="integromat15"><img src="https://farm1.staticflickr.com/959/28196535408_ca845e56d8_z.jpg" width="640" height="399" alt="integromat15"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504502/in/album-72157656738282903/" title="integromat16"><img src="https://farm1.staticflickr.com/952/42024504502_163251dd11_z.jpg" width="640" height="399" alt="integromat16"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504292/in/album-72157656738282903/" title="integromat17"><img src="https://farm1.staticflickr.com/830/42024504292_71e5939960_z.jpg" width="640" height="399" alt="integromat17"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196536158/in/album-72157656738282903/" title="integromat18"><img src="https://farm1.staticflickr.com/824/28196536158_46b1fa9a0b_z.jpg" width="640" height="399" alt="integromat18"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/27199034517/in/album-72157656738282903/" title="integromat19"><img src="https://farm1.staticflickr.com/903/27199034517_9fd2107442_z.jpg" width="640" height="399" alt="integromat19"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/42024504942/in/album-72157656738282903/" title="integromat20"><img src="https://farm1.staticflickr.com/823/42024504942_aeeae7615a_z.jpg" width="640" height="399" alt="integromat20"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535768/in/album-72157656738282903/" title="integromat21"><img src="https://farm1.staticflickr.com/950/28196535768_f324a61a84_z.jpg" width="640" height="399" alt="integromat21"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196534678/in/album-72157656738282903/" title="integromat22"><img src="https://farm1.staticflickr.com/828/28196534678_281be2b2b7_z.jpg" width="640" height="399" alt="integromat22"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196536328/in/album-72157656738282903/" title="integromat23"><img src="https://farm1.staticflickr.com/827/28196536328_0663dd73a2_z.jpg" width="640" height="399" alt="integromat23"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196536258/in/album-72157656738282903/" title="integromat24"><img src="https://farm1.staticflickr.com/958/28196536258_1a125b89bd_z.jpg" width="640" height="399" alt="integromat24"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535998/in/album-72157656738282903/" title="integromat25"><img src="https://farm1.staticflickr.com/947/28196535998_e083fd3952_z.jpg" width="640" height="411" alt="integromat25"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535788/in/album-72157656738282903/" title="integromat26"><img src="https://farm1.staticflickr.com/974/28196535788_5e2d145524_z.jpg" width="465" height="504" alt="integromat26"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196535028/in/album-72157656738282903/" title="integromat27"><img src="https://farm1.staticflickr.com/973/28196535028_2c523479b6_z.jpg" width="640" height="399" alt="integromat27"></a>
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/28196534888/in/album-72157656738282903/" title="integromat28"><img src="https://farm1.staticflickr.com/982/28196534888_07fbef41bb_z.jpg" width="640" height="411" alt="integromat28"></a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2237</wp:post_id>
		<wp:post_date><![CDATA[2018-05-12 17:52:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-12 08:52:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[automated-gitlab-to-line]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6666660336]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:63:"https://farm1.staticflickr.com/825/27198614317_37ecbbe2fa_z.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>test</title>
		<link>https://tech.blog.uribou.me/test-2/</link>
		<pubDate>Thu, 22 Nov 2018 01:30:13 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2295</guid>
		<description></description>
		<content:encoded><![CDATA[おお
できた。
<pre class="lang:python decode:true" title="python test code">import os
if __name__ == "__main__":
  print("I am a pen.");</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2295</wp:post_id>
		<wp:post_date><![CDATA[2018-11-22 10:30:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-22 01:30:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[test-2]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7063482000]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>AWS Lightsailを使ってWordpress multisite + SSLを稼働する</title>
		<link>https://tech.blog.uribou.me/?p=2459</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2456</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>LightsailでWordpress multisite構築すること自体は簡単でしたが、SSL化する際に子サイトの証明書作成でハマり、遠回りしてしまった道のりを描く。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Worpress multisiteを作る</h2>
<!-- /wp:heading -->

<ol>
<li>
<p><span id="toc9">Route53でRecord Setする</span></p>
<ol>
<li>
<p><span id="toc9"></span><span style="font-size: 16px;">IPとドメインを紐付けます．上部のCreate Record Setをクリックし、下記のように入力してCreate．</span><br /><span style="font-size: 16px;">Name：uribou.me</span><br /><span style="font-size: 16px;">Type：A - IPv4 address</span><br /><span style="font-size: 16px;">Alias：No</span><br /><span style="font-size: 16px;">TTL (Seconds)：300</span><br /><span style="font-size: 16px;">Value：Lightsailの静的IP</span></p>
</li>
<li>
<p><span style="font-size: 16px;">wwwありのドメインからwwwなしのドメインに飛ばしたい人は<br />もう一度Create Record Setして<br />Name<span style="color: inherit;">：blog.uribou.me<br /></span>Type<span style="color: inherit;">：CNAME - Canonical name<br /></span>Alias<span style="color: inherit;">：No<br /></span>TTL (Seconds)<span style="color: inherit;">：300<br /></span>Value<span style="color: inherit;">：独自ドメイン<br /></span>Routeing Policy<span style="color: inherit;">：Simple</span></span></p>
</li>
</ol>
</li>
<li>Lightsailインスタンスにsshログインした後、cat bitnami_credentials してwordpressにログインするアカウントを取得</li>
<li><a href="https://docs.bitnami.com/general/apps/wordpress-multisite/configuration/configure-wordpress-multisite/">configure-wordpress-multisite</a>の通りに設定する。
<ol>
<li>cd /opt/bitnami/apps/wordpress</li>
<li>sudo ./bnconfig --machine_hostname blog.uribou.me</li>
<li>sudo mv bnconfig bnconfig.disabled</li>
<li>sudo /opt/bitnami/ctlscript.sh restart</li>
</ol>
</li>
<li>bitnamiロゴを消す
<ol>
<li> sudo /opt/bitnami/apps/wordpress/bnconfig --disable_banner 1</li>
</ol>
</li>
<li>wordpressにログイン後、サイト -&gt; 新規追加 -&gt; サイトアドレス(URL) を追加する</li>
<li>追加したサイトの設定を編集し、サイトアドレス (URL)に、DNSに追加したAレコードを設定する</li>
<li>古いサイトから新しいサイトへ<a href="http://zo-site.com/2017/02/16/301redirect-on-xserver/">301リダイレクト</a>する</li>
</ol>

<!-- wp:heading -->
<h2>SSL化する</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>ザックリ分けて以下2通りの方法があり、いずれもLet's Encrypt SSLを利用する。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>90日毎の証明書更新は必須なため、cronに証明書自動更新スクリプトを仕込む必要はあるが、その辺りまで言及したBitnami公式Tutorialの方が若干親切だろうか…。Amazon公式Tutorialは「90日すぎる前に手動で更新してね」といった感じ。</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://docs.bitnami.com/aws/how-to/generate-install-lets-encrypt-ssl/">Bitnami公式Tutorial</a>に従い、Bitnami製ツールbncert-toolを利用して証明書を作成し、設置する</li><li><a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-using-lets-encrypt-certificates-with-wordpress">Amazon公式Lightsail Tutorial</a>に従い、EFF製ツール<a href="https://certbot.eff.org/about/">certbot</a>を利用して証明書を作成し、設置する</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>Bitnami公式Tutorial</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li><a href="https://docs.bitnami.com/aws/how-to/generate-install-lets-encrypt-ssl/">Generate And Install A Let's Encrypt SSL Certificate For A Bitnami Application</a>の通りにSSL化する </li><li><code>sudo /opt/bitnami/bncert-tool</code>を実行すると以下のWarningが出力されれたため、Alternative Approachを実施する。<br><em>Warning: Custom redirections are not supported in the Bitnami WordPress Multisite Stack. This tool will not be able to enable/disable redirections. </em></li><li>下記コマンドを実行して<code>lego</code>コマンドをインストールする。</li></ol>
<!-- /wp:list -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">cd /tmp
curl -Ls https://api.github.com/repos/xenolf/lego/releases/latest | grep browser_download_url | grep linux_amd64 | cut -d '"' -f 4 | wget -i -
tar xf lego_vX.Y.Z_linux_amd64.tar.gz
sudo mkdir -p /opt/bitnami/letsencrypt
sudo mv lego /opt/bitnami/letsencrypt/lego</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:list {"ordered":true} -->
<ol><li>下記コマンドを実行してサービスを止める<br><code>sudo /opt/bitnami/ctlscript.sh stop</code></li><li>下記コマンドを実行して証明書をリクエストする</li></ol>
<!-- /wp:list -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">sudo /opt/bitnami/letsencrypt/lego --tls --email="takashi7ando@gmail.com" --domains="uribou.me" --domains="blog.uribou.me" --domains="tech.blog.uribou.me" --domains="pet.blog.uribou.me" --domains="ballet.blog.uribou.me" --path="/opt/bitnami/letsencrypt" run</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:list {"ordered":true} -->
<ol><li>TOSを読んで同意を求められるのでYと答える<br>Please review the TOS at ...</li><li>下記のようなメッセージが出力されれば多分OK<br>[uribou.me] Server responded with a certificate. </li><li>生成した証明書をapacheに設置して再起動</li></ol>
<!-- /wp:list -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">sudo mv /opt/bitnami/apache2/conf/server.crt /opt/bitnami/apache2/conf/server.crt.old
sudo mv /opt/bitnami/apache2/conf/server.key /opt/bitnami/apache2/conf/server.key.old
sudo mv /opt/bitnami/apache2/conf/server.csr /opt/bitnami/apache2/conf/server.csr.old
sudo ln -sf /opt/bitnami/letsencrypt/certificates/DOMAIN.key /opt/bitnami/apache2/conf/server.key
sudo ln -sf /opt/bitnami/letsencrypt/certificates/DOMAIN.crt /opt/bitnami/apache2/conf/server.crt
sudo chown root:root /opt/bitnami/apache2/conf/server*
sudo chmod 600 /opt/bitnami/apache2/conf/server*

sudo /opt/bitnami/ctlscript.sh start</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>Amazon公式Tutorial</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Amazon公式Tutorialへのリンクはこちら。<br>基本的にはこの手順に沿って行う。ただし、もちろん英語で記述されている上、multisiteには言及していない。</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li><a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-using-lets-encrypt-certificates-with-wordpress">Tutorial: Using Let’s Encrypt SSL certificates with your WordPress instance in Amazon Lightsail</a></li><li><a href="https://docs.bitnami.com/aws/faq/get-started/find-credentials/#using-amazon-lightsail">Find Credentials Using Amazon Lightsail</a>等を参考に、Wordpressの親ページにログインしてプラグイン導入</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Multisiteの全てのドメイン向けに一つの証明書としたい場合は<a href="https://forums.aws.amazon.com/thread.jspa?messageID=905077">SSL Letsencrypt for Lightsail Wordpress Multisite</a>のコメント<code>You'll need to include all the domains and the '--expand' option on the certbot command line each time you expand your certificate.</code>を参考に下記を実行したが、certbotコマンドオプション体系が変更されており、エラー。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">certbot certonly -d uribou.me
certbot certonly --expand -d uribou.me blog.uribou.me
certbot certonly --expand -d uribou.me tech.blog.uribou.me
certbot certonly --expand -d uribou.me pet.blog.uribou.me
certbot certonly --expand -d uribou.me ballet.blog.uribou.me</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:core-embed/twitter {"url":"https://twitter.com/takashi7ando/status/1434337507764621320","type":"rich","providerNameSlug":"twitter","className":""} -->
<figure class="wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter"><div class="wp-block-embed__wrapper">
https://twitter.com/takashi7ando/status/1434337507764621320
</div></figure>
<!-- /wp:core-embed/twitter -->

<!-- wp:heading -->
<h2>「Let’s Encrypt SSL Certificate」の更新を自動化する</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://www.karelie.net/aws-lightsail-build-wordpress-ssl/">これ</a>とか<a href="https://qiita.com/fk_2000/items/545a835ba2f2a1d0a974">これ</a>とか</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>HTTPSへ強制的にリダイレクトする</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://www.karelie.net/aws-lightsail-build-wordpress-ssl/">https://www.karelie.net/aws-lightsail-build-wordpress-ssl/</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2459</wp:post_id>
		<wp:post_date><![CDATA[2021-09-05 11:50:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aws-lightsail-wordpress]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7160e4917955dedf1c0692e979a0d4b0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2800]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2801]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1975]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3466]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3467]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3469]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3471]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3473]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3474]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_df07aa2374ca6f34248fb0afb007edf5]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" data-width="550" data-dnt="true"><p lang="ja" dir="ltr">こちらの解説が最も単純明快でわかりやすい。<br><br>AWS Lightsail でWordPress を簡単に常時SSL化 | Lightsail設定＆運用の備忘録 <a href="https://t.co/MgdMeahGnK">https://t.co/MgdMeahGnK</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/1434337507764621320?ref_src=twsrc%5Etfw">September 5, 2021</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_df07aa2374ca6f34248fb0afb007edf5]]></wp:meta_key>
		<wp:meta_value><![CDATA[1630810242]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3475]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>djangoによる太陽光発電状況モニタリングシステム構築 (2)</title>
		<link>https://tech.blog.uribou.me/?p=3274</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.blog.uribou.me/?p=3274</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>これはなに？</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>以前作ったオフグリッドシステムの発電状況監視システムの自前データストレージとAPIサーバ用意する試みの軌跡の序盤、第二回。<a href="http://tech.blog.uribou.me/django-web-monitoring-solar-1/">第一回はこちら</a>。</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Django application<ul><li><strong>Rest Frameworkを利用してAPIを作る (まだここ)</strong></li></ul></li><li>AWS EC2,RDS,...<ul><li>Django applicationを稼働させる</li></ul></li><li>Logger application<ul><li>自宅で稼働中の<a href="http://tech.blog.uribou.me/python-driver-for-tsmppt60/">TS-MPPT60</a>が頑張る</li></ul></li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>DBテーブル作成</h2>
<!-- /wp:heading -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">from django.conf import settings
from django.db import models
from django.utils import timezone


class Recorder(models.Model):
    def record(self):
        self.recorded_at = timezone.now()
        self.save()


class Location(models.Model):
    created_at = models.DateTimeField(default=timezone.now)
    zip_code = models.CharField(
        verbose_name='郵便番号', max_length=8, blank=True,
    )
    country = models.CharField(
        verbose_name='国', max_length=40, blank=True, default='日本',
    )
    prefecture = models.CharField(
        verbose_name='都道府県', max_length=40, blank=True,
    )
    city = models.CharField(
        verbose_name='市区町村番地', max_length=40, blank=True,
    )
    building = models.CharField(
        verbose_name='建物名', max_length=40, blank=True,
    )

    def __str__(self):
        return self.__class__.__name__


class AmpHours(Recorder):
    created_at = models.DateTimeField(default=timezone.now)
    recorded_at = models.DateTimeField(default=timezone.now)
    location_id = models.ForeignKey(Location, on_delete=models.CASCADE)
    unit_id = models.ForeignKey(Unit, on_delete=models.CASCADE)
    group_id = models.ForeignKey(Group, on_delete=models.CASCADE)
    value = models.DecimalField(max_digits=10, decimal_places=1)

    def __str__(self):
        return self.__class__.__name__</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>ForeignKeyのon_delete=models.CASCADEって何？</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>答えは<a href="https://docs.djangoproject.com/en/3.1/ref/models/fields/#django.db.models.ForeignKey.on_delete">ここ</a>にある。Django 2.0以降はon_delete引数はrequired ardumentらしい。</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><code>CASCADE</code>: When the referenced object is deleted, also delete the objects that have references to it (when you remove a blog post for instance, you might want to delete comments as well). SQL equivalent: <code>CASCADE</code>.</p><p><code>PROTECT</code>: Forbid the deletion of the referenced object. To delete it you will have to delete all objects that reference it manually. SQL equivalent: <code>RESTRICT</code>.</p><p><code>RESTRICT</code>: <em>(introduced in Django 3.1)</em> Similar behavior as <code>PROTECT</code> that matches SQL's <code>RESTRICT</code> more accurately. (See <a href="https://docs.djangoproject.com/en/stable/ref/models/fields/#django.db.models.RESTRICT">django documentation example</a>)</p><p><code>SET_NULL</code>: Set the reference to NULL (requires the field to be nullable). For instance, when you delete a User, you might want to keep the comments he posted on blog posts, but say it was posted by an anonymous (or deleted) user. SQL equivalent: <code>SET NULL</code>.</p><p><code>SET_DEFAULT</code>: Set the default value. SQL equivalent: <code>SET DEFAULT</code>.</p><p><code>SET(...)</code>: Set a given value. This one is not part of the SQL standard and is entirely handled by Django.</p><p><code>DO_NOTHING</code>: Probably a very bad idea since this would create integrity issues in your database (referencing an object that actually doesn't exist). SQL equivalent: <code>NO ACTION</code>.</p><cite>https://stackoverflow.com/questions/38388423/what-does-on-delete-do-on-django-models</cite></blockquote>
<!-- /wp:quote -->

<!-- wp:heading -->
<h2>DBアップデート</h2>
<!-- /wp:heading -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">python manage.py makemigrations storage</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>以下コードが生成される</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>storage/migrations/0001_initial.py</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>migration際実行</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">python manage.py migrate</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>sqlite3 DBに以下テーブルが追加される</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"sql"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="sql" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">sqlite&gt; .headers ON
sqlite&gt; .mode column
sqlite&gt; PRAGMA table_info(storage_amphours);
cid         name             type        notnull     dflt_value  pk        
----------  ---------------  ----------  ----------  ----------  ----------
0           recorder_ptr_id  integer     1                       1         
1           created_at       datetime    1                       0         
2           recorded_at      datetime    1                       0         
3           value            decimal     1                       0         
4           group_id_id      integer     1                       0         
5           location_id_id   integer     1                       0         
6           unit_id_id       integer     1                       0         </pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>table column名変更</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>試しに、先ほど作成したAmpHoursテーブルのカラム名を、以下のように変更してみる</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"diff"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="diff" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">diff --git a/storage/models.py b/storage/models.py
index b84893f..90f4aa7 100644
--- a/storage/models.py
+++ b/storage/models.py
@@ -61,9 +61,9 @@ class KilowattHours(Recorder):
 class AmpHours(Recorder):
     created_at = models.DateTimeField(default=timezone.now)
     recorded_at = models.DateTimeField(default=timezone.now)
-    location_id = models.ForeignKey(Location, on_delete=models.CASCADE)
-    unit_id = models.ForeignKey(Unit, on_delete=models.CASCADE)
-    group_id = models.ForeignKey(Group, on_delete=models.CASCADE)
+    location = models.ForeignKey(Location, on_delete=models.CASCADE)
+    unit = models.ForeignKey(Unit, on_delete=models.CASCADE)
+    group = models.ForeignKey(Group, on_delete=models.CASCADE)
     value = models.DecimalField(max_digits=10, decimal_places=1)
 
     def __str__(self):</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>makemigrationを実行すると、変更点が正しいかインタラクティブに確認してくれる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ python manage.py makemigrations
Did you rename amphours.group_id to amphours.group (a ForeignKey)? [y/N] y
Did you rename amphours.location_id to amphours.location (a ForeignKey)? [y/N] y
Did you rename amphours.unit_id to amphours.unit (a ForeignKey)? [y/N] y
Migrations for 'storage':
  storage/migrations/0002_auto_20201017_1241.py
    - Rename field group_id on amphours to group
    - Rename field location_id on amphours to location
    - Rename field unit_id on amphours to unit</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>makemigrationで生成されたpyコードはちゃんとgit管理しておく</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>storage/migrations/0001_initial.py<br>storage/migrations/0002_auto_20201017_1241.py</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>storage/migrations/ 下のコードをみるとわかるが、0001_initial.py は以下のようにCreateModelしており、</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('group_name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('zip_code', models.CharField(blank=True, max_length=8, verbose_name='郵便番号')),
                ('country', models.CharField(blank=True, default='日本', max_length=40, verbose_name='国')),
                ('prefecture', models.CharField(blank=True, max_length=40, verbose_name='都道府県')),
                ('city', models.CharField(blank=True, max_length=40, verbose_name='市区町村番地')),
                ('building', models.CharField(blank=True, max_length=40, verbose_name='建物名')),
            ],
        ),
        ...
        migrations.CreateModel(
            name='AmpHours',
            fields=[
                ('recorder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='storage.recorder')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('value', models.DecimalField(decimal_places=1, max_digits=10)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.group')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.location')),
                ('unit_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.unit')),
            ],
            bases=('storage.recorder',),
        ),
    ]</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>0002_auto_20201017_1241.py は以下のようにRenameFieldしている。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>class Migration(migrations.Migration):</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">dependencies = [
    ('storage', '0001_initial'),
]

operations = [
    migrations.RenameField(
        model_name='amphours',
        old_name='group_id',
        new_name='group',
    ),
    migrations.RenameField(
        model_name='amphours',
        old_name='location_id',
        new_name='location',
    ),
    migrations.RenameField(
        model_name='amphours',
        old_name='unit_id',
        new_name='unit',
    ),
]</pre>
<!-- /wp:enlighter/codeblock -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3274</wp:post_id>
		<wp:post_date><![CDATA[2020-11-18 09:54:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[django-web-monitoring-solar-2]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[djangoによる太陽光発電状況モニタリングシステム構築]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[djangoを使って、太陽光発電状況モニタリングシステムを構築するまでの軌跡をなるべく詳細に記録していきます。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[太陽光,発電,オフグリッド,solar,energy,offgrid]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3361]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3364]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>djangoによる太陽光発電状況モニタリングシステム構築 (3)</title>
		<link>https://tech.blog.uribou.me/?p=3285</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.blog.uribou.me/?p=3285</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>これはなに？</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-rds.html">Adding an Amazon RDS DB instance to your Python application environment</a> を参考にする</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3285</wp:post_id>
		<wp:post_date><![CDATA[2020-10-11 08:11:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[django-web-monitoring-solar-3]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3278]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>オフグリッドな暮らしのはじめかた</title>
		<link>https://tech.blog.uribou.me/lets_start_offgrid/</link>
		<pubDate>Wed, 30 Sep 2015 22:52:00 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/lets_start_offgrid/</guid>
		<description></description>
		<content:encoded><![CDATA[賃貸住宅の庭で<a href="http://qiita.com/dodo5522/items/73c52ba474d163671be4">太陽光発電システム</a>を試作し、完全オフグリッドの実現性を試したものの、ここまで天気に左右される発電システムの運用は現実的には厳しいのかな…と感じていたところへ、一軒家丸ごとオフグリッドしたご夫婦の体験談が聞けることを知り、何かヒントを得ようと<a href="http://greenz.jp/2015/07/14/gtalk_sato/">greenz Talk！「オフグリッドな暮らしのはじめかた」</a>に遊びに行ってきました。
話を聞くまでは、オフグリッドとは電力網のことを指すと思っていましたが、太陽光は循環型の生活を目指す過程でしかなく、それが実現できた次にはガス、次は水…と、社会システムからのオフグリッド（自立）をしていくつもりであるとのことでした。話を聞きに行く先々で似たような方向に向かう人が多いように感じるのですが、これがこれからの時代の流れってことなんですかね。
自分の中にない価値観を持つ人の貴重なお話でしたが、これをただ真似するのではなく、良いところを取り入れつつ自分なりにアレンジして、自分にしかできない形での実践をするべきなのだろう、というのが自分なりの結論でした。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1409</wp:post_id>
		<wp:post_date><![CDATA[2015-10-01 07:52:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-09-30 22:52:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[lets_start_offgrid]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e3%81%8d%e6%96%b9"><![CDATA[生き方]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>賃貸住宅の庭で<a href="http://qiita.com/dodo5522/items/73c52ba474d163671be4">太陽光発電システム</a>を試作し、完全オフグリッドの実現性を試したものの、ここまで天気に左右される発電システムの運用は現実的には厳しいのかな…と感じていたところへ、一軒家丸ごとオフグリッドしたご夫婦の体験談が聞けることを知り、何かヒントを得ようと<a href="http://greenz.jp/2015/07/14/gtalk_sato/">greenz Talk！「オフグリッドな暮らしのはじめかた」</a>に遊びに行ってきました。</p>

<p>話を聞くまでは、オフグリッドとは電力網のことを指すと思っていましたが、太陽光は循環型の生活を目指す過程でしかなく、それが実現できた次にはガス、次は水…と、社会システムからのオフグリッド（自立）をしていくつもりであるとのことでした。話を聞きに行く先々で似たような方向に向かう人が多いように感じるのですが、これがこれからの時代の流れってことなんですかね。</p>

<p>自分の中にない価値観を持つ人の貴重なお話でしたが、これをただ真似するのではなく、良いところを取り入れつつ自分なりにアレンジして、自分にしかできない形での実践をするべきなのだろう、というのが自分なりの結論でした。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1410]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5979877898]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462172]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4886]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4885]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>電気工事士二種 筆記試験終了</title>
		<link>https://tech.blog.uribou.me/dian-qi-gong-shi-shi-di-er-zhong-bi-ji-shi-yan/</link>
		<pubDate>Sun, 11 Oct 2015 14:07:03 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dian-qi-gong-shi-shi-di-er-zhong-bi-ji-shi-yan/</guid>
		<description></description>
		<content:encoded><![CDATA[東京外語大で、電気工事士二種の筆記試験を受けてきた。久々の資格試験、超久々の大学の雰囲気、この雰囲気が懐かしい。
実力試しで過去問を解いてみると8〜9割方得点できていたので、なんとかなるでしょう… と思っていたのに、過去問に出題されたことのない図記号（黒菱形のスイッチは何だっけ…）が出たりと、余裕というわけではなかった。
とりあえず乗り切ったはずなので、次の問題は二ヶ月後の実技試験… 練習せねば。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1416</wp:post_id>
		<wp:post_date><![CDATA[2015-10-11 23:07:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 14:07:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dian-qi-gong-shi-shi-di-er-zhong-bi-ji-shi-yan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e8%b3%87%e6%a0%bc"><![CDATA[資格]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>東京外語大で、電気工事士二種の筆記試験を受けてきた。久々の資格試験、超久々の大学の雰囲気、この雰囲気が懐かしい。</p>

<p>実力試しで過去問を解いてみると8〜9割方得点できていたので、なんとかなるでしょう… と思っていたのに、過去問に出題されたことのない図記号（黒菱形のスイッチは何だっけ…）が出たりと、余裕というわけではなかった。</p>

<p>とりあえず乗り切ったはずなので、次の問題は二ヶ月後の実技試験… 練習せねば。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5953586413]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605565]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>290</wp:comment_id>
			<wp:comment_author><![CDATA[binance Register]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[58627064@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/en/join?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.42]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-24 19:51:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-24 10:51:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>電気工事士二種 筆記試験結果 暫定94点</title>
		<link>https://tech.blog.uribou.me/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-jie-guo-94dian-zan-ding/</link>
		<pubDate>Sun, 11 Oct 2015 14:07:12 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-jie-guo-94dian-zan-ding/</guid>
		<description></description>
		<content:encoded><![CDATA[オーム社が<a href="http://www.ohmsha.co.jp/denkou/2shukaitou/2015/151003hikki.htm">回答速報</a>を出してくれたので、早速答え合わせ。
…3問不正解。100点満点中、94点。
満点は無理でした。
間違えたのは、元々自信がなかった二問と、自信があった一問。前者はともかく、後者は納得がいかないのもあり、帰ったら見直し。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1417</wp:post_id>
		<wp:post_date><![CDATA[2015-10-11 23:07:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 14:07:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-jie-guo-94dian-zan-ding]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e8%b3%87%e6%a0%bc"><![CDATA[資格]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>オーム社が<a href="http://www.ohmsha.co.jp/denkou/2shukaitou/2015/151003hikki.htm">回答速報</a>を出してくれたので、早速答え合わせ。</p>

<p>…3問不正解。100点満点中、94点。</p>

<p>満点は無理でした。</p>

<p>間違えたのは、元々自信がなかった二問と、自信があった一問。前者はともかく、後者は納得がいかないのもあり、帰ったら見直し。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949271356]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591164]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4887]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>二人目のお産進行が早いのは本当</title>
		<link>https://tech.blog.uribou.me/er-ren-mu-noochan-jin-bu-gazao-inohaben-dang-datuta/</link>
		<pubDate>Sat, 07 Nov 2015 18:39:41 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/er-ren-mu-noochan-jin-bu-gazao-inohaben-dang-datuta/</guid>
		<description></description>
		<content:encoded><![CDATA[「なんかお腹が痛いなー ウ○コかな？」と言い始めて早一時間。念のため産婦人科で診察してもらったところ、既に産道が7-8cm開いていて、今日中にも生まれますよ！とのこと。
仕事を早々に切り上げて帰宅の途につきました。
今朝も嫁と「いつ生まれるかねー」なんて呑気に話していたのに…。
二人目は進行早いというのは、本当でした。これから自分も病院に向かいます。
(2015.10.10追記)
無事産まれました。超安産。<br />
そして、散歩やスクワットしたところで、出産の進行には全く影響ないことを嫁が体を張って証明しました。<br />
<img src="https://farm1.staticflickr.com/632/22061800175_0d2829a35a_k_d.jpg" alt="出産直後" />
1人目の病院は、母が努力（歩くなりスクワットするなり）することで産まれるという信念を持っており、嫁も1人目なこともあって従っていた。けど、結局予定日を数日過ぎて産まれる。<br />
2人目の病院は、歩いても出産には影響ない、赤ちゃんが産まれたい時に産まれると教えてくれた。実際歩いたりせず、おとなしく待ってたら…　予定日2日前に産まれる。
1人目の病院の方針は、いかにも日本人的…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1419</wp:post_id>
		<wp:post_date><![CDATA[2015-11-08 03:39:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-07 18:39:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[er-ren-mu-noochan-jin-bu-gazao-inohaben-dang-datuta]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:65:"https://farm1.staticflickr.com/632/22061800175_0d2829a35a_k_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>「なんかお腹が痛いなー ウ○コかな？」と言い始めて早一時間。念のため産婦人科で診察してもらったところ、既に産道が7-8cm開いていて、今日中にも生まれますよ！とのこと。</p>

<p>仕事を早々に切り上げて帰宅の途につきました。</p>

<p>今朝も嫁と「いつ生まれるかねー」なんて呑気に話していたのに…。</p>

<p>二人目は進行早いというのは、本当でした。これから自分も病院に向かいます。</p>

<p>(2015.10.10追記)
無事産まれました。超安産。 <br />
そして、散歩やスクワットしたところで、出産の進行には全く影響ないことを嫁が体を張って証明しました。 <br />
<img src="https://farm1.staticflickr.com/632/22061800175_0d2829a35a_k_d.jpg" alt="出産直後" />
1人目の病院は、母が努力（歩くなりスクワットするなり）することで産まれるという信念を持っており、嫁も1人目なこともあって従っていた。けど、結局予定日を数日過ぎて産まれる。 <br />
2人目の病院は、歩いても出産には影響ない、赤ちゃんが産まれたい時に産まれると教えてくれた。実際歩いたりせず、おとなしく待ってたら…　予定日2日前に産まれる。  </p>

<p>1人目の病院の方針は、いかにも日本人的…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1420]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6021221957]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663164]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>203</wp:comment_id>
			<wp:comment_author><![CDATA[Registrace]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[87264867@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/cs/register?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-02 18:37:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-02 09:37:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>３歳の娘が、生まれたての妹に送る言葉</title>
		<link>https://tech.blog.uribou.me/3sui-noniang-gamei-nisong-ruyan-xie/</link>
		<pubDate>Wed, 28 Oct 2015 15:24:26 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/3sui-noniang-gamei-nisong-ruyan-xie/</guid>
		<description></description>
		<content:encoded><![CDATA[生まれたばかりの妹・咲や、子育てに奮闘する母に、３歳の姉・凛が送る言葉。娘の成長ぶりに涙…。
<ul>
<li>自分のことは後回し
<ul>
<li>母：凛ちゃん、テレビ見る？</li>
<li>凛：うん見るー　でも今凛ちゃん、咲ちゃん見てるから〜ねー咲ちゃん〜</li>
</ul></li>
<li>おっぱい
<ul>
<li>咲：（泣き始める）</li>
<li>母：（ここは上の子優先だからすぐに抱っこしないで聞いてみよう）凛ちゃん、どうしたらいいかなー？</li>
<li>凛：咲ちゃんおっぱい欲しいんだってー　お母さん早くあげて？</li>
<li>凛：凛ちゃんのおっぱいは小さいから…(´・ω・`)</li>
</ul></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1423</wp:post_id>
		<wp:post_date><![CDATA[2015-10-29 00:24:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-28 15:24:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[3sui-noniang-gamei-nisong-ruyan-xie]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>生まれたばかりの妹・咲や、子育てに奮闘する母に、３歳の姉・凛が送る言葉。娘の成長ぶりに涙…。</p>

<ul>
<li><p>自分のことは後回し</p>

<ul><li>母：凛ちゃん、テレビ見る？</li>
<li>凛：うん見るー　でも今凛ちゃん、咲ちゃん見てるから〜ねー咲ちゃん〜</li></ul></li>
<li><p>おっぱい</p>

<ul><li>咲：（泣き始める）</li>
<li>母：（ここは上の子優先だからすぐに抱っこしないで聞いてみよう）凛ちゃん、どうしたらいいかなー？</li>
<li>凛：咲ちゃんおっぱい欲しいんだってー　お母さん早くあげて？</li>
<li>凛：凛ちゃんのおっぱいは小さいから…(´・ω・`)</li></ul></li>
</ul>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6004540028]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620244]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>畑好き３歳児</title>
		<link>https://tech.blog.uribou.me/tian-hao-ki3sui-er/</link>
		<pubDate>Wed, 28 Oct 2015 15:29:52 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tian-hao-ki3sui-er/</guid>
		<description></description>
		<content:encoded><![CDATA[朝、まだ夢の中の娘に、「今日は保育園の畑で芋掘りだよー」と声をかけると、スッと起きた…。いつもはまだ寝るとダダをこねるのに。
そして保育園に向かうも、角を曲がればもう保育園というところで、「ちがう！畑行くのー！」とダダをこねる(~_~;) 先生たちと一緒に行くから一旦保育園行くんだよと数分なだめてようやく事なきを得た。
そんなに畑好きか…]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1424</wp:post_id>
		<wp:post_date><![CDATA[2015-10-29 00:29:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-28 15:29:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tian-hao-ki3sui-er]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>朝、まだ夢の中の娘に、「今日は保育園の畑で芋掘りだよー」と声をかけると、スッと起きた…。いつもはまだ寝るとダダをこねるのに。</p>

<p>そして保育園に向かうも、角を曲がればもう保育園というところで、「ちがう！畑行くのー！」とダダをこねる(~_~;) 先生たちと一緒に行くから一旦保育園行くんだよと数分なだめてようやく事なきを得た。</p>

<p>そんなに畑好きか…</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5956311921]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663163]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>お宮参りとは</title>
		<link>https://tech.blog.uribou.me/ogong-can-ritoha/</link>
		<pubDate>Wed, 11 Nov 2015 13:00:12 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ogong-can-ritoha/</guid>
		<description></description>
		<content:encoded><![CDATA[先月次女が生まれ、そろそろお宮参りを…と考えたところで、ふと、お宮参りってそもそも何なんだ？と今更思い、調べてみた。
<em>赤ちゃんが生まれた土地の守り神「産土神（うぶすながみ）」に初めてお参りし、産子（うぶこ）の仲間入りをさせてもらうという、鎌倉・室町時代から続く風習です。さんは穢れたものと考えられていたため、お宮参りは「忌明け」ともされていました。(<a href="http://baby.goo.ne.jp/member/topics_back/topics45/omiya.html">gooベビーより引用</a>)</em>
おお、まさに神道ってカンジ。産土神とは？
<em>産土神（うぶすながみ）とは、土（すな）を産み出す神、大地を始め万物を産み出す神です。その土地に生育する作物、植物、河川、その他の自然物をはじめ、その土地に住む人間の生活全般に密接に関わる働きをしておられるのが産土神です。<a href="http://transpace.jp/shinto/taiyo/ubusunagami-ujigami/">神道トランスペース研究所より引用</a></em>
その土地を生み出した守り神に、その土地で生まれた子供を報告し、感謝して、今後ともよろしくお願いしますと挨拶しに行くので、正装するわけですね。
…初詣なんかも、正しくは正装が基本なんだろうか？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1426</wp:post_id>
		<wp:post_date><![CDATA[2015-11-11 22:00:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-11 13:00:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ogong-can-ritoha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>先月次女が生まれ、そろそろお宮参りを…と考えたところで、ふと、お宮参りってそもそも何なんだ？と今更思い、調べてみた。</p>

<p><em>赤ちゃんが生まれた土地の守り神「産土神（うぶすながみ）」に初めてお参りし、産子（うぶこ）の仲間入りをさせてもらうという、鎌倉・室町時代から続く風習です。さんは穢れたものと考えられていたため、お宮参りは「忌明け」ともされていました。(<a href="http://baby.goo.ne.jp/member/topics_back/topics45/omiya.html">gooベビーより引用</a>)</em></p>

<p>おお、まさに神道ってカンジ。産土神とは？</p>

<p><em>産土神（うぶすながみ）とは、土（すな）を産み出す神、大地を始め万物を産み出す神です。その土地に生育する作物、植物、河川、その他の自然物をはじめ、その土地に住む人間の生活全般に密接に関わる働きをしておられるのが産土神です。<a href="http://transpace.jp/shinto/taiyo/ubusunagami-ujigami/">神道トランスペース研究所より引用</a></em></p>

<p>その土地を生み出した守り神に、その土地で生まれた子供を報告し、感謝して、今後ともよろしくお願いしますと挨拶しに行くので、正装するわけですね。</p>

<p>…初詣なんかも、正しくは正装が基本なんだろうか？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6013118586]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447167]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>リノベーション学校特別授業「イチから始めるＤＩＹリノベ講座」</title>
		<link>https://tech.blog.uribou.me/rinobesiyonxue-xiao-te-bie-shou-ye-tute/</link>
		<pubDate>Thu, 10 Dec 2015 07:21:08 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/rinobesiyonxue-xiao-te-bie-shou-ye-tute/</guid>
		<description></description>
		<content:encoded><![CDATA[中古物件を買ってDIYリノベする人が増えているのを見て、具体的に何をどれくらい時間かければ出来るものなのか？感触を知りたいと思い、この講座を受けてみました。
<img src="https://www.diyfactory.jp/contact/img/diyrs-img/diyrs-titleimg.jpg" alt="DIY R SCHOOL at ATC" />
<a href="http://www.renovation.or.jp/expo/area/aoyama/">リノベーションEXPO JAPAN 2015</a>「リノベーション学校」、ＤＩＹスクール校長による１時間の熱弁でした。
リノベーションて、なんとなく知ってるつもりでしたが、リフォームとは全く違うんですね。
リノベーション学校が過去に行った授業はこんな感じだそうです。
<hr />
築４０年の団地物件の内装材を一旦全て破棄し、リノベーションするスケルトンリノベーションワークショップ。
このワークショップは、プロの職人さんに日当を払って朝１０時から１７時までレクチャーと実務を行うもの。
どれほどの人が集まるか不透明だったが…　募集してみたら、やりたい！と手を挙げる人が殺到した。
DIYリノベを学びたい人が多く潜在していることの証明だと確信したとのこと。
そして、実際のところ、丸ノコとインパクトドライバーが使えれば、ほとんどの工事は素人でも出来てしまう。ただし、<strong>時間をかければ</strong>という条件が付く。
例えば壁の塗装。
６０平米の広さで塗料もろもろで経費は３万円程度。素人でも３日かければ出来てしまう。
簡易的な間仕切りLSGで壁の骨組みを作り、骨組みに石膏ボードを貼り付けることで、自分好みの間取りを作ることも比較的容易に出来てしまう。
屋根には防水シートを貼り、コンクリートの上に直接断熱材入りフローリング材を敷き詰め…　といった作業を根気強く最後までやりきる覚悟は必要。
プロの職人さんに発注すれば、お金はかかるが必要な時間が劇的に短縮される、ということ。そしてその場合、技術も知識も自分に残ることはない。
<hr />
戦後の住宅は安価に短期間で建物を作る必要があったため、３０年程度しか保たないのがほとんど。
かつての日本は、１００年保つ建物が主流だった。鎌倉、京都にある木造建築を見ればわかる。
そのかつての日本建築を取り戻すのも、スクールの目的。
例えば法隆寺は、１０００年以上保っている。古いものをうまく残して使うのがリノベーションのポイントである。モジュールという観点が抜け落ちているのが現在の住宅。
日本の町並みを見ればわかるが、それぞれ思い思いに調和を考えず建てるものだから、全く綺麗ではない。
自分で１２８０万で購入したマンションをセルフリノベーションした時に持っていた夢をほとんど実現できなかった体験を通して思う。
作るもの、夢は、シンプルにしたほうが絶対いい。
<hr />
１時間の講習でしたが、聴き入ってしまったせいか、２０〜３０分に感じました。
うーむ、このリノベーション学校、関東でもやってくれないものか…。
関西中心に活動してるみたいなんですよね…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1427</wp:post_id>
		<wp:post_date><![CDATA[2015-12-10 16:21:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-10 07:21:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rinobesiyonxue-xiao-te-bie-shou-ye-tute]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://www.diyfactory.jp/contact/img/diyrs-img/diyrs-titleimg.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>中古物件を買ってDIYリノベする人が増えているのを見て、具体的に何をどれくらい時間かければ出来るものなのか？感触を知りたいと思い、この講座を受けてみました。</p>

<p><img src="https://www.diyfactory.jp/contact/img/diyrs-img/diyrs-titleimg.jpg" alt="DIY R SCHOOL at ATC" /></p>

<p><a href="http://www.renovation.or.jp/expo/area/aoyama/">リノベーションEXPO JAPAN 2015</a>「リノベーション学校」、ＤＩＹスクール校長による１時間の熱弁でした。</p>

<p>リノベーションて、なんとなく知ってるつもりでしたが、リフォームとは全く違うんですね。</p>

<p>リノベーション学校が過去に行った授業はこんな感じだそうです。</p>

<hr />

<p>築４０年の団地物件の内装材を一旦全て破棄し、リノベーションするスケルトンリノベーションワークショップ。</p>

<p>このワークショップは、プロの職人さんに日当を払って朝１０時から１７時までレクチャーと実務を行うもの。</p>

<p>どれほどの人が集まるか不透明だったが…　募集してみたら、やりたい！と手を挙げる人が殺到した。</p>

<p>DIYリノベを学びたい人が多く潜在していることの証明だと確信したとのこと。</p>

<p>そして、実際のところ、丸ノコとインパクトドライバーが使えれば、ほとんどの工事は素人でも出来てしまう。ただし、<strong>時間をかければ</strong>という条件が付く。</p>

<p>例えば壁の塗装。</p>

<p>６０平米の広さで塗料もろもろで経費は３万円程度。素人でも３日かければ出来てしまう。</p>

<p>簡易的な間仕切りLSGで壁の骨組みを作り、骨組みに石膏ボードを貼り付けることで、自分好みの間取りを作ることも比較的容易に出来てしまう。</p>

<p>屋根には防水シートを貼り、コンクリートの上に直接断熱材入りフローリング材を敷き詰め…　といった作業を根気強く最後までやりきる覚悟は必要。</p>

<p>プロの職人さんに発注すれば、お金はかかるが必要な時間が劇的に短縮される、ということ。そしてその場合、技術も知識も自分に残ることはない。</p>

<hr />

<p>戦後の住宅は安価に短期間で建物を作る必要があったため、３０年程度しか保たないのがほとんど。</p>

<p>かつての日本は、１００年保つ建物が主流だった。鎌倉、京都にある木造建築を見ればわかる。</p>

<p>そのかつての日本建築を取り戻すのも、スクールの目的。</p>

<p>例えば法隆寺は、１０００年以上保っている。古いものをうまく残して使うのがリノベーションのポイントである。モジュールという観点が抜け落ちているのが現在の住宅。</p>

<p>日本の町並みを見ればわかるが、それぞれ思い思いに調和を考えず建てるものだから、全く綺麗ではない。</p>

<p>自分で１２８０万で購入したマンションをセルフリノベーションした時に持っていた夢をほとんど実現できなかった体験を通して思う。</p>

<p>作るもの、夢は、シンプルにしたほうが絶対いい。</p>

<hr />

<p>１時間の講習でしたが、聴き入ってしまったせいか、２０〜３０分に感じました。</p>

<p>うーむ、このリノベーション学校、関東でもやってくれないものか…。</p>

<p>関西中心に活動してるみたいなんですよね…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955713900]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591165]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>冬に向けて、家電用オフグリッドシステムを増強しました</title>
		<link>https://tech.blog.uribou.me/diyohuguritudosisutemu-12v3-6kwh-24v7-2kwhnizeng-qiang/</link>
		<pubDate>Wed, 25 Nov 2015 15:15:54 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/diyohuguritudosisutemu-12v3-6kwh-24v7-2kwhnizeng-qiang/</guid>
		<description></description>
		<content:encoded><![CDATA[想像より大変だった…。原因は主に以下の３つ。
<ol>
<li>バッテリーボックスに同梱してたチャージコントローラ、インバータを外に出さないと、追加分のバッテリーが入らない</li>
<li>外に追い出したチャージコントローラ、インバータを収める箱を作らないといけない（出来合いの箱だと丁度よい大きさがない、オーダーメイドだと高すぎる…）</li>
<li>1500W家電を使えるようにするため、電線を太くしたのが原因で可とう電線菅の取り回しが難しくなった</li>
</ol>
そのバッテリーボックスがこれ。
<img src="https://farm6.staticflickr.com/5825/22860355952_86fae3cc67_z_d.jpg" alt="" />
MSE-300 2V x12個。21kg　x12 =252kg。約0.2t！我ながら圧巻です。
将来的に24Vシステムを組もうと思っていたので、バッテリーボックスは元々この大きさ。でもいきなり24Vシステムを組む勇気はなく、12Vシステムでスタート。そのおかげで、ボックスが半分空いていました。
チャージコントローラ入れる箱作るのめんどくさいし、ここに入れておけばいいか。
と思ってサボったツケが今回回ってきただけの話ですね。
そして作った箱がこちら。
<img src="https://farm1.staticflickr.com/736/22252680803_7a680de042_z_d.jpg" alt="" />
写真からは分かりづらいんですが、白いのと青いの、両方とも長辺30cmの図体で、重量はそれぞれ4kgと5kgです。奥行きも15cm程度あります。白い方がチャージコントローラ、青い方が正弦波インバータです。
こんなものが入る箱をオーダーメイドしたら、費用が数万円かかる上、事前に穴開け寸法を計算した上で発注しないといけない…。
だったら自作しちゃえと、ホームセンターで厚めの木材を揃え、防水塗料を塗り、隙間をパテで埋め、穴を開けて電線を通しました。
箱作りに一番時間がかかったような気がします…。
こうした苦労を乗り越えて使えるようになった家電は…
<img src="https://farm1.staticflickr.com/641/23017019892_30bd5ae4f7_z_d.jpg" alt="" />
400Wのホカペ。
は、試験的に最初に使ってみただけです。無事使えることを確認した後、1200Wドライヤー、1000W掃除機を恐る恐る使ってみて、全く問題なし。これらを使った後でも、バッテリーの電圧がほとんど下がっておらず、これにもビックリ。12Vシステムの時は、何か家電を使った後は即座にバッテリー電圧低下を招いたので。
<img src="/content/images/2015/11/----------2015-11-15-22-02-10.jpg" alt="" />
このグラフは、左側のリンク<a href="http://grid.rinka-blossom.com/">発電状況モニタリングシステム</a>から見ることができます。
<hr />
まだまだ完全自給オフグリッドに辿り着くことはできませんが、少し前進できたかな。発電状況データを蓄積するサービスを、不安定なXivelyからkeen.ioに切り替えた際にも、色々と良い勉強になった。この件はまた別途記事にしたい。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1430</wp:post_id>
		<wp:post_date><![CDATA[2015-11-26 00:15:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-25 15:15:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diyohuguritudosisutemu-12v3-6kwh-24v7-2kwhnizeng-qiang]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5825/22860355952_86fae3cc67_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>想像より大変だった…。原因は主に以下の３つ。</p>

<ol>
<li>バッテリーボックスに同梱してたチャージコントローラ、インバータを外に出さないと、追加分のバッテリーが入らない  </li>
<li>外に追い出したチャージコントローラ、インバータを収める箱を作らないといけない（出来合いの箱だと丁度よい大きさがない、オーダーメイドだと高すぎる…）  </li>
<li>1500W家電を使えるようにするため、電線を太くしたのが原因で可とう電線菅の取り回しが難しくなった</li>
</ol>

<p>そのバッテリーボックスがこれ。
<img src="https://farm6.staticflickr.com/5825/22860355952_86fae3cc67_z_d.jpg" alt="" />
MSE-300 2V x12個。21kg　x12 =252kg。約0.2t！我ながら圧巻です。</p>

<p>将来的に24Vシステムを組もうと思っていたので、バッテリーボックスは元々この大きさ。でもいきなり24Vシステムを組む勇気はなく、12Vシステムでスタート。そのおかげで、ボックスが半分空いていました。</p>

<p>チャージコントローラ入れる箱作るのめんどくさいし、ここに入れておけばいいか。</p>

<p>と思ってサボったツケが今回回ってきただけの話ですね。</p>

<p>そして作った箱がこちら。
<img src="https://farm1.staticflickr.com/736/22252680803_7a680de042_z_d.jpg" alt="" />
写真からは分かりづらいんですが、白いのと青いの、両方とも長辺30cmの図体で、重量はそれぞれ4kgと5kgです。奥行きも15cm程度あります。白い方がチャージコントローラ、青い方が正弦波インバータです。</p>

<p>こんなものが入る箱をオーダーメイドしたら、費用が数万円かかる上、事前に穴開け寸法を計算した上で発注しないといけない…。</p>

<p>だったら自作しちゃえと、ホームセンターで厚めの木材を揃え、防水塗料を塗り、隙間をパテで埋め、穴を開けて電線を通しました。</p>

<p>箱作りに一番時間がかかったような気がします…。</p>

<p>こうした苦労を乗り越えて使えるようになった家電は…
<img src="https://farm1.staticflickr.com/641/23017019892_30bd5ae4f7_z_d.jpg" alt="" />
400Wのホカペ。</p>

<p>は、試験的に最初に使ってみただけです。無事使えることを確認した後、1200Wドライヤー、1000W掃除機を恐る恐る使ってみて、全く問題なし。これらを使った後でも、バッテリーの電圧がほとんど下がっておらず、これにもビックリ。12Vシステムの時は、何か家電を使った後は即座にバッテリー電圧低下を招いたので。
<img src="/content/images/2015/11/----------2015-11-15-22-02-10.jpg" alt="" />
このグラフは、左側のリンク<a href="http://grid.rinka-blossom.com/">発電状況モニタリングシステム</a>から見ることができます。</p>

<hr />

<p>まだまだ完全自給オフグリッドに辿り着くことはできませんが、少し前進できたかな。発電状況データを蓄積するサービスを、不安定なXivelyからkeen.ioに切り替えた際にも、色々と良い勉強になった。この件はまた別途記事にしたい。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1431]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5948898579]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548386]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>スマホ充電用オフグリッドシステムを改良しました</title>
		<link>https://tech.blog.uribou.me/miniminiohuguritudosisutemu/</link>
		<pubDate>Sun, 06 Dec 2015 06:17:54 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/miniminiohuguritudosisutemu/</guid>
		<description></description>
		<content:encoded><![CDATA[1500W家電が使えるオフグリッドシステムとは別に、我が家には<a href="http://greenz.jp/2014/08/11/wataden-ws-903/">去年の9月にわたしたち電力主催のワークショップで製作したミニミニ太陽光システム</a>があります。電気を自給できる感動を味わった初の試作機。
<img src="https://farm4.staticflickr.com/3668/20241073180_ef015af5a3_z_d.jpg" alt="" />
上の写真を見てわかる通り、扱いがぞんざい過ぎたので、以下のように組み直しました。
<h1>USB充電器兼ノートPC電源の全体像</h1>
<img src="https://farm6.staticflickr.com/5622/23231012056_74fbc1b2f5_z_d.jpg" alt="" />
棚は近くのホームセンターで売ってる木材を適当に組み立て、適等に穴を開けて、各パーツをねじ止めしてあります。パネルは小型の20Wで格安5000円強。
バッテリーも小型の12V12Ah(144Wh)で、格安4000円弱。バイク用かな？
チャージコントローラは日本企業、電綾製のPWM方式コントローラ（詳しくは<a href="http://blog.rinka-blossom.com/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/">こちら</a>）。これも小型でしかも安い。3000円強。パネルの発電力が低いので、MPPT方式にするまでもないと、割り切りました。
<h1>400W正弦波インバータ</h1>
<img src="https://farm1.staticflickr.com/717/22799631667_2c518f0f7a_z_d.jpg" alt="" />
天気のいい日はノートPC電源としても活用できるように、<a href="http://www.amazon.co.jp/%E5%A4%A7%E6%A9%8B%E7%94%A3%E6%A5%AD-BAL-3WAY%E6%AD%A3%E5%BC%A6%E6%B3%A2%E3%82%A4%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF%E3%83%BC-400W-No1787/dp/B00JHVG22S/ref=sr_1_cc_1?s=aps&amp;ie=UTF8&amp;qid=1448317169&amp;sr=1-1-catcorr&amp;keywords=400W+%E6%AD%A3%E5%BC%A6%E6%B3%A2+%E3%82%A4%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF">安めの400W正弦波インバータ</a>を付けました。8000円ちょい。バッテリー直結です。
DC電源としてスマホに給電した方が効率いいので、AC電源としてはあまり使いませんが…
<h1>DC（直流）降圧回路</h1>
<img src="https://farm6.staticflickr.com/5811/22799590937_f4e7becc43_z_d.jpg" alt="" />
USB端子付きDC降圧回路は<a href="https://www.amazon.co.jp/gp/aw/d/B00ENE55SQ/ref=ya_aw_oh_pii?ie=UTF8&amp;psc=1#">これ</a>にしました。600円強。
入力電圧12-40Vに対応しているので、将来的にバッテリー電圧を上げても余裕で対応できます。その横にあるコンセントは、使いやすいように400Wインバータから引っぱってきました。第二種電気工事士技能試験練習部品の余り。
DC降圧回路は車のシガーソケット用USB端子を分解してもいいんですが、あまり美しくないので…。
これなら、最大出力電流8AなのでiPadの充電も余裕です。
<h1>電圧計</h1>
バッテリ電圧は大体11V以上をキープするようにしましょう。
都度テスターで測るのはめんどくさいので、<a href="http://www.amazon.co.jp/gp/product/B00B1Y0E2I/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;psc=1">車・バイク用の小型デジタル電圧計</a>を取り付けました。約400円。
<img src="https://farm1.staticflickr.com/681/23266822140_c10dba53a9_z_d.jpg" alt="" />
<h1>まとめ</h1>
AC電源不要なら以下の構成で十分です。部品代は合計13000円程度で、各種ケーブルや台を合わせると、高くついても20000円に収まるかな。
<ul>
<li>20W太陽光パネル</li>
<li>PWM方式チャージコントローラ</li>
<li>12Vバッテリー</li>
<li>小型デジタル電圧計</li>
<li>DC降圧回路（USB端子付き）</li>
</ul>
太陽光さえあれば無料で電力が得られるのは、使ってて気持ちがいいです。ぜひお試しあれ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1432</wp:post_id>
		<wp:post_date><![CDATA[2015-12-06 15:17:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-06 06:17:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[miniminiohuguritudosisutemu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm4.staticflickr.com/3668/20241073180_ef015af5a3_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>1500W家電が使えるオフグリッドシステムとは別に、我が家には<a href="http://greenz.jp/2014/08/11/wataden-ws-903/">去年の9月にわたしたち電力主催のワークショップで製作したミニミニ太陽光システム</a>があります。電気を自給できる感動を味わった初の試作機。</p>

<p><img src="https://farm4.staticflickr.com/3668/20241073180_ef015af5a3_z_d.jpg" alt="" /></p>

<p>上の写真を見てわかる通り、扱いがぞんざい過ぎたので、以下のように組み直しました。</p>

<h1 id="usbpc">USB充電器兼ノートPC電源の全体像</h1>

<p><img src="https://farm6.staticflickr.com/5622/23231012056_74fbc1b2f5_z_d.jpg" alt="" /></p>

<p>棚は近くのホームセンターで売ってる木材を適当に組み立て、適等に穴を開けて、各パーツをねじ止めしてあります。パネルは小型の20Wで格安5000円強。</p>

<p>バッテリーも小型の12V12Ah(144Wh)で、格安4000円弱。バイク用かな？</p>

<p>チャージコントローラは日本企業、電綾製のPWM方式コントローラ（詳しくは<a href="http://blog.rinka-blossom.com/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/">こちら</a>）。これも小型でしかも安い。3000円強。パネルの発電力が低いので、MPPT方式にするまでもないと、割り切りました。</p>

<h1 id="400w">400W正弦波インバータ</h1>

<p><img src="https://farm1.staticflickr.com/717/22799631667_2c518f0f7a_z_d.jpg" alt="" /></p>

<p>天気のいい日はノートPC電源としても活用できるように、<a href="http://www.amazon.co.jp/%E5%A4%A7%E6%A9%8B%E7%94%A3%E6%A5%AD-BAL-3WAY%E6%AD%A3%E5%BC%A6%E6%B3%A2%E3%82%A4%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF%E3%83%BC-400W-No1787/dp/B00JHVG22S/ref=sr_1_cc_1?s=aps&amp;ie=UTF8&amp;qid=1448317169&amp;sr=1-1-catcorr&amp;keywords=400W+%E6%AD%A3%E5%BC%A6%E6%B3%A2+%E3%82%A4%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF">安めの400W正弦波インバータ</a>を付けました。8000円ちょい。バッテリー直結です。</p>

<p>DC電源としてスマホに給電した方が効率いいので、AC電源としてはあまり使いませんが…</p>

<h1 id="dc">DC（直流）降圧回路</h1>

<p><img src="https://farm6.staticflickr.com/5811/22799590937_f4e7becc43_z_d.jpg" alt="" /></p>

<p>USB端子付きDC降圧回路は<a href="https://www.amazon.co.jp/gp/aw/d/B00ENE55SQ/ref=ya_aw_oh_pii?ie=UTF8&amp;psc=1#">これ</a>にしました。600円強。</p>

<p>入力電圧12-40Vに対応しているので、将来的にバッテリー電圧を上げても余裕で対応できます。その横にあるコンセントは、使いやすいように400Wインバータから引っぱってきました。第二種電気工事士技能試験練習部品の余り。</p>

<p>DC降圧回路は車のシガーソケット用USB端子を分解してもいいんですが、あまり美しくないので…。</p>

<p>これなら、最大出力電流8AなのでiPadの充電も余裕です。</p>

<h1 id="">電圧計</h1>

<p>バッテリ電圧は大体11V以上をキープするようにしましょう。</p>

<p>都度テスターで測るのはめんどくさいので、<a href="http://www.amazon.co.jp/gp/product/B00B1Y0E2I/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;psc=1">車・バイク用の小型デジタル電圧計</a>を取り付けました。約400円。</p>

<p><img src="https://farm1.staticflickr.com/681/23266822140_c10dba53a9_z_d.jpg" alt="" /></p>

<h1 id="">まとめ</h1>

<p>AC電源不要なら以下の構成で十分です。部品代は合計13000円程度で、各種ケーブルや台を合わせると、高くついても20000円に収まるかな。</p>

<ul>
<li>20W太陽光パネル</li>
<li>PWM方式チャージコントローラ</li>
<li>12Vバッテリー</li>
<li>小型デジタル電圧計</li>
<li>DC降圧回路（USB端子付き）</li>
</ul>

<p>太陽光さえあれば無料で電力が得られるのは、使ってて気持ちがいいです。ぜひお試しあれ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1433]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5953588522]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548387]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>電気工事士二種 技能試験に合格するには</title>
		<link>https://tech.blog.uribou.me/dian-qi-gong-shi-shi-er-zhong-ji-neng-shi-yan-nihe-ge-suruniha/</link>
		<pubDate>Sun, 06 Dec 2015 06:00:18 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dian-qi-gong-shi-shi-er-zhong-ji-neng-shi-yan-nihe-ge-suruniha/</guid>
		<description></description>
		<content:encoded><![CDATA[つい先ほど、電気工事士二種技能試験を受けてきました〜。
電気工事士二種試験は、上期と下期のいずれかを受けることができます。とある事情で、今回は下期受験でした。
試験会場に着くなり腕時計を忘れたことに気付き、会場を見渡すと…　時計は設置されておらず。
時間配分がわからん！と焦りましたが、一通り練習した候補問題は全て制限時間内に作れるようになっていたので、おそらく大丈夫だろうとタカをくくり受けてきました。
今回出題されたのは候補問題No.11。下の画像はその作例です。
<img src="https://farm1.staticflickr.com/736/22454290273_e63f7cdd0e_z_d.jpg" alt="" />
で、合格発表もされていない今、このタイトルを付けるのは先走り気味なんですが、<a href="http://blog.rinka-blossom.com/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha/">前回の投稿</a>で触れた<a href="http://www.amazon.co.jp/%E7%AC%AC%E4%BA%8C%E7%A8%AE%E9%9B%BB%E6%B0%97%E5%B7%A5%E4%BA%8B%E5%A3%AB%E6%8A%80%E8%83%BD%E8%A9%A6%E9%A8%93%E5%80%99%E8%A3%9C%E5%95%8F%E9%A1%8C%E4%B8%B8%E3%82%8F%E3%81%8B%E3%82%8A-%E5%B9%B3%E6%88%9027%E5%B9%B4%E7%89%88-%E9%9B%BB%E6%B0%97%E5%B7%A5%E4%BA%8B%E5%A3%AB%E5%95%8F%E9%A1%8C%E7%A0%94%E7%A9%B6%E4%BC%9A/dp/4485214389/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1447278763&amp;sr=1-1&amp;keywords=%E5%80%99%E8%A3%9C%E5%95%8F%E9%A1%8C%E3%81%BE%E3%82%8B%E3%82%8F%E3%81%8B%E3%82%8A">第二種電気工事士技能試験候補問題丸わかり</a>が一押しなのは変わりません。
単線図から複線図を描き起こす手順やその理由、回路図まで添えて解説しているので、これを参考書に13問の候補問題を2巡ほど練習すれば十分だと思います。
時間短縮のためのテクニックを習得したい場合は、Youubeで「電気工事士 技能試験」で検索すると、紹介動画が色々出てくるので、ご参考にどうぞ。
練習時間は、1問当たり40分、復習と作品の分解（部品再利用のため）に20分、13問×2巡で、合計26時間。1日あたり多くとれても1時間だったので、およそ1ヶ月かかったことになります。
筆記試験の方により多くの時間を割いたような、その割には6割の正答率で良いので、拍子抜けだったような…。
とにかくこれで、後は合格通知を待つのみ。堂々とオフグリッド工事ができる！
…のを願う。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1438</wp:post_id>
		<wp:post_date><![CDATA[2015-12-06 15:00:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-06 06:00:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dian-qi-gong-shi-shi-er-zhong-ji-neng-shi-yan-nihe-ge-suruniha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e8%b3%87%e6%a0%bc"><![CDATA[資格]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:65:"https://farm1.staticflickr.com/736/22454290273_e63f7cdd0e_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>つい先ほど、電気工事士二種技能試験を受けてきました〜。</p>

<p>電気工事士二種試験は、上期と下期のいずれかを受けることができます。とある事情で、今回は下期受験でした。</p>

<p>試験会場に着くなり腕時計を忘れたことに気付き、会場を見渡すと…　時計は設置されておらず。</p>

<p>時間配分がわからん！と焦りましたが、一通り練習した候補問題は全て制限時間内に作れるようになっていたので、おそらく大丈夫だろうとタカをくくり受けてきました。</p>

<p>今回出題されたのは候補問題No.11。下の画像はその作例です。</p>

<p><img src="https://farm1.staticflickr.com/736/22454290273_e63f7cdd0e_z_d.jpg" alt="" /></p>

<p>で、合格発表もされていない今、このタイトルを付けるのは先走り気味なんですが、<a href="http://blog.rinka-blossom.com/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha/">前回の投稿</a>で触れた<a href="http://www.amazon.co.jp/%E7%AC%AC%E4%BA%8C%E7%A8%AE%E9%9B%BB%E6%B0%97%E5%B7%A5%E4%BA%8B%E5%A3%AB%E6%8A%80%E8%83%BD%E8%A9%A6%E9%A8%93%E5%80%99%E8%A3%9C%E5%95%8F%E9%A1%8C%E4%B8%B8%E3%82%8F%E3%81%8B%E3%82%8A-%E5%B9%B3%E6%88%9027%E5%B9%B4%E7%89%88-%E9%9B%BB%E6%B0%97%E5%B7%A5%E4%BA%8B%E5%A3%AB%E5%95%8F%E9%A1%8C%E7%A0%94%E7%A9%B6%E4%BC%9A/dp/4485214389/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1447278763&amp;sr=1-1&amp;keywords=%E5%80%99%E8%A3%9C%E5%95%8F%E9%A1%8C%E3%81%BE%E3%82%8B%E3%82%8F%E3%81%8B%E3%82%8A">第二種電気工事士技能試験候補問題丸わかり</a>が一押しなのは変わりません。</p>

<p>単線図から複線図を描き起こす手順やその理由、回路図まで添えて解説しているので、これを参考書に13問の候補問題を2巡ほど練習すれば十分だと思います。</p>

<p>時間短縮のためのテクニックを習得したい場合は、Youubeで「電気工事士 技能試験」で検索すると、紹介動画が色々出てくるので、ご参考にどうぞ。</p>

<p>練習時間は、1問当たり40分、復習と作品の分解（部品再利用のため）に20分、13問×2巡で、合計26時間。1日あたり多くとれても1時間だったので、およそ1ヶ月かかったことになります。</p>

<p>筆記試験の方により多くの時間を割いたような、その割には6割の正答率で良いので、拍子抜けだったような…。</p>

<p>とにかくこれで、後は合格通知を待つのみ。堂々とオフグリッド工事ができる！</p>

<p>…のを願う。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5953587344]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620244]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>フルコネクトのニューラルネットワーク</title>
		<link>https://tech.blog.uribou.me/2369-2/</link>
		<pubDate>Thu, 14 Feb 2019 21:27:01 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2369</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="l-content--detail p-lesson">
<div>
https://keras.io/ja/getting-started/sequential-model-guide/#shape
&nbsp;
<h2 id="shape">入力のshapeを指定する</h2>
モデルはどのような入力のshapeを想定しているのかを知る必要があります． このため， <code>Sequential</code> モデルの最初のレイヤーに入力のshapeについての情報を与える必要があります（最初のレイヤー以外は入力のshapeを推定できるため，指定する必要はありません）． 入力のshapeを指定する方法はいくつかあります:
<ul>
 	<li>最初のレイヤーの <code>input_shape</code>引数を指定する．この引数にはshapeを示すタプルを与えます（このタプルの要素は整数か <code>None</code>を取ります．<code>None</code>は任意の正の整数を期待することを意味します）．</li>
 	<li><code>Dense</code> のような2次元の層では <code>input_dim</code>引数を指定することで入力のshapeを指定できます．同様に，3次元のレイヤーでは <code>input_dim</code>引数と <code>input_length</code>引数を指定することで入力のshapeを指定できます．</li>
 	<li>（stateful reccurent networkなどで）バッチサイズを指定したい場合， <code>batch_size</code>引数を指定することができます．もし， <code>batch_size=32</code>と <code>input_shape=(6, 8)</code>を同時に指定した場合，想定されるバッチごとの入力のshapeは <code>(32, 6, 8)</code>となります．</li>
</ul>
</div>
<div>3-1-5. フルコネクトのニューラルネットワーク</div>
<div class="l-content--detail p-lesson">
<h4>フルコネクトのニューラルネットワーク</h4>
それでは、このニューラルネットワークが、どのような構造になっているかを見ていきます。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation
  model = Sequential()
  model.add(Dense(<span class="hljs-number">1</span>, input_dim=<span class="hljs-number">784</span>))
  model.add(Activation(<span class="hljs-string">'sigmoid'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'binary_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_4or9_logistic_regression_-_IBM_Watson-1.png" alt="" width="440" />まず、model = <a href="https://keras.io/ja/models/sequential/" target="_blank" rel="noopener noreferrer">Sequential()</a>という行は、Kerasでニューラルネットワークを組み立てる際に、最初に実行するものです。これから組み立てるニューラルネットワークがレイヤーを積み重ねたものであることを示します。Kerasでは、ここで作成したmodelに対して、model.add()を実行してレイヤーを追加していきます。（model = Sequential()の引数に、レイヤーの内容をリストで与えて、ニューラルネットワークを構築することも可能です。）
最初のレイヤーは、Dense(1, input_dim=784) です。<a href="https://keras.io/ja/layers/core/#dense" target="_blank" rel="noopener noreferrer">Dense</a>は最も一般的なネットワークレイヤーです。入力値のニューロンと出力値のニューロンがすべてつながっています。「すべてつながっている」ことから、全結合層やフルコネクトなどと言われることもあります。
Denseに2つの引数をセットしています。第1引数はこのレイヤーからの出力値となるニューロンの数（出力ユニット数）を示します。ここでは次のレイヤーがこのニューラルネットワークの出力であり、4か9（実装上は0か1）の2値であることから1を指定しています。第2引数はinput_dim=784としています。これは入力値が要素が784個の1次元配列であることを示します。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--completed"><i class="material-icons c-chapter__check-icon--checked">check_circle</i>習得済み</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-1-6. 活性化関数</div>
<div class="l-content--detail p-lesson">
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_4or9_logistic_regression_-_IBM_Watson-2.png" alt="" width="415" />次に、Activation('sigmoid')というレイヤーが追加されています。このモデルでは、ニューラルネットワークの組み立てはこれだけです。
Activation('sigmoid')はDenseのようなネットワークではなく、直前の出力に適用する活性化関数です。<a href="https://keras.io/ja/layers/core/#activation" target="_blank" rel="noopener noreferrer">Activation</a>が活性化関数を指定することを示し、sigmoidはシグモイド関数を活性化関数として使用することを示します。Kerasでは活性化関数をレイヤーとしてではなく、Dense(1, input_dim=784, activation='sigmoid')のようにネットワークの追加でまとめて指定することもできます。（厳密に言えば、Dense()でactivationを指定しない場合、特別な活性化関数を適用しない「線形活性化」によって値を次のレイヤーに渡すことを示し、その後のActivation()レイヤーでDense()レイヤーの出力に活性化関数を適用することを示します。また、Dense()の中でactivationを指定すれば、そこで指定した活性化関数を適用した値を次のレイヤーに渡すことになるので、結果的には同じ値となります。）
先ほど説明したように、ニューラルネットワークを構成する一つ一つのニューロンは、別のニューロンから入力された値を重み（ウエイト）に基づいて計算し、閾値（バイアス）を上回る場合に発火して、次のニューロンに値の入力を行います（この、重みと閾値のことをパラメータといいます）。その際、実際に入力値を集計した後で、どのようにバイアスを処理して値を出力するのかを導き出すのが活性化関数の役目です。ニューラルネットワークをはじめとする機械学習は、基本的にアルゴリズムを数式で示し、コンピュータが得意とする計算によって処理を進めていきます。そのため、このような関数が必要となるのです。
活性化関数にはいくつかの種類があります。ここで用いたシグモイド関数は計算が容易であるためにニューラルネットワークで古くから使われてきた関数です。他には、tanhやランプ関数（ReLU）といった関数が用いられます。ニューラルネットワークの世界では、<a href="https://www.nature.com/articles/nature14539" target="_blank" rel="noopener noreferrer">2015年5月現在ReLUが最善であるとした論文</a>があります。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--completed"><i class="material-icons c-chapter__check-icon--checked">check_circle</i>習得済み</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-1-7. 最適化関数、損失関数、評価関数</div>
<div class="l-content--detail p-lesson">
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation
  model = Sequential()
  model.add(Dense(<span class="hljs-number">1</span>, input_dim=<span class="hljs-number">784</span>))
  model.add(Activation(<span class="hljs-string">'sigmoid'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'binary_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
</code></pre>
ニューラルネットワークの組み立てが終わったので、次にモデルをコンパイルします。コンパイルの際に、最適化関数（optimizer='adam'）と損失関数（loss='binary_crossentropy'）、評価関数（metrics=['accuracy']）の3つを指定しています。
ニューラルネットワークにおける学習フェーズは、一つ一つのニューロンで、パラメータ（重みと閾値）を更新することです。同じ構造のニューラルネットワークに同じ入力値を与えても、それぞれのニューロンのパラメータが異なれば、出力値は異なるでしょう。つまり、パラメータが最適化されていれば、そのニューラルネットワークは高い精度の結果を出すことができます。
では、パラメータはどのように調整されるのでしょうか。教師データが与えられる教師あり学習の場合、与えられた訓練データからニューラルネットワークが出力した値と、教師データの値が同じ、あるいは差が最小化していれば精度が高いといえますから、まずは差がどの程度出ているかを調べる必要があります。それを行うのが損失関数の役目です。このモデルでは、損失関数の一つである交差エントロピー（cross entropy）のうち、0か1のいずれかの値を求める場合に使用されるbinary_crossentropyを用いています。
最適化関数は、損失関数によって計算された差を最小化するために、パラメータをどのように更新すれば良いかを計算します。代表的な考え方は勾配降下法であり、それを発展させたさまざまなアルゴリズムが提案されています。ここで使用しているadamもその1つです。
最後に、評価関数は、学習モデルの作成時（学習フェーズ）に、モデルの精度を評価するために用いる関数です。一般的には`accuracy`を用います。
</div>
<div>3-1-8. バッチサイズとエポック</div>
<div class="l-content--detail p-lesson">
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation
  model = Sequential()
  model.add(Dense(<span class="hljs-number">1</span>, input_dim=<span class="hljs-number">784</span>))
  model.add(Activation(<span class="hljs-string">'sigmoid'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'binary_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
</code></pre>
モデルをコンパイルした後に、いよいよ説明変数（X）と、目的変数（y）を指定して、学習フェーズを実行します。ここでは、バッチサイズとエポックを指定しています。
バッチサイズ（batch_size）は、訓練データの中から同時にどの程度のデータをニューラルネットワークに与えてパラメータを更新するかを示します。例えば、訓練データが100個あり、バッチサイズが10の場合は、10回の更新が行われるということになります。
エポック（epochs）は、訓練データを使って何回反復した学習を行うかを指定します。上記の例で、訓練データが100個、バッチサイズが10で、エポックが5の場合は、100÷10×5＝50回の更新が行われます。
</div>
&nbsp;
<div>畳み込みニューラルネットワーク（CNN）とは</div>
<div class="l-content--detail p-lesson">
Business編を受講された方は、この項は飛ばしても構いません。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/cnn_01.png" alt="" width="1203" />
上図は畳み込みニューラルネットワーク（CNN：Convolution Neural Network）を図示したものです。
CNNは大きく分けると特徴量の抽出を行う部分と、抽出された特徴量をもとに分類を行う部分に分けることができます。特徴量を抽出する部分は、畳み込み層とプーリング層で構成されます。分類を行う部分は前節で取り上げた多層パーセプトロンと同様のものです。この、特徴量抽出と分類を行う層が、CNNにおける隠れ層です。隠れ層が深く重ねられているため、ディープラーニングということができます。
<h4>畳み込み層とプーリング層</h4>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/cnn_02.png" alt="" width="326" />
コンピュータで扱う画像は、上図のような構造となっていることをご存知でしょう。一つ一つのマス目をピクセル（画素）といい、上図は縦10ピクセル、横10ピクセルの100個のピクセルで示された画像です。ここでは白と黒の2値の画像を示しましたが、赤（Red）・緑（Green）・青（Blue）のそれぞれを0〜255の256段階で示せば、256×256×256で約1677万色を表現することができます。
多くの画像では、隣り合ったピクセルは似たようなもので、時折、大きな違いが現れます。上図でいえば、白のピクセルと白のピクセル、黒のピクセルと黒のピクセルが隣り合っているケースが多く、時折、白のピクセルと黒のピクセルが隣り合います。
CNNは、こうしたコンピュータが扱う画像の特徴を最大限に活用して設計されたニューラルネットワークといえます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/cnn_03.png" alt="" width="742" />
畳み込み層では、上図のように、10×10ピクセルの画像に対して3×3ピクセル（赤枠）のフィルタを1ピクセルずつずらしながら、スキャンしていきます。フィルタは、縦方向の境界を見つけ出すもの、横方向の境界を見つけ出すものなど、様々な種類があります。
フィルタにはピクセルごとに重みがあり、それと画像（2値の画像のため白を0、黒を1で示します）上の同じ位置の値を掛け合わせて、足し合わせたものを特徴マップに配置していきます。例えば、3×3ピクセルのフィルタで10×10ピクセルの画像全体をスキャンすると、8×8ピクセルの特徴マップを得ることができます。
下図に示したフィルタでは、左右に走る境界を抽出することができます。特徴マップを見ると、たしかに手書きの「1」の書き出しの部分で左右に動いている境界のところで、0以外の値が現れています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/cnn_04_1.png" alt="" width="1373" />
特徴マップは、プーリング層によって縦横の両方を縮小します。プーリングの方法はいくつかありますが、下図は2×2の領域内で最大の値を選択するMaxPoolingという方法を表しています。
畳み込み層で得た特徴マップは、「1」という文字には上部に斜め上方向に向いた線（境界）があるという特徴を示していますが、プーリング層で特徴マップを縮小したことにより、上部に横方向の線があるというように特徴を簡略化しています。プーリング層には、下記のような効果があります。
<ul>
 	<li>画像内で多少、絵柄の位置が変動しても、それを吸収することができる</li>
 	<li>データ量が小さくなるため、計算が速くなる（学習にかかる時間を短くする）</li>
</ul>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/cnn_06.png" alt="" width="977" />
CNNでは、縦横の境界線や色情報といった様々なフィルタを用いた畳み込み層と、プーリング層を、何層にも重ねることで、画像の様々な特徴を見つけ出してます。ここで重要なことは、あくまで画像を数値データとして処理していることです。縦横の境界線に現れる特徴の数値、色情報に現れる特徴の数値というように、畳み込みによって得られる画像の特徴は数値データとして示されます。
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2369</wp:post_id>
		<wp:post_date><![CDATA[2019-02-15 06:27:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-14 21:27:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2369-2]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_79686c1e9aa6c3192b15b6c2530c0f93]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:109:"https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_4or9_logistic_regression_-_IBM_Watson-1.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>3. ディープラーニング</title>
		<link>https://tech.blog.uribou.me/2373-2/</link>
		<pubDate>Fri, 15 Feb 2019 01:21:47 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2373</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="l-content--detail p-lesson">
<div></div>
<div></div>
<blockquote>
<div><strong>fitでvalidation_split引数を指定することにより、訓練データを分割して検証データとして使用することができます。</strong></div></blockquote>
<div></div>
<div>EarlyStoppingを使う章で上記を忘れると下記エラーとなるため注意。</div>
</div>
<div>https://stackoverflow.com/questions/49035200/keras-early-stopping-callback-error-val-loss-metric-not-available</div>
<div></div>
<div class="l-content--detail p-lesson">
<div>
<pre class="lang:default decode:true ">(60000, 28, 28)
(60000, 28, 28, 1)
(10000, 28, 28, 1)
Train on 45000 samples, validate on 15000 samples
Epoch 1/3
45000/45000 [==============================] - 85s 2ms/step - loss: 0.2021 - acc: 0.9382 - val_loss: 0.0976 - val_acc: 0.9700
Epoch 2/3
45000/45000 [==============================] - 86s 2ms/step - loss: 0.0695 - acc: 0.9794 - val_loss: 0.1016 - val_acc: 0.9693
10000/10000 [==============================] - 5s 459us/step
Accuracy: 0.97, Loss: 0.09</pre>
</div>
</div>
&nbsp;
&nbsp;
<pre class="lang:default decode:true ">(60000, 28, 28)
(60000, 28, 28, 1)
(10000, 28, 28, 1)
Train on 45000 samples, validate on 15000 samples
Epoch 1/3
45000/45000 [==============================] - 84s 2ms/step - loss: 0.3380 - acc: 0.8979 - val_loss: 0.1234 - val_acc: 0.9625
Epoch 2/3
45000/45000 [==============================] - 86s 2ms/step - loss: 0.1709 - acc: 0.9491 - val_loss: 0.0979 - val_acc: 0.9716
Epoch 3/3
45000/45000 [==============================] - 85s 2ms/step - loss: 0.1312 - acc: 0.9597 - val_loss: 0.0829 - val_acc: 0.9757
10000/10000 [==============================] - 5s 459us/step
Accuracy: 0.98, Loss: 0.07</pre>
&nbsp;
<div class="l-content--detail p-lesson">
<div></div>
<div></div>
<div></div>
<div>3-2-4. 10種類の手書き数字を分類する</div>
<div class="l-content--detail p-lesson">
前節では10種類の手書き数字を、敢えて2種類（4と9）に絞り込んでモデルを作成しましたが、今度は10種類のすべてを分類できるモデルを作ることにします。
ここで作成するモデルは畳み込み処理を行うため、処理が重くなります。Watson Studioではデフォルトの「Default Python 3.5 Free」では処理の途中に落ちてしまう可能性があるため、CPU性能、メモリ容量ともに優れた「Default Python 3.5 XS」のランタイムを使用してNotebookを作成します。また、ニューラルネットワークの可視化を行うため、pydotとgraphvizを使用しますが、そのインストールはランタイムごとに行う必要があるため、前節と同様の方法でインストールし、カーネルのリスタート（Notebookのメニューから、Kernel＞Restart）を行っておいてください。
<pre><code class="python hljs">
  !pip install pydot
  !pip install graphviz
</code></pre>
<h4>データの前処理</h4>
Notebookの準備が完了したら、MNISTデータセットをダウンロードします。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.datasets <span class="hljs-keyword">import</span> mnist
  (X_train, y_train), (X_test, y_test) = mnist.load_data()
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson.png" alt="" width="1232" />
matplotlibを使って画像を表示してみると、4と9以外の数字も確認できます。
<pre><code class="python hljs">
  %matplotlib inline
  <span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt
  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>):
    print(y_train[i])
    plt.imshow(X_train[i])
    plt.gray()
    plt.show()
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/20180713_MNIST_CNN_-_IBM_Watson-1.png" alt="" width="1028" />
画像データ（X_trainおよびX_test）の形状（シェイプ）を見ると、60000×28×28であることが分かります。
<pre><code class="python hljs">
  X_train.shape
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-2.png" alt="" width="286" /></figure>
60000というのは画像データの個数ですから、画像ごとでは28×28（縦横それぞれが28ピクセル）です。今回作成するニューラルネットワークには畳み込みのレイヤーを含めるのですが、畳み込みの際には画像の縦横だけではなく色情報を含む3次元のデータである必要があるため、28×28×1（MNISTはモノクロ画像のため色情報は濃淡を示す1種類です）の構造に変換します。また、データの正規化も行っています。
<pre><code class="python hljs">
  <span class="hljs-comment"># shape[0]はデータの個数、(28, 28)を(28, 28, 1)に</span>
  X_train = X_train.reshape(X_train.shape[<span class="hljs-number">0</span>], <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)
  X_test = X_test.reshape(X_test.shape[<span class="hljs-number">0</span>], <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)
  <span class="hljs-comment"># データの正規化</span>
  X_train =  X_train / <span class="hljs-number">255</span>
  X_test = X_test / <span class="hljs-number">255</span>
  print(X_train[<span class="hljs-number">0</span>])
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-3.png" alt="" width="1381" /></figure>
0〜9の値を持つy_trainおよびy_testを、カテゴリーデータを機械学習で扱う際に必須なOne-Hot形式に変換します。（One-Hot形式は、<a href="https://graspy.jp/lesson/5/chapter/31#sub_318" target="_blank" rel="noopener noreferrer">1-1-2. 機械学習で使用できるデータ表現</a>の説明を参照してください。）
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.utils <span class="hljs-keyword">import</span> to_categorical
  y_train = to_categorical(y_train, <span class="hljs-number">10</span>)
  y_test = to_categorical(y_test, <span class="hljs-number">10</span>)
  print(y_train[<span class="hljs-number">0</span>])
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-4.png" alt="" width="764" /></figure>
これでデータの前処理は完了です。
<h4>ニューラルネットワークの組み立て</h4>
次に、ニューラルネットワークを組み立てます。今回は畳み込みの処理を含めています。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation, Conv2D, MaxPooling2D, Flatten
  model = Sequential()
  model.add(Conv2D(<span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), padding=<span class="hljs-string">'same'</span>, input_shape=(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)))
  model.add(MaxPooling2D(pool_size=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
  model.add(Flatten())
  model.add(Dense(<span class="hljs-number">128</span>))
  model.add(Activation(<span class="hljs-string">'relu'</span>))
  model.add(Dense(<span class="hljs-number">10</span>))
  model.add(Activation(<span class="hljs-string">'softmax'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'categorical_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
</code></pre>
ニューラルネットワークの可視化を行い、構造を確認しましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> IPython.display <span class="hljs-keyword">import</span> SVG
  <span class="hljs-keyword">from</span> keras.utils.vis_utils <span class="hljs-keyword">import</span> model_to_dot
  SVG(model_to_dot(model, show_shapes=<span class="hljs-keyword">True</span>).create(prog=<span class="hljs-string">'dot'</span>, format=<span class="hljs-string">'svg'</span>))
</code></pre>
このような構造が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-5.png" alt="" width="946" />
このニューラルネットワークが正常に動作するか、学習と評価を行ってみることしましょう。学習の時間を短縮するため、エポックは5にしました。
<pre><code class="python hljs">
  <span class="hljs-comment"># 学習</span>
  model.fit(X_train, y_train, batch_size=<span class="hljs-number">32</span>, epochs=<span class="hljs-number">5</span>, verbose=<span class="hljs-number">1</span>)
  <span class="hljs-comment"># 評価</span>
  loss, accuracy = model.evaluate(X_test, y_test, verbose=<span class="hljs-number">0</span>)
  print(<span class="hljs-string">'Accuracy'</span>, <span class="hljs-string">'{:.2f}'</span>.format(accuracy))
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-6.png" alt="" width="804" />このように学習と評価が行われ、0.98という高い精度を出すことができました。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--completed"><i class="material-icons c-chapter__check-icon--checked">check_circle</i>習得済み</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-2-5. 畳み込み層：Conv2D</div>
<div class="l-content--detail p-lesson">
それでは、このニューラルネットワークの構造を確認していきましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation, Conv2D, MaxPooling2D, Flatten
  model = Sequential()
  model.add(Conv2D(<span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), padding=<span class="hljs-string">'same'</span>, input_shape=(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)))
  model.add(MaxPooling2D(pool_size=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
  model.add(Flatten())
  model.add(Dense(<span class="hljs-number">128</span>))
  model.add(Activation(<span class="hljs-string">'relu'</span>))
  model.add(Dense(<span class="hljs-number">10</span>))
  model.add(Activation(<span class="hljs-string">'softmax'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'categorical_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
</code></pre>
まず、入力された画像から特徴マップを得る畳み込みの処理を行います。畳み込みは<a href="https://keras.io/ja/layers/convolutional/#conv2d" target="_blank" rel="noopener noreferrer">Conv2D</a>というレイヤーで行っています。このコードから分かるように、このニューラルネットワークでは、畳み込みは1回だけです。
Kerasにおける畳み込み処理は、Conv1D、Conv2D、Conv3Dの3つが準備されています。Conv1Dは1次元の畳み込みで主に時間的な畳み込み（時系列データを用いたモデルなど）に使用します。Conv2Dは2次元の畳み込みで今回の画像のような畳み込みに使用します。Conv3Dは3次元の畳み込みで画像のような縦横方向に高さを加えた空間の畳み込みなどに使用します。
Conv2Dの引数を見てみましょう。今回のコードでは、Conv2D(32, kernel_size=(3, 3), padding='same', input_shape=(28, 28, 1) のような指定となっています。第1引数の32は畳み込みを行った後の出力ユニット（ニューロン）数です。kernel_sizeは畳み込みを行う単位です。今回は縦横3ピクセルの単位で畳み込みを行っています。これを3×3のフィルタということもあります。
今回の入力画像は28×28（ピクセル）なので、3×3のフィルタで畳み込みを行うと、通常は26×26の特徴マップ（畳み込みの結果）が得られます。もちろん、その特徴マップを再度、畳み込むと24×24の特徴マップとなります。しかし、畳み込みを行う度に得られる特徴マップが縮んでしまうのは得策とはいえないかもしれません。そこで、paddingの指定を行います。Kerasではvalidとsameが指定できます。validは通常の畳み込みを行うので得られる特徴マップは小さくなります。sameを指定すると畳み込む前に周囲をゼロで埋めて（ゼロパディング）画像を大きくするので、得られる特徴マップのサイズは入力した画像と同じになります。
可視化されたニューラルネットワークの構造を確認すると、conv2d_2で、入力が28×28×1に対し、出力も28×28×32になっています。入出力ともに最初が28×28なのは、padding='same'を指定してゼロパディングを行ったためです。
入力した画像がモノクロ画像のため最後が×1ですが、畳み込みレイヤーの出力を32ユニットと指定したため×32という出力になっています。
ところで、この前提は3×3のフィルタを1ピクセルずつスライドして畳み込みを行うことです。このスライドさせる単位をstrides引数で指定することもできます。また、前節のDenseの説明と同様に、Conv2Dでもactivation引数で活性化関数を指定することができます。指定しない場合、線形活性化が行われることも同様です。
最後に、input_shapeは入力する画像のサイズで、28×28ピクセルのモノクロ画像であることを指定しています。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-2-6. プーリング層：MaxPooling2D</div>
<div class="l-content--detail p-lesson">
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-5.png" alt="" width="946" />
畳み込みによって得た特徴マップにプーリングの処理を行います。ここでは、プーリングを行う単位内で最大の値を使用するMaxPoolingという方法を採りました。Kearsでは畳み込みを行うConv1D、Conv2D、Conv3Dと1〜3次元に対応していますが、プーリングについてもMaxPooling1D、MaxPooling2D、MaxPooling3Dと同様に1〜3次元に対応しています。
今回のコードでは、<a href="https://keras.io/ja/layers/pooling/#maxpooling2d" target="_blank" rel="noopener noreferrer">MaxPooling2D</a>(pool_size=(2, 2))のように指定しました。pool_size引数はプーリングを行う単位で、縦2ピクセル×横2ピクセルとしています。
また、Conv2Dと同様に、strides引数を指定することができます。プーリングでは、デフォルト値はpool_sizeと同じ値です。
再び可視化したニューラルネットワークの構造を見ると、max_pooling2d_2では、入力がconv2d_2の出力である28×28×32に対し、出力は14×14×32に変化しています。これはpool_sizeを2×2で指定したためです。
畳み込みとプーリングを行った結果、14×14×32の3次元の出力を得ることができました。この出力が、入力した画像の特徴を示しています。あとは、この特徴のデータを入力として0〜9の数字に分類すれば良いわけです。ここで注意したいのは、前節では畳み込みの処理を行わずに、分類を行うためのフルコネクトのニューラルネットワーク（Dense）にデータを入力したのに対し、今回は畳み込みを行って特徴抽出を行った後でDenseにデータを入力することです。
前節は4と9の2種類の数字を分類するのみだったため、敢えて畳み込みを行いませんでした（もちろん、畳み込みを行っても構いません）。しかし、ここでは0〜9の10種類の数字を分類する必要があるため畳み込みを行って特徴をきちんと抽出した方が精度に良い影響を与えるだろうと判断し、そのような実装を行ったのです（先ほどとは逆に、畳み込みを行わなくてもニューラルネットワークの実装として誤りではありません）。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-2-7. 特徴量抽出以降のネットワーク</div>
<div class="l-content--detail p-lesson">
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_2.png" alt="" width="946" />
<h4>平坦化：Flatten</h4>
さて、畳み込みとプーリングを行った結果である14×14×32のデータですが、Denseに入力する前に1次元のデータに変換しておきましょう。その処理を平坦化といい、<a href="https://keras.io/ja/layers/core/#flatten" target="_blank" rel="noopener noreferrer">Flattenレイヤー</a>で行います。ニューラルネットワークの構造を見ると、flatten_2のところで14×14×32という3次元のデータが、1次元のデータ（6272＝14×14×32）に変換されていることが分かります。
<h4>フルコネクトのニューラルネットワーク</h4>
ここまでの処理で得た画像の特徴データから、分類を行うため処理に移ります。前節では、Denseレイヤーは1つしかありませんでした。入力のユニットと出力のユニットが直結し、隠れ層はありませんでした。しかし、今回はもう少し複雑なニューラルネットワークにしてみましょう。
コードを見ると、Denseが2つあります。1つ目のDense（dense_3）では、出力ユニット数を128と指定しています。活性化関数にはReLUを指定しました。前節で触れたようにReLUはよく使用されます。
2つ目のDense（dense_4）で出力ユニット数を10にしました。これが最後のDenseなので、出力ユニット数を分類したい数（0〜9の10種類）に合わせる必要があります。活性化関数にはSoftmaxを使用しました。10種類の出力ユニットは0〜9の分類したい10種類のラベルに対応しており、分類したい画像が0である確率、1である確率･･･のように、10種類の確率がそれぞれの出力ユニットの値になれば、その中で最も高い確率の出力ユニットのラベルを分類結果とすることができます。Softmax関数はこのように出力を確率に変換するための活性化関数です。
<h4>損失関数</h4>
レイヤーの追加が終わって、model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])のようにコンパイルを行います。前節と違うのは損失関数です。前節は4と9の「どちらか（2値）」で分類するニューラルネットワークだったためbinary_crossentropyを使用しましたが、今回は0〜9の10種類の「いずれか」であるためcategorical_crossentropyを使用しています。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-2-8. 過学習とその対策</div>
<div class="l-content--detail p-lesson">
<a href="https://graspy.jp/lesson/5/chapter/33#sub_356" target="_blank" rel="noopener noreferrer">3-2-4.10種類の手書き数字を分類する</a>で作成した0〜9の10種類の手書き数字の分類を行うモデルは、テストデータでの精度が0.98と高い値となっていました。さらに高い精度を目指すことは可能でしょうか。
例えば、エポック数を増やすという方法が考えられます。先ほどのモデルではエポック数が5と比較的少なめなので、それを増やすことで精度は高められるかもしれません。また、畳み込み層（Conv2D）が1層なのでそれを増やすとか、その後のフルコネクトの層（Dense）を増やすという方法も考えられます。
こうした方法は、計算量が増えるため学習にかかる時間が伸びるという課題はありますが、まずは試してみたい方法です。
<h4>過学習</h4>
ただ、特にエポック数を増やすという方法にはデメリットもあります。それは訓練データによる学習を繰り返すほど、訓練データにモデルが最適化しすぎてしまい、テストデータで検証した精度が下がってしまうという問題です。これを過学習といいます。
機械学習やディープラーニングを用いて作成しているモデルは、それが分類のモデルであれ、予測のモデルであれ、未知のデータに対する分類または予測の精度が高いものであることが望ましいはずです。
過学習を防ぐ方法はいくつかあります。一つは訓練データとテストデータを分けて、テストデータを使って精度を評価することです。これは、いままでの演習でもやっています。訓練データを使って精度を評価すると、基本的にはエポック数を増やせば増やすほど精度が向上します。しかし、テストデータを使って精度を評価すると、どこかのエポックから精度が下がり始めるようになります。これが過学習が起きている状態ですから、その前のエポックで学習を止めてしまえば良いのです。
<h4>EarlyStopping</h4>
Kerasには過学習を防ぐ便利な方法があります。fitのコールバックとして<a href="https://keras.io/ja/callbacks/#earlystopping" target="_blank" rel="noopener noreferrer">EarlyStopping</a>を指定することで、エポック数を指定しなくても適切なタイミングで学習を打ち切ってくれます。
EarlyStoppingを行うには、学習を行う際に訓練データだけでなく検証データもセットする必要があります。検証データは訓練データとは別に準備することもできますが、<strong>fitでvalidation_split引数を指定することにより、訓練データを分割して検証データとして使用することができます。</strong>
ここで、検証データはテストデータとは別のものです。検証データは学習を行っている際に精度を評価するためのデータであり、テストデータはできあがった学習モデルの精度を評価するために使用します。
EarlyStoppingを適用した全体のコードを示します。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation, Conv2D, MaxPooling2D, Flatten
  <span class="hljs-keyword">from</span> keras.callbacks <span class="hljs-keyword">import</span> EarlyStopping
  model = Sequential()
  model.add(Conv2D(<span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), padding=<span class="hljs-string">'same'</span>, input_shape=(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)))
  model.add(MaxPooling2D(pool_size=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
  model.add(Flatten())
  model.add(Dense(<span class="hljs-number">128</span>))
  model.add(Activation(<span class="hljs-string">'relu'</span>))
  model.add(Dense(<span class="hljs-number">10</span>))
  model.add(Activation(<span class="hljs-string">'softmax'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'categorical_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
  <span class="hljs-comment"># 学習</span>
  model.fit(X_train, y_train, batch_size=<span class="hljs-number">32</span>, validation_split=<span class="hljs-number">0.25</span>, callbacks=[EarlyStopping()], verbose=<span class="hljs-number">1</span>)
  <span class="hljs-comment"># 評価</span>
  loss, accuracy = model.evaluate(X_test, y_test, verbose=<span class="hljs-number">0</span>)
  print(<span class="hljs-string">'Accuracy'</span>, <span class="hljs-string">'{:.2f}'</span>.format(accuracy))
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-7.png" alt="" width="1996" />
今回の実行例では、エポック数はわずか1回だけで学習が終了しました。EarlyStoppingではfitで出力されているloss（訓練データで評価した損失）の値をval_loss（検証データで評価した損失）の値が下回った場合、そこで学習を終了するようになっています。これは、EarlyStopping(monitor='val_acc')のように指定することで判断に使用する値を指定することができます。
<h4>Dropout</h4>
過学習に強く、精度を上げる方法として、<a href="https://keras.io/ja/layers/core/#dropout" target="_blank" rel="noopener noreferrer">Dropout</a>を使用することもあります。Dropoutは学習の際に、ランダムで一部のニューロンを無視するというものです。
ニューラルネットワークの構築では、複数の構造のニューラルネットワークを用いて分類や予測を行い、その平均値を結果とするアンサンブル学習という技術があります。Dropoutはランダムでニューラルネットワークの構造を変えて学習することになるため、アンサンブル学習の簡易版としての効果が期待できます。
3-2-4で作成したモデルをもとに、Dropoutを行ってみましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation, Conv2D, MaxPooling2D, Flatten, Dropout
  model = Sequential()
  model.add(Conv2D(<span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), padding=<span class="hljs-string">'same'</span>, input_shape=(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)))
  model.add(MaxPooling2D(pool_size=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
  model.add(Flatten())
  model.add(Dense(<span class="hljs-number">128</span>))
  model.add(Activation(<span class="hljs-string">'relu'</span>))
  model.add(Dropout(<span class="hljs-number">0.5</span>))
  model.add(Dense(<span class="hljs-number">10</span>))
  model.add(Activation(<span class="hljs-string">'softmax'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'categorical_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
  <span class="hljs-comment"># 学習</span>
  model.fit(X_train, y_train, batch_size=<span class="hljs-number">32</span>, epochs=<span class="hljs-number">5</span>, verbose=<span class="hljs-number">1</span>)
  <span class="hljs-comment"># 評価</span>
  loss, accuracy = model.evaluate(X_test, y_test, verbose=<span class="hljs-number">0</span>)
  print(<span class="hljs-string">'Accuracy'</span>, <span class="hljs-string">'{:.2f}'</span>.format(accuracy))
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/20180713_MNIST_CNN_-_IBM_Watson-2.png" alt="" width="1676" />
精度は0.98と3-2-4での実行例と同じになりましたが、訓練データを用いた精度（5エポック目のaccの値：0.9743）よりテストデータを用いた精度（0.98）の方が高くなっており、Dropoutを使用していない3-2-4（5エポック目のaccの値は0.9941で訓練データでの精度の方が高い）とは違う傾向が出ていることが分かります。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-3. 再帰型ニューラルネットワーク</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>3-3-1. 再帰型ニューラルネットワーク</div>
<div class="l-content--detail p-lesson">
ここまで、ディープラーニングの例として、畳み込みニューラルネットワークで画像を分類する方法について説明してきました。ディープラーニングの技術として、畳み込みニューラルネットワークは実績があり、多く用いられていますが、それ以外の技術も存在しています。また、畳み込みニューラルネットワークがどんなデータセットでもオールマイティに成果を出せるというわけではありません。
本節では、畳み込みニューラルネットワーク以外のディープラーニングの技術として、再帰型ニューラルネットワークについて説明します。
<h4>時系列のデータ</h4>
畳み込みニューラルネットワークが得意とするのは、基本的には2次元の平面（画像）や、3次元の空間といったデータです。用途の代表例は、前節までに取り上げた画像の分類です。一方、再帰型ニューラルネットワークが得意とするのは時系列のデータです。例えば、株価や為替のデータ、気温、売上高などが挙げられます。
ここでは説明を簡単にするために、正弦波にノイズを与えたものを使用します。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sin</span><span class="hljs-params">(x, T=<span class="hljs-number">100</span>)</span>:</span>
    <span class="hljs-keyword">return</span> np.sin(<span class="hljs-number">2.0</span> * np.pi * x / T)
  <span class="hljs-comment"># sin波にノイズを付与する</span>
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_data</span><span class="hljs-params">(T=<span class="hljs-number">100</span>, ampl=<span class="hljs-number">0.05</span>)</span>:</span>
    x = np.arange(<span class="hljs-number">0</span>, <span class="hljs-number">2</span> * T + <span class="hljs-number">1</span>)
    noise = ampl * np.random.uniform(low=<span class="hljs-number">-1.0</span>, high=<span class="hljs-number">1.0</span>, size=len(x))
    <span class="hljs-keyword">return</span> sin(x) + noise
  f = create_data()
</code></pre>
matplotlibで可視化すると、このようなグラフが表示されます。
<pre><code class="python hljs">
  %matplotlib inline
  <span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt
  plt.figure()
  plt.plot(range(<span class="hljs-number">0</span>, len(f)), f, color=<span class="hljs-string">"b"</span>, label=<span class="hljs-string">"created_sin"</span>)
  plt.legend()
  plt.show()
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/LSTM_sin_-_IBM_Watson.png" alt="" width="512" />
数値で表示すると、このようになります。
<pre><code class="python hljs">
  print(f)
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/LSTM_sin_-_IBM_Watson-1.png" alt="" width="640" />
＜参考＞
<ul>
 	<li><a href="http://www.numpy.org/" target="_blank" rel="noopener noreferrer">NumPy</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-3-2. 再帰型ニューラルネットワークの考え方</div>
<div class="l-content--detail p-lesson">
このような時系列のデータから特徴量抽出を行うのが再帰型ニューラルネットワークです。では、どのように特徴量抽出を行うのでしょうか。
まず、畳み込みニューラルネットワークの特徴量抽出について振り返ってみましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/cnn_03-1.png" alt="" width="742" />
畳み込みニューラルネットワークでは、上図のように3×3ピクセルといったサイズのフィルタで画像をスキャンすることにより、その範囲の特徴を抽出していきます。このことは、隣り合ったピクセルは基本的に似ていて、ときおり大きく異なったピクセルの並びが現れるという画像の特性に依存しています。例えば、山と空が写った画像があるとすると、山が写っている部分、空が写っている部分の隣り合ったピクセルは、色合いが似ています。しかし、山と空の境界線部分は色合いが大きく異なるでしょう。それを画像の特徴として抽出するのが畳み込みニューラルネットワークの考え方です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/rnn.png" alt="" width="1065" />
次に、時系列データについて見てみましょう。上図左の赤でプロットされた値は、その前にある緑でプロットされた複数の値に注目すれば予想できそうです。さらに、上図右のように1つずつ値を順に移して、どのように値が変化していくかを学習していけば、この時系列データの特徴を抽出することができるかもしれません。こうした考え方に基づいて特徴量抽出を行うアルゴリズムが再帰型ニューラルネットワークです。
ここで、各時点で赤でプロットした値を目的変数、緑でプロットした値を説明変数として用います。画像の分類のように目的変数は1つではなく、一つ前の目的変数が次の説明変数となり、それをデータが終わるまで繰り返して学習していくので「再帰型（Recurrent）」という名前が付いています。
本節では、再帰型ニューラルネットワークのうち、LSTMというアルゴリズムを用いて、正弦波のデータを予測するモデルを作成します。
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-3-3. LSTMで予測モデルを作成</div>
<div class="l-content--detail p-lesson">
<h4>訓練データの作成</h4>
先ほどの正弦波のデータから訓練データを作成します。
<pre><code class="python hljs">
  X = []
  y = []
  STEPS = <span class="hljs-number">25</span>
  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(f) - STEPS):
    X.append(f[i:i + STEPS])
    y.append(f[i + STEPS])
  X = np.array(X).reshape(len(X), STEPS, <span class="hljs-number">1</span>)
  y = np.array(y).reshape(len(y), <span class="hljs-number">1</span>)
</code></pre>
前項で説明したように、再帰型ニューラルネットワークでは時系列のグラフ上で、目的変数にあたる値から、過去方向のいくつかの値を説明変数とします。どの程度の数の値を学習に用いるかをSTEPSという定数で定義しています。ここでは25時点前までの値を用いることにしました。
実際に値を見て、確認します。
<pre><code class="python hljs">
  print(X[<span class="hljs-number">0</span>])
  print(y[<span class="hljs-number">0</span>])
  print(X[<span class="hljs-number">1</span>])
  print(y[<span class="hljs-number">1</span>])
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/rnn-1.png" alt="" width="707" /></figure>
<h4>LSTMを用いた予測モデルの作成</h4>
LSTMを用いた予測モデルを作成します。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers.core <span class="hljs-keyword">import</span> Dense, Activation
  <span class="hljs-keyword">from</span> keras.layers.recurrent <span class="hljs-keyword">import</span> LSTM
  model = Sequential()
  model.add(LSTM(<span class="hljs-number">32</span>, batch_input_shape=(<span class="hljs-keyword">None</span>, STEPS, <span class="hljs-number">1</span>), return_sequences=<span class="hljs-keyword">False</span>))
  model.add(Dense(<span class="hljs-number">1</span>))
  model.add(Activation(<span class="hljs-string">"linear"</span>))
  model.compile(loss=<span class="hljs-string">"mean_squared_error"</span>, optimizer=<span class="hljs-string">'adam'</span>)
</code></pre>
可視化すると、下図のような設計のニューラルネットワークであることが分かります。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> IPython.display <span class="hljs-keyword">import</span> SVG
  <span class="hljs-keyword">from</span> keras.utils.vis_utils <span class="hljs-keyword">import</span> model_to_dot
  SVG(model_to_dot(model, show_shapes=<span class="hljs-keyword">True</span>).create(prog=<span class="hljs-string">'dot'</span>, format=<span class="hljs-string">'svg'</span>))
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/LSTM_sin_-_IBM_Watson-2.png" alt="" width="424" />
<a href="https://keras.io/ja/layers/recurrent/#lstm" target="_blank" rel="noopener noreferrer">LSTM</a>で特徴量抽出した後は、フルコネクトのニューラルネットワーク（Dense）レイヤーを追加しています。これまでのような分類（離散値の予測）ではなく、値を予測する（連続値の予測）ため、出力ユニット数は1にしています。また、活性化関数は、出力値を変換しない線形活性化（linear）を用いました。Denseの出力はもともと連続値であるため、分類の時のように出力値を変換する必要がありません。損失関数には平均二乗誤差（mean_squared_error）としました。
<h4>学習と評価</h4>
まず、学習を行います。
<pre><code class="python hljs">
  model.fit(X, y, batch_size=<span class="hljs-number">300</span>, epochs=<span class="hljs-number">100</span>, verbose=<span class="hljs-number">1</span>)
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/LSTM_sin_-_IBM_Watson-3.png" alt="" width="630" /></figure>
学習が終わったら、実際に値を予測してグラフを描画します。
<pre><code class="python hljs">
  predicted = model.predict(X)
  plt.figure()
  plt.plot(range(STEPS, len(predicted) + STEPS), predicted, color=<span class="hljs-string">"r"</span>, label=<span class="hljs-string">"predicted"</span>)
  plt.plot(range(<span class="hljs-number">0</span>, len(f)), f, color=<span class="hljs-string">"b"</span>, label=<span class="hljs-string">"created_sin"</span>)
  plt.legend()
  plt.show()
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/LSTM_sin_-_IBM_Watson-4.png" alt="" width="711" />
青い線で描かれたグラフがもともとの正弦波（ノイズを与えたもの）、赤い線で描かれたグラフが今回作成したモデルで予測された値です。概ね、うまく予測されていることが分かります。
＜参考＞
<ul>
 	<li><a href="https://keras.io/ja/" target="_blank" rel="noopener noreferrer">Keras</a></li>
 	<li><a href="http://www.numpy.org/" target="_blank" rel="noopener noreferrer">NumPy</a></li>
</ul>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>
<div class="l-content--detail p-lesson">
<div>3-4. 章末テスト</div>
<div class="l-content--detail p-lesson">
10個のファッションカテゴリの白黒画像によるデータセットであるFashion-MNISTを用いて、分類を行うモデルを作成し、精度を評価してください。
ニューラルネットワークは少なくとも下記の3つを作成し、比較してください。（EarlyStoppingやDropoutも使用してみましょう。）
<ul>
 	<li>畳み込みを行わないニューラルネットワーク</li>
 	<li>畳み込みを1層行ったニューラルネットワーク</li>
 	<li>畳み込みを2層以上行ったニューラルネットワーク</li>
</ul>
Fashion-MNISTは、Kerasを用いてダウンロードすることができます。詳細は、<a href="https://keras.io/ja/datasets/" target="_blank" rel="noopener noreferrer">https://keras.io/ja/datasets/</a>のFashion-MNISTの説明を参照してください。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> keras.datasets <span class="hljs-keyword">import</span> fashion_mnist
  (x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()
</code></pre>
</div>
<a class="c-button--learn c-button--learn--not-yat">習得したのでクリック</a>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2373</wp:post_id>
		<wp:post_date><![CDATA[2019-02-15 10:21:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 01:21:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2373-2]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:86:"https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>4. 学習モデルのデプロイ（API化）</title>
		<link>https://tech.blog.uribou.me/post-2386/</link>
		<pubDate>Sun, 24 Feb 2019 12:42:10 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2386</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="c-title--primary">4. 学習モデルのデプロイ（API化）</h1>
<div class="l-content--detail p-lesson"></div>
<div class="l-content--detail p-lesson">
<div>4-1. Watson Machine Learningを用いたモデルのAPI化</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>4-1-1. 学習モデルのデプロイ</div>
<div class="l-content--detail p-lesson">
第3章では、TensorFlowとKerasを用いて画像認識などのモデルを作成しました。このモデルを実際の業務システムやWebサービスで活用するには、どうすれば良いのでしょうか。
例えば、Kerasでは下記のようにすると作成したモデルを保存することができます。それを都度読み込んで、与えられたデータで予測を行えば、業務システムやWebサービスに組み込むことができるでしょう。
<pre><code class="python hljs">
  model.save(<span class="hljs-string">'＜保存先のファイルパス＞'</span>)
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-8.png" alt="" width="1618" /></figure>
また、作成したモデルをクラウド上に配置することもできます。例えば、IBM CloudではWatson Machine Learning（ML）というサービスを使うと、モデルをWeb API化することができます。
本章では、Watson Machine Learningを活用したWeb API化について説明します。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-1-2. Watson MLを使用したWeb API化</div>
<div class="l-content--detail p-lesson">
<h4>Watson MLの準備</h4>
まず、Watson StudioのプロジェクトにWatson Machine Learningのインスタンスを紐付けます。
プロジェクトのSettings画面を開きます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson.png" alt="" width="2636" />
画面下部のAssociated Servicesの欄にあるAdd serviceから、Watsonをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-16.png" alt="" width="2878" />
Machine LearningのAddをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-18.png" alt="" width="2878" />
NewタブからLiteプランを選択してインスタンスを作成するか、既にWatson Machine Learningのインスタンスが存在する場合はExistingタブで選択して、プロジェクトとWatson Machine Learningを紐付けます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-19.png" alt="" width="2878" />
<h4>Cloud Object Storage (COS)の準備</h4>
Watson MLでは、訓練データと作成したモデルの保存場所と、訓練結果の保存場所をCOS上にそれぞれ準備しておく必要があります。
IBM Cloudのダッシュボードから作成済みのCOSの管理画面を開き、バケットを作成します。
バケットの作成をクリックし、2つのバケットを作成します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/Cloud_Object_Storage_-_IBM_Cloud-2.png" alt="" width="2878" />
バケットの名前は、下記のように分かりやすいように適宜付けてください。
<ul>
 	<li>訓練データと作成したモデルの保存用（データ用バケット）：ki-dlaas-data</li>
 	<li>訓練結果の保存用（結果用バケット）：ki-dlaas-result</li>
</ul>
Watson Studioの地域を米国南部しているため、ロケーションはus-geoを選んでおきましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/Cloud_Object_Storage_-_IBM_Cloud-3.png" alt="" width="2878" />
データ用バケットには、MNISTのデータセットをあらかじめアップロードしておく必要があります。アップロードするファイルは、<a href="https://dataplatform.ibm.com/exchange/public/entry/view/903188bb984a30f38bb889102a1baae5" target="_blank" rel="noopener noreferrer">こちらのページ</a>からダウンロードすることができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-2-1.png" alt="" width="2618" />
ダウンロードしたMNIST-plk.zipを展開し、下記の2つのファイルをデータ用バケットにアップロードします。
<ul>
 	<li>mnist-tf-train.pkl</li>
 	<li>mnist-tf-test.pkl</li>
</ul>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/Cloud_Object_Storage_-_IBM_Cloud-1.png" alt="" width="2618" /></figure>
<h4>Pythonスクリプトの準備</h4>
Watson MLにデプロイするモデルは、Watson ML上で学習させる必要があるため、学習の手順をPythonスクリプトにまとめる必要があります。
下記のようなファイルを作成し、mnist-cnn.pyというファイル名で保存してください。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> os
  <span class="hljs-keyword">import</span> sys
  <span class="hljs-keyword">import</span> pickle
  <span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> path, environ
  <span class="hljs-keyword">from</span> keras.datasets <span class="hljs-keyword">import</span> mnist
  <span class="hljs-keyword">from</span> keras.utils <span class="hljs-keyword">import</span> to_categorical
  <span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
  <span class="hljs-keyword">from</span> keras.layers <span class="hljs-keyword">import</span> Dense, Activation, Conv2D, MaxPooling2D, Flatten
  <span class="hljs-keyword">from</span> keras.callbacks <span class="hljs-keyword">import</span> EarlyStopping, TensorBoard
  <span class="hljs-keyword">from</span> keras.utils <span class="hljs-keyword">import</span> np_utils
  DATA_DIR = os.environ[<span class="hljs-string">"DATA_DIR"</span>]
  RESULT_DIR = os.environ[<span class="hljs-string">"RESULT_DIR"</span>]
  JOB_STATE_DIR = os.environ[<span class="hljs-string">"JOB_STATE_DIR"</span>]
  <span class="hljs-comment"># データセットの準備</span>
  os.chdir(DATA_DIR)
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'mnist-tf-train.pkl'</span>, <span class="hljs-string">'rb'</span>) <span class="hljs-keyword">as</span> f:
    X_train, y_train = pickle.load(f)
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'mnist-tf-test.pkl'</span>, <span class="hljs-string">'rb'</span>) <span class="hljs-keyword">as</span> f:
    X_test, y_test = pickle.load(f)
  <span class="hljs-comment"># shape[0]はデータの個数、(28, 28)を(28, 28, 1)に</span>
  X_train = X_train.reshape(X_train.shape[<span class="hljs-number">0</span>], <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)
  X_test = X_test.reshape(X_test.shape[<span class="hljs-number">0</span>], <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)
  <span class="hljs-comment"># データの正規化</span>
  X_train =  X_train / <span class="hljs-number">255</span>
  X_test = X_test / <span class="hljs-number">255</span>
  <span class="hljs-comment"># One-Hot形式に変換</span>
  y_train = to_categorical(y_train, <span class="hljs-number">10</span>)
  y_test = to_categorical(y_test, <span class="hljs-number">10</span>)
  <span class="hljs-comment"># モデルの作成</span>
  model = Sequential()
  model.add(Conv2D(<span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), padding=<span class="hljs-string">'same'</span>, input_shape=(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)))
  model.add(MaxPooling2D(pool_size=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
  model.add(Flatten())
  model.add(Dense(<span class="hljs-number">128</span>))
  model.add(Activation(<span class="hljs-string">'relu'</span>))
  model.add(Dense(<span class="hljs-number">10</span>))
  model.add(Activation(<span class="hljs-string">'softmax'</span>))
  model.compile(optimizer=<span class="hljs-string">'adam'</span>, loss=<span class="hljs-string">'categorical_crossentropy'</span>, metrics=[<span class="hljs-string">'accuracy'</span>])
  <span class="hljs-comment"># TensorBoard</span>
  tb_directory = os.path.join(JOB_STATE_DIR, <span class="hljs-string">"logs"</span>, <span class="hljs-string">"tb"</span>, <span class="hljs-string">"test"</span>)
  os.makedirs(tb_directory, exist_ok=<span class="hljs-keyword">True</span>)
  tensorboard = TensorBoard(log_dir=tb_directory)
  <span class="hljs-comment"># 学習</span>
  model.fit(X_train, y_train, batch_size=<span class="hljs-number">32</span>, validation_split=<span class="hljs-number">0.25</span>, callbacks=[EarlyStopping(), tensorboard], verbose=<span class="hljs-number">1</span>)
  <span class="hljs-comment"># 評価</span>
  model.evaluate(X_test, y_test, verbose=<span class="hljs-number">0</span>)
  <span class="hljs-comment"># モデルの保存</span>
  model_result_path = path.join(RESULT_DIR, <span class="hljs-string">"model"</span>, <span class="hljs-string">'MNIST-CNN.h5'</span>)
  os.makedirs(path.dirname(model_result_path), exist_ok=<span class="hljs-keyword">True</span>)
  model.save(model_result_path)
</code></pre>
「データセットの準備」は、先ほどCOSのデータ用バケットにアップロードしたファイルをWatson ML環境上にダウンロードしています。その後、データの正規化やOne-Hot形式への変換、モデルの作成（model.compileまで）は、これまでの演習と同様です。
Watson MLではKerasのTensorBoardコールバックを追加しておくと、学習状況を可視化する機能があるので、その準備も行っています。
学習と評価についても演習と同様です。最後に、作成したモデルを、データ用バケットに保存しています。
このファイルをZip形式で圧縮します。mnist-cnn.zipというファイル名にしました。
<h4>Training Definitionの作成</h4>
Watson StudioでNotebookを新規作成し、Dataアイコンから先ほど作成したmnist-cnn.zipをCOSにアップロードします。
次に、Notebookの環境上にダウンロードします。COSにアップロードしたmnist-cnn.zipのInsert Credentialsをクリックするとコードが自動的に挿入されるので、その後に、下記のコードを追記します。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> ibm_boto3
  <span class="hljs-keyword">from</span> ibm_botocore.client <span class="hljs-keyword">import</span> Config
  <span class="hljs-keyword">import</span> json
  cos = ibm_boto3.client(service_name=<span class="hljs-string">'s3'</span>,
    ibm_api_key_id=credentials_1[<span class="hljs-string">'IBM_API_KEY_ID'</span>],
    ibm_service_instance_id=credentials_1[<span class="hljs-string">'IAM_SERVICE_ID'</span>],
    ibm_auth_endpoint=credentials_1[<span class="hljs-string">'IBM_AUTH_ENDPOINT'</span>],
    config=Config(signature_version=<span class="hljs-string">'oauth'</span>),
    endpoint_url=credentials_1[<span class="hljs-string">'ENDPOINT'</span>])
  cos.download_file(Bucket=credentials_1[<span class="hljs-string">'BUCKET'</span>], Key=credentials_1[<span class="hljs-string">'FILE'</span>], Filename=credentials_1[<span class="hljs-string">'FILE'</span>])
  !ls -la
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/CNN_MNIST_20180706_-_IBM_Watson.png" alt="" width="1270" />
Training DefinitionはWatson MLのPython SDKを使って行います。Watson MLのサービス資格情報を使用して、WatsonMachineLearningAPIClientのインスタンスを作成します。
Watson MLのサービス資格情報は、IBM CloudのダッシュボードからWatson MLのインスタンスを開き、Service credentialsタブで表示することができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/Service_Details_-_IBM_Cloud.png" alt="" width="1270" />
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> watson_machine_learning_client <span class="hljs-keyword">import</span> WatsonMachineLearningAPIClient
  wml_credentials = {
    <span class="hljs-string">"username"</span>: <span class="hljs-string">"＜Watson MLのusername＞"</span>,
    <span class="hljs-string">"password"</span>: <span class="hljs-string">"＜Watson MLのpassword＞"</span>,
    <span class="hljs-string">"instance_id"</span>: <span class="hljs-string">"＜Watson MLのinstance_id＞"</span>,
    <span class="hljs-string">"url"</span>: <span class="hljs-string">"https://ibm-watson-ml.mybluemix.net"</span>
  }
  client = WatsonMachineLearningAPIClient(wml_credentials)
  print(client.version)
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/deploy_model_-_IBM_Watson-1.png" alt="" width="1412" /></figure>
Training Definitionを登録します。最後のEXECUTION_COMMANDで、先ほど作成したmnist-cnn.pyを実行するように指定しています。
<pre><code class="python hljs">
  model_definition_metadata = {
    client.repository.DefinitionMetaNames.NAME: <span class="hljs-string">"CNN MNIST"</span>,
    client.repository.DefinitionMetaNames.FRAMEWORK_NAME: <span class="hljs-string">"tensorflow"</span>,
    client.repository.DefinitionMetaNames.FRAMEWORK_VERSION: <span class="hljs-string">"1.5"</span>,
    client.repository.DefinitionMetaNames.RUNTIME_NAME: <span class="hljs-string">"python"</span>,
    client.repository.DefinitionMetaNames.RUNTIME_VERSION: <span class="hljs-string">"3.5"</span>,
    client.repository.DefinitionMetaNames.EXECUTION_COMMAND: <span class="hljs-string">'python3 mnist-cnn.py'</span>
    }
<span class="hljs-comment"># 定義ファイルの登録</span>
definition_details = client.repository.store_definition(<span class="hljs-string">'mnist-cnn.zip'</span>, model_definition_metadata)
<span class="hljs-comment"># 結果表示</span>
<span class="hljs-keyword">import</span> json
print(json.dumps(definition_details, indent=<span class="hljs-number">2</span>))
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/deploy_model_-_IBM_Watson-2.png" alt="" width="2036" /></figure>
<h4>Experimentの作成と実行</h4>
次に、Experimentを作成します。Experimentは先ほど登録したTraining Definitionをどのように実行するかを定義します。
Experimentの作成は、Watson Studioのプロジェクト画面で行います。
Assetsタブを開き、New Experimentをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-3.png" alt="" width="2620" />
Add training definitionをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-4.png" alt="" width="2620" />
Training Definitionは先ほど登録したものがあるので、Existing training definitionタブを開き、先ほど登録したCNN MNISTを選択します。
Compute planは、1 x NVIDIA Tesla K80 (2 GPU)を選択しました。
最後に、Selectボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-5.png" alt="" width="2620" />
次に、Cloud Object Storage bucket for storing training source and results filesという欄の下にあるSelectをクリックして、COSのバケット指定画面に移ります。
まずNew connectionタブを開き、COSのインスタンス、データ用バケット、結果用バケットを順に選択して、Cerateボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-6.png" alt="" width="2620" />
適当な名前を付けて、Create and runボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-7.png" alt="" width="2620" />
モデルの学習が始まります。Queued→In Progress→Completedと順に進んでいきます。CompletedでのSTATUS欄の表示がcompletedになれば学習完了です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-8.png" alt="" width="2620" />
<h4>Modelの保存</h4>
モデルの学習が終わったら、そのモデルを保存します。Experiment画面のCompletedにあるモデルCNN MNISTのACTIONSメニューからSave modelをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-9.png" alt="" width="2620" />
モデルの保存が終わると、Watson Studioのプロジェクト画面にあるModelsに表示されるようになります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-10.png" alt="" width="2620" />
<h4>Modelのデプロイ</h4>
Watson Studioのプロジェクト画面にあるModelsから、CNN MNISTをクリックしてModel画面を表示します。
モデルをデプロイするには、Deploymentタブを開いて、Add Deploymentをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-11.png" alt="" width="2620" />
Create Deployment画面で、適当な名前を付け、Deployment typeとしてWeb serviceを選択して、Saveボタンをクリックすると、モデルのデプロイが始まります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-12.png" alt="" width="2620" />
しばらく待っていると、STATUSがDEPLOY_SUCCESSに変わります。これで、モデルのデプロイの完了です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-13.png" alt="" width="2620" />
<h4>デプロイされたAPIのテスト</h4>
デプロイされたWeb serviceの画面を開くと、概要（Overview）やAPIの呼び出し方の説明（Implement）を参照することができます。ここでは、TestタブをクリックしてAPIのテストを行いましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-14.png" alt="" width="2620" />
TestタブではJSONデータをモデルに渡して分類や予測を行わせることができます。テスト用のJSONデータを作成するため、Notebookを開きます。
まず、Kearsを使ってMNISTのデータセットをダウンロードします。
<pre><code class="python hljs">
  %matplotlib inline
  <span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt
  <span class="hljs-keyword">from</span> keras.datasets <span class="hljs-keyword">import</span> mnist
  (X_train, y_train), (X_test, y_test) = mnist.load_data()
  print(y_test[<span class="hljs-number">0</span>])
  plt.imshow(X_test[<span class="hljs-number">0</span>])
  plt.show()
</code></pre>
最初のテストデータ（X_test[0]）は「7」のようです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/deploy_model_-_IBM_Watson-3.png" alt="" width="1288" />
このデータをテスト用のJSONデータに変換します。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> json
  value = X_test[<span class="hljs-number">0</span>].reshape(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)
  value = value.astype(<span class="hljs-string">'float32'</span>) / <span class="hljs-number">255</span>
  value = value.reshape(<span class="hljs-number">1</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)
  value = value.tolist()
  params = {
    <span class="hljs-string">'values'</span>: value
  }
  print(json.dumps(params))
</code></pre>
これを実行して表示されたJSONデータをクリップボードにコピーしておきます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/deploy_model_-_IBM_Watson-4.png" alt="" width="2098" />
APIのテスト画面に戻り、Enter input data欄にコピーしておいたJSONデータを貼り付けます。後は、Predictボタンをクリックすれば分類・予測が開始されます。
結果は画面の右に表示されます。2つ目の項目（prediction_classes）の値が分類された結果です。ちゃんと「7」と分類されていることが分かります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/IBM_Watson-15.png" alt="" width="2636" />
</div>
<div class="c-course-learn c-course-learn--compleated"></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2386</wp:post_id>
		<wp:post_date><![CDATA[2019-02-24 21:42:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-24 12:42:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-2386]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:88:"https://writing.itprocollege.com/wp-content/uploads/2018/06/MNIST_CNN_-_IBM_Watson-8.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>5. コグニティブAPIを活用したアプリ開発</title>
		<link>https://tech.blog.uribou.me/post-2388/</link>
		<pubDate>Sun, 24 Feb 2019 23:54:45 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2388</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="c-title--primary">5. コグニティブAPIを活用したアプリ開発</h1>
<div class="l-content--detail p-lesson"></div>
<div class="l-content--detail p-lesson">
<div>5-1. Watson Conversation（チャットボット）</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>5-1-1. Watson Assistant</div>
<div class="l-content--detail p-lesson">
昨今、様々な分野でAIが実用化されていますが、よく聞く分野の一つはチャットボットでしょう。労働者人口の減少が叫ばれている社会情勢や、AIを実際に活用する際に最も取りかかりやすい技術であることなどが、その背景といえます。
例えば、MicrosoftがLINEなどで提供している女子高生AI「りんな」は、その最たるものでしょう。ただ、りんなは、できるだけ会話を長引かせることを目的としており、その他の多くの企業が提供しているチャットボットとは趣が異なります。IBM Watsonのチャットボット開発用サービスであるWatson Assistantは、日本航空やオートバックスといった企業が採用し、チャットボットを公開しています。こうした一般企業のチャットボットは、ユーザーが何らかの問題を抱えた際に解決する手段として、例えばコールセンターに電話をしたり、サポート窓口にメールをしたりすることの代替として提供されています。つまり、会話を長引かせることよりも、できるだけスピーディーに問題を解決し、会話を終わらせることを目的としているのです。
本章では、Watson Assistantを用いた、いわゆる問題解決型のチャットボットを開発することにしましょう。
<h4>Watson Assistantの構造</h4>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/DraggedImage.png" alt="" width="377" />
何らかの店舗がチャットボットを提供することを考えてみましょう。ユーザーが「新宿にある店舗の場所を教えて欲しい」という問いかけをした場合、チャットボットはなんと回答すれば良いでしょうか。おそらく「新宿駅の近くで、住所は新宿区新宿･･･」といったものです。ユーザーの問いかけから、「店舗場所の照会」であることと、この店舗がチェーン店などで複数の場所に店舗を持っている場合は「新宿」という地名を読み取ることができれば、回答を準備することができます。
Watson Assistantでは、「店舗場所の照会」といったユーザーの問いかけから読み取る意図をIntent、「新宿」といった地名のような情報をEntityと呼びます。
こうしたIntentとEntityに、チャットボットが行うべき回答を組み合わせて、会話の流れをDialogとして作ります。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-1-2. Watson Assistantの使用準備とWorkspaceの作成</div>
<div class="l-content--detail p-lesson">
Watson Assistantを使用するためには、IBM CloudのカタログからWatson Assistantをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/watson_assistant.png" alt="" width="1152" />
Watson Assistantのインスタンス作成画面が表示されたら「作成」をクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Watson_Assistant_-_IBM_Cloud.png" alt="" width="1152" />
Watson Assistantのインスタンス画面が表示されたら「ツールの起動」をクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/watoson_assistant.png" alt="" width="1160" />
<h4>Workspaceの作成</h4>
Watson Assistantでは、チャットボットをWorkspaceという単位で作成します。Workspaceタブを開き、Createボタンをクリックして、Workspaceの新規作成を行います。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant.png" alt="" width="1160" />
ここでは店舗の照会などを行うチャットボットを想定し、ShopSiteBotという名前を付けてWorkspaceを作成します。使用する言語は、自動的にJapaneseが選択されているでしょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-1.png" alt="" width="1160" />
<h4>Dialogの初期作成と会話</h4>
Workspaceが開いたらDialogタブを開き、画面中央に表示されているCreateボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-2.png" alt="" width="1160" />
「ようこそ」と「その他」というノードが追加されたDialogが自動作成されます。ノードはDialogが処理を行う単位です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-3.png" alt="" width="1160" />
まずは会話を試してみることにしましょう。画面右上のTry itボタンをクリックすると、会話が始まります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-4-2.png" alt="" width="1160" />
このように、何を問いかけても「解釈できませんでした」と言われてしまいますが、会話は一応成立しています。ここから、IntentやDialogなどの追加を行い、きちんと会話できるチャットボットを育てていきます。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-1-3. Intentを作る</div>
<div class="l-content--detail p-lesson">
Intentは問いかけの意図を認識します。Business編を受講した方はWatson NLC（Natural Language Classifier）の実習を行っていますが、それと似たような機能が組み込まれています。「営業時間を教えてください」、「いつから開いていますか」、「いつまで開いていますか」といった文章を「営業時間」というクラスで分類すれば、問いかけの意図が分かりますが、この「営業時間を教えてください」のような文章を訓練データ、「営業時間」を教師データとして自然言語分類のモデルを作成するのです。
NLCでいう訓練データに相当する文章をWatson AssistantではUser Example、教師データに相当するクラスをIntentといいます。
Intentを作成するには、WorkspaceのIntentsタブを開き、最初はAdd intentボタンをクリックします。
Intent nameとして「営業時間」とクリックし、Create intentボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-5.png" alt="" width="1160" />
Intentが作成され、User Exampleの追加が可能になります。「営業時間を教えてください」などの文章を入力し、Add exampleボタンをクリックします。同様に、いくつかのUser Exampleを追加していきましょう。最初は3〜4個程度の文章があれば充分です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-6.png" alt="" width="1160" />
IntentとUser Exampleを追加した後で、画面右上のTry itをクリックし、会話を試そうとすると、下図のようにWatson is trainingと表示されていることがあります。Watson AssistantではWorkspaceに変更が加えられる度に自動的に学習が始まり、モデルの更新が行われます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-7.png" alt="" width="1154" />
Watson is trainingの表示が消えた後で「営業時間はいつですか」と聞いてみましょう。チャットボットからの返答は相変わらず「解釈できませんでした」となっていますが、「営業時間はいつですか」という問いかけの下に「#営業時間」と表示されていることに注目してください。
上手い回答はできませんでしたが、営業時間について問われているという問いかけの意図はきちんと認識できているのです。あとは、そうした問いかけが行われた場合に、どのような回答をすれば良いかを教えれば良いのです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-8.png" alt="" width="1152" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-1-4. Dialogを作る：簡単な会話</div>
<div class="l-content--detail p-lesson">
私たちのチャットボットはまだ上手く回答できませんが、問いかけの意図は認識できるようになりました。次に、どのように回答すれば良いかを教えていくことにしましょう。
WorkspaceのDialogタブを開き、既存の「ようこそ」ノードをクリックしてからAdd nodeボタンをクリックします。「ようこそ」ノードの下に新しいノードが追加されます。下図のように、If bot recognizes:に「#営業時間」、Then respond with:に「朝の10時から夜の8時までです」と入力します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-9.png" alt="" width="1160" />
Try itボタンをクリックして会話を試してみましょう。きちんと、回答が返ってくることが確認できるでしょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-10.png" alt="" width="1160" />
<h4>ノードの構造</h4>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/dialog_node.png" alt="" width="952" />
Dialogのノードの構造について整理しておきます。If bot recognizedは、認識したIntentやEntityを用いて条件判定を行います。既定の条件として、welcomeは会話の最初、anything_elseは、ノードを上から順に判定して、どのノードの条件にも合致しない場合に実行されます。Dialogを初期作成した際に自動的に作成される2つのノードは、この2つです。
Then respond withは、条件に合致した場合に、チャットボットがどのような回答を行うかを示します。その候補は複数準備することができ、複数の候補を順に使用する（sequential）かランダムに使用する（random）かを指定することができます。
また、チャットボットが既存のFAQなどのナレッジデータベースをもとに回答する必要がある場合などは、Dialogにすべての回答を追加することは現実的ではありません。そこで、回答そのものは他システムと連携して取得し、Watson Assistantは会話の流れを制御することに専念することがあります。その場合は、Then respond withの中でJSONコードを記述し外部システムを呼び出すことができます。（<a href="https://graspy.jp/lesson/5/chapter/35#sub_384">5-3-2でWatson AssistantとDiscoveryの連携</a>を説明しています。）
＜演習＞
<ul>
 	<li>このチャットボットが店舗の場所についても回答できるようにしてください。店舗は1つ（チェーン店のように複数店舗は展開していない）として「新宿駅の近くにあります」と回答するようにしてください。</li>
 	<li>Intent名は「#店舗照会」にしてください。</li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-1-5. Entityの作成</div>
<div class="l-content--detail p-lesson">
ここまでに作成したチャットボットは一問一答の単純なものでした。では、予約をする場合はどのような会話になるでしょうか？少なくとも、来店日時と予約する人の名前を聞き出す必要があります。そのような会話を行う場合は、どのようなDialogを作成すれば良いのでしょうか。また、来店日時や人の名前はどのように認識して覚えておけば良いのでしょうか。
まず、日時と人の名前を認識できるようにEntityを作成します。日時はWatson Assistantに組み込みの機能があるので、それを使います。
WorkspaceのEntitiesタブを開き、さらにSystem Entitiesタブを開きます。
日付は@sys-date、時刻は@sys-timeという組み込みEntityがあるので、それぞれOnにします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-11.png" alt="" width="1167" />
次に人の名前を認識します。組み込みEntityは準備されていないのでMy Entitiesタブを開いて、Add entityをクリックし、独自のEntityを作成します。正規表現で下図のように設定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-12.png" alt="" width="1167" />
Entity名として@contact-info、Entity Valueとしてnameを設定し、認識するパターンとして[私|僕|俺]?[の|は]?(名前は)?(.*?)(です|だ)?(よ)?$のようにしました。こうすると、例えば「私の名前は井上です」という文章から「井上」という名前の部分のみを抜き出すことができます。
Entityは、Entity Valueとして、正規表現を使用するPatternsタイプと、値そのものを指定するSynonimsタイプがあります。Synonimsタイプは類義語を指定することもできます。例えば「ピザの商品名」というSynonimsタイプのEntityを作成した場合、「ジャーマン」というEntity Valueを作成し、その類義語として「ジャガイモのピザ」を追加するといったものです。この場合「ジャーマン」と「ジャガイモのピザ」のどちらでも、チャットボットは「ジャーマン」というEntity Valueを認識します。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-1-6. Dialogを作る：複雑な会話</div>
<div class="l-content--detail p-lesson">
Entityの準備が終わったところで、Dialogに予約のノードを追加することにしましょう。
先に「#予約」のIntentを追加した後で（Intentの追加はこれまでに説明したとおりです）、それに対応するDialogノードを追加していきます。
これまでに作成した#営業時間または#店舗照会のノードの下に、#予約ノードを追加し、下図のように設定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-13.png" alt="" width="1167" />
予約の際にはまず「いつの予約をお取りしますか？」と日時についての質問を返しました。チャットボットのユーザーはその回答をするはずなので、それを受けるノードは、#予約ノードの子ノードとして設定します。ノードの右にある○が縦に3つ並んでいるボタンでサブメニューを表示して、Add child nodeボタンをクリックすると子ノードを追加できます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-14.png" alt="" width="1167" />
子ノードの設定を下図のように行います。If bot recognizes:では、@sys-dateと@sys-timeの両方のEntityを認識できた場合としました。@sys-dateを指定した後に「＋」ボタンをクリックすると2つ目の条件を指定することができるようになるので、そこに@sys-timeを指定します。また、この2つの値をAND条件で判定したいので、そのように指定します。
次に、Then respond with:の右にあるサブメニューを開いて、Open context editorをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-15.png" alt="" width="1167" />
Context editorでは、Entityで認識した値などを変数にセットすることができます。ここでは、$date変数に@sys-dateで認識した値、$time変数に@sys-timeで認識した値をセットしました。（変数の追加は、Add variableリンクをクリックします。）
さらに、And respond with:に「&lt;? $date ?&gt;の&lt;? $time ?&gt;ですね。お名前を教えてください。」とセットしました。このようにすると、$dateと$timeの2つの変数にEntityで認識した値をセットした後に、その値を使った文章を回答にすることができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-16.png" alt="" width="1167" />
Dialogの動作は、基本的にはノードの処理が終わった後に1階層目の先頭（welcomeノードの上）に戻ります。しかし、予約については子ノードで処理を継続したいので、そのように設定する必要があります。#予約ノードのサブメニューを表示し、Jump toをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-17.png" alt="" width="1167" />
子ノードである@sys-date and @sys-timeで処理させたいので、そのノードをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-18.png" alt="" width="1167" />
Wait for user inputを選択します。これは、#予約ノードで「いつの予約をお取りしますか？」のようにユーザーに追加の質問を投げかけているため、ユーザーからの回答を待ってから処理したいためです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-19.png" alt="" width="1167" />
ここまで進めたら会話を試してみましょう。日時がきちんと認識されていることが分かると思います。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-20.png" alt="" width="1167" />
ところで、「いつの予約をお取りしますか？」とユーザーに問いかけたところで、ユーザーがきちんと回答してくれるかは分かりません。つまり、@sys-date and @sys-timeという子ノードの条件を満足しないことがあるということです。それに対応するため、下図のようにノードを追加します。
If bot recognizes:は、@sys-date and @sys-timeに合致しない場合なのでanything_elseを指定します。また、このノードでの「予約の日時が認識できませんでした。日時を入力してください。」に対する回答を待って、再び@sys-date and @sys-timeの条件に合致するか判定したいので、Jump toをそのように指定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-21.png" alt="" width="1167" />
次に、@sys-date and @sys-timeの子ノードを、下図のように追加します。
If bot recognizes:は、@contact-infoというEntityのEntity Valueとしてnameが認識できた場合という意味で、@contact-info:nameを指定します。「:」はイコールを意味します。
先ほどと同様にContext editorを開き、$nameの値として、@contact-info.groupsを指定します。正規表現を使って取得する値はgroupsで取得することができます。
And respond with:にある&lt;? $name[2] ?&gt;は、Context editorで$nameにセットした@contact-info.groupsの値から「井上」のような名前にマッチする部分を指定しています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-22.png" alt="" width="1167" />
先ほどと同様に、@sys-date and @sys-timeノードから、@contact-info:nameノードへのJump toの指定、名前を認識できなかった場合のanything_elseノードとJump toの指定を行います。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-23.png" alt="" width="1167" />
これで完成です。Try itをクリックして、会話を試してみましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-24.png" alt="" width="1167" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-2. Watson Discovery（コグニティブ検索）</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>5-2-1. Discoveryとは何か</div>
<div class="l-content--detail p-lesson">
Watson Discoveryは、様々な文書を蓄積して検索するサービスです。全文検索データベースのような印象を受けますが、文書の中から感情やコンセプトといった様々な情報を抽出して検索条件に使ったり、自然言語で検索できるといった特徴があります。Watsonではこうした検索をコグニティブ検索と呼んでいます。
Discoveryの構造を下図に示します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Discovery_structure.png" alt="" width="1362" />
DiscoveryではJSON、PDF、Word、HTMLの文書を追加することができます。クローラーを使うとファイルサーバの内容などを自動で追加することもできます。PDF、Word、HTMLの文書は最初にJSONデータへの変換（Convert）が行われるので、実際にCollectionに蓄積されるのはJSONデータのみです。
蓄積の前には、感情やコンセプトといった情報を抽出するエンリッチ（Enrich）と、複数のフォーマットの文書を追加した場合に項目名の統合などを行う正規化（Normalize）が行われます。
Collectionに蓄積された文書を検索する際は、専用の検索言語であるDiscovery Query Language（DQL）を用いるほか、自然言語での検索を行うことも可能です。自然言語で検索を行う場合は、様々な自然言語での検索に対して、どの文書を返すのが妥当か、訓練データを作成して学習を行うことも可能です。
また、Discoveryがエンリッチを行う際には、WatsonのNLU（Natural Language Understanding）や、Knowledge Studioといった他のサービスと連携させることもできます。
<h4>Discoveryの使用準備</h4>
Discoveryを使用するためには、IBM Cloudのカタログから「ディスカバリー」を選択します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/catalog_watson.png" alt="" width="1234" />
作成ボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/discovery.png" alt="" width="1234" />
ツールの起動をクリックすると、Discoveryの管理画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/discovery-1.png" alt="" width="1234" />
Discoveryの管理画面には、初期状態でWatson Discovery Newsが表示されます。Watson Discovery Newsは、主に英語で書かれたニュースが大量に登録されているもので、Discoveryの全ユーザーが使用することができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/discovery-2.png" alt="" width="1234" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-2-2. Environmentの確認とCollectionの作成</div>
<div class="l-content--detail p-lesson">
Discoveryでは、自分のデータ（文書）はCollectionに蓄積していきます。CollectionはEnvironment上に作成する必要があります。ここでは、新しいNotebookを作成しPython SDKを使って、EnvironmentとCollectionを作成することにしましょう。
<h4>Environmentの作成</h4>
Collectionは書き込み可能のEnvironment上に作成します。Discoveryの管理画面で右上の歯車アイコンをクリックしてサブメニューを表示し、Create Environmentボタンをクリックします。（Create Environmentボタンが表示されない場合は、既にEnvironemntが作成されていますので、この操作は不要です。）
list_environments()でEnvironmentの一覧を取得してみましょう。usernameとpasswordは、IBM Cloud上のDiscoveryの画面で参照できます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/service_credentials.png" alt="" width="2732" />
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> json
  <span class="hljs-keyword">from</span> watson_developer_cloud <span class="hljs-keyword">import</span> DiscoveryV1
  discovery = DiscoveryV1(version=<span class="hljs-string">'2018-03-15'</span>, username=<span class="hljs-string">'＜username＞'</span>, password=<span class="hljs-string">'＜password＞'</span>)
  print(json.dumps(discovery.list_environments(), indent=<span class="hljs-number">2</span>))
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Discovery_20180804_-_IBM_Watson.png" alt="" width="707" />
Discoveryのインスタンス作成直後は、このようにread_only=trueのsystemという名前のEnvironmentが1つだけ存在しています。これは、Discoveryがデフォルトで提供しているWatson Discovery Newsという様々なニュースが蓄積されたCollectionを格納しているEnvironmentです。このEnvironmentには自分のデータを蓄積するCollectionは作成できません。
create_environment()を使って、新規のEnvironmentを作成します。
<pre><code class="python hljs">
  environment = discovery.create_environment(name=<span class="hljs-string">'My Environment'</span>)
  print(json.dumps(environment, indent=<span class="hljs-number">2</span>))
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Discovery_20180804_-_IBM_Watson-1.png" alt="" width="610" />
これでEnvironmentを作成できました。新規発行されたenvironment_idは、これから多用するので、変数にセットしておきましょう。
<pre><code class="python hljs">
  environment_id = <span class="hljs-string">'＜使用するenvironmentのenvironment_id＞'</span>
</code></pre>
list_collection()の引数にenvironment_idを指定してCollectionの一覧を取得します。
<pre><code class="python hljs">
  discovery.list_collections(environment_id)
</code></pre>
collectionsが空のリストが返ってきます。まだ、コレクションが作成されていないことが分かります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Discovery_-_IBM_Watson-1.png" alt="" width="319" />
<h4>Collectionの作成</h4>
create_collection()でCollectionを作成します。languageとしてjaを指定すると日本語のCollectionになります。
<pre><code class="python hljs">
  discovery.create_collection(environment_id, name=<span class="hljs-string">'＜コレクション名＞'</span>, language=<span class="hljs-string">'ja'</span>)
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Discovery_-_IBM_Watson-2.png" alt="" width="588" /></figure>
collection_idもこれから多用するため、変数にセットしておきましょう。
<pre><code class="python hljs">
  collection_id = <span class="hljs-string">'＜使用するcollectionのcollection_id＞'</span>
</code></pre>
Discoveryの管理画面を再読み込みすると、作成したCollectionが表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Manage_data.png" alt="" width="1050" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-2-3. Configurationの設定とDocumentの追加</div>
<div class="l-content--detail p-lesson">
Collectionに自分のデータを追加していきます。Discoveryでは、Collectionに蓄積する自分のデータのことをDocumentと呼びます。
<h4>新宿区文化財オープンデータの準備</h4>
ここでは、新宿区がオープンデータとして公開している文化財情報（<a href="http://ckan.odp.jig.jp/dataset/jp-tokyo-shinjuku-723-odp/resource/dba16a4d-6a72-4b20-94b6-2fb8fdeb4661" target="_blank" rel="noopener noreferrer">http://ckan.odp.jig.jp/dataset/jp-tokyo-shinjuku-723-odp/resource/dba16a4d-6a72-4b20-94b6-2fb8fdeb4661</a>）をDocumentとして使用することにしましょう。
下記のコードでオープンデータをダウンロードし、Documentの登録に必要となる1件ごとに1つのJSONファイルを作成します。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> os
  <span class="hljs-keyword">import</span> requests
  <span class="hljs-keyword">import</span> csv
  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">'places'</span>):
      os.mkdir(<span class="hljs-string">'places'</span>)
  r = requests.get(<span class="hljs-string">'http://data.odp.jig.jp/viewcsv/jp/tokyo/shinjuku/723.csv'</span>)
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'shinjuku.csv'</span>, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> f:
      f.write(r.content)
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'shinjuku.csv'</span>, <span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> f:
      data = csv.reader(f)
      next(data)
      i = <span class="hljs-number">1</span>
      <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> data:
          <span class="hljs-comment"># 説明文がない場合は対象外</span>
          <span class="hljs-keyword">if</span> row[<span class="hljs-number">12</span>] == <span class="hljs-string">''</span>:
              <span class="hljs-keyword">continue</span>
          data = {
              <span class="hljs-string">'no'</span>: i,
              <span class="hljs-string">'name'</span>: row[<span class="hljs-number">0</span>],
              <span class="hljs-string">'description'</span>: row[<span class="hljs-number">12</span>]
          }
          <span class="hljs-keyword">with</span> open(os.path.join(<span class="hljs-string">'places'</span>, <span class="hljs-string">'place-%s.json'</span> % str(i)), <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> f:
              f.write(json.dumps(data, ensure_ascii=<span class="hljs-keyword">False</span>))
          i += <span class="hljs-number">1</span>
</code></pre>
例えば、このようなJSONファイルになります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/suehirotei.png" alt="" width="989" />
<h4>Configurationの追加</h4>
Collectionに追加するデータは作成できましたが、実際に追加する前に、Configurationを作成します。ConfigurationはCollectionの単位で設定するもので、主に追加されたデータをどのようにエンリッチするか（感情やコンセプトなどを抽出するか否か）を指定します。
Discoveryの管理画面から、自分のコレクション（下図ではMy Collection）をクリックし、Configurationが表示されている部分にあるswitchをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Collection.png" alt="" width="1231" />
既存のConfigurationを選択することもできますが、ここではCreate a new configurationをクリックして、新規に作成します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Collection-1.png" alt="" width="1231" />
Configurationの名前を付けます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Collection-2.png" alt="" width="1231" />
Configurationの設定画面が表示されたら、Enrichタブを開きます。（おそらく、デフォルトでEnrichが開いています。）
Configurationにはあらかじめtextフィールドの設定がありますが、今回は使用しないため、画面上のtextフィールドの部分にマウスカーソルを動かすと表示されるマイナスボタンをクリックして削除します。
まず、これから追加されるDocumentのどのフィールドをエンリッチの対象にするかを指定します。今回は、descriptionフィールドが対象になるので、descriptionと入力し、自動で表示されるAdd: descriptionをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Configuration_-_Enrich-4.png" alt="" width="1366" />
追加されたdescriptionフィールドのAdd enrichmentsをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Configuration_-_Enrich-7.png" alt="" width="1366" />
Element Classification以外のエンリッチメントをAddボタンをクリックして追加します。（Element ClassificationはPDFを追加する場合でだけ有効なため、今回はJSONファイルなので外します。）
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Configuration_-_Enrich-6.png" alt="" width="1366" />
あとは、Apply &amp; Saveボタンをクリックします。
<h4>CollectionにDocumentを追加</h4>
再びNotebookに戻って、CollectionにDocumentを追加します。
Discoveryでは（ライトプランの場合）同時に20件を超えるDocumentの追加処理を行うことができないので、get_collection()を使って処理中の件数を取得して適宜ウエイトを入れながら処理するようにします。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> glob
  <span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> sleep
  <span class="hljs-keyword">from</span> watson_developer_cloud <span class="hljs-keyword">import</span> DiscoveryV1
  discovery = DiscoveryV1(version=<span class="hljs-string">'2018-03-15'</span>, username=<span class="hljs-string">'＜username＞'</span>, password=<span class="hljs-string">'＜password＞'</span>)
  <span class="hljs-keyword">for</span> filepath <span class="hljs-keyword">in</span> glob.glob(<span class="hljs-string">'places/*.json'</span>):
    <span class="hljs-comment"># 処理中が20件を超える場合は5秒待つ</span>
    <span class="hljs-keyword">while</span> <span class="hljs-keyword">True</span>:
      collection_status = discovery.get_collection(environment_id, collection_id)
      <span class="hljs-keyword">if</span> collection_status[<span class="hljs-string">'document_counts'</span>][<span class="hljs-string">'processing'</span>] &gt; <span class="hljs-number">20</span>:
        print(<span class="hljs-string">'wait...'</span>, collection_status[<span class="hljs-string">'document_counts'</span>][<span class="hljs-string">'processing'</span>])
        sleep(<span class="hljs-number">5</span>)
      <span class="hljs-keyword">else</span>:
        <span class="hljs-keyword">break</span>
    <span class="hljs-keyword">with</span> open(filepath, <span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> f:
      discovery.add_document(environment_id, collection_id, file=f)
      print(filepath)
</code></pre>
Documentを追加している最中にCollectionの管理画面を表示すると、蓄積済みの文書数や、エンリッチの状況などを見ることができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Collection-4.png" alt="" width="1366" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-2-4. Query Builderでの検索</div>
<div class="l-content--detail p-lesson">
Documentの蓄積が終わったところで、Collectionを検索してみましょう。
Collectionの管理画面からBuild Queriesを開きます。Search for documentsを展開してUse natural languageに自然言語の文章で検索します。例えば「落語の寄席」という文章を使って検索すると「末広亭」のデータが検索されました。たしかに末広亭では、毎日のように落語が演じられています。
この結果を見ると、末広亭の説明文に含まれる北村銀太郎（末広亭の創業者）が人名（Person）であることや、落語協会（末広亭で落語を演じている団体の1つ）が組織（Organization）であるといったことを読み取っていることが分かります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Query_Builder-5.png" alt="" width="1366" />
次に、Use the Discovery Query Languageを使います。
FieldとしてDiscoveryがエンリッチした、<code class="hljs css"><span class="hljs-selector-tag">enriched_description</span><span class="hljs-selector-class">.concepts</span><span class="hljs-selector-class">.text</span></code>、Operatorにisを指定して、Valueのプルダウンを開くと、DiscoveryがすべてのDocumentから抽出したコンセプトが選択肢として表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Query_Builder-6.png" alt="" width="1366" />
「神楽」、「節分」、「住宅」といったコンセプトが表示されています。この中から「神楽」を選択して検索してみましょう。
画面右に表示される検索結果でJSONタブを開いてみると、鎧神社や中井御霊神社の文化財情報が表示されました。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Query_Builder-4.png" alt="" width="1366" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-2-5. APIを用いた検索</div>
<div class="l-content--detail p-lesson">
次に、Notebookに戻ってAPIを使ったDiscoveryの検索を行います。
まず、自然言語を用いた検索は下記のように行います。
<pre><code class="python hljs">
  discovery.query(environment_id, collection_id, natural_language_query=<span class="hljs-string">'＜検索する文章＞'</span>)
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/notebook_discovery.png" alt="" width="786" />
DQLを用いる場合は、下記のとおりです。
<pre><code class="python hljs">
  discovery.query(environment_id, collection_id, query=<span class="hljs-string">'＜DQL＞'</span>)
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/notebook_discovery-1.png" alt="" width="868" />
DQLは、Query Builderを使って検索を行うと、ブラウザ上で指定した検索条件がどのようなDQLになるか表示されるので、それを参考にすると良いでしょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Discovery_-_Query_Builder-7.png" alt="" width="1366" />
次節ではWatson AssistantとDiscoveryを組み合わせてチャットボットを作ります。それを見越して、このようなコードを試してみましょう。
<pre><code class="python hljs">
  results = discovery.query(environment_id, collection_id, query=<span class="hljs-string">'enriched_description.concepts.text::"神楽"'</span>)
  <span class="hljs-keyword">if</span> len(results[<span class="hljs-string">'results'</span>]) &gt; <span class="hljs-number">0</span>:
      <span class="hljs-keyword">for</span> result <span class="hljs-keyword">in</span> results[<span class="hljs-string">'results'</span>]:
          <span class="hljs-keyword">if</span> len(result[<span class="hljs-string">'enriched_description'</span>][<span class="hljs-string">'keywords'</span>]) &gt; <span class="hljs-number">0</span>:
              name = result[<span class="hljs-string">'name'</span>]
              description = result[<span class="hljs-string">'description'</span>]
              <span class="hljs-keyword">break</span>
  print(<span class="hljs-string">'%sについての情報があります。「%s」'</span> % (name, description))
</code></pre>
ここではConceptとして「神楽」を指定しましたが、これはチャットの内容に応じて変えていく前提です。このような表示が行われました。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/notebook_discovery-2.png" alt="" width="995" />
新宿区の神楽に関する文化財が紹介されました。このような返答ができるチャットボットなら使い勝手が良さそうです。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-3. LINEチャットボットの開発</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>5-3-1. LINEチャットボットの開発</div>
<div class="l-content--detail p-lesson">
本節では先ほど作成したDiscoveryのCollectionを使ったLINEチャットボットを作成します。Discoveryでは「新宿」というキーワードを含むツイートを収集し、それをCollectionに蓄積していますから、その情報をもとに、新宿に関する質問に回答できるチャットボットにしていきます。
<h4>Watson Assistantでチャットボットの作成</h4>
まず、Watson Assistantでチャットボットを作成し、そこにDiscoveryを接続するところから始めます。第1節でWatson Assistantの使用準備と、チャットボットの作り方は説明していますので、それを踏まえて下記のチャットボットを作成してください。
今回はIntentは不要ですが、Entityを下図のように作成します。
EntitiesタブのAdd entityボタンをクリックすると、Entityを作成することができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-4.png" alt="" width="1407" />
@地域Entityは、新宿、横浜といった地域を示します。今回のチャットボットでは新宿以外の地域を認識した場合は「その他」ノードに遷移させます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-1-1.png" alt="" width="1407" />
@興味Entityは、チャットボットのユーザーが地域の何について知りたいかを認識します。DiscoveryのQuery Builderでenriched_status.concepts.textの選択肢を参照し、いくつかを追加します。（前節の解説を参考にしてください。）
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-25.png" alt="" width="1366" />
次にDialogです。「ようこそ」と「その他」のノードは新規のDialogを作成すると自動で追加されますが、「ようこそ」のThen respond with:をチャットボットの内容に合わせて「こんにちは。どの地域情報が知りたいですか？」に変更しました。
さらに、「@地域:新宿」ノードを作成します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-3-2.png" alt="" width="1407" />
「@地域:新宿」ノードの設定は、下図右のとおりです。If bot recognizes:は、@地域エンティティが新宿だった場合という意味で「@地域:新宿」とします。「:」はイコールを意味しています。
また、「@地域:新宿」ノードの子ノードとして、「@興味」ノードと、「anything_else」ノードを作成します。「@地域:新宿」ノードのAnd finally:として、Jump to「＠興味」ノードをWait for user inputで設定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-4-1.png" alt="" width="1407" />
次に「@興味」ノードの子ノードとして「true」ノードを作成し、Jump toをRespondで設定します。「@興味」ノードのThen respond with:は後で設定しますので、ここでは空白で構いません。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-5-1.png" alt="" width="1404" />
「true」ノードの設定を示します。「@興味」ノードでDiscoveryに問い合わせを行い、結果は$response.messageにセットされることを前提として、$response.messageをThen respond with:に設定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-6-1.png" alt="" width="1404" />
最後に「@興味」ノードの子ノードとして作成した「anything_else」ノードです。これは、@興味Entityでうまく認識できなかった場合に遷移するので「そのことについては、まだよく知りません。」と回答するようにしました。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-7-1.png" alt="" width="1404" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-3-2. Watson AssistantとDiscoveryの接続</div>
<div class="l-content--detail p-lesson">
先ほどWatson AssistantのDialogを設定しましたが、その中で最も重要なのは「@興味」のThen respond with:をどのように設定するかです。ここでDiscoveryに問い合わせを行い、次にどのような回答をするかを準備しなければなりません。
<h4>IBM Cloud Functions</h4>
Watson AssistantからDiscoveryを呼び出す方法として、IBM Cloud Functionsを使用します。IBM Cloud Functionsは、いわゆるFaaS（Function as a Service）のサービスで、プログラムの関数の単位でクラウドに登録し、実行します。類似のサービスとしてAmazon Web ServicesのLambdaを挙げることができます。
IBM Cloud Functionsを使用するには、IBM Cloudのカタログを表示し、メニューからFunctionsをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/catalog_-_IBM_Cloud.png" alt="" width="1404" />
作成の開始ボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Cloud_Functions.png" alt="" width="1404" />
Create Actionをクリックします。IBM Cloud Functionsでは、登録した関数のことをActionと呼びます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Cloud_Functions_-_Create.png" alt="" width="1404" />
Action Nameに「getDiscoveryResponse」、Runtimeとして「Python 3」を指定しして、Createボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Cloud_Functions_-_Create-1.png" alt="" width="1406" height="744" />
この画面で、直接Pythonコードを入力することができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Cloud_Functions_-_Actions.png" alt="" width="1366" />
下記のコードを入力し、Saveボタンをクリックします。
IBM Cloud Functionsでは引数は辞書型の変数のため、topicというキーでWatson Assistantから@興味Entityの値をセットするということにして、興味を取得しています。
また、戻り値はJSONデータで、チャットボットでのレスポンスとなる文章をセットします。このレスポンスの文章の組み立ては、<a href="https://graspy.jp/lesson/5/chapter/35#sub_381" target="_blank" rel="noopener noreferrer">5-2-5</a>の最後にNotebookで試したものと同様です。
<pre><code class="python hljs">
  <span class="hljs-comment">#</span>
  <span class="hljs-comment">#</span>
  <span class="hljs-comment"># main() will be run when you invoke this action</span>
  <span class="hljs-comment">#</span>
  <span class="hljs-comment"># @param Cloud Functions actions accept a single parameter, which must be a JSON object.</span>
  <span class="hljs-comment">#</span>
  <span class="hljs-comment"># @return The output of this action, which must be a JSON object.</span>
  <span class="hljs-comment">#</span>
  <span class="hljs-comment">#</span>
  <span class="hljs-keyword">import</span> sys
  <span class="hljs-keyword">from</span> watson_developer_cloud <span class="hljs-keyword">import</span> DiscoveryV1
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span><span class="hljs-params">(dict)</span>:</span>
      topic = dict[<span class="hljs-string">'topic'</span>]
      discovery = DiscoveryV1(version=<span class="hljs-string">'2017-10-16'</span>, username=<span class="hljs-string">'＜Discoveryのusername＞'</span>, password=<span class="hljs-string">'＜Discoveryのpassword＞'</span>)
      environment_id = <span class="hljs-string">'＜Discoveryのenvironment_id＞'</span>
      collection_id = <span class="hljs-string">'＜Discoveryのcollection_id＞'</span>
      dql = <span class="hljs-string">'enriched_description.concepts.text::"%s"'</span> % topic
      results = discovery.query(environment_id, collection_id, query=dql)
      <span class="hljs-keyword">if</span> len(results[<span class="hljs-string">'results'</span>]) &gt; <span class="hljs-number">0</span>:
          <span class="hljs-keyword">for</span> result <span class="hljs-keyword">in</span> results[<span class="hljs-string">'results'</span>]:
              <span class="hljs-keyword">if</span> len(result[<span class="hljs-string">'enriched_description'</span>][<span class="hljs-string">'keywords'</span>]) &gt; <span class="hljs-number">0</span>:
                  name = result[<span class="hljs-string">'name'</span>]
                  description = result[<span class="hljs-string">'description'</span>]
                  <span class="hljs-keyword">break</span>
      message = <span class="hljs-string">'%sについての情報があります。「%s」'</span> % (name, description)
      <span class="hljs-keyword">return</span> { <span class="hljs-string">'message'</span>: message }
</code></pre>
あとで使用するので、作成したActionのEndpointsタブを開き、namespaceとactionの名前を確認しておきます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Cloud_Functions_-_Create-3.png" alt="" width="1406" />
また、APIキーも確認しておきます。IBM Cloud Functionsのメニューから開始＞APIキーを参照します。APIキーは画面中央右の目のアイコンをクリックすると表示されます。APIキーの文字列の途中に「:」があり、その前の部分がusername、後ろの部分がpasswordです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Cloud_Functions_-_API_Key.png" alt="" width="1406" />
<h4>Then respond with:でCloud Functionを呼び出す</h4>
作成したActionをWatson Assistantから呼び出します。
Watson Assistantの画面に戻って、「@興味」ノードを開き、Then respond with:のサブメニューからOpen JSON Editorをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-8-1.png" alt="" width="1406" />
Watson AssistantではJSONのデータをセットすることにより、Actionを呼び出すことができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-9-1.png" alt="" width="1406" />
まず、context.topicに@興味Entityで認識した値をセットします。actionsには呼び出し先のIBM Cloud FunctionsのActionを設定します。actions.nameが先ほど作成したActionのnamespaceとActionの名前です。actions.parametersにはcontext.topicの値を$topicとして指定しています。actions.result_variableはActionからの戻り値をセットする変数名です。
outputは空をセットしたので、このノードでは返答は行わず、次のノード（「@興味」ノードの子ノードである「true」ノード）でDiscoveryから取得した文字列を返答するようにします。
<pre><code class="python hljs">
  {
    <span class="hljs-string">"context"</span>: {
    <span class="hljs-string">"topic"</span>: <span class="hljs-string">"@興味"</span>,
    <span class="hljs-string">"discovery_credentials"</span>: {
      <span class="hljs-string">"user"</span>: <span class="hljs-string">"＜Cloud Functionsのusername＞"</span>,
      <span class="hljs-string">"password"</span>: <span class="hljs-string">"＜Cloud Functionsのpassword＞"</span>
    }
    },
    <span class="hljs-string">"output"</span>: {},
    <span class="hljs-string">"actions"</span>: [
    {
      <span class="hljs-string">"name"</span>: <span class="hljs-string">"＜Actionのnamespace＞/＜Actionの名前＞"</span>,
      <span class="hljs-string">"type"</span>: <span class="hljs-string">"server"</span>,
      <span class="hljs-string">"parameters"</span>: {
      <span class="hljs-string">"topic"</span>: <span class="hljs-string">"$topic"</span>
      },
      <span class="hljs-string">"credentials"</span>: <span class="hljs-string">"$discovery_credentials"</span>,
      <span class="hljs-string">"result_variable"</span>: <span class="hljs-string">"$response"</span>
    }
    ]
  }
</code></pre>
ここまで出来た状態で、画面右上のTry itをクリックして会話を試してみましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-26.png" alt="" width="1366" />
このように、Discoveryに問い合わせを行った上で返答が返ってきました。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-3-3. LINEの設定</div>
<div class="l-content--detail p-lesson">
ここまでに作成したWatson AssistantのチャットボットをLINEで使えるようにします。
まずは、LINE Developersにアクセスして、プロバイダー（チャットボット提供元）の作成を行います。
LINE Developersのサイト（<a href="https://developers.line.me/ja/" target="_blank" rel="noopener noreferrer">https://developers.line.me/ja/</a>）にアクセスし、ログインします。既にLINEを使用している方はログインボタンをクリックして、登録することができます。LINEを使用していない方はチャットボットのテストのためにも必要なため、LINEのユーザー登録を行ってください。
<img class="alignnone size-full wp-image-5125" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers.png" alt="" width="1174" />
新規プロバイダー作成ボタンをクリックし、画面の指示に合わせてプロバイダーを作成します。
<img class="alignnone size-full wp-image-5126" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers-1.png" alt="" width="1174" />
次にチャネルを作成します。ここで作成するチャネルがチャットボット本体となり、チャネルとWatson Assistantを連携させます。
<img class="alignnone size-full wp-image-5127" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers-2.png" alt="" width="1174" />
チャネルはMessaging APIで作成します。
<img class="alignnone size-full wp-image-5128" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers-2-1.png" alt="" width="1174" />
プランはDeveloper Trialとして、あとは画面の指示に沿ってチャネルを作成します。
<img class="alignnone size-full wp-image-5129" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers-3.png" alt="" width="1174" />
作成したチャネルの画面を開き、チャネル基本設定タブで、下記の項目を設定します。
<ul>
 	<li>アクセストークンは、後で必要となるので、再発行ボタンをクリックして発光しておいてください。</li>
 	<li>Webhook送信は、「利用する」を設定します。</li>
 	<li>Webhook URLは、後で設定します。</li>
 	<li>自動応答メッセージは、「利用しない」を設定します。</li>
</ul>
<img class="alignnone size-full wp-image-5130" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers-5.png" alt="" width="1171" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-3-4. Node-REDの準備</div>
<div class="l-content--detail p-lesson">
LINEでチャットボットのユーザから問いかけられると、Webhook URLに対してHTTPS POSTのリクエストが送信されます。そのため、Webhookを作成して送信先のURLを準備する必要があります。
Watson AssistantだけではWebhookが準備できないため、ここではIBM Cloud上にNode-RED環境を準備し、そこでWebhookを作成することにしましょう。
Node-REDは、GUI環境（Webブラウザ）でのドラッグアンドドロップでプログラムを作成することができる環境で、複数のサービスを連携したプログラムを開発することに向いています。
IBM Cloudのカタログから、Starter Kits＞Node-RED Startarを開きます。
<img class="alignnone size-full wp-image-5133" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/catalog_-_IBM_Cloud-1.png" alt="" width="1216" />
アプリ名、ホスト名を設定し、作成ボタンをクリックします。
アプリ名とホスト名はデフォルトでは同じ値になります。ここで指定したホスト名がWebhookのURLではドメイン名となります。例えば、ホスト名としてtestを指定した場合は、https://test.mybluemix.netというURLが生成されます。
<img class="alignnone size-full wp-image-5134" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED_Starter_-_IBM_Cloud.png" alt="" width="1206" />
Node-RED環境の作成には少し時間がかかりますが、完了すると「このアプリは稼働中です。」と表示されるので、アプリURLにアクセスをクリックします。
<img class="alignnone size-full wp-image-5135" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/nodered.png" alt="" width="1206" />
Node-REDの初期設定画面が開きます。Nextをクリックします。
<img class="alignnone size-full wp-image-5136" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED_on_IBM_Cloud.png" alt="" width="1207" />
Node-REDの画面を開く際のUsernameとPasswordを設定します。ここでのUsernameとPasswordはIBM Cloudのそれとは別の扱いとなります。
<img class="alignnone size-full wp-image-5137" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED_on_IBM_Cloud-1.png" alt="" width="1207" />
後の画面は特に設定の必要はありません。
初期設定が終わるとNode-REDのトップ画面が表示されるので、Go to your Node-RED flow editorをクリックします。（この画面は、先ほど設定したホスト名で生成された https://test.mybluemix.net のようなURLを開くと常に表示されます。）
<img class="alignnone size-full wp-image-5138" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED_on_IBM_Cloud-2.png" alt="" width="1207" />
ログイン画面が開くので、先ほどの初期設定で指定したUsernameとPasswordを入力し、ログインします。
<img class="alignnone size-full wp-image-5139" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___nodered-ki_mybluemix_net.png" alt="" width="1207" />
Node-REDでは、下図のようなflow editorを使ってプログラムを作成していきます。
画面左のノード一覧から、中央に表示されたキャンバスにドラッグアンドドロップすると、ノードを配置できます。
これからWebhookを作成するので、httpノードを配置します。
<img class="alignnone size-full wp-image-5140" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/node-red.png" alt="" width="1207" />
ノードをダブルクリックすると、プロパティ画面が開きます。
httpノードのプロパティとして、メソッドはPOST、URLには/line_hookと指定します。これで、LINEのWebhookのURLができました。
<img class="alignnone size-full wp-image-5141" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/node-red-1.png" alt="" width="1207" />
次に、debugノードを配置し、httpノードと接続します。ノード間の接続はノードの左右に表示されている小さな四角（コネクタ）をクリックしてドラッグし、接続先のコネクタの上でドロップすると接続できます。
ノードの左のコネクタは入力、右のコネクタは出力を示します。ノードによって入力のみ、出力のみ、入出力両方とコネクタの種類は異なります。
最後に、画面右上のデプロイボタンをクリックし、作成したプログラムを使用可能にします。
<img class="alignnone size-full wp-image-5142" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___nodered-ki_mybluemix_net-1.png" alt="" width="1214" />
LINE Developersの画面に戻り、Webhook URLの編集ボタンをクリックし、Webhook URLを設定します。Webhook URLは、Node-REDのURLの後ろにhttpノードで指定したURLを組み合わせたもの（例：https://test.mybluemix.net/line_hook）です。
次に、接続確認ボタンをクリックします。
<img class="alignnone size-full wp-image-5143" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/LINE_Developers-6.png" alt="" width="1348" />
Node-REDの画面に戻りデバッグ画面を確認しましょう。LINEからのリクエストが来ていることが分かります。httpノードへのリクエスト内容は、次に接続されているdebugノードによってデバッグ画面に表示されます。
<img class="alignnone size-full wp-image-5144" src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___nodered-ki_mybluemix_net-2.png" alt="" width="1218" />
この時、LINE Developersの画面には「Webhookとの通信エラー」が表示されますが、Node-RED側でHTTP Responseの設定をしていないためで問題ありません。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>5-3-5. Node-REDでWebhookを作成</div>
<div class="l-content--detail p-lesson">
引き続き、Node-REDを使ってWebhookを作成します。
下図が全体像です。このように配置してください。以下でプロパティの指定が必要な箇所を説明します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___inoccu_mybluemix_net.png" alt="" width="1067" />
changeノードでは、WebhookへのリクエストでPOSTされたデータから、必要な値を取得します。まず、msg.payload.events[0].replyTokenをflow.replyTokenにセットします。replyTokenはLINEでの問いかけに対する返答を返す際に必要な値です。
Node-REDでは、msg、flow、globalの3つの変数領域があり、msgは次のノードとの間でのみ有効で、特にmsg.payloadにセットした値を使ってノード間の値のやり取りを行います。flowはキャンバス内で有効であり、離れたノード間で値のやり取りができます。globalは複数のキャンバス間で有効な領域です。
msg.payloadには、msg.payload.events[0].message.textの値をセットします。これはLINEで問いかけられた文章そのもので、次のノードであるWatson Assistantに引き渡します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___inoccu_mybluemix_net-1.png" alt="" width="1355" />
次のWatson Assistant（Node-REDの環境構築を行った時期によってはConversationになっている場合がありますが、設定する項目は同じです）
Username、Password、Workspace IDの3つを入力します。また、Save Contextにはチェックを入れておきましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___nodered-ki_mybluemix_net-3.png" alt="" width="1250" />
UsernameとPasswordは、IBM Cloudの画面でWatson Assistantを開くと表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/ibm_cloud_watson_assistant.png" alt="" width="1350" />
Workspace IDは、Watson Assistantの画面でWorkspacesを開き、使用するWorkspace（チャットボット）のサブメニューからView detailsを選択すると表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-11-1.png" alt="" width="1350" />
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/IBM_Watson_Assistant-12-1.png" alt="" width="1350" />
次に、functionノードです。Discoveryからの出力をLINEでの返答のために変換する処理を行うので、set responseという名前を付けています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___inoccu_mybluemix_net-2.png" alt="" width="1356" />
ここではJavaScriptのコードを入力します。
headers.Authorizationには「Bearer（スペース）」という文字列の後にLINEのチャネル基本設定タブで確認したアクセストークンをセットします。
<pre><code class="python hljs">
  var msg = {
    <span class="hljs-string">"headers"</span>: {
      <span class="hljs-string">"content-type"</span>: <span class="hljs-string">"application/json; charset=UTF-8"</span>,
      <span class="hljs-string">"Authorization"</span>: <span class="hljs-string">"Bearer "</span> + <span class="hljs-string">"＜アクセストークン＞"</span>
    },
    <span class="hljs-string">"payload"</span>: {
      <span class="hljs-string">"replyToken"</span>: flow.get(<span class="hljs-string">"replyToken"</span>),
      <span class="hljs-string">"messages"</span>: [
        {
          <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span>,
          <span class="hljs-string">"text"</span>: msg.payload.output.text[<span class="hljs-number">0</span>]
        }
      ]
    }
  };
  <span class="hljs-keyword">return</span> msg;
</code></pre>
最後に、http requestノードの設定を行います。メソッドはPOST、URLはhttps://api.line.me/v2/bot/message/replyを指定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/Node-RED___inoccu_mybluemix_net-3.png" alt="" width="1356" />
これで完成です。LINEのチャネル基本設定タブにはQRコードが表示されているので、これでLINEの友達となり、会話を試してみましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/07/line_discovery_bot.png" alt="" width="397" />
このように会話を行うことができました。
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2388</wp:post_id>
		<wp:post_date><![CDATA[2019-02-25 08:54:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-24 23:54:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-2388]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:76:"https://writing.itprocollege.com/wp-content/uploads/2018/07/DraggedImage.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2. 自然言語に関する機械学習</title>
		<link>https://tech.blog.uribou.me/post-2390/</link>
		<pubDate>Sun, 24 Feb 2019 23:59:05 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2390</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="c-title--primary">2. 自然言語に関する機械学習</h1>
<div class="l-content--detail p-lesson"></div>
<div class="l-content--detail p-lesson">
<div>2-1. Watson Natural Language Classifier（自然言語分類）</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>2-1-1. Watson Natural Language Classifier (NLC)</div>
<div class="l-content--detail p-lesson">
機械学習を使って分類（Classification）を行う対象として、その代表格は画像でしょう。例えば犬が写っている画像に犬というラベルを付ける、猫が写っている画像に猫というラベルを付けるといったものです。WatsonではVisual Recognitionというサービスを使うと、デフォルトのモデルや独自の訓練データを用いたカスタムモデルを使って画像の分類を行うことができます。
画像と並んで分類の対象とされるデータとして、自然言語を挙げることもできます。例えば「こんにちは」という文章に挨拶というラベルを付けたくなるかもしれませんし、「インターネットに接続できません」というエラーメッセージを接続エラーに分類して、適したマニュアルを表示したり、担当部署を呼び出すこともあるでしょう。
Engineer編の第2章は自然言語に関する機械学習を学びます。その最初に、WatsonのNatural Language Classifier（NLC）というサービスを用いた独自の自然言語分類モデルの作成を行い、自然言語を分類するとはどのようなものか、体感することにしましょう。
<h4>IBM Cloudアカウントのアップグレード</h4>
これまでIBM Cloudのライトアカウントを使って演習を進めてきましたが、NLCはライトアカウントに対応していません。そのため、IBM Cloudのアカウントにクレジットカード番号などを登録し、PAYG（従量課金）アカウントにアップグレードする必要があります。但し、アップグレードしてもライトアカウントの場合と同様に各サービスのライトプランを無料で使用することができます。NLCはライトプランてしては提供されていませんが、別に8個までの分類器を無料で作成し、1ヶ月に1,000回までの分類を無料で行える無料枠が存在していますので、その範囲では課金はかかりません。
PAYGアカウントにアップグレードするには、IBM Cloudのダッシュボードから「アカウントのアップグレード」ボタンをクリックします。あとは、画面の指示に従い、クレジットカード番号などを登録してください。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/ibm_cloud_account_upgrade.png" alt="" width="2232" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-1-2. APIを使って独自の自然言語分類モデルを作る</div>
<div class="l-content--detail p-lesson">
NLCでは画像認識のVisual Recognitionと同様にWebブラウザ上の操作で独自のモデルを作成することができます。但し、デフォルトのモデルは提供されていないので、必ず独自のモデルを作成する必要がある点は、Visual Recognitionと異なるところです。
ここでは、Webブラウザ上の操作ではなく、Python用のWatson SDKを使用することにしましょう。Pythonの実行環境としては、第1章と同様にNotebookを使用することにします。
<h4>NLCのインスタンス作成</h4>
IBM Cloudのカタログを開き、NLC（Natural Language Classifier）のインスタンスを作成します。さきほど、IBM Cloudのアカウントをアップグレードしたので、デフォルトでNLCのサービスが見えるようになっているはずです。また、似た名前のサービスにNLU（Natural Language Understanding）があるので、間違わないようにしてください。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/nlc_01.png" alt="" width="2496" />
NLCのインスタンスを作成したら、サービス資格情報を確認しておきます。サービス資格情報は、NLCのインスタンス作成直後に表示される画面から（または、IBM CloudのダッシュボードからNLCのインスタンス画面を開き）、資格情報の「表示」をクリックすると表示されるusernameとpasswordの値です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/nlc_02.png" alt="" width="2058" />
<h4>訓練データの作成</h4>
NLCでモデルを作成する際に使用する訓練データを作成します。NLCの訓練データは、下図のようなCSV形式のファイルです。1行が1つのデータで、サンプル文とラベルの2項目で構成します。1つのラベルあたり最低10個のサンプル文を作成する必要があるので、2つのラベルのどちらかに分類するモデルを作成する場合は、20行のデータがあるCSVファイルになります。
例えば、下記のようなデータでCSVファイルを作成します。ファイルはUTF-8形式で保存します。ファイル名は、trainingdata.csvのようにします。全角文字を使わないようにしましょう。
<pre>和食のお店,restaurant
美味しいお店,restaurant
洋食のレストラン,restaurant
おなかがすいた,restaurant
ディナーを楽しみたい,restaurant
何か食べたい,restaurant
夜景を楽しみながら食事したい,restaurant
ビールが飲みたい,restaurant
日本酒が飲みたい,restaurant
ワインが飲みたい,restaurant
のんびりしたい,park
自然のあるところに行きたい,park
芝生に寝転がりたい,park
噴水を見たい,park
犬と散歩したい,park
のんびり歩きたい,park
公園に行きたい,park
動物を見に行きたい,park
お花見をしたい,park
緑のある風景,park</pre>
<h4>訓練データをWatson Studioにアップロード</h4>
NLCのモデル作成API（create_classifier）は、訓練データをファイルとしてアップロードする必要があるので、最初にWatson Studioのストレージ（COS：Cloud Object Storage）に、さきほど作成したtrainingdata.csvをアップロードします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/nlc_03.png" alt="" width="746" />
Watson Studioで新しいNotebookを作成し、画面右上のDataアイコンをクリックすると、ファイルのアップロード画面が表示されます。
ローカルPC上のNotebookを使用している場合は、CSVファイルをそのまま使用することができるため、Pandasに関する操作は不要です。下記のオリエンテーションを参考にしてください。
<ul>
 	<li><a href="https://graspy.jp/lesson/5/chapter/30#sub_310" target="_blank" rel="noopener noreferrer">0-3-5. ローカルPC上のNotebookでファイルを使用する</a></li>
</ul>
Watson StudioではアップロードしたCSVファイルはPandasのDataFrameとして、Notebook上で使用することができます。先ほどアップロードしたtrainingdata.csvのInsert to codeメニューからInsert pandas DataDrameをクリックすると、Pandasのコードが自動的に挿入されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Watson_NLC_20180713_-_IBM_Watson.png" alt="" width="1250" />
少し面倒ですが、NLCはCSVファイルそのものをアップロードしなければならないので、DataFrameからCSVファイルを、Notebookの実行環境上に作成します。
<pre><code class="python hljs">
  df_data_1.to_csv(<span class="hljs-string">'training_data.csv'</span>, header=<span class="hljs-keyword">False</span>, index=<span class="hljs-keyword">False</span>)
  !ls -la
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Watson_NLC_20180713_-_IBM_Watson-1.png" alt="" width="584" />
<h4>NLCで独自モデルを作成</h4>
ここまで準備して、ようやくNLCのモデル作成APIを呼び出します。
最初にWatson SDKのNatualLanguageClassiferV1オブジェクトを作成します。usernameとpasswordは、NLCのサービス資格情報を指定します。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> json
  <span class="hljs-keyword">from</span> watson_developer_cloud <span class="hljs-keyword">import</span> NaturalLanguageClassifierV1
  nlc = NaturalLanguageClassifierV1(username=＜サービス資格情報のusername＞, password=＜サービス資格情報のpassword＞)
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'training_data.csv'</span>, <span class="hljs-string">'rb'</span>) <span class="hljs-keyword">as</span> training_data:
      metadata = json.dumps({<span class="hljs-string">'name'</span>: <span class="hljs-string">'First Classifier'</span>, <span class="hljs-string">'language'</span>: <span class="hljs-string">'ja'</span>})
      classifier = nlc.create_classifier(metadata=metadata, training_data=training_data)
      classifier_id = classifier[<span class="hljs-string">'classifier_id'</span>]
      print(classifier_id)
</code></pre>
create_classifier()の引数は、metadataとtraining_dataの2つです。metadataでは、モデルの名前（例：First Classifier）と訓練データの言語（日本語はja）を指定したJSONデータをセットします。training_dataはさきほどWatson Studioの実行環境上に作成した作成したCSVファイルのファイルポインタを指定します。
モデル作成APIが正常に呼び出されると、モデルのID（classifier_id）などが戻り値となります。このclassifier_idの値を用いて、モデルの学習状況の確認や、実際の分類などを行います。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Watson_NLC_20180713_-_IBM_Watson-2.png" alt="" width="944" />
get_classifier()でモデルの学習状況などを取得できます。学習中はstatusの値はTrainingであり、これがAvailableになると学習が正常終了し、モデルが使用可能な状態になったことを示します。
<pre><code class="python hljs">
  nlc.get_classifier(classifier_id)
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Watson_NLC_20180713_-_IBM_Watson-3.png" alt="" width="949" />
＜参考＞
<ul>
 	<li><a href="https://console.bluemix.net/docs/services/natural-language-classifier/" target="_blank" rel="noopener noreferrer">Watson Natural Language Classifier</a></li>
 	<li><a href="https://www.ibm.com/watson/developercloud/natural-language-classifier/api/v1/python.html?python" target="_blank" rel="noopener noreferrer">Watson Natural Language Classifier API Reference</a></li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-1-3. APIを使って独自の自然言語分類モデルを試す</div>
<div class="l-content--detail p-lesson">
さきほど作成したNLCのモデルを使って、自然言語の分類を試してみましょう。
モデルの作成時と同様にWatson SDKのNaturalLanguageClassifierV1オブジェクトを作成します。usernameとpasswordは、モデルの作成時に指定したものと同じNLCサービス資格情報を使用します。
<h4>1つの文章を分類する</h4>
1つの文章を分類する場合は、classify()を使用します。
<pre><code class="python hljs">
  result = nlc.classify(classifier_id, <span class="hljs-string">'ランチにオススメのお店'</span>)
  print(json.dumps(result, indent=<span class="hljs-number">2</span>, ensure_ascii=<span class="hljs-keyword">False</span>))
</code></pre>
このような結果が出力されます。結果はJSONデータであり、top_classの値が分類結果のラベルです。また、classesには他のラベルも含めた分類結果の詳細がセットされています。confidenceの値はそのラベルとして分類することの確信度を0〜1の値で示しており、その値が最も高くなったラベルがtop_classにセットされています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/nlc_06.png" alt="" width="1610" />NLCを実プロジェクトなどで使用する際は、top_classを参照するだけでなく、confidenceの値も確認して、確信度が一定の値より高い場合だけ後続の処理で使用するといった制御を行うことが一般的です。NLCではWatsonがあまり確信を持てない状態でも何らかの分類を行います。その場合、確信度の値が低くなるので、Watsonが確信を持って分類できていないのなら、その結果は当てにならないだろうといった見方をする必要があります。
<h4>複数の文章をまとめて分類する</h4>
NLCでは、1つの文章を分類するだけでなく、classify_collection()を用いて複数の文章をまとめて分類することもできます。
引数としてセットする複数の文章（collection）は、{'text': '分類したい文章'}という形のディクショナリ値のリストです。
<pre><code class="python hljs">
  collection = [
  {<span class="hljs-string">'text'</span>: <span class="hljs-string">'写真撮影のスポットを教えて'</span>},
  {<span class="hljs-string">'text'</span>: <span class="hljs-string">'お腹が空いた'</span>}
  ]
  result = nlc.classify_collection(classifier_id, collection)
  print(json.dumps(result, indent=<span class="hljs-number">2</span>, ensure_ascii=<span class="hljs-keyword">False</span>))
</code></pre>
分類の結果はcollectionリストに、1つの文章を分類した場合と同様の値がセットされています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/nlc_07.png" alt="" width="1272" />＜参考＞
<ul>
 	<li><a href="https://console.bluemix.net/docs/services/natural-language-classifier/" target="_blank" rel="noopener noreferrer">Watson Natural Language Classifier</a></li>
 	<li><a href="https://www.ibm.com/watson/developercloud/natural-language-classifier/api/v1/python.html?python" target="_blank" rel="noopener noreferrer">Watson Natural Language Classifier API Reference</a></li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-2. Azure Machine Learningを活用した自然言語の分類</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>2-2-1. Azure MLで自然言語処理</div>
<div class="l-content--detail p-lesson">
前節ではWatsonのNLCを使って自然言語の分類を行いました。WatsonのようなコグニティブAPIのサービスを使うと、簡単に自然言語を分類することができますが、それがどのような技術で実現したのかは分かりません。本節では、Azure Machine Learning（ML）を使用して、機械学習によっていかに自然言語の分類が行われるのかを見ていくことにしましょう。
Azure MLを使い始める方法は、下記のオリエンテーションを参考にしてください。
<ul>
 	<li><a href="https://graspy.jp/lesson/5/chapter/30#sub_315" target="_blank" rel="noopener noreferrer">0-5-1. Azure Machine Learningを使う</a></li>
</ul>
<h4>自然言語の分類モデルを作る</h4>
Azure MLで新しいExperimentを作成し、Saved Datasets＞Samples＞Wikipedia SP 500 Datasetsを画面中央のキャンバスにドラッグアンドドロップしてください。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_01.png" alt="" width="1092" />
これは米国の代表的な株価指数であるS&amp;P 500で採用されている企業のWikipediaページから企業の説明をしている文章を抽出したものです。
Visualizeメニューでデータの内容を表示してみると、Title（企業名）、Category（業種）、Text（説明）の3項目で構成されたデータセットであることが分かります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_02.png" alt="" width="1383" />
ここでは、このデータセットを用いて、説明文から業種を予測する分類モデルを作成します。
まず、下図のようなフローを作成します。使用する学習アルゴリズムは、Machine Learning＞Initialize Model＞ClassificationにあるMulticlass Neural Networkにしました。このモデルで予測したいのはFinance（金融）やInformation Technology（情報技術）、Energy（エネルギー）といった業種を示すカテゴリーデータのため、Classificationに分類されるアルゴリズムを使用する必要があります。また、カテゴリーは3つ以上のためMulticlassに対応したものにしています。
あとは、Machine Learning＞EvaluateにあるCross Validate Modelです。今回使用するデータは466件と少ないため、データをすべて用いて学習や検証が行える交差検証（Cross Validate）を行った方が良いでしょう。最後に、Machine Learning＞EvaluateにあるEvaluate Modelを追加します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Experiments_-_Microsoft_Azure_Machine_Learning_Studio-1.png" alt="" width="645" />
Cross Validate Modelには「！」マークが表示されています。これは、ここで作成するモデルの目的変数が指定されていないからです。キャンバス上のCross Validate Modelをクリックすると画面右に表示されるPropertiesから、Label ColumnのLaunch column selectorボタンをクリックして、Category（業種）をSELECTED COLUMNとして選択します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_14.png" alt="" width="1205" />
ここまで作成した後で、画面下にあるRUNをクリックすると、機械学習が始まり、評価も行われます。
実行が終わった後、Evaluate Modelの下のコネクタをクリックして、Visualizeで結果を見てみます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Experiments_-_Microsoft_Azure_Machine_Learning_Studio-2.png" alt="" width="339" />
これは、作成されたモデルの精度指標で、全体的な精度（Overall Accuracy）は0.13と低い数字です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Experiments_-_Microsoft_Azure_Machine_Learning_Studio-3.png" alt="" width="679" />
その下には、予測結果（Predicted Class）と答え（Acutual Class）のマトリクスが表示されています。Financials（金融）とConsumer Discretionary（一般消費財・サービス）のいずれかにしか分類されていないようです。これでは精度が低いのはやむを得ません。どうして、このようなことが起こったのでしょうか。それは、説明変数として用いた値（Text）が自然言語で、それをそのまま機械学習に用いたためです。
本節では、自然言語を機械学習で用いるための方法を説明しつつ、このフローを改善していきます。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-2-2. 自然言語を数値で表現する</div>
<div class="l-content--detail p-lesson">
前章でも見たように、機械学習で用いる説明変数は数値である必要があります。例えば、alfa-romeoやaudiといったカテゴリーデータはOne-Hot表現で数値化しました。
<blockquote>nasdaq 100 component s p 500 component foundation founder location city apple campus 1 infinite loop street infinite loop cupertino california cupertino california location country united states u s locations 406 retail stores may 2013 area served worldwide key people ref tim cook ceo steve jobs fou...</blockquote>
これは、この節で使用しているWikipedia SP 500 Datasetsのうち、Appleの説明（Text）です。このような文章を機械学習で用いるために数値化するには、どうすれば良いのでしょうか。
<h4>Feature Hashing</h4>
Azure MLでは、文章を数値化する方法としてFeature Hashing（特徴ハッシュ）や、Extract N-gram Features from Text（テキストからのN-gram特徴の抽出）といった方法が準備されています。ここでは、マイクロソフトリサーチが開発したVowpal Wabbitライブラリが活用されたFeature Hashingを用いることにします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_15.png" alt="" width="630" />
前項で作成したフローを上図のように変更します。Feature Hashingは、Text Analyticsの配下にあります。また、Feature HashingのPropertiesのうち、Target column(s)は、下図のようにColumn SelectorでTextだけを選択するようにします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_16.png" alt="" width="1047" />
ここまで進めた後で、画面下部のRUNをクリックして実行します。
実行が終わったら、Feature Hashingの下にあるコネクタからVisualizeを開きます。下図のように列が3列から1027列に一気に増えます。増えた1024列分は、Text_Hashing_Feature_1やText_Hashing_Feature_2といった名前の列で、その値として24や10のような数値がセットされています。ここで増えた列の値が、Textの文章を数値で表現したデータなのです。（ただし、Azure MLのVisualizeでは100列分のデータしか表示しないため、Text_Hashing_Feature_97までしか見ることはできません。）
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_16-1.png" alt="" width="1112" />
Feature HashingのPropertiesをもう一度見てみましょう。先ほど変更したTarget column(s)以外にも、2つのプロパティがあります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_17.png" alt="" width="245" />
まず、N-gramsは文章を分割する単位です。例えば、This is a penという文章があった場合、N-gramsの値が2ではThis is、is a、a penのように前後の2つの単語で文章を区切って分割します。1では単語ごと、3ではThis is a、is a penのように区切るわけです。この方法をN-gram法といいます。特に2つの単語で区切った場合はバイグラム、1つではユニグラム、3つではトリグラムといいます。
Feature Hashingでは、まずN-gram法で文章を分割します。次に分割した文章がどの程度の頻度で全体の文章内に出現するかを数えていきます。例えばThis isというバイグラムは多くの文章に登場するかもしれません。一方で特殊な固有名詞のようなものは、全体の文章の中で1回しか登場しないかもしれません。そうして全体の文章の中で、それぞれの文章の特徴を数値として表現していきます。
N-gram法で文章を分割した後、分割した単位（例えば、This is、is a）でハッシュ化を行います。Hash bitsizeプロパティは、ハッシュ化を行う際のビットサイズを指定します。全体の文章が少ない場合はHash bitsizeは小さな値ですみますが、全体の文章が大きい場合はHash bitsizeが小さいとハッシュの衝突が起きるため、Hash bitsizeを大きくした方が特徴をよく現せるということになります。その分、処理にかかる時間が長くなります。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-2-3. 自然言語処理を行う場合の前処理</div>
<div class="l-content--detail p-lesson">
前節ではFeature Hashingについて説明しましたが、疑問を感じた方もいるかもしれません。それは、isやaという単語はほとんどの文章に登場するので、特徴を示してるとはいえないのではないかということです。これは正しい疑問で、機械学習で自然言語を用いる場合は、いきなりFeature Hasingなどを行うのではなく、前処理を行います。
Azure MLでは、Text Analyticsの配下にPreprocess Textが準備されています。先ほどのisやaといった一般的な単語（ストップワードといいます）のほか、数字や特殊文字、重複している文字などの除去も合わせて行ってくれるので、それをフローに組み込みます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_18.png" alt="" width="587" />
Preprocess Textの対象（Text column to clean）は、初期状態ではすべての文字列項目となっていますが、ここではTextだけで良いので、Column Selectorでそのように編集します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_19.png" alt="" width="1028" />
この状態で、Shiftキーを押下しながら、Wikipedia SP 500 DatasetsとPreprocess Textの2つを選択し、画面下部のRUN＞Run selectedをクリックして、選択したノードだけを実行します。
実行したPreprocess Textの下のコネクタからVisualizeを行うと、Preprocessed Textという列が追加されていることが分かるでしょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_20.png" alt="" width="856" />
次に、Feature HashingのTarget column(s)をTextからPreprocessed Textに変更します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_21.png" alt="" width="1046" />
ここまでの操作で前処理は終わりました。次項では、いよいよ再度の機械学習を行い、精度の比較をしてみることにしましょう。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-2-4. 自然言語の分類モデルの完成</div>
<div class="l-content--detail p-lesson">
ここまで前処理や特徴ハッシュを進めてきたので、いよいよ機械学習と評価に進みたいところですが、もう1つやっておきたいことがあります。それは、説明変数を絞り込むことです。Text列は前処理によってPreprocessed Text列ができましたから説明変数からは外したいところですし、そのPreprocessed Text列も特徴ハッシュで一気に増えた数値項目の列になっていますから、不要です。
そこで、フローにData Transformation＞Manipulation＞Select Columns in Datasetを追加します。また、できあがったモデルの評価結果を表示するため、Machine Learning＞Evaluate＞Evaluate Modelも追加しておきます。Cross Validate Modelの入出力およびEvaluate Modelの入力のコネクタは2つずつあり、左右で意味が異なりますので、接続先に注意してください。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_22.png" alt="" width="683" />
Select Columns in DatasetのColumn Selectorを開き、WITH RULESで条件指定で列を選択するモードにして、Begin WithをALL COLUMNS（デフォルトは全列が選択されている状態）から、column nameを指定してExclude（除外）するようにして、除外する列としてTitle、Text、Preprocessed Textの3つを指定します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_23.png" alt="" width="1043" />
後は、全体をRUNして、機械学習と評価を行います。
Evaluated Modelの下のコネクタからVisualizeを開くと、まず精度指標が表示されます。全体的な精度（Overall Accuracy）は0.60と出ており、決して高くはありませんが、この節の最初の結果と比べると圧倒的に精度が向上していることが分かります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_24.png" alt="" width="352" />
また、画面下部には目的変数であるCategory（Actual Class）と予測結果であるScored Label（Predicted Class）の表が表示されます。縦横の同じ値の交点が正しく予測された値ですが、Utilities（公益事業・85.7％）やEnergy（エネルギー・79.5％）など高い精度がでている業種もあるようです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/azureml_nlc_25.png" alt="" width="732" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-3. Pythonを使ったデータスクレイピング</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>2-3-1. Pythonを使ったデータスクレイピング</div>
<div class="l-content--detail p-lesson">
自然言語を用いるような実務では、あらかじめ蓄積されたデータを用いたり、提供されたデータセットを用いるというだけではなく、WebサイトやSNSからデータを収集して、それを用いることもあります。このような方法をデータスクレイピングといいます。
本節では、Pythonを用いてデータスクレイピングする方法を説明します。また、次節では収集したデータを用いて、Pythonで自然言語処理を行うことにします。
データスクレイピングする方法は、大きく分けて2つあります。1つは公開されているAPIを用いてデータを取得する方法です。APIによる方法はTwitterやInstagramなどのSNSでは一般的で、APIを公開している企業の規約に基づいてデータを使用します。
もう1つの方法は、公開されているWebサイトからデータを収集する方法です。これを特にWebスクレイピングといいます。APIを公開していないサービスやWebサイトでもデータを収集することができるため有用です。
しかし、Webサイトの使用規約でWebスクレイピングを禁止していることがありますし、そうでなくてもWebスクレイピングの際に短時間に大量のアクセスを行うとWebサイトの動作を不安定にしたり、クラッキング行為と認識されてしまう危険性があります。そのため、Webサイトの使用規約を確認したり、Webサイトへのアクセスに一定のウェイト時間を設けてWebサーバへに負荷をかけ過ぎないようにするといった配慮が必要です。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-3-2. APIを活用したJSONデータの取得</div>
<div class="l-content--detail p-lesson">
APIを活用したデータスクレイピングの代表例として、Twitter APIを用いたツイートデータの収集を行います。
<h4>Twitterアプリケーションの作成</h4>
Twitter APIを使用するためには、あらかじめTwitterのアカウントを作成し、Twitterアプリケーションの作成を行う必要があります。
まず、Twitterにログインした状態で下記のURLにアクセスします。
<a href="https://apps.twitter.com/app/new">https://apps.twitter.com/app/new</a>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/twitter_api_01.png" alt="" width="2228" />
それぞれ、下記のような値を入力します。
<ul>
 	<li>Name：Twitterアプリケーションの名前（他で使用されているNameは使用できません）</li>
 	<li>Description：Twitterアプリケーションの説明</li>
 	<li>Website：Twitterアプリケーションを動作させるWebサイト（適当なURLで構いませんが、自分でWebサイトを持っている場合はそのURLが良いでしょう。）</li>
 	<li>Callback URLs：空欄で構いません</li>
 	<li>Developer Agreement：規約に同意します（チェックを入れる）</li>
</ul>
最後に、Create your Twitter Applicationボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/twitter_api_02.png" alt="" width="2004" />
Twitterアプリケーションの作成が完了すると、このような画面が表示されます。
Twitter APIを使用するためには、以下の4つの値が必要です。
<ul>
 	<li>Consumer Key</li>
 	<li>Consumer Secret</li>
 	<li>Access Token</li>
 	<li>Access Token Secret</li>
</ul>
Keys and Access Tokensタブを開くと、Consumer KeyとConsumer Secretが表示されます。Access TokenとAccess Token Secretは、このタブ内で下記の操作が必要です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/twitter_api_03.png" alt="" width="2000" />
画面下部のToken Actionsから、Create my access tokenボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/twitter_api_04.png" alt="" width="2072" />
このように、Access TokenとAccess Token Secretが発行されます。
<h4>twitterモジュールのインストール</h4>
Pythonでは<a href="https://github.com/sixohsix/twitter">twitterモジュール</a>をインストールすることで、簡単にTwitter APIの呼び出しを行うことができます。まずは、新規のNotebookを開き、twitterモジュールのインストールしましょう。
<pre><code class="python hljs">
  !pip install twitter
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Twitter_Scraping.png" alt="" width="2006" /></figure>
<h4>twitterモジュールを使ってツイートを検索</h4>
Twitterモジュールでツイートを検索してみましょう。先ほど取得したConsumer Key、Consumer Secret、Access Token、Access Token Secretを使用して認証を行い、Twitterに接続します。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> twitter
  <span class="hljs-keyword">import</span> json
  CONSUMER_KEY = <span class="hljs-string">"＜Consumer Key＞"</span>
  CONSUMER_SECRET = <span class="hljs-string">"＜Consumer Secret＞"</span>
  ACCESS_TOKEN = <span class="hljs-string">"＜Access Token＞"</span>
  ACCESS_TOKEN_SECRET = <span class="hljs-string">"＜Access Token Secret＞"</span>
  auth = twitter.OAuth(consumer_key=CONSUMER_KEY, consumer_secret=CONSUMER_SECRET, token=ACCESS_TOKEN, token_secret=ACCESS_TOKEN_SECRET)
  t = twitter.Twitter(auth=auth)
</code></pre>
さらに、search.tweets()を使用し、キーワードでツイートを検索して取得します。ここでは、直近（result_type="recent"）の100件（count=100）を取得しました。
取得結果はPythonのディクショナリとしてアクセスできるので、取得結果を表示してみましょう。
<pre><code class="python hljs">
  tweets = t.search.tweets(q=<span class="hljs-string">"＜ツイートを検索するキーワード＞"</span>, lang=<span class="hljs-string">"ja"</span>, result_type=<span class="hljs-string">"recent"</span>, count=<span class="hljs-number">100</span>)
  print(json.dumps(tweets, indent=<span class="hljs-number">2</span>, ensure_ascii=<span class="hljs-keyword">False</span>))
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Twitter_Scraping-1.png" alt="" width="2058" /></figure>
<h4>ツイートをPandasで処理する</h4>
取得したツイートをPandasで処理できるようにしてみます。取得結果は階層構造になっているので、そのままではPandasで扱うことはできません。そこで、text（ツイート内容）と、screen_name（ツイートしたユーザー）の2項目だけを取得してみましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd
  status_list = []
  <span class="hljs-keyword">for</span> status <span class="hljs-keyword">in</span> tweets[<span class="hljs-string">"statuses"</span>]:
      status_list.append({
          <span class="hljs-string">"text"</span>: status[<span class="hljs-string">"text"</span>],
          <span class="hljs-string">"screen_name"</span>: status[<span class="hljs-string">"user"</span>][<span class="hljs-string">"screen_name"</span>]
      })
  df = pd.DataFrame.from_dict(status_list)
  df.head()
</code></pre>
このようなPandasのDataFrameを作ることができました。ここまで取得できれば、あとは公開されているデータセットと同様に、scikit-learnやTensorFlowといった機械学習のライブラリで使用することができるでしょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/Twitter_Scraping-2.png" alt="" width="1142" />
＜参考＞
<ul>
 	<li><a href="https://developer.twitter.com/en/docs" target="_blank" rel="noopener noreferrer">Twitter API Reference</a></li>
 	<li><a href="https://pypi.org/project/twitter/" target="_blank" rel="noopener noreferrer">Python Twitter Tools</a></li>
 	<li><a href="https://pandas.pydata.org/" target="_blank" rel="noopener noreferrer">Pandas</a></li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-3-3. HTMLデータの取得</div>
<div class="l-content--detail p-lesson">
Webサイトにある情報をスクレイピングするためには、以下のステップで進めます。
<ol>
 	<li>必要な情報のあるWebページを特定する</li>
 	<li>WebページのHTMLの構造を調べる</li>
 	<li>Pythonのurllibなどを使ってWebページのHTMLデータを取得する</li>
 	<li>BeautifulSoupなどを使ってHTMLデータを解析し、必要な情報を取得する</li>
</ol>
それでは順を追って説明することにしましょう。
<h4>必要な情報のあるWebページを特定する</h4>
Webスクレイピングのプログラミングを行う前に、下記の情報を整理する必要があります。
<ul>
 	<li>Webスクレイピングの対象となるWebサイト</li>
 	<li>必要な情報があるWebページ</li>
 	<li>対象となるWebサイトの利用規約</li>
</ul>
まず、Webスクレイピングの対象となるWebサイトを特定します。例えば、株価や為替の情報が必要ならYahoo!ファイナンスや、日本経済新聞のWebサイトなどを使うことが考えられます。特定のジャンルのニュース（例えばiPhoneに関するニュース）が必要なら、そのジャンルに特化したニュースサイト（iPhone情報に特化したブログなど）や、全般的なジャンルを扱うニュースサイトの中から情報を絞り込む（ITmediaやASCIIなどのITニュースサイトでiPhoneのニュースを検索する）必要があるでしょう。
次に、必要な情報がWebサイトの中のどこにあるかを特定します。多くのWebサイトはインデックスページと詳細ページで構成されていますから、まずインデックスページを取得して、そこで詳細ページのURLを特定し、さらに詳細ページを取得することになります。さらに、インデックスページは最新の10〜20件程度の詳細ページへのリンクしかないことが多く、それより古い詳細ページへのリンクは、ページネーション（1ページ目、2ページ目･･･など）を辿っていく必要もあるでしょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/scraping_01.png" alt="" width="490" />
また、Webスクレイピングの対象となるWebサイトに利用規約が存在する場合は、その確認は欠かせません。Webスクレイピングによる情報の使用が禁止されていたり、自動での高頻度のWebページのリクエストが禁止されている場合があるためです。
<h4>WebページのHTMLの構造を調べる</h4>
必要な情報のあるWebページが特定できたら、次はそのWebページのHTMLデータを取得し、必要な情報がHTMLデータのどこにあるかを特定します。その際、h1やh2といった見出しタグ、divなどの要素をグループ化するタグや、要素のclassやidがどのように使われているかを確認します。Chromeでは「検証」を使うと良いでしょう。
例えば、WordPressで構築されたあるブログの場合、インデックスページはこのような構成でした。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/scraping_02.png" alt="" width="927" />
h1タグのclassがentry-titleになっているものが記事（詳細）ページのタイトルのようです。h1タグの中にはaタグがあり、そこに記事ページのURLが存在します。つまり、最初にこのインデックスページを取得し、h1タグの中にあるaタグを参照すれば、記事ページの取得ができるようです。
このようにして、どのような順序でページを取得し、HTMLデータのどの部分を参照すれば良いかを設計していくわけです。
ところで、Webサイト内のWebページの遷移や、WebページのHTMLの構造は、Webサイトのリニューアルなどによって変化します。そのため、一度調査してWebスクレイピングのプログラミングを行い、データが取得できるようになっても、Webサイトがリニューアルするとデータが取得できなくなることがあります。その際は、リニューアルによってどのような変化があったかを調査し、Webスクレイピングのプログラムを書き直す必要があります。
次項では、こうした調査をもとに、WebページのHTMLデータを取得し、BeautifulSoupで必要な情報を取得していきます。
<h4>＜次項に進む前に＞</h4>
<ul>
 	<li>あなた自身が取得したい情報を決め、本項の手順で調査を行ってください。（次項の説明の都合上、ブログやニュースサイトなど、インデックスページと詳細ページが存在するサイトが良いでしょう。）</li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-3-4. PythonでWebスクレイピングのプログラムを開発する</div>
<div class="l-content--detail p-lesson">
PythonでWebスクレイピングを行う際は、urllibモジュールを使ってHTMLデータを取得し、BeautifulSoupモジュールでHTMLデータを解析するのが一般的です。
BeautifulSoup（bs4）はWatson Studioの環境では標準でインストールされています。（urllibはPython3の標準モジュールです。）
Notebookで下記のコードを実行して、エラーが出ないか確認しておきましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> request
  <span class="hljs-keyword">import</span> bs4
</code></pre>
urllibを使って、まずインデックスページのHTMLデータを取得します。ここでは、スクレイピング用のデモサイトを公開している<a href="http://toscrape.com/" target="_blank" rel="noopener noreferrer">toscrape.com</a>の書籍のオンラインショップを模したサイトを使用します。
<pre><code class="python hljs">
  url = <span class="hljs-string">'http://books.toscrape.com'</span>
  html = request.urlopen(url).read()
  print(html)
</code></pre>
例えば、下図のように取得できます。（bytes型で取得されます。）
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/scraping_-_IBM_Watson.png" alt="" width="1168" />
<h4>BeautifulSoupでインデックスページを解析</h4>
取得したHTMLデータはインデックスページなので、そこから詳細ページのURLを取得する必要があります。HTMLデータの解析にはBeautifulSoupを使用します。ここでは、詳細ページのURLとタイトル（aタグの内容）を取得し、表示してみましょう。解析する際にはパーサーを指定する必要があります（ここではlxmlを使用しています）が、その詳細は<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-a-parser" target="_blank" rel="noopener noreferrer">BeautifulSoup公式サイトの比較表</a>を参考にしてください。
<pre><code class="python hljs">
  soup = bs4.BeautifulSoup(html, <span class="hljs-string">'lxml'</span>)
  products = soup.find_all(<span class="hljs-string">'h3'</span>)
  <span class="hljs-keyword">for</span> product <span class="hljs-keyword">in</span> products:
      a = product.find(<span class="hljs-string">'a'</span>)
      print(a.attrs[<span class="hljs-string">'href'</span>], a.text)
</code></pre>
ここでのコードはWebスクレイピングの対象とするWebサイトによって異なります。本項で対象としているサイトでは、インデックスページのh3タグの要素が詳細ページへのリンクになっていました。そのため、<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find-all" target="_blank" rel="noopener noreferrer">soup.find_all()</a>の引数として、それを指定しています。
取得したh3タグのリストをfor文で繰り返し処理し、h3タグ内にあるaタグを<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find" target="_blank" rel="noopener noreferrer">find()</a>で取得して、そのhref属性の値（a.attrs['href']）と、aタグで囲まれたテキスト（a.text）を取得し、表示させています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/books_2.png" alt="" width="783" />
<h4>詳細ページの取得</h4>
次に、詳細ページを取得します。まず、全体のコードを示します。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> sleep
  <span class="hljs-keyword">for</span> product <span class="hljs-keyword">in</span> products:
      a = product.find(<span class="hljs-string">'a'</span>)
      print(a.attrs[<span class="hljs-string">'href'</span>], a.text)
      detail_page = request.urlopen(<span class="hljs-string">'http://books.toscrape.com/'</span> + a.attrs[<span class="hljs-string">'href'</span>]).read()
      detail = bs4.BeautifulSoup(detail_page, <span class="hljs-string">'lxml'</span>)
      description = detail.find(id=<span class="hljs-string">'product_description'</span>).next_sibling.next_sibling
      text = <span class="hljs-string">""</span>
      <span class="hljs-keyword">for</span> script <span class="hljs-keyword">in</span> description.find_all(<span class="hljs-string">'script'</span>, src=<span class="hljs-keyword">False</span>):
          script.decompose()
      <span class="hljs-keyword">for</span> string <span class="hljs-keyword">in</span> description.find_all(text=<span class="hljs-keyword">True</span>):
          <span class="hljs-keyword">if</span> string.strip():
              text += string
      print(text)
      sleep(<span class="hljs-number">1</span>)
</code></pre>
1行目のimport文は、詳細ページを順次取得する間にスリープを挟んで、Webサーバに過負荷をかけないために入れています。スリープの指定は最後の行で行っており、1ページを取得する毎に1秒のスリープを指定しています。
詳細ページの取得は、7行目（空行含む）から始めています。まず、インデックスページで取得したURL（a.attrs['href']）のHTMLデータを取得し、BeautifulSoupでの解析を始めます。
今回の対象サイトでは、本の紹介文はidがproduct_descriptionの次にあるpタグです。BeautifulSoupでは兄弟要素をnext_siblingで取得できます。改行（?n）も次の要素に含まれるため、next_siblingを2つ重ねています。また、本文の中にはHTMLタグやJavaScriptコードが含まれているため、それを除外するようにしています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/06/books_3.png" alt="" width="1010" />
このように取得することができました。ここでは取得結果をprintしているだけですが、機械学習のデータセットとして活用するためには、CSVデータなどとしてファイルに保存する必要があります。
＜参考＞
<ul>
 	<li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" target="_blank" rel="noopener noreferrer">Beautiful Soup Documentation</a></li>
 	<li><a href="https://docs.python.org/3/library/urllib.html" target="_blank" rel="noopener noreferrer">urllib（Python3）</a></li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-4. 自然言語処理</div>
<div class="l-content--detail p-lesson"></div>
</div>
<div class="l-content--detail p-lesson">
<div>2-4-1. 形態素解析と分かち書き</div>
<div class="l-content--detail p-lesson">
本章の第2節でAzure MLによる自然言語処理を行った際、N-gramという方法を用いました。N-gramとは下記のようなものでした。
<blockquote>N-gramは文章を分割する単位です。例えば、This is a penという文章があった場合、N-gramの値が2ではThis is、is a、a penのように前後の2つの単語で文章を区切って分割します。1では単語ごと、3ではThis is a、is a penのように区切るわけです。この方法をN-gram法といいます。特に2つの単語で区切った場合はバイグラム、1つではユニグラム、3つではトリグラムといいます。</blockquote>
この方法は、英語のように単語と単語の間がスペースで分かち書きされている場合に適用できます。しかし、日本語はそのような言語ではありません。分かち書きされることはなく、単語と単語が連続しています。そのため、日本語はそのままではN-gramを行うことができません。後で説明するように、自然言語処理の方法はN-gramだけではありませんが、何を使うにしても分かち書きされて、単語と単語の区切りが明確になっていることが必要です。
<h4>Janomeモジュールを使う</h4>
日本語の文章を分かち書きに変換するために、MeCabというモジュールが使用されることが一般的です。MeCabはオープンソースの形態素解析（文章を単語に区切り、それぞれの単語の品詞などを明確にする。自然言語を処理する上での必須技術）エンジンで、LinuxやMac、Windowsなど様々な環境で動作させることができますし、C言語をはじめとして様々なプログラミング言語から呼び出すこともできます。もちろん、Pythonから呼び出すことも可能です。
しかし、MeCabはPythonから呼び出すためのモジュールをインストールする他に、MeCab本体のインストールも必要であり、Watson StudioのNotebookで使用することは簡単ではありません。そこで、Pythonモジュールのインストールだけで使用できる形態素解析エンジンであるJanomeを使うことにします。
Janomeのインストールは他のPythonモジュールのインストールと同様に、pipコマンドで行います。
<pre><code class="python hljs">
  !pip install janome
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/janome.png" alt="" width="1066" />
Janomeが正常にインストールできたか確認するために「すもももももももものうち」という文章を形態素解析してみましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> janome.tokenizer <span class="hljs-keyword">import</span> Tokenizer
  tokenizer = Tokenizer()
  tokens = tokenizer.tokenize(<span class="hljs-string">'すもももももももものうち'</span>)
  <span class="hljs-keyword">for</span> token <span class="hljs-keyword">in</span> tokens:
    print(token)
</code></pre>
実行結果はこのようなものになりました。「すもも」という名詞、次の「も」は助詞、その次の「もも」は名詞というように、単語を区切ることができ、さらに名詞や助詞といった品詞の情報も解析できています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/janome-1.png" alt="" width="507" />
また、分かち書きは下記のように行うことができます。
<pre><code class="python hljs">
  tokenizer = Tokenizer()
  tokens = tokenizer.tokenize(<span class="hljs-string">'すもももももももものうち'</span>, wakati=<span class="hljs-keyword">True</span>)
  print(tokens)
  wakati = <span class="hljs-string">" "</span>.join(tokens)
  print(wakati)
</code></pre>
tokenize()の引数としてwakati=Trueを指定すれば、単語のリストを得ることができます。あとは、リストのjoin()を使ってリストの要素を半角スペースでつなぎ、分かち書きの文字列ができあがります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/janome-2.png" alt="" width="515" />
＜参考＞
<ul>
 	<li><a href="http://mocobeta.github.io/janome/" target="_blank" rel="noopener noreferrer">Janome</a></li>
</ul>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-4-2. TF-IDFとBag of Words（BoW）</div>
<div class="l-content--detail p-lesson">
Azure MLでの自然言語の演習では、Feature Hashingによって文章の特徴量を抽出したことを覚えているでしょうか。機械学習はデータを数値として扱うことで分類や回帰のモデルを作ることができます。Feature Hashingは、文章の特徴を数値化することで、文章を分類モデルを作成するための訓練データに変換します。
ここでは、自然言語から特徴量を抽出する方法として、基本的な考え方を説明しておくことにしましょう。
<h5>TF-IDF</h5>
TF-IDFのTFはTerm Frequencyの略で、ある単語が文章内でどの程度出現するかの頻度を示します。文章の中である単語の出現頻度が高いなら、その単語は文章の中で重要だろうとみなすことができます。
IDFは、ある単語が出てくる文章頻度の逆数です。多くの文章で出現するような単語は特徴量として使うにはそぐわないことを示します。数多くある文章の中で、ある文章にだけ頻出する単語があるならば、その単語こそ、文章の特徴を示すに相応しいというわけです。
<h5>Bag of Words（BoW）</h5>
一般に、文章中に出現する単語は、その前後の単語との関係を持っています。N-gramでは単語の前後のつながりに注目して、単語を2つずつ（バイグラム）、3つずつ（トリグラム）のように区切っていきます。しかし、BoWでは単語の出現順序を無視して、文章に単語が含まれているか否かや、単語の出現頻度だけを注目します。
例えば「すもももももももものうち」という文章には、先ほどJanomeで解析したように「すもも（名詞）」、「もも（名詞）」、「も（助詞）」、「の（助詞）」、「うち（名詞）」という5個の単語が出現しています。出現頻度で見れば下記のようになります。
<ul>
 	<li>すもも：1回</li>
 	<li>もも：2回</li>
 	<li>も：2回</li>
 	<li>の：1回</li>
 	<li>うち：1回</li>
</ul>
BoWでは、単語が登場するか否かをOne-Hot表現にしたり、出現頻度をベクトル化するといった方法で、自然言語を機械学習で扱えるようにするという考え方です。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-4-3. Word2VecとDoc2Vec</div>
<div class="l-content--detail p-lesson">
自然言語を数値化して処理する方法として、最近よく用いられているのはWord2VecやDoc2Vecです。Word2Vecはグーグルの研究者であるトマス・ミコロフ氏が提案した文書に含まれる単語を数値化（ベクトル化）する手法です。Doc2VecはWord2Vecを発展させて、文書そのものを数値化（ベクトル化）できるという違いがあります。
Word2VecやDoc2Vecは、GensimというPythonモジュールで簡単に使うことができます。ここでは、先ほど演習したJanomeでの形態素解析を組み合わせ、Word2Vecで類似単語の探索を行います。
Gensimモジュールは下記のコードでインストールします。
<pre><code class="python hljs">
  !pip install gensim
</code></pre>
<figure><img src="https://writing.itprocollege.com/wp-content/uploads/2018/05/gensim.png" alt="" width="821" /></figure>
<h4>青空文庫で夏目漱石の小説データを取得する</h4>
まず、青空文庫のサイトで公開されている夏目漱石の小説データを取得します。ここでは「吾輩は猫である」（<a href="https://www.aozora.gr.jp/cards/000148/card789.html">https://www.aozora.gr.jp/cards/000148/card789.html</a>）を使うことにしましょう。
<pre><code class="python hljs">
  <span class="hljs-keyword">import</span> zipfile
  <span class="hljs-keyword">import</span> requests
  r = requests.get(<span class="hljs-string">'https://www.aozora.gr.jp/cards/000148/files/789_ruby_5639.zip'</span>)
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'wagahai.zip'</span>, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> f:
      f.write(r.content)
  myzip = zipfile.ZipFile(<span class="hljs-string">'wagahai.zip'</span>)
  myzip.extractall()
  !ls wagahai*
</code></pre>
このコードで、青空文庫からテキストファイル形式の小説データをZIPファイルとして圧縮したものを取得し、展開しました。wagahaiwa_nekodearu.txtが小説データの本体です。（ローカルPCでも、<a href="https://www.aozora.gr.jp/cards/000148/card789.html" target="_blank" rel="noopener noreferrer">こちらのサイト</a>からダウンロードして小説データの本体を確認してみてください。）
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/08/wagahai.png" alt="" width="721" />
<h4>小説データを名詞だけの分かち書きに変換する</h4>
次にJanomeを使って分かち書きに変換します。今回は名詞だけに絞り込みを行った上で、ストップワードを除外しています。ストップワードとは、非常に多くの行に登場する名詞のことで、除外しなければモデルの精度を悪化させてしまいます。例えば「吾輩は猫である」において「（猫の）吾輩」は主人公で、非常に多く登場しますので、ストップワードとした方が良いわけです。ここでは、50行以上に登場する名詞はストップワードとしました。
また、青空文庫のデータにはルビや入力者注があるため、正規表現を用いて除外します。
最後に、訓練データはテキストファイルにする必要があるため、data.txtというファイルに保存します。
<pre><code class="python hljs">
<span class="hljs-keyword">from</span> janome.tokenizer <span class="hljs-keyword">import</span> Tokenizer
<span class="hljs-keyword">from</span> janome.tokenizer <span class="hljs-keyword">import</span> Tokenizer
<span class="hljs-keyword">import</span> codecs
<span class="hljs-keyword">import</span> re
tokenizer = Tokenizer()
norm_dict = {}
lines = []
data = <span class="hljs-string">""</span>
<span class="hljs-keyword">with</span> codecs.open(<span class="hljs-string">'wagahaiwa_nekodearu.txt'</span>, <span class="hljs-string">'r'</span>, encoding=<span class="hljs-string">'shift-jis'</span>, errors=<span class="hljs-string">'ignore'</span>) <span class="hljs-keyword">as</span> f:
    i = <span class="hljs-number">0</span>
    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines():
        <span class="hljs-comment"># 25行目から1000行目まで読む（24行目まではタイトルやテキスト中に現れる記号の説明のため省略）</span>
        i += <span class="hljs-number">1</span>
        <span class="hljs-keyword">if</span> i &lt;  <span class="hljs-number">25</span>:
            <span class="hljs-keyword">continue</span>
        <span class="hljs-keyword">elif</span> i &gt; <span class="hljs-number">1000</span>:
            <span class="hljs-keyword">break</span>
        <span class="hljs-comment"># ルビを取り除く</span>
        line = re.sub(<span class="hljs-string">r'《.*》'</span>, <span class="hljs-string">''</span>, line)
        <span class="hljs-comment"># 入力者注を取り除く</span>
        line = re.sub(<span class="hljs-string">r'［＃.*］'</span>, <span class="hljs-string">''</span>, line)
        <span class="hljs-keyword">if</span> line == <span class="hljs-string">''</span>:
            <span class="hljs-keyword">continue</span>
        <span class="hljs-comment"># janomeで名詞を取得</span>
        line_norms = []
        tokens = tokenizer.tokenize(line)
        <span class="hljs-keyword">for</span> token <span class="hljs-keyword">in</span> tokens:
            <span class="hljs-keyword">if</span> <span class="hljs-string">'名詞'</span> <span class="hljs-keyword">in</span> token.part_of_speech:
                norm = token.base_form
                line_norms.append(norm)
                <span class="hljs-keyword">if</span> norm <span class="hljs-keyword">in</span> norm_dict:
                    norm_dict[norm] += <span class="hljs-number">1</span>
                <span class="hljs-keyword">else</span>:
                    norm_dict[norm] = <span class="hljs-number">1</span>
        <span class="hljs-keyword">if</span> len(line_norms) &amp;lt; <span class="hljs-number">1</span>:
            <span class="hljs-keyword">continue</span>
        print(line_norms)
        lines.append(line_norms)
print(norm_dict)
</code></pre>
このように、各行の名詞が抜き取られる様子が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/08/word2vec_-_IBM_Watson.png" alt="" width="700" />
続いて、ストップワードの処理を行います。
<pre><code class="python hljs">
  <span class="hljs-comment"># 50行以上に登場する名詞はストップワードにする</span>
  stopwords = []
  <span class="hljs-keyword">for</span> norm, count <span class="hljs-keyword">in</span> norm_dict.items():
      <span class="hljs-keyword">if</span> count &gt;= <span class="hljs-number">50</span>:
          stopwords.append(norm)
  print(stopwords)
  <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:
      <span class="hljs-comment"># line_normsからストップワードを除外する</span>
      line_norms = []
      <span class="hljs-keyword">for</span> norm <span class="hljs-keyword">in</span> line:
          <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> norm <span class="hljs-keyword">in</span> stopwords:
              line_norms.append(norm)
      data += <span class="hljs-string">' '</span>.join(line_norms) + <span class="hljs-string">'?n'</span>
  <span class="hljs-keyword">with</span> open(<span class="hljs-string">'data.txt'</span>, <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> f:
      f.write(data)
</code></pre>
出力の最後にはストップワードとなった名詞が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/08/word2vec_-_IBM_Watson-1.png" alt="" width="906" />
<h4>Word2Vecでモデルを作成</h4>
訓練データの準備ができたので、Word2Vecでモデルを作成します。
<pre><code class="python hljs">
  <span class="hljs-keyword">from</span> gensim.models <span class="hljs-keyword">import</span> doc2vec
  data = doc2vec.TaggedLineDocument(<span class="hljs-string">'data.txt'</span>)
  model = doc2vec.Doc2Vec(data, vector_size=<span class="hljs-number">1000</span>, window=<span class="hljs-number">15</span>, min_count=<span class="hljs-number">5</span>, seed=<span class="hljs-number">0</span>)
  model.save(<span class="hljs-string">'wagahai.model'</span>)
  model.save_word2vec_format(<span class="hljs-string">'wagahai.w2vmodel'</span>)
</code></pre>
doc2Vec.Doc2Vec()のパラメータのうち、vector_sizeはベクトルの次元数です。次元数を大きくするほど文章の特徴を細かく分けることができますが、大きな値にしすぎると文章の共通点を見出せなくなるので注意が必要です。windowは前後どの程度の単語数を参照して学習するかを示します。min_countは指定した数値以下の回数しか出現しない単語を無視します。seed=0はDoc2Vecの内部で乱数を使用するため、同じ乱数を常に生成させることで同じモデルを作成させるようにしています。
<h4>「迷亭」に類似した単語を探索する</h4>
それでは、作成したモデルを使って「迷亭」に類似した単語を探索してみましょう。迷亭とは、猫の吾輩の飼い主である苦沙弥（くしゃみ）先生の友人で、たびたび苦沙弥先生をからかうために吾輩の住む家を訪れています。
<pre><code class="python hljs">
  word = <span class="hljs-string">'迷亭'</span>
  <span class="hljs-keyword">for</span> similarity <span class="hljs-keyword">in</span> model.wv.most_similar(positive=word):
    print(similarity[<span class="hljs-number">0</span>], similarity[<span class="hljs-number">1</span>])
</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2018/08/word2vec_-_IBM_Watson-2.png" alt="" width="520" />
やはり迷亭に「事件」はつきもののようです。何らかの事件を持ってきては苦沙弥先生をからかっています。また「歴史」や「本」については、苦沙弥先生の門下生である水島寒月なども含めて迷亭はそうした話をしているので、近い関係にある単語といえるでしょう。
＜参考＞
<ul>
 	<li><a href="http://mocobeta.github.io/janome/" target="_blank" rel="noopener noreferrer">Janome</a></li>
 	<li><a href="https://radimrehurek.com/gensim/models/doc2vec.html" target="_blank" rel="noopener noreferrer">Doc2Vec（gensim）</a></li>
</ul>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-5. 章末テスト</div>
<div class="l-content--detail p-lesson">
第4節を参考に、他の文書（例えば青空文庫の他の書籍データ）を使ってDoc2Vecモデルを作成し、下記のことを試してください。
<ul>
 	<li>文書に含まれる単語を1つ選び、その類似単語を探索してください。（model.wv.most_similar()を使用する。）</li>
</ul>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2390</wp:post_id>
		<wp:post_date><![CDATA[2019-02-25 08:59:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-24 23:59:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-2390]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:89:"https://writing.itprocollege.com/wp-content/uploads/2018/05/ibm_cloud_account_upgrade.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ReactNative @シューマイ</title>
		<link>https://tech.blog.uribou.me/2392-2/</link>
		<pubDate>Wed, 27 Feb 2019 10:43:39 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2392</guid>
		<description></description>
		<content:encoded><![CDATA[わたなべゆう
<a href="https://www.npmjs.com/package/expo-qr-notify">モジュール作りました。</a>
実践Expo
共著者数名
ReactNativeExpo
<ul>
 	<li>XcodeやAndroidStudioが不要</li>
 	<li>コードツリーがシンプル</li>
 	<li>JavaScriptのみで開発可能</li>
 	<li>Expo Snackでブラウザ上で試すことが可能</li>
 	<li>OTAアップデートが容易</li>
</ul>
デメリット
<ul>
 	<li>npm packageがjsのみで書かれたものしか使えない</li>
 	<li>Expoで取り込んでいるSDKでないと使えない</li>
 	<li>Bluetoothが使えない</li>
 	<li>などなど</li>
</ul>
&nbsp;
https://blog.engineer.adways.net/entry/2018/08/24/202254
https://blog.engineer.adways.net/entry/2018/08/31/180000
https://blog.engineer.adways.net/entry/2018/09/07/193000
&nbsp;
テスト
<ul>
 	<li>jestいいよ</li>
 	<li>REactNativeにも組み込まれている</li>
 	<li>react-native initしたときにjestセットアップ済み
<ul>
 	<li>yarn test</li>
 	<li>eslint-plugin-jestを追加する</li>
</ul>
</li>
 	<li>ts-jestもある</li>
 	<li>おすすめmethod
<ul>
 	<li>describe.each(table)(...)
<ul>
 	<li>異なるパラメータで同じテストを使いまわしたいときに便利</li>
</ul>
</li>
 	<li>--watchオプションなんちゃってTDDができる</li>
 	<li>--coverageはjest実行されたファイルのみで計測</li>
 	<li>jest-coverage-budge</li>
</ul>
</li>
 	<li>nockでサーバのモックを作ることができる</li>
 	<li>E2Eテストの整備が課題</li>
 	<li>テストは福利厚生w</li>
</ul>
&nbsp;
&nbsp;
&nbsp;
&nbsp;
&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2392</wp:post_id>
		<wp:post_date><![CDATA[2019-02-27 19:43:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-27 10:43:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2392-2]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_920726f4ba1062d14c78b71d001ad67d]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.engineer.adways.net%2Fentry%2F2018%2F08%2F24%2F202254" title="React NativeのレイアウトエンジンYogaの仕組み [前編] - Adwaysエンジニアブログ" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_920726f4ba1062d14c78b71d001ad67d]]></wp:meta_key>
		<wp:meta_value><![CDATA[1551750097]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_79e3067e032ff89bee5c3e9aa3f57341]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.engineer.adways.net%2Fentry%2F2018%2F08%2F31%2F180000" title="React NativeのレイアウトエンジンYogaの仕組み [後編] - Adwaysエンジニアブログ" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4eafac6fa013b3536baf90955d4cebe1]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.engineer.adways.net%2Fentry%2F2018%2F09%2F07%2F193000" title="React NativeのレイアウトエンジンYogaの仕組み [続編] - Adwaysエンジニアブログ" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_4eafac6fa013b3536baf90955d4cebe1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1551750097]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_79e3067e032ff89bee5c3e9aa3f57341]]></wp:meta_key>
		<wp:meta_value><![CDATA[1551750097]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Graspy 2. ruby on rails</title>
		<link>https://tech.blog.uribou.me/graspy-2-ruby-on-rails/</link>
		<pubDate>Thu, 14 Mar 2019 16:03:01 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2407</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="c-title--primary">2.Ruby on Rails</h1>
<div class="l-content--detail p-lesson">
このレッスンでは、Ruby on Railsを使って簡単なWebアプリケーションを作成します。
</div>
<div class="l-content--detail p-lesson">
<div>2-1. Webアプリケーションの仕組み</div>
<div class="l-content--detail p-lesson">
Webアプリケーションは、皆さんがブラウザなどからリクエスト(URLなど)を送信し、それに応じたレスポンス(画面、処理結果)を返します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/%E3%82%B5%E3%83%BC%E3%83%8F%E3%82%99%E3%83%BC%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88.png" alt="%e3%82%b5%e3%83%bc%e3%83%8f%e3%82%99%e3%83%bc%e3%82%af%e3%83%a9%e3%82%a4%e3%82%a2%e3%83%b3%e3%83%88" width="376" height="110" />Webアプリケーションを動かしているコンピューターをサーバーと呼びます。ブラウザなどをクライアントと呼びます。
例えば、Googleで「rails」を検索する場合、
<ol>
 	<li>ブラウザに表示されているGoogleの検索フォームに「rails」を入力して検索ボタンをクリックし、検索リクエストを送信します。</li>
 	<li>Googleのサーバーはそのリクエストを受け、「rails」というキーワードに基づいて検索を実行します。</li>
 	<li>検索が終わったら、その結果をレスポンスとしてブラウザに返します。</li>
 	<li>ブラウザはその内容を解析し、画面に表示します。</li>
</ol>
このレッスンで作成するWebアプリケーションでは、サーバーをRailsサーバーと呼びます。
クライアントはCloud9の内部ブラウザまたはGoogle Chromeになります。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-2. Ruby on Railsとは</div>
<div class="l-content--detail p-lesson">
Ruby on Rails (以下、Rails)は、Rubyで書かれたWebアプリケーションフレームワークです。フレームワークとは、開発に必要なクラスやメソッドを再利用可能な形にまとめた枠組みのことです。RailsはWebアプリケーション開発に特化したフレームワークです。Railsで定められた手順や規約にしたがって開発することで、短期間で効率良くWebアプリケーションを開発することができます。
このレッスンでは簡単なWebアプリケーションとして簡易ブログを作成しつつ、Railsのルールを１つ１つ説明していきます。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-3. Railsのインストール</div>
<div class="l-content--detail p-lesson">
Cloud9にRailsをインストールします。Cloud9のターミナルで
<pre><code class="hljs">workspace</code></pre>
ディレクトリで
<pre><code class="hljs sql">gem <span class="hljs-keyword">install</span> rails -v<span class="hljs-string">'5.0.1'</span></code></pre>
コマンドを実行します。
<pre><code class="ruby hljs">$ gem install rails -v<span class="hljs-string">'5.0.1'</span>
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/gem-install-rails.png" alt="gem-install-rails" width="391" height="371" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-4. Railsアプリケーションの作成</div>
<div class="l-content--detail p-lesson">
RailsでWebアプリケーションを作成します。Railsアプリケーションの作成には
<pre><code class="hljs java">rails <span class="hljs-keyword">new</span> アプリケーション名</code></pre>
コマンドを使います。Cloud9のターミナルで
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> _5<span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.1_</span> <span class="hljs-selector-tag">new</span> <span class="hljs-selector-tag">my-blog</span></code></pre>
コマンドを実行し、my-blogアプリケーションを作成しましょう。
<pre><code class="ruby hljs">$ rails _5.<span class="hljs-number">0</span>.<span class="hljs-number">1_</span> new my-blog
</code></pre>
Railsアプリケーションが正常に作成されるとCloud9左のディレクトリツリーにmy-blogというディレクトリが以下の内容で作成されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/my-blog%E3%83%86%E3%82%99%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA.png" alt="my-blog%e3%83%86%e3%82%99%e3%82%a3%e3%83%ac%e3%82%af%e3%83%88%e3%83%aa" width="183" height="323" />各ディレクトリ/ファイルの内容は以下のとおりです。
<table>
<tbody>
<tr>
<td>ディレクトリ/ファイル</td>
<td>内容</td>
</tr>
<tr>
<td>/app</td>
<td> アプリケーション本体(models, controllers, viewsの各ディレクトリを含む)</td>
</tr>
<tr>
<td>/bin</td>
<td>サーバーの実行に必要なスクリプトの格納場所</td>
</tr>
<tr>
<td>/config</td>
<td> 設定ファイルの格納場所</td>
</tr>
<tr>
<td>/db</td>
<td>データベース関連ファイルの格納場所</td>
</tr>
<tr>
<td>/lib</td>
<td>自作ライブラリなどの格納場所</td>
</tr>
<tr>
<td>/log</td>
<td>ログの格納場所</td>
</tr>
<tr>
<td>/public</td>
<td>公開ディレクトリ</td>
</tr>
<tr>
<td>/test</td>
<td>テスト関連ファイルの格納場所</td>
</tr>
<tr>
<td>/tmp</td>
<td>一時ファイルの格納場所</td>
</tr>
<tr>
<td>/vendor</td>
<td>サードパーティのライブラリなどの格納場所</td>
</tr>
<tr>
<td>config.ru</td>
<td>サーバー起動に使用するファイル</td>
</tr>
<tr>
<td>Gemfile</td>
<td>gem(Railsのライブラリ) の定義ファイル</td>
</tr>
<tr>
<td>Gemfile.lock</td>
<td> gem(Railsのライブラリ) の定義ファイル</td>
</tr>
<tr>
<td>Rakefile</td>
<td> 実行可能なタスク定義ファイル</td>
</tr>
<tr>
<td>README.md</td>
<td>readmeファイル</td>
</tr>
</tbody>
</table>
※ 内容は今覚える必要はありません。開発しながら徐々に理解していきましょう。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-5. Railsサーバーの起動</div>
<div class="l-content--detail p-lesson">
Railsサーバーを起動します。
<pre><code class="hljs">cd 移動先のディレクトリ</code></pre>
コマンドで起動したいRailsアプリケーションディレクトリに移動します。Cloud9のターミナルで以下のようにcdコマンドを実行し、my-blogディレクトリに移動しましょう。
<pre><code class="hljs ruby">$ cd my-blog</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/cd-my-blog.png" alt="cd-my-blog" width="345" height="36" />Railsサーバーは
<pre><code class="hljs">rails s</code></pre>
コマンドで起動できます。Cloud9では以下のようにターミナルで
<pre><code class="hljs php">-p $PORT -b $IP</code></pre>
オプションをつけて実行しましょう。
<pre><code class="hljs ruby">$ rails s -p $PORT -b $IP</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-s.png" alt="rails-s" width="561" height="193" />※Railsサーバー起動中はこのターミナルのタブは消さないようにしてください。もしRailsサーバーを起動したままこのターミナルのタブを消してしまった場合、Railsサーバーが起動したままになってしまいます。誤ってタブを消してしまった時は、別のターミナルで「killall ruby」コマンドを実行しRailsサーバー停止しましょう。
これでRailsサーバーが起動できました。さっそく、ブラウザでRailsアプリケーションにアクセスしてみましょう。
Cloud9のメニューから
<pre><code class="hljs">Preview→Preview Running Application</code></pre>
を選択しましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/Preview.png" alt="preview" width="205" height="77" />以下のようにCloud9の内部ブラウザでRailsの初期画面が表示されればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails%E7%94%BB%E9%9D%A2-1024x650.png" alt="rails%e7%94%bb%e9%9d%a2" width="840" height="533" />※上記画面のアドレスバーの右側の以下のボタンをクリックするとGoogle Chromeの新規タブで画面を表示することができます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/%E6%8B%A1%E5%A4%A7%E3%83%9B%E3%82%99%E3%82%BF%E3%83%B3.png" alt="%e6%8b%a1%e5%a4%a7%e3%83%9b%e3%82%99%e3%82%bf%e3%83%b3" width="38" height="34" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-6. Railsサーバーの停止</div>
<div class="l-content--detail p-lesson">
Railsサーバーを停止する場合は、Railsサーバーを起動したターミナルを選択し、
<pre><code class="hljs">Ctrl + C</code></pre>
を実行します。※ Railsサーバーを起動したターミナルには、Railsのログが表示されます。ログはRailsアプリケーションの画面にアクセスしたり内部の処理を実行する度に出力されます。
<pre><code class="hljs">Ctrl + C</code></pre>
でRailsサーバーを停止すると元のコマンド入力の表示に戻ります。以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails%E3%82%B5%E3%83%BC%E3%83%8F%E3%82%99%E3%83%BC%E5%81%9C%E6%AD%A2.png" alt="rails%e3%82%b5%e3%83%bc%e3%83%8f%e3%82%99%e3%83%bc%e5%81%9c%e6%ad%a2" width="883" height="190" />※もし、Railsサーバーを起動したターミナルを閉じてしまうなどして、上記の手順でRailsサーバーを停止できない場合、別のターミナルを開いて
<pre><code class="hljs">killall ruby</code></pre>
コマンドを実行してRailsを強制終了してください。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-7. GitHubのリポジトリ作成</div>
<div class="l-content--detail p-lesson">
作成したRailsアプリケーションをGitHubで管理するために、GitHubで「MyBlog」という新しいリポジトリを作成します。 GitHubページを開き、右上の「＋」から
<pre><code class="hljs php"><span class="hljs-keyword">New</span> repository</code></pre>
を選択します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Github-select-create-repository.png" alt="github-select-create-repository" width="254" height="291" />Repository nameに
<pre><code class="hljs">MyBlog</code></pre>
を入力して
<pre><code class="hljs sql"><span class="hljs-keyword">Create</span> repository</code></pre>
ボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/myblog-repository.png" alt="myblog-repository" width="787" height="573" />リポジトリが正常に作成されたら、以下の画面になります。これでリポジトリの作成は完了です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/new-repository.png" alt="new-repository" width="776" height="638" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-8. GitHubへpush</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">git init</code></pre>
コマンドでCloud9上にGitリポジトリを作成しましょう。 ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ git init
</code></pre>
これでCloud9上にGitリポジトリが作成されました。次にRailsアプリケーションをCloud9上のGitリポジトリにコミットします。 ターミナルで下記のコマンドを実行してください。
※ push したソースコードは GitHub のサイト上で一般公開されます。ソースコードやREADME.md などに個人情報やID・パスワードなどを記述してしまうと、それが一般公開されてしまいますので、注意が必要です。もし誤って push してしまった場合は、リポジトリを一度削除するなどして対応して下さい。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"first commit"</span>
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/git-init.png" alt="git-init" width="552" height="324" />新しく作成したmy-blog内のファイルがコミットされました。最後にCloud9上のGitリポジトリにコミットした内容をGitHubにpushします。 ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ git remote add origin <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>GitHubのユーザ名/MyBlog.git
$ git remote -v
$ git push origin master</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/git-push.png" alt="git-push" width="802" height="334" />
<pre><code class="hljs">git push origin master</code></pre>
コマンド実行後、GitHubのユーザー名とパスワードを要求されます。パスワードは入力しても表示されないようになっています。もし、ユーザー名やパスワードを間違えた場合、fatal: Authentication failed for ...と表示されますので、
<pre><code class="hljs">git push origin master</code></pre>
コマンドを再度実行し、正しいユーザー名とパスワードを入力しなおしましょう。GitHubへのpushが正常終了したら、GitHubのMyBlogリポジトリにRailsアプリケーションのファイルが正しく反映されていることを確認しましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/MyBlog.png" alt="myblog" width="758" height="761" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-9. 投稿画面の作成</div>
<div class="l-content--detail p-lesson">
Railsは非常に強力なWebアプリケーションフレームワークです。
<pre><code class="hljs">rails g scaffold</code></pre>
コマンドを使うだけで、一覧画面、登録画面、編集画面を作成できます。
scaffoldコマンドの書式は以下のとおりです。
<pre><code class="hljs">rails g scaffold モデル名 フィールド名1:型1 フィールド名2:型2 ... 
</code></pre>
Cloud9のターミナルで以下のコマンドを実行しましょう。
<pre><code class="hljs ruby">$ rails g scaffold Message <span class="hljs-symbol">title:</span>string <span class="hljs-symbol">message:</span>string 
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-scaffold.png" alt="rails-scaffold" width="715" height="583" />このように様々なファイルが自動的に生成されます。ここでは各ファイルの内容の説明は後にし、まずはWebアプリケーションとして表示するところまで進めます。
作成したMessageモデルをデータベースに反映させるために、
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span></code></pre>
コマンドを実行します。Cloud9のターミナルで以下のコマンドを実行しましょう。
<pre><code class="hljs ruby">$ rails <span class="hljs-symbol">db:</span>migrate
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-db-migrate.png" alt="rails-db-migrate" width="591" height="118" />これで準備が整いました。「Railsサーバーの起動」でやったように
<pre><code class="hljs php">rails s -p $PORT -b $IP</code></pre>
コマンドを実行し、railsサーバーを起動して画面を確認してみましょう。
先ほどと同じように以下の画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails%E7%94%BB%E9%9D%A2-1024x650.png" alt="rails%e7%94%bb%e9%9d%a2" width="840" height="533" />ここでさらにアドレスバーのURLに/messagesと追記してEnterキーを押してみてください。以下の画面が表示されるはずです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/messages-1024x409.png" alt="messages" width="840" height="336" />画面上の
<pre><code class="hljs php"><span class="hljs-keyword">New</span> Message</code></pre>
リンクをクリックすると新規Message登録画面が表示されます。
Titleに「テスト」、Messageに「Hello World!」を入力し、
<pre><code class="hljs sql"><span class="hljs-keyword">Create</span> Message</code></pre>
ボタンをクリックしましょう。以下のようにメッセージの登録成功画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/confirm.png" alt="confirm" width="311" height="208" />さらに
<pre><code class="hljs">Back</code></pre>
リンクをクリックするとメッセージの一覧画面に戻り、登録したメッセージが表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/%E4%B8%80%E8%A6%A7.png" alt="%e4%b8%80%e8%a6%a7" width="326" height="169" />メッセージの詳細を見たければ
<pre><code class="hljs sql"><span class="hljs-keyword">Show</span></code></pre>
リンク、編集したい場合は
<pre><code class="hljs">Edit</code></pre>
リンクをクリックすれば各画面に遷移します。
<pre><code class="hljs">Destroy</code></pre>
リンクをクリックすることで削除もできます。
このようにRuby on Railsを使うと簡単なアプリケーションであればいくつかのコマンドを実行するだけで、ほとんどプログラムを書かずにあっと言う間に作成できてしまいます。
次章以降で１つ１つ確認していく前に、今までの変更をGitHubに登録しておきましょう。
新しくCloud9のターミナルを開き（タブの+から）以下の3つのコマンドを実行しましょう。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"Add message"</span>
$ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/git-add-message.png" alt="git-add-message" width="743" height="766" />
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-10. Ruby on Railsの仕組み</div>
<div class="l-content--detail p-lesson">
RailsはMVCモデルに基づいたWebアプリケーションフレームワークです。MVCモデルは、Webアプリケーションに必要な機能をModel、View、Controllerの役割に分けて管理します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2017/04/MVC2.png" alt="mvc" width="663" height="376" />Modelはデータを扱い、Viewは表示、Controllerはデータや表示の制御を担当します。
クライアントからリクエストが送られてくるとRailsサーバー内では、以下の流れでレスポンスを返します。
<ol>
 	<li>クライアントがリクエストを送信</li>
 	<li>Routerがリクエスト内容に応じて、適切なControllerを呼び出す</li>
 	<li>Controller内で処理を開始</li>
 	<li>処理に必要であればControllerはModelを介してデータを処理</li>
 	<li>処理を終えたらControllerはViewを呼び出す</li>
 	<li>Viewは表示内容をControllerに返す</li>
 	<li>Controllerは処理結果をRouterを経由してクライアントにレスポンスとして返す</li>
</ol>
上記のMVCモデルの図とRails内の主なディレクトリ/ファイルを対応させると以下のようになります。
<table>
<tbody>
<tr>
<td>図</td>
<td>ディレクトリ/ファイル</td>
</tr>
<tr>
<td>Router</td>
<td>config/routes.rb</td>
</tr>
<tr>
<td>Model</td>
<td>app/models/</td>
</tr>
<tr>
<td>View</td>
<td>app/views/</td>
</tr>
<tr>
<td>Controller</td>
<td>app/controllers/</td>
</tr>
<tr>
<td>DB</td>
<td>db/database.yml</td>
</tr>
</tbody>
</table>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-11. Router</div>
<div class="l-content--detail p-lesson">
Routerについて詳しくみていきましょう。Routerはクライアントのリクエストを解析し、その内容に応じて適切なControllerを呼び出します。これをルーティングと呼びます。Webアプリケーションでは、クライアントのリクエストはHTTPプロトコル(方式)に従い、以下の4種類に分類できます。
<table>
<tbody>
<tr>
<td>HTTPメソッド</td>
<td>意味</td>
<td>対応するMyBlogの例</td>
</tr>
<tr>
<td>GET</td>
<td>データの取得</td>
<td>メッセージ一覧画面の表示</td>
</tr>
<tr>
<td>POST</td>
<td>データの送信</td>
<td>メッセージの新規作成</td>
</tr>
<tr>
<td>PATCH/PUT</td>
<td>データの更新</td>
<td>メッセージの更新</td>
</tr>
<tr>
<td>DELETE</td>
<td>データの削除</td>
<td>メッセージの削除</td>
</tr>
</tbody>
</table>
実際にMyblogのconfig/routes.rbを確認してみましょう。
config/routes.rb
<pre><code class="ruby hljs">Rails.application.routes.draw <span class="hljs-keyword">do</span>
 resources <span class="hljs-symbol">:messages</span>
 <span class="hljs-comment"># For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html</span>
<span class="hljs-keyword">end</span></code></pre>
<pre><code class="hljs css"><span class="hljs-selector-tag">resources</span> <span class="hljs-selector-pseudo">:messages</span></code></pre>
と記述されているのがわかります。resourcesを記述すると上記のHTTPメソッドGET、POST、PATCH/PUT、DELETEの全てに対する操作を定義したことになります。
<pre><code class="hljs">rails routes</code></pre>
コマンドを実行すると、Routerに定義されている内容をみることができます。Cloud9のターミナルで以下のコマンドを実行しましょう。
<pre><code class="ruby hljs">$ rails routes
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-routes.png" alt="rails-routes" width="490" height="176" />これは以下のような意味になります。
<table>
<tbody>
<tr>
<td>Verb (HTTPメソッド)</td>
<td>URI Pattern (URL)</td>
<td>Controller#Action (MessagesControllerのアクション名)</td>
<td>説明</td>
</tr>
<tr>
<td>GET</td>
<td>/messages</td>
<td>index</td>
<td>一覧画面</td>
</tr>
<tr>
<td>POST</td>
<td>/messages</td>
<td>create</td>
<td>登録処理</td>
</tr>
<tr>
<td>GET</td>
<td>/messages/new</td>
<td>new</td>
<td>新規登録画面</td>
</tr>
<tr>
<td>GET</td>
<td>/messages/:id/edit</td>
<td>edit</td>
<td>編集画面</td>
</tr>
<tr>
<td>GET</td>
<td>/messages/:id</td>
<td>show</td>
<td>詳細画面</td>
</tr>
<tr>
<td>PATCH</td>
<td>/messages/:id</td>
<td>update</td>
<td>更新処理</td>
</tr>
<tr>
<td>PUT</td>
<td>/messages/:id</td>
<td>update</td>
<td>更新処理</td>
</tr>
<tr>
<td>DELETE</td>
<td>/messages/:id</td>
<td>destroy</td>
<td>削除処理</td>
</tr>
</tbody>
</table>
一覧画面を表示する時にアドレスバーに、
<pre><code class="hljs">/messages</code></pre>
を追記してアクセスしました。このように、基準となるアドレス(ルートアドレス
<pre><code class="hljs">/</code></pre>
)にURI Patternを追記してアクセスするとGETメソッドとしてリクエストが送信され、対応する画面が表示されます。例えば、
<pre><code class="hljs java">/messages/<span class="hljs-keyword">new</span></code></pre>
と追記してアクセスすると新規登録画面が表示されます。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-12. トップ画面の変更</div>
<div class="l-content--detail p-lesson">
MyBlogのトップ画面はRailsアプリケーションのデフォルトの画面が表示されていました。Routerにルートアドレスに対するリクエストがきたら、メッセージ一覧画面を表示するように修正しましょう。
config/routes.rbに以下のように
<pre><code class="ruby hljs">root <span class="hljs-string">'messages#index'</span>
</code></pre>
を追記して保存しましょう。
config/routes.rb
<pre><code class="ruby hljs">Rails.application.routes.draw <span class="hljs-keyword">do</span>
 root <span class="hljs-string">'messages#index'</span>
 resources <span class="hljs-symbol">:messages</span>
 <span class="hljs-comment"># For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html</span>
<span class="hljs-keyword">end</span></code></pre>
<pre><code class="hljs">root</code></pre>
はルートアドレス
<pre><code class="hljs">/</code></pre>
に対するGETメソッドを意味します。修正後、ターミナルで
<pre><code class="hljs">rails routes</code></pre>
コマンドを実行しましょう。
<pre><code class="ruby hljs">$ rails routes
</code></pre>
以下、実行例です。ルートアドレス
<pre><code class="hljs">/</code></pre>
に対して、MessagesControllerのindexアクションを呼び出す１行が追加されているはずです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/root.png" alt="root" width="508" height="196" />これでルートアドレスでアクセスした場合も一覧画面が表示されるようになりました。Railsサーバーを起動してアクセスして確認してみてください。
今までの変更をGitHubに登録しておきましょう。Coud9のターミナルで以下の3つのコマンドを実行しましょう。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"Add root"</span>
$ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-13. 【課題１】新しいアプリを作成しよう！</div>
<div class="l-content--detail p-lesson">
条件１：my-blogとは別のアプリケーションを作成すること
条件２：scaffoldコマンドで、Messageとは別のモデル名、フィールド名を使うこと
条件３：トップページが一覧画面になっていること
条件４：GitHubにmy-blogとは別のリポジトリで登録されていること
ヒント１：作業ブランチ名を変更する
git にはブランチというものが存在します。これは「作業履歴を枝分かれで記録していくためのもの」になります。 現在 git コマンドで master という指定をしている箇所がありますが、これは master という名前のブランチで作業していることを表しています。
<pre><code class="hljs">git init</code></pre>
を実施した場合、最初に作成されるブランチは master のみとなります。 例えば master には含めるかどうか分からないが、一時的に変更を試したいため commit したいという事があると仮定します。この場合 master に commit してしまうと、やっぱりその commit は必要がなかった、という時に commit を取り消す必要が生じます。しかし、一度 commit したものを取り消す作業は、複数人で同じ git リポジトリを操作している場合、ファイルの競合が発生するため、好ましくありません。 ブランチ名を変更する場合、その変更が何を意味しているのかわかりやすい英名を設定すると良いです。「新しいテキストファイルを1つ追加する」というような変更の場合は
<pre><code class="hljs java"><span class="hljs-keyword">new</span>-text</code></pre>
といったようなブランチ名を指定します。
<pre><code class="hljs java">
  master
* <span class="hljs-keyword">new</span>-text (master のコピー)
</code></pre>
この場合、ブランチ名を変更することで「 master のコピー」を作成したことになります。一時的な変更を試したい人は master ブランチのコピーである new-text で作業し、そこに commit しておくことで、本来の master ブランチに commit しなくても、作業履歴を残すことができます。
ヒント２：gitコマンド
<pre><code class="hljs ruby">$ git status</code></pre>
現在自分がどのブランチ名を利用しているかは
<pre><code class="hljs ruby">$ git status</code></pre>
で調べられます。
<pre><code class="hljs ruby">$ git branch</code></pre>
どのようなブランチ名があるかは
<pre><code class="hljs ruby">$ git branch</code></pre>
で調べられます。
<pre><code class="hljs java">$ git checkout -b <span class="hljs-keyword">new</span>-text</code></pre>
ブランチ名を変更する際、そのブランチ名がまだ作成されていない（初めて変更する）場合は
<pre><code class="hljs">git checkout -b (ブランチ名)</code></pre>
$ を実行します。上記の例は
<pre><code class="hljs java"><span class="hljs-keyword">new</span>-text</code></pre>
というブランチ名に変更されます。
<pre><code class="hljs ruby">$ git checkout master</code></pre>
ブランチ名を変更する際、そのブランチ名が既に作成済みである場合は
<pre><code class="hljs ruby">$ git checkout (ブランチ名)</code></pre>
を実行します。上記の例は `master` ブランチ名に戻ります。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-14. ControllerとModel</div>
<div class="l-content--detail p-lesson">
ControllerとModelについて詳しくみていきましょう。ルートアドレス、または/messagesでアクセスすると、MessagesControllerのindexアクション(メソッド)が呼ばれます。app/controllers/messages_controller.rbのindexメソッドを確認しましょう。
app/controllers/messages_controller.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MessagesController</span> &lt; ApplicationController</span>
 before_action <span class="hljs-symbol">:set_message</span>, <span class="hljs-symbol">only:</span> [<span class="hljs-symbol">:show</span>, <span class="hljs-symbol">:edit</span>, <span class="hljs-symbol">:update</span>, <span class="hljs-symbol">:destroy</span>]
 <span class="hljs-comment"># GET /messages</span>
 <span class="hljs-comment"># GET /messages.json</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span>
   @messages = Message.all
 <span class="hljs-keyword">end</span>
以下、略
...</code></pre>
MessagesControllerのindexメソッド内には、以下の処理が１行だけ記述されています。
<pre><code class="ruby hljs">@messages = Message.all</code></pre>
@messagesはインスタンス変数です。Message.allのMessageは、Messageモデルのことです。Messageモデルはapp/models/message.rbで定義されています。
app/models/message.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Message</span> &lt; ApplicationRecord</span>
<span class="hljs-keyword">end</span></code></pre>
Message内には何も定義されていませんが、ApplicationRecordを継承することでデータベースと結びついています。Messageモデルに対応するmessagesテーブルは、db/migrate/xxxxxxxxxxxxxx_create_messages.rbに定義されています。
db/migrate/xxxxxxxxxxxxxx_create_messages.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CreateMessages</span> &lt; ActiveRecord::Migration[5.0]</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span>
   create_table <span class="hljs-symbol">:messages</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span>
     t.string <span class="hljs-symbol">:title</span>
     t.string <span class="hljs-symbol">:message</span>
     t.timestamps
   <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span></code></pre>
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">g</span> <span class="hljs-selector-tag">scaffold</span> <span class="hljs-selector-tag">Message</span> <span class="hljs-selector-tag">title</span><span class="hljs-selector-pseudo">:string</span> <span class="hljs-selector-tag">message</span><span class="hljs-selector-pseudo">:string</span></code></pre>
で生成したように、Messageモデルには、titleとmessageがカラムとして設定されていることがわかります。このファイルの内容を
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span></code></pre>
コマンドを実行することでデータベースにマイグレーションし、messagesテーブルを作成しています。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-15. マイグレーション</div>
<div class="l-content--detail p-lesson">
マイグレーションは、データベースのテーブルの生成や内容の変更時に使うRailsの機能です。db/migrate内のマイグレーションファイルにテーブルの生成・変更内容を記述することで、SQL文を記述することなくデータベースのスキーマを変更することが可能です。マイグレーションファイルは、
<pre><code class="hljs">rails g scaffold</code></pre>
<pre><code class="hljs">rails generate model</code></pre>
<pre><code class="hljs">rails generate migration</code></pre>
の各コマンドを実行した時に生成されます。
マイグレーションファイルに記述した内容は、
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span></code></pre>
コマンドを実行することでデータベースに反映されます。
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span><span class="hljs-selector-pseudo">:status</span></code></pre>
コマンドを実行するとどのマイグレーションファイルがマイグレーション済みかまだマイグレーションしていないかがわかります。Statusがupであればマイグレーション済み、downであればまだマイグレーションしていません。rails db:migrate:status実行例
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-db-migrate-status.png" alt="rails-db-migrate-status" width="503" height="145" />マイグレーションすると、データベースのスキーマ情報が記述されているdb/schema.rbが書き換えられます。
すなわち、db/schema.rbに記述されている内容がデータベースに反映済みの内容になります。db/schema.rbは自動で更新されるので自分で編集しないようにしましょう。
db/schema.rb
<pre><code class="ruby hljs">ActiveRecord::Schema.define(<span class="hljs-symbol">version:</span> <span class="hljs-number">20161225053940</span>) <span class="hljs-keyword">do</span>
 create_table <span class="hljs-string">"messages"</span>, <span class="hljs-symbol">force:</span> <span class="hljs-symbol">:cascade</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span>
   t.string <span class="hljs-string">"title"</span>
   t.string <span class="hljs-string">"message"</span>
   t.datetime <span class="hljs-string">"created_at"</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
   t.datetime <span class="hljs-string">"updated_at"</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
 <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span></code></pre>
現時点では、messagesテーブルに、title、messageというカラムが文字列型として生成されていることがわかります。created_atには、Messageモデルのデータ生成時の日時が記録され、updated_atには、Messageモデルのデータが更新された時の日時が記録されます。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-16. データベースの確認</div>
<div class="l-content--detail p-lesson">
RailsではSQLiteが標準のデータベースになっています。db/development.sqlite3がそのデータベースファイルです。
<pre><code class="hljs">rails db</code></pre>
コマンドでデータベースのコンソールを使うことができます。ターミナルで
<pre><code class="hljs">rails db</code></pre>
コマンドを実行しましょう。
<pre><code class="ruby hljs">$ rails db</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-db.png" alt="rails-db" width="433" height="94" />.schemaコマンドでデータベースに登録されているスキーマを確認することができます。
<pre><code class="ruby hljs">sqlite&gt; .schema</code></pre>
以下、実行例です。messagesテーブルの定義が参照できます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/schema-1024x61.png" alt="schema" width="840" height="50" />このカリキュラムではSQLiteの操作については詳しく解説しませんが、「SQLite コマンド」などで検索すると参考サイトが数多くありますので、そちらをご覧ください。
<pre><code class="hljs css"><span class="hljs-selector-class">.q</span></code></pre>
でSQLiteのコンソールを終了します。
<pre><code class="ruby hljs">sqlite&gt; .q</code></pre>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-17. カラムの追加</div>
<div class="l-content--detail p-lesson">
Messageモデルに名前(name)を追加してみましょう。rails g migrationコマンドを使ってmessagesテーブルにnameカラムを追加します。
ターミナルで以下のコマンドを実行しましょう。
<pre><code class="ruby hljs">$ rails g migration AddNameToMessages <span class="hljs-symbol">name:</span>string</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-g-migration.png" alt="rails-g-migration" width="699" height="100" />db/migrate/xxxxxxxxxxxxx_add_name_to_messages.rbというファイルが生成されたはずです。
rails db:migrate:statusコマンドを実行してみましょう。まだマイグレーションしていませんので、上記のファイルはdown状態になっていることがわかります。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span><span class="hljs-symbol">migrate:</span>status</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-g-migrate-status-2.png" alt="rails-g-migrate-status-2" width="505" height="162" />データベースに反映するために、ターミナルでrails db:migrateコマンドを実行しましょう。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span>migrate</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/db-migrate.png" alt="db-migrate" width="584" height="116" />db/schema.rbファイルを確認すると
<pre><code class="hljs java">t.string   <span class="hljs-string">"name"</span></code></pre>
が追加されているのがわかります。
db/schema.rb
<pre><code class="ruby hljs">ActiveRecord::Schema.define(<span class="hljs-symbol">version:</span> <span class="hljs-number">20161225091257</span>) <span class="hljs-keyword">do</span>
 create_table <span class="hljs-string">"messages"</span>, <span class="hljs-symbol">force:</span> <span class="hljs-symbol">:cascade</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span>
   t.string <span class="hljs-string">"title"</span>
   t.string <span class="hljs-string">"message"</span>
   t.datetime <span class="hljs-string">"created_at"</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
   t.datetime <span class="hljs-string">"updated_at"</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
   t.string <span class="hljs-string">"name"</span>
 <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span></code></pre>
今までの変更を保存しておきましょう。ターミナルで以下の3つのコマンドを実行します。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"Add name"</span>
$ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-18. Modelの操作</div>
<div class="l-content--detail p-lesson">
Modelについて詳しくみていくために、railsコンソールを使います。railsコンソールはirbに似た働きを持つ機能で、railsで作成したモデルなどの動作確認やデバッグに役立ちます。irbでは任意のソースコードを load "greeting.rb" で逐一読み込んでいましたが、railsコンソールではrailsのファイルを読み込むための動作がすべて自動化されています。
<pre><code class="hljs">rails c</code></pre>
コマンドでrailsコンソールを開くことができます。ターミナルで
<pre><code class="hljs">rails c</code></pre>
コマンドを実行しましょう。
<pre><code class="ruby hljs">$ rails c</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">itpro-<span class="hljs-symbol">college:</span>~<span class="hljs-regexp">/workspace/my</span>-blog $ rails c
Running via Spring preloader <span class="hljs-keyword">in</span> process <span class="hljs-number">16180</span>
Loading development environment (Rails <span class="hljs-number">5.0</span>.<span class="hljs-number">2</span>)
<span class="hljs-meta">2.3.0 :001 &gt;</span> </code></pre>
railsコンソールで
<pre><code class="hljs css"><span class="hljs-selector-tag">Message</span><span class="hljs-selector-class">.column_names</span></code></pre>
を実行すると、Messageモデルに定義されているカラムを確認することができます。
<pre><code class="ruby hljs">&gt; Message.column_names</code></pre>
以下、実行例です。
<pre><code class="ruby hljs"><span class="hljs-meta">2.3.0 :001 &gt;</span>  Message.column_names
 =&gt; [<span class="hljs-string">"id"</span>, <span class="hljs-string">"title"</span>, <span class="hljs-string">"message"</span>, <span class="hljs-string">"created_at"</span>, <span class="hljs-string">"updated_at"</span>, <span class="hljs-string">"name"</span>]
<span class="hljs-meta">2.3.0 :002 &gt;</span> </code></pre>
Message.allを実行すると、Messageモデルに登録されている全てのデータを参照することができます。
<pre><code class="ruby hljs">&gt; Message.all</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :002 &gt;</span> Message.all
Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">4</span>ms)  SELECT <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span>
=&gt; #&lt;ActiveRecord::Relation [#&lt;Message id: 1, title: "テスト", message: "Hello World!", created_at: "2017-03-26 04:52:46", updated_at: "2017-03-26 04:52:46", name: nil&gt;]&gt;
<span class="hljs-number">2.3</span>.<span class="hljs-number">0</span> <span class="hljs-symbol">:</span><span class="hljs-number">003</span> &gt;
</code></pre>
つまり、app/controllers/messages_controller.rbのindexメソッドに記述されているMessage.allは、全てのMessageデータの取得をおこなっているのです。
Messageにデータを追加してみましょう。Message.newでインスタンスを生成し、saveメソッドでデータを保存します。以下のように実行しましょう。
<pre><code class="ruby hljs">&gt;  msg = Message.new(<span class="hljs-symbol">title:</span> <span class="hljs-string">"Hello"</span>, <span class="hljs-symbol">message:</span> <span class="hljs-string">"Hello World!"</span>, <span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
&gt; msg.save</code></pre>
以下、実行例です。
<pre><code class="ruby hljs"><span class="hljs-meta">2.3.0 :003 &gt;</span> msg = Message.new(<span class="hljs-symbol">title:</span> <span class="hljs-string">"Hello"</span>, <span class="hljs-symbol">message:</span> <span class="hljs-string">"Hello World!"</span>, <span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
 =&gt; <span class="hljs-comment">#</span>
<span class="hljs-meta">2.3.0 :004 &gt;</span> msg.save
   (<span class="hljs-number">0</span>.<span class="hljs-number">3</span>ms)  <span class="hljs-keyword">begin</span> transaction
  SQL (<span class="hljs-number">0</span>.<span class="hljs-number">7</span>ms)  INSERT INTO <span class="hljs-string">"messages"</span> (<span class="hljs-string">"title"</span>, <span class="hljs-string">"message"</span>, <span class="hljs-string">"created_at"</span>, <span class="hljs-string">"updated_at"</span>, <span class="hljs-string">"name"</span>) VALUES (?, ?, ?, ?, ?)  [[<span class="hljs-string">"title"</span>, <span class="hljs-string">"Hello"</span>], [<span class="hljs-string">"message"</span>, <span class="hljs-string">"Hello World!"</span>], [<span class="hljs-string">"created_at"</span>, <span class="hljs-number">2017</span>-<span class="hljs-number">03</span>-<span class="hljs-number">26</span> <span class="hljs-number">04</span><span class="hljs-symbol">:</span><span class="hljs-number">54</span><span class="hljs-symbol">:</span>09 UTC], [<span class="hljs-string">"updated_at"</span>, <span class="hljs-number">2017</span>-<span class="hljs-number">03</span>-<span class="hljs-number">26</span> <span class="hljs-number">04</span><span class="hljs-symbol">:</span><span class="hljs-number">54</span><span class="hljs-symbol">:</span>09 UTC], [<span class="hljs-string">"name"</span>, <span class="hljs-string">"James"</span>]]
   (<span class="hljs-number">13.4</span>ms)  commit transaction
 =&gt; true
<span class="hljs-meta">2.3.0 :005 &gt;</span> </code></pre>
再度、Message.allを実行してデータが追加されていることを確認しましょう。
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :005 &gt;</span> Message.all
Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">3</span>ms)  SELECT <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span>
=&gt; #&lt;ActiveRecord::Relation [#&lt;Message id: 1, title: "テスト", message: "Hello World!", created_at: "2017-03-26 04:52:46", updated_at: "2017-03-26 04:52:46", name: nil&gt;, #&lt;Message id: 2, title: "Hello", message: "Hello World!", created_at: "2017-03-26 04:54:09", updated_at: "2017-03-26 04:54:09", name: "James"&gt;]&gt;
<span class="hljs-number">2.3</span>.<span class="hljs-number">0</span> <span class="hljs-symbol">:</span><span class="hljs-number">006</span> &gt;
</code></pre>
特定のidのデータのみを取得するには、findメソッドを使います。idが1のMessageを取得してみましょう。
<pre><code class="ruby hljs">&gt; Message.find(<span class="hljs-number">1</span>)</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :006 &gt;</span> Message.find(<span class="hljs-number">1</span>)
Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">7</span>ms)  SELECT  <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"id"</span> = ? LIMIT ?  [[<span class="hljs-string">"id"</span>, <span class="hljs-number">1</span>], [<span class="hljs-string">"LIMIT"</span>, <span class="hljs-number">1</span>]]
=&gt; #&lt;Message id: 1, title: "テスト", message: "Hello World!", created_at: "2017-03-26 04:52:46", updated_at: "2017-03-26 04:52:46", name: nil&gt;
<span class="hljs-meta">2.3.0 :007 &gt;</span> </code></pre>
id以外のカラムをキーにして取得する場合は、find_byメソッドを使います。nameがJamesのMessageを取得してみましょう。
<pre><code class="ruby hljs">&gt; Message.find_by(<span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :007 &gt;</span> Message.find_by(<span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">4</span>ms)  SELECT  <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"name"</span> = ? LIMIT ?  [[<span class="hljs-string">"name"</span>, <span class="hljs-string">"James"</span>], [<span class="hljs-string">"LIMIT"</span>, <span class="hljs-number">1</span>]]
=&gt; #&lt;Message id: 2, title: "Hello", message: "Hello World!", created_at: "2017-03-26 04:54:09", updated_at: "2017-03-26 04:54:09", name: "James"&gt;
<span class="hljs-meta">2.3.0 :008 &gt;</span>
</code></pre>
whereメソッドを使って条件に一致した複数のデータを取得することもできます。whereメソッドを使ってnameがJamesのMessageを取得してみましょう。
<pre><code class="ruby hljs">&gt; Message.where(<span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :008 &gt;</span> Message.where(<span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">4</span>ms)  SELECT <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"name"</span> = ?  [[<span class="hljs-string">"name"</span>, <span class="hljs-string">"James"</span>]]
=&gt; #&lt;ActiveRecord::Relation [#&lt;Message id: 2, title: "Hello", message: "Hello World!", created_at: "2017-03-26 04:54:09", updated_at: "2017-03-26 04:54:09", name: "James"&gt;]&gt;
<span class="hljs-number">2.3</span>.<span class="hljs-number">0</span> <span class="hljs-symbol">:</span><span class="hljs-number">00</span>9 &gt;
</code></pre>
whereで返されるデータはfind系メソッドと違い、[]でくくられており、配列になっていることに注意してください。
最後にdestroyメソッドを使って、データを削除してみましょう。
<pre><code class="ruby hljs">&gt; msg = Message.find_by(<span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
&gt; msg.destroy</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :009 &gt;</span> msg = Message.find_by(<span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
 Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">2</span>ms)  SELECT  <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"name"</span> = ? LIMIT ?  [[<span class="hljs-string">"name"</span>, <span class="hljs-string">"James"</span>], [<span class="hljs-string">"LIMIT"</span>, <span class="hljs-number">1</span>]]
=&gt; #&lt;Message id: 2, title: "Hello", message: "Hello World!", created_at: "2017-03-26 04:54:09", updated_at: "2017-03-26 04:54:09", name: "James"&gt;
<span class="hljs-meta">2.3.0 :010 &gt;</span> msg.destroy
 (<span class="hljs-number">0</span>.<span class="hljs-number">2</span>ms)  <span class="hljs-keyword">begin</span> transaction
 SQL (<span class="hljs-number">0</span>.<span class="hljs-number">4</span>ms)  DELETE FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"id"</span> = ?  [[<span class="hljs-string">"id"</span>, <span class="hljs-number">2</span>]]
 (<span class="hljs-number">14.6</span>ms)  commit transaction
=&gt; #&lt;Message id: 2, title: "Hello", message: "Hello World!", created_at: "2017-03-26 04:54:09", updated_at: "2017-03-26 04:54:09", name: "James"&gt;
<span class="hljs-meta">2.3.0 :011 &gt;</span>
</code></pre>
destroy_allメソッドを使って、全てのデータを削除することもできます。
<pre><code class="ruby hljs">&gt; Message.destroy_all</code></pre>
以下、実行例です。
<pre><code class="ruby hljs">
<span class="hljs-meta">2.3.0 :011 &gt;</span> msg = Message.new(<span class="hljs-symbol">title:</span> <span class="hljs-string">"Hello"</span>, <span class="hljs-symbol">message:</span> <span class="hljs-string">"Hello World!"</span>, <span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
=&gt; #&lt;Message id: nil, title: "Hello", message: "Hello World!", created_at: nil, updated_at: nil, name: "James"&gt;
<span class="hljs-meta">2.3.0 :012 &gt;</span> msg.save
  (<span class="hljs-number">0</span>.<span class="hljs-number">2</span>ms)  <span class="hljs-keyword">begin</span> transaction
  SQL (<span class="hljs-number">0</span>.<span class="hljs-number">5</span>ms)  INSERT INTO <span class="hljs-string">"messages"</span> (<span class="hljs-string">"title"</span>, <span class="hljs-string">"message"</span>, <span class="hljs-string">"created_at"</span>, <span class="hljs-string">"updated_at"</span>, <span class="hljs-string">"name"</span>) VALUES (?, ?, ?, ?, ?)  [[<span class="hljs-string">"title"</span>, <span class="hljs-string">"Hello"</span>], [<span class="hljs-string">"message"</span>, <span class="hljs-string">"Hello World!"</span>], [<span class="hljs-string">"created_at"</span>, <span class="hljs-number">2017</span>-<span class="hljs-number">03</span>-<span class="hljs-number">26</span> <span class="hljs-number">04</span><span class="hljs-symbol">:</span><span class="hljs-number">59</span><span class="hljs-symbol">:</span><span class="hljs-number">10</span> UTC], [<span class="hljs-string">"updated_at"</span>, <span class="hljs-number">2017</span>-<span class="hljs-number">03</span>-<span class="hljs-number">26</span> <span class="hljs-number">04</span><span class="hljs-symbol">:</span><span class="hljs-number">59</span><span class="hljs-symbol">:</span><span class="hljs-number">10</span> UTC], [<span class="hljs-string">"name"</span>, <span class="hljs-string">"James"</span>]]
  (<span class="hljs-number">14.1</span>ms)  commit transaction
=&gt; true
<span class="hljs-meta">2.3.0 :013 &gt;</span> Message.destroy_all
  Message Load (<span class="hljs-number">0</span>.<span class="hljs-number">3</span>ms)  SELECT <span class="hljs-string">"messages"</span>.* FROM <span class="hljs-string">"messages"</span>
  (<span class="hljs-number">0</span>.<span class="hljs-number">2</span>ms)  <span class="hljs-keyword">begin</span> transaction
  SQL (<span class="hljs-number">0</span>.<span class="hljs-number">4</span>ms)  DELETE FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"id"</span> = ?  [[<span class="hljs-string">"id"</span>, <span class="hljs-number">1</span>]]
  (<span class="hljs-number">13.5</span>ms)  commit transaction
  (<span class="hljs-number">0</span>.<span class="hljs-number">1</span>ms)  <span class="hljs-keyword">begin</span> transaction
  SQL (<span class="hljs-number">0</span>.<span class="hljs-number">3</span>ms)  DELETE FROM <span class="hljs-string">"messages"</span> WHERE <span class="hljs-string">"messages"</span>.<span class="hljs-string">"id"</span> = ?  [[<span class="hljs-string">"id"</span>, <span class="hljs-number">3</span>]]
  (<span class="hljs-number">141.7</span>ms)  commit transaction
=&gt; [#&lt;Message id: 1, title: "テスト", message: "Hello World!", created_at: "2017-03-26 04:52:46", updated_at: "2017-03-26 04:52:46", name: nil&gt;, #&lt;Message id: 3, title: "Hello", message: "Hello World!", created_at: "2017-03-26 04:59:10", updated_at: "2017-03-26 04:59:10", name: "James"&gt;]
<span class="hljs-meta">2.3.0 :014 &gt;</span>
</code></pre>
※ この後のレッスンではいくつかデータを入れておいたほうがわかりやすいので、いくつかMessageにデータを入れておきましょう。
<pre><code class="ruby hljs">&gt;  msg = Message.new(<span class="hljs-symbol">title:</span> <span class="hljs-string">"Hello"</span>, <span class="hljs-symbol">message:</span> <span class="hljs-string">"Hello World!"</span>, <span class="hljs-symbol">name:</span> <span class="hljs-string">"James"</span>)
&gt; msg.save</code></pre>
railsコンソールはexitコマンドで終了します。
<pre><code class="ruby hljs">&gt; exit</code></pre>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-19. View</div>
<div class="l-content--detail p-lesson">
Viewについて詳しくみていきます。
Railsのデフォルトでは、ViewのテンプレートとしてERBファイルが使われます。ERBファイルには通常のHTMLを記述する他、Rubyスクリプトを埋め込むことができます。これにより、動的に値を表示することが可能になります。
<table>
<tbody>
<tr>
<td>書き方</td>
<td>意味</td>
</tr>
<tr>
<td>&lt;%= ... %&gt;</td>
<td>...の実行結果を文字列として埋め込む</td>
</tr>
<tr>
<td>&lt;% ... %&gt;</td>
<td>...を実行する。結果は埋め込まない</td>
</tr>
<tr>
<td>&lt;%# ... %&gt;</td>
<td>コメント</td>
</tr>
</tbody>
</table>
app/controllers/messages_controller.rbのindexメソッドの実行が終わるとRailsは自動的にviews/messages/index.html.erbを呼び出します。
views/messages/index.html.erb
<pre><code class="ruby hljs">
&lt;p id=<span class="hljs-string">"notice"</span>&gt;&lt;%= notice %&gt;&lt;<span class="hljs-regexp">/p&gt;
&lt;h1&gt;Messages&lt;/h</span>1&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Title&lt;<span class="hljs-regexp">/th&gt;
 &lt;th&gt;Message&lt;/th</span>&gt;
 &lt;th colspan=<span class="hljs-string">"3"</span>&gt;&lt;<span class="hljs-regexp">/th&gt;
 &lt;/tr</span>&gt;
 &lt;<span class="hljs-regexp">/thead&gt;
&lt;tbody&gt;
 &lt;% @messages.each do |message| %&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;%= message.title %&gt;&lt;/td</span>&gt;
 &lt;td&gt;&lt;%= message.message %&gt;&lt;<span class="hljs-regexp">/td&gt;
 &lt;td&gt;&lt;%= link_to 'Show', message %&gt;&lt;/td</span>&gt;
 &lt;td&gt;&lt;%= link_to <span class="hljs-string">'Edit'</span>, edit_message_path(message) %&gt;&lt;<span class="hljs-regexp">/td&gt;
 &lt;td&gt;&lt;%= link_to 'Destroy', message, method: :delete, data: { confirm: 'Are you sure?' } %&gt;&lt;/td</span>&gt;
 &lt;<span class="hljs-regexp">/tr&gt;
 &lt;% end %&gt;
 &lt;/tbody</span>&gt;
&lt;<span class="hljs-regexp">/table&gt;
&lt;br&gt;
&lt;%= link_to 'New Message', new_message_path %&gt;
</span></code></pre>
@messagesは、Message.allが入っています。つまりMessageデータの全てを参照しています。&lt;% @messages.each do |message| %&gt;で、Messageデータを１つ１つ取り出し、messageという変数に格納して処理を行います。
&lt;%= message.title %&gt;、&lt;%= message.message %&gt;で、messageのtitleやmessageをHTMLに埋め込んでいます。
ここで、先ほどMessageモデルにnameを追加しましたので、nameも表示してみましょう。
<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span></code></pre>
上記の行を
<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Message<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span></code></pre>
の下に追記しましょう。
<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span> <span class="hljs-attr">message.name</span> %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></code></pre>
また、上記の行を
<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span> <span class="hljs-attr">message.message</span> %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></code></pre>
の下に追記しましょう。
画面をリロードすると、以下のようにNameが表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/name-300x136.png" alt="name" width="300" height="136" />今までの変更を保存しておきましょう。ターミナルで以下の3つのコマンドを実行します。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"Add name to view"</span>
$ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-20. link_toメソッド</div>
<div class="l-content--detail p-lesson">
Show、 Edit、Destroyの各リンクにはRailsのヘルパメソッドであるlink_toメソッドが使われています。link_toメソッドはRails内で変換されて、&lt;a&gt;タグを出力します。link_toメソッドは以下の書式で使うことができます。
<pre><code class="ruby hljs">link_to リンク名, パス</code></pre>
パスには、rails routesコマンドで表示される
<pre><code class="hljs">prefix + _path</code></pre>
と記述することで、&lt;a&gt;タグの中では対応するURLが出力されます。/へのパスであれば、Prefixがrootなので、root_pathになります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/root.png" alt="root" width="508" height="196" />実際にRailsサーバーを起動し、Message一覧をGoogle Chromeのタブで表示してHTMLにどのように記述されているか確認しましょう。
※ HTMLソースを表示しても良いですが、Google Chromeのデベロッパー・ツールを利用すると便利です。使ったことがなければ、「デベロッパー・ツール」で検索し、使い方を覚えておくと良いでしょう。
link_toを使っている箇所は以下のように&lt;a&gt;タグに変換されているのがわかります。
<pre><code class="ruby hljs">
&lt;td&gt;&lt;a href=<span class="hljs-string">"/messages/4"</span>&gt;Show&lt;<span class="hljs-regexp">/a&gt;&lt;/td</span>&gt;
&lt;td&gt;&lt;a href=<span class="hljs-string">"/messages/4/edit"</span>&gt;Edit&lt;<span class="hljs-regexp">/a&gt;&lt;/td</span>&gt;
&lt;td&gt;&lt;a data-confirm=<span class="hljs-string">"Are you sure?"</span> rel=<span class="hljs-string">"nofollow"</span> data-method=<span class="hljs-string">"delete"</span> href=<span class="hljs-string">"/messages/4"</span>&gt;Destroy&lt;<span class="hljs-regexp">/a&gt;&lt;/td</span>&gt;
...
&lt;a href=<span class="hljs-string">"/messages/new"</span>&gt;New Message&lt;<span class="hljs-regexp">/a&gt;
</span></code></pre>
例えば、「New Message」リンクをクリックすると、/messages/newにGETでアクセスします。rails routesを見るとこれはMessagesControllerのnewメソッドを呼び出すことになり、Viewとしてはviews/messages/new.html.erbの内容、つまり、New Message画面が表示されます。
<pre><code class="ruby hljs">new_message GET    /messages/new(.<span class="hljs-symbol">:format</span>)      messages<span class="hljs-comment">#new</span></code></pre>
New MessageリンクをクリックしてからNew Message画面が表示されるまでの流れをまとめると以下のようになります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2017/04/New-Message2.png" alt="new-message" width="539" height="306" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-21. 部分テンプレート</div>
<div class="l-content--detail p-lesson">
Railsでは、共通する記述を部分テンプレートとして別ファイルに記述して呼び出すことができるパーシャルという機能があります。
New Message画面とEdit Message画面の各ファイルを開いてみましょう。
views/messages/new.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;New Message&lt;<span class="hljs-regexp">/h1&gt;
&lt;%= render 'form', message: @message %&gt;
&lt;%= link_to 'Back', messages_path %&gt;</span></code></pre>
views/messages/edit.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;Editing Message&lt;<span class="hljs-regexp">/h1&gt;
&lt;%= render 'form', message: @message %&gt;
&lt;%= link_to 'Show', @message %&gt; |
&lt;%= link_to 'Back', messages_path %&gt;</span></code></pre>
どちら画面の内容として共通している部分を部分テンプレート_form.html.erbに記述し、それをrenderメソッドで呼び出しています。
renderメソッドは以下の書式で使うことができます。
<pre><code class="ruby hljs">render 部分テンプレート名, 変数: 値</code></pre>
部分テンプレートファイルは、_form.html.erbのように、ファイル名を
<pre><code class="hljs css">_ + 部分テンプレート名<span class="hljs-selector-class">.html</span><span class="hljs-selector-class">.erb</span></code></pre>
とします。_form.htm.erbをみてみましょう。
_form.html.erb
<pre><code class="ruby hljs">&lt;%= form_for(message) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;
 &lt;% <span class="hljs-keyword">if</span> message.errors.any? %&gt;
  &lt;div id=<span class="hljs-string">"error_explanation"</span>&gt;
   &lt;h2&gt;&lt;%= pluralize(message.errors.count, <span class="hljs-string">"error"</span>) %&gt; prohibited this message from being <span class="hljs-symbol">saved:</span>&lt;<span class="hljs-regexp">/h2&gt;
   &lt;ul&gt;
    &lt;% message.errors.full_messages.each do |message| %&gt;
     &lt;li&gt;&lt;%= message %&gt;&lt;/li</span>&gt;
    &lt;% <span class="hljs-keyword">end</span> %&gt;
   &lt;<span class="hljs-regexp">/ul&gt;
  &lt;/div</span>&gt;
 &lt;% <span class="hljs-keyword">end</span> %&gt;
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">field</span>"&gt;</span>
  &lt;%= f.label <span class="hljs-symbol">:title</span> %&gt;
  &lt;%= f.text_field <span class="hljs-symbol">:title</span> %&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;div class="field"&gt;
  &lt;%= f.label :message %&gt;
  &lt;%= f.text_field :message %&gt;
 &lt;/div</span>&gt;
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">actions</span>"&gt;</span>
  &lt;%= f.submit %&gt;
 &lt;<span class="hljs-regexp">/div&gt;
&lt;% end %&gt;</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-22. フォームヘルパ</div>
<div class="l-content--detail p-lesson">
form_forは、フォームヘルパと呼ばれ、設定したモデルの作成・編集フォームを生成します。New Message画面のHTMLを確認してみましょう。HTMLでは、以下のように&lt;form&gt;タグとして出力されていることがわかります。
<pre><code class="ruby hljs">&lt;form <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">new_message</span>" <span class="hljs-title">id</span>="<span class="hljs-title">new_message</span>" <span class="hljs-title">action</span>="/<span class="hljs-title">messages</span>" <span class="hljs-title">accept</span>-<span class="hljs-title">charset</span>="<span class="hljs-title">UTF</span>-8" <span class="hljs-title">method</span>="<span class="hljs-title">post</span>"&gt;</span></code></pre>
actionに/messages、methodにpostが設定されています。これはmessages_pathにPOSTでアクセスすることを意味しています。rails routesで確認するとmessagesにPOSTでアクセスすると、messages#create、つまり、MessagesControllerのcreateメソッドが呼び出されることがわかります。
<pre><code class="ruby hljs"> messages GET /messages(.<span class="hljs-symbol">:format</span>) messages<span class="hljs-comment">#index</span>
          POST /messages(.<span class="hljs-symbol">:format</span>) messages<span class="hljs-comment">#create</span></code></pre>
form_forに設定しているmessageは、
<pre><code class="ruby hljs">&lt;%= render <span class="hljs-string">'form'</span>, <span class="hljs-symbol">message:</span> @message %&gt;</code></pre>
で部分テンプレートを呼び出すときに設定した変数messageです。ここには@messageが設定されています。@messageは、MessagesControllerのnewまたはeditメソッドで定義している値が入っています。newメソッド内では、以下のようにMessageモデルの新規インスタンスが設定されています。
<pre><code class="ruby hljs">@message = Message.new</code></pre>
次にEdit Message画面のHTMLを確認してみましょう。こちらも以下のように&lt;form&gt;タグが出力されていることがわかります。
<pre><code class="ruby hljs">
&lt;form <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">edit_message</span>" <span class="hljs-title">id</span>="<span class="hljs-title">edit_message_4</span>" <span class="hljs-title">action</span>="/<span class="hljs-title">messages</span>/4" <span class="hljs-title">accept</span>-<span class="hljs-title">charset</span>="<span class="hljs-title">UTF</span>-8" <span class="hljs-title">method</span>="<span class="hljs-title">post</span>"&gt;</span>
...
&lt;input type=<span class="hljs-string">"hidden"</span> name=<span class="hljs-string">"_method"</span> value=<span class="hljs-string">"patch"</span> /&gt;
</code></pre>
しかし、New Message画面とは違い、actionに/messages/:idが設定されています。
※ :idは、Messageモデルのidです。上記の例ではidが4のものが表示されています。
また、form_forは、hiddenパラメーターとして_methodをpatchで指定することで情報の更新時にはPOSTではなく、PATCHメソッドを送信するようにしています。
rails routesで確認するとmessages/:idにPATCHでアクセスすると、messages#update、つまり、MessagesControllerのupdateメソッドが呼び出されることがわかります。
<pre><code class="ruby hljs">message GET /messages/<span class="hljs-symbol">:id</span>(.<span class="hljs-symbol">:format</span>) messages<span class="hljs-comment">#show</span>
        PATCH /messages/<span class="hljs-symbol">:id</span>(.<span class="hljs-symbol">:format</span>) messages<span class="hljs-comment">#update</span>
        PUT /messages/<span class="hljs-symbol">:id</span>(.<span class="hljs-symbol">:format</span>) messages<span class="hljs-comment">#update</span></code></pre>
部分テンプレート内では、new.html.erbもedit.html.erbも
<pre><code class="ruby hljs">&lt;%= form_for(message) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;</code></pre>
のように同じform_forを呼び出していましたが、出力されているactionが異なっています。これは、form_forの引数として設定したmessageに設定されている値によって、form_forが異なる結果を返しているためです。それでは、edit.html.erbのmessageには何が設定されているのでしょうか。MessagesControllerのeditメソッドの中身は空ですが、MessagesControllerにはbefore_actionとしてeditメソッドを実行するまえにset_messageメソッドを実行するように記述されています。
<pre><code class="ruby hljs">before_action <span class="hljs-symbol">:set_message</span>, <span class="hljs-symbol">only:</span> [<span class="hljs-symbol">:show</span>, <span class="hljs-symbol">:edit</span>, <span class="hljs-symbol">:update</span>, <span class="hljs-symbol">:destroy</span>]</code></pre>
このようにbefore_actionを使うと、onlyで指定したメソッドの実行前に、設定したメソッドを実行させることができます。
editメソッドが呼び出される前にset_messageメソッドが実行されていますので、@messageにはset_message内のMessage.find(params[:id])が設定されています。つまり、編集対象のMessageモデルのインスタンスが設定されています。
<pre><code class="ruby hljs"> @message = Message.find(params[<span class="hljs-symbol">:id</span>])</code></pre>
new.html.erbのform_for(message)のmessageには、Messageモデルの新規インスタンスが設定されているので&lt;form&gt;タグのactionにidは設定されず、action="/messages"となります。そして、New Message画面でsubmitボタンをクリックするとMessagesControllerのcreateメソッドが呼び出されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/create.png" alt="create" width="551" height="314" />edit.html.erbのform_for(message)のmessageには、編集対象のMessageモデルのインスタンスが設定されているのでactionにはそのidが設定され、action="/messages/:id"と出力されます。
そして、Edit Message画面でsubmitボタンをクリックするとMessagesControllerのupdateメソッドが呼び出されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/patch.png" alt="patch" width="536" height="319" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-23. Viewの修正</div>
<div class="l-content--detail p-lesson">
フォームヘルパ内のf.text_fieldについて見ていきましょう。
<pre><code class="ruby hljs">&lt;%= f.text_field <span class="hljs-symbol">:title</span> %&gt;</code></pre>
この部分はHTMLでは、以下のように
<pre><code class="ruby hljs">&lt;input&gt;</code></pre>
タグが出力され、画面上は入力欄が表示されます。
<pre><code class="html hljs xml">
<span class="hljs-tag">&lt;&lt;<span class="hljs-attr">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"start-tag"</span>&gt;</span>input<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"attribute-name"</span>&gt;</span>type<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>="<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"attribute-value"</span>&gt;</span>text<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>" <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"attribute-name"</span>&gt;</span>name<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>="<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"attribute-value"</span>&gt;</span>message[title]<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>" <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"attribute-name"</span>&gt;</span>id<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>="<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"attribute-value"</span>&gt;</span>message_title<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>" /&gt;
</code></pre>
<pre><code class="ruby hljs">&lt;%= f.text_field <span class="hljs-symbol">:message</span> %&gt;</code></pre>
も同様に
<pre><code class="ruby hljs">&lt;input&gt;</code></pre>
タグが出力されます。しかし、このmessageには文章を入力可能とするために
<pre><code class="ruby hljs">&lt;input&gt;</code></pre>
タグではなく、
<pre><code class="ruby hljs">&lt;textarea&gt;</code></pre>
タグで表示するように修正しましょう。
views/messages/_form.html.erbの
<pre><code class="ruby hljs">&lt;%= f.text_field <span class="hljs-symbol">:message</span> %&gt;</code></pre>
を以下のようにf.text_areaに修正しましょう。
<pre><code class="ruby hljs">&lt;%= f.text_area <span class="hljs-symbol">:message</span> %&gt;</code></pre>
画面をリロードして表示を確認してみてください。
以下、表示例です。
<img class="aligncenter wp-image-944 size-full" src="https://writing.itprocollege.com/wp-content/uploads/2016/12/text_area.png" alt="text_area" width="224" height="218" />HTMLも以下のように
<pre><code class="ruby hljs">&lt;input&gt;</code></pre>
タグではなく、
<pre><code class="ruby hljs">&lt;textarea&gt;</code></pre>
タグが出力されているのが確認できるはずです。
<pre><code class="ruby hljs">&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">start</span>-<span class="hljs-title">tag</span>"&gt;<span class="hljs-title">textarea</span>&lt;/<span class="hljs-title">span</span>&gt; &lt;span <span class="hljs-title">class</span>="<span class="hljs-title">attribute</span>-<span class="hljs-title">name</span>"&gt;<span class="hljs-title">name</span>&lt;/<span class="hljs-title">span</span>&gt;="&lt;a <span class="hljs-title">class</span>="<span class="hljs-title">attribute</span>-<span class="hljs-title">value</span>"&gt;<span class="hljs-title">message</span>[<span class="hljs-title">message</span>]&lt;/<span class="hljs-title">a</span>&gt;" &lt;span <span class="hljs-title">class</span>="<span class="hljs-title">attribute</span>-<span class="hljs-title">name</span>"&gt;<span class="hljs-title">id</span>&lt;/<span class="hljs-title">span</span>&gt;="&lt;a <span class="hljs-title">class</span>="<span class="hljs-title">attribute</span>-<span class="hljs-title">value</span>"&gt;<span class="hljs-title">message_message</span>&lt;/<span class="hljs-title">a</span>&gt;"&gt;</span></code></pre>
nameも入力できるようにしましょう。nameは複数行入力できる必要はありませんから、f.text_fieldで
<pre><code class="ruby hljs">&lt;input&gt;</code></pre>
タグを出力するようにしましょう。views/messages/_form.html.erbは以下のようになります。
views/messages/_form.html.erb
<pre><code class="ruby hljs">
&lt;%= form_for(message) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;
&lt;% <span class="hljs-keyword">if</span> message.errors.any? %&gt;
  &lt;div id=<span class="hljs-string">"error_explanation"</span>&gt;
  &lt;h2&gt;&lt;%= pluralize(message.errors.count, <span class="hljs-string">"error"</span>) %&gt; prohibited this message from being <span class="hljs-symbol">saved:</span>&lt;<span class="hljs-regexp">/h2&gt;
  &lt;ul&gt;
    &lt;% message.errors.full_messages.each do |message| %&gt;
    &lt;li&gt;&lt;%= message %&gt;&lt;/li</span>&gt;
    &lt;% <span class="hljs-keyword">end</span> %&gt;
  &lt;<span class="hljs-regexp">/ul&gt;
  &lt;/div</span>&gt;
&lt;% <span class="hljs-keyword">end</span> %&gt;
&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">field</span>"&gt;</span>
  &lt;%= f.label <span class="hljs-symbol">:title</span> %&gt;
  &lt;%= f.text_field <span class="hljs-symbol">:title</span> %&gt;
&lt;<span class="hljs-regexp">/div&gt;
&lt;div class="field"&gt;
  &lt;%= f.label :message %&gt;
  &lt;%= f.text_area :message %&gt;
&lt;/div</span>&gt;
&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">field</span>"&gt;</span>
  &lt;%= f.label <span class="hljs-symbol">:name</span> %&gt;
  &lt;%= f.text_field <span class="hljs-symbol">:name</span> %&gt;
&lt;<span class="hljs-regexp">/div&gt;
&lt;div class="actions"&gt;
  &lt;%= f.submit %&gt;
&lt;/div</span>&gt;
&lt;% <span class="hljs-keyword">end</span> %&gt;
</code></pre>
画面をリロードして表示を確認してみてください。
以下、表示例です。
<img class="size-full wp-image-945 aligncenter" src="https://writing.itprocollege.com/wp-content/uploads/2016/12/add-name.png" alt="add-name" width="247" height="274" />今までの変更を保存しておきましょう。ターミナルで以下の3つのコマンドを実行します。
<pre><code class="ruby hljs">$ git add .
  $ git commit -m <span class="hljs-string">"Modify template"</span>
  $ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-24. ストロングパラメーター</div>
<div class="l-content--detail p-lesson">
New Message画面で値を入れてCreate Messageボタンをクリックしてみてください。Railsサーバーを起動しているターミナルに以下のようにPOSTメソッドで送信されたパラメーターが表示されているのがわかります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/send-post-1024x146.png" alt="send-post" width="840" height="120" />
<pre><code class="ruby hljs"><span class="hljs-symbol">Parameters:</span> {<span class="hljs-string">"utf8"</span>=&gt;<span class="hljs-string">"✓"</span>, <span class="hljs-string">"authenticity_token"</span>=&gt;<span class="hljs-string">"KXT5Ye5EfD6yZBVYD/bdCgphzemWhqwhMUq7hbP8WNd1m75JvXXgJ3HRpRMzZ+47fK8/ELnXBDk7mwiPxwSyvQ=="</span>, <span class="hljs-string">"message"</span>=&gt;{<span class="hljs-string">"title"</span>=&gt;<span class="hljs-string">"Hello"</span>, <span class="hljs-string">"message"</span>=&gt;<span class="hljs-string">"Hello\r\nWorld!"</span>, <span class="hljs-string">"name"</span>=&gt;<span class="hljs-string">"James"</span>}, <span class="hljs-string">"commit"</span>=&gt;<span class="hljs-string">"Create Message"</span>}</code></pre>
先ほど追加したnameも送信されています。しかし、その次の行に以下のようにnameが許可されていないという表示が出ています。
<pre><code class="ruby hljs">Unpermitted <span class="hljs-symbol">parameter:</span> name</code></pre>
railsコンソールで新規に追加されているデータの内容を確認してもnameだけ値が設定されておらず、nilになっています。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/rails-c-1-1024x116.png" alt="rails-c" width="840" height="95" />Railsには不正な操作を防ぐために、画面から送られてくるパラメーターを検証する仕組みが備わっています。許可されたパラメーターだけを受け取る仕組みをストロングパラメーターと言い、MessagesControllerではmessage_paramsメソッド内で設定しています。
<pre><code class="ruby hljs"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">message_params</span></span>
 params.<span class="hljs-keyword">require</span>(<span class="hljs-symbol">:message</span>).permit(<span class="hljs-symbol">:title</span>, <span class="hljs-symbol">:message</span>)
<span class="hljs-keyword">end</span></code></pre>
paramsにmessagesというパラメーターが送られてきていることを確認し、その内、titleとmessageのみを許可しています。そのため、nameが許可されず、処理の対象から外されていたのです。
このストロングパラメーターに以下のようにnameを追加しましょう。
<pre><code class="ruby hljs"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">message_params</span></span>
 params.<span class="hljs-keyword">require</span>(<span class="hljs-symbol">:message</span>).permit(<span class="hljs-symbol">:title</span>, <span class="hljs-symbol">:message</span>, <span class="hljs-symbol">:name</span>)
<span class="hljs-keyword">end</span></code></pre>
また、結果画面(views/messages/show.html.erb)にもnameを追加しましょう。
views/messages/show.html.erb
<pre><code class="ruby hljs">&lt;p id=<span class="hljs-string">"notice"</span>&gt;&lt;%= notice %&gt;&lt;<span class="hljs-regexp">/p&gt;
&lt;p&gt;
 &lt;strong&gt;Title:&lt;/strong</span>&gt;
 &lt;%= @message.title %&gt;
&lt;<span class="hljs-regexp">/p&gt;
&lt;p&gt;
 &lt;strong&gt;Message:&lt;/strong</span>&gt;
 &lt;%= @message.message %&gt;
&lt;<span class="hljs-regexp">/p&gt;
&lt;p&gt;
 &lt;strong&gt;Name:&lt;/strong</span>&gt;
 &lt;%= @message.name %&gt;
&lt;<span class="hljs-regexp">/p&gt;
&lt;%= link_to 'Edit', edit_message_path(@message) %&gt; |
&lt;%= link_to 'Back', messages_path %&gt;</span></code></pre>
再度New Message画面で値を入れてCreate Messageボタンをクリックしてみてください。nameに設定した内容が正しく保存されていることが確認できます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/resultin.png" alt="resultin" width="299" height="237" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-25. バリデーション</div>
<div class="l-content--detail p-lesson">
データを保存・更新する前に、そのデータが正しいかを検証する機能をバリデーションと呼びます。例えば、入力が必須な項目に値を入れずにデータを送信した場合、エラーを返すことができます。
バリデーションはモデルの定義内に以下の書式で記述します。
<pre><code class="ruby hljs">validates フィールド名, 条件</code></pre>
models/message.rbにバリデーションを追加しましょう。
models/message.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Message</span> &lt; ApplicationRecord</span>
 validates <span class="hljs-symbol">:title</span> , <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">32</span> } , <span class="hljs-symbol">presence:</span> <span class="hljs-literal">true</span>
 validates <span class="hljs-symbol">:message</span> , <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">256</span> } , <span class="hljs-symbol">presence:</span> <span class="hljs-literal">true</span>
 validates <span class="hljs-symbol">:name</span> , <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">32</span> }
<span class="hljs-keyword">end</span></code></pre>
length: { maximum: 32 }は、最大文字列長32文字まで入力を許可します。presence: trueを設定すると、入力必須項目となります。
New Message画面でtitle、messageを空欄のままにし、nameに32文字より長い文字列を入力して、Create Messageボタンをクリックしてみましょう。
不正なデータとしてバリデーションにひっかかり、以下のようなエラーメッセージが表示され、データが保存できないようになります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/%E3%82%A8%E3%83%A9%E3%83%BC.png" alt="%e3%82%a8%e3%83%a9%e3%83%bc" width="534" height="460" />様々なバリデーションの条件を設定することができますので、「rails バリデーション」などで検索し、理解を深めておきましょう。
今までの変更を保存しておきましょう。ターミナルで以下の3つのコマンドを実行します。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"Add validation"</span>
$ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-26. エラーメッセージ</div>
<div class="l-content--detail p-lesson">
バリデーションエラーで、エラーメッセージが表示されましたが、これはviews/messages/_form.html.erbに記述されている以下の部分です。
<pre><code class="ruby hljs">...
&lt;% <span class="hljs-keyword">if</span> message.errors.any? %&gt;
 &lt;div id=<span class="hljs-string">"error_explanation"</span>&gt;
  &lt;h2&gt;&lt;%= pluralize(message.errors.count, <span class="hljs-string">"error"</span>) %&gt; prohibited this message from being <span class="hljs-symbol">saved:</span>&lt;<span class="hljs-regexp">/h2&gt;
  &lt;ul&gt;
   &lt;% message.errors.full_messages.each do |message| %&gt;
    &lt;li&gt;&lt;%= message %&gt;&lt;/li</span>&gt;
   &lt;% <span class="hljs-keyword">end</span> %&gt;
  &lt;<span class="hljs-regexp">/ul&gt;
 &lt;/div</span>&gt;
&lt;% <span class="hljs-keyword">end</span> %&gt;
...</code></pre>
エラーがある場合、message.errorsにエラーメッセージが格納されます。&lt;% if message.errors.any? %&gt;で、エラーメッセージがある場合のみ表示するようにしています。
message.errorsの内容をもう少しくわしくみていきます。Railsはデフォルトでbyebugというデバッグの仕組みが備わっています。byebugを利用して、messages.errorsの内容を見てみましょう。
New Message画面でCreate Messageをクリックすると、MessagesControllerのcreateメソッドが呼ばれます。createメソッド内のif @message.saveのsaveメソッドでデータを保存しようとした時、バリデーションが行われ、不正な値であればエラーが返り、saveメソッドの戻り値がfalseになります。処理はif文の中ではなく、else文の中に入りますので、以下のようにこちらにbyebugを設定しましょう。
app/controllers/messages_controller.rb
<pre><code class="ruby hljs">...
<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create</span></span>
 @message = Message.new(message_params)
 respond_to <span class="hljs-keyword">do</span> <span class="hljs-params">|format|</span>
  <span class="hljs-keyword">if</span> @message.save
   format.html { redirect_to @message, <span class="hljs-symbol">notice:</span> <span class="hljs-string">'Message was successfully created.'</span> }
   format.json { render <span class="hljs-symbol">:show</span>, <span class="hljs-symbol">status:</span> <span class="hljs-symbol">:created</span>, <span class="hljs-symbol">location:</span> @message }
  <span class="hljs-keyword">else</span>
   byebug
   format.html { render <span class="hljs-symbol">:new</span> }
   format.json { render <span class="hljs-symbol">json:</span> @message.errors, <span class="hljs-symbol">status:</span> <span class="hljs-symbol">:unprocessable_entity</span> }
  <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span>
...</code></pre>
この状態で、先ほどと同じようにNew Message画面でtitle、messageを空欄のままにし、nameに32文字より長い文字列を入力して、Create Messageボタンをクリックしてみましょう。
Railsサーバーを起動しているターミナルで以下のように処理が止まります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/byebug-1024x193.png" alt="byebug" width="840" height="158" />この状態で、railsコンソールのようにデータの参照などを行うことができます。以下のように@message.errorsと入力してEnterし、値を確認してみましょう。
<pre><code class="ruby hljs">(byebug) @message.errors</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/errors-1024x48.png" alt="errors" width="840" height="39" />
<pre><code class="ruby hljs"><span class="hljs-symbol">:title=&gt;</span>[<span class="hljs-string">"can't be blank"</span>], <span class="hljs-symbol">:message=&gt;</span>[<span class="hljs-string">"can't be blank"</span>], <span class="hljs-symbol">:name=&gt;</span>[<span class="hljs-string">"is too long (maximum is 32 characters)"</span></code></pre>
views/messages/_form.html.erbの以下の箇所で、この内容を出力しています。
<pre><code class="ruby hljs">...
&lt;% message.errors.full_messages.each <span class="hljs-keyword">do</span> <span class="hljs-params">|message|</span> %&gt;
  &lt;li&gt;&lt;%= message %&gt;&lt;<span class="hljs-regexp">/li&gt;
&lt;% end %&gt;
...</span></code></pre>
errorsの内容が確認できましたので、以下のようにターミナルにcを入力して、デバッグを終了しましょう。
<pre><code class="ruby hljs">(byebug) c</code></pre>
デバッグを終了したら、MessagesControllerのcreateメソッドに設定したbyebugの記述は削除しておきましょう。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-27. 【課題２】新しいカラムを追加しよう！</div>
<div class="l-content--detail p-lesson">
条件１：nameを追加したように、新しいカラムを追加し、画面で設定できるようにすること
条件２：新しいカラムは体重、気温、金額などの数値(integer)であること
条件３：バリデーションを設定すること
条件4：作業ブランチ名をnew-columnとすること
<h5>※ブランチについて（作業ブランチ名を変更する）</h5>
gitにはブランチというものが存在します。これは「作業履歴を枝分かれで記録していくためのもの」になります。
現在gitコマンドでmasterという指定をしている箇所がありますが、これはmaster という名前のブランチで作業していることを表しています。git init を実施した場合、最初に作成されるブランチは master のみとなります。
例えばmasterには含めるかどうか分からないが、一時的に変更を試したいため commitしたいという事があると仮定します。この場合masterにcommit してしまうと、やっぱりそのcommitは必要がなかった、という時にcommit を取り消す必要が生じます。しかし、一度commit したものを取り消す作業は、複数人で同じgit リポジトリを操作している場合、ファイルの競合が発生するため、好ましくありません。
ブランチ名を変更する場合、その変更が何を意味しているのかわかりやすい英名を設定すると良いです。「新しいテキストファイルを1つ追加する」というような変更の場合は `new-text` といったようなブランチ名を指定します。（コンソールにて、
<pre><code class="hljs java">git checkout -b <span class="hljs-keyword">new</span>-text</code></pre>
コマンドを打つことで、masterブランチからnew-textブランチを作り、new-textブランチ上に移動できます。）
コンソールにて
<pre><code class="hljs">git status</code></pre>
コマンドを打つと
<div>
<pre><code class="hljs java">
  master
* <span class="hljs-keyword">new</span>-text (master のコピー)</code></pre>
</div>
が表示されるかと思います。 この場合、ブランチ名を変更することで「master のコピー」を作成したことになります。一時的な変更を試したい人はmaster ブランチのコピーである new-text で作業し、そこにcommit しておくことで、本来のmasterブランチにcommit しなくても、作業履歴を残すことができます。
<h5>※git commandについて</h5>
<div>
command:
<pre><code class="hljs ruby">$ git status</code></pre>
</div>
現在自分がどのブランチ名を利用しているかは
<pre><code class="hljs">git status</code></pre>
で調べられます。
<div>
command:
<pre><code class="hljs ruby">$ git branch</code></pre>
</div>
どのようなブランチ名があるか、どのブランチ上にいるかは
<pre><code class="hljs">git branch</code></pre>
で調べられます。
<div>
command:
<pre><code class="hljs java">$ git checkout -b <span class="hljs-keyword">new</span>-text</code></pre>
</div>
ブランチ名を変更する際、そのブランチ名がまだ作成されていない（初めて変更する）場合は
<pre><code class="hljs">git checkout -b (ブランチ名)</code></pre>
を実行します。上記の例は
<pre><code class="hljs java"><span class="hljs-keyword">new</span>-text</code></pre>
というブランチ名に変更されます。
<div>
command:
<pre><code class="hljs ruby">$ git checkout master</code></pre>
</div>
ブランチ名を変更する際、そのブランチ名が既に作成済みである場合は
<pre><code class="hljs">git checkout (ブランチ名)</code></pre>
を実行します。上記の例は
<pre><code class="hljs">master</code></pre>
ブランチ名に戻ります。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-28. Heroku</div>
<div class="l-content--detail p-lesson">
これ以降では、今回作成したMyBlogを本番環境(production環境)であるHerokuで公開します。
作成したアプリケーションをHerokuなどの外部サーバーに配置することをデプロイと呼びます。
<blockquote><a href="https://www.heroku.com/" target="_blank" rel="noopener noreferrer">Heroku</a></blockquote>
にアカウント登録済みであることをご確認ください。 まだの方はアカウント作成をお願いいたします。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-29. Gemfile</div>
<div class="l-content--detail p-lesson">
HerokuにデプロイするためにGemfileを修正します。GemfileはRailsアプリケーションで使うgemをまとめたファイルです。Gemfileに記述したgemをbundle installコマンドでインストールして利用することができます。
HerokuではデータベースにSQLiteではなく、PostgreSQLが推奨されているので、GemfileにPostgreSQLを使えるように修正します。
<pre><code class="ruby hljs">gem <span class="hljs-string">'sqlite3'</span></code></pre>
Gemfileで上記のように記述されている箇所を以下に書き変えましょう。
<pre><code class="ruby hljs">gem <span class="hljs-string">'sqlite3'</span>, <span class="hljs-symbol">group:</span> <span class="hljs-symbol">:development</span>
gem <span class="hljs-string">'pg'</span>, <span class="hljs-string">'~&gt; 0.18'</span>, <span class="hljs-symbol">group:</span> <span class="hljs-symbol">:production</span></code></pre>
group: :developmentとすることで開発環境で使うgem、group: :productionとすることでproduction環境で使うgemとして指定することができます。
＊ Cloud9がAWSになってから下記のコマンドでpg環境を作成する必要があるので、次のコマンドを叩き、環境を整えてください。（ダウンロードのy/nを聞かれるのでyを押してエンター）
<pre><code class="hljs sql">sudo yum <span class="hljs-keyword">install</span> postgresql-devel</code></pre>
上記を実行後、ターミナルでbundle installコマンドを実行し、追加したgemをインストールしましょう。
<pre><code class="hljs sql">$ bundle <span class="hljs-keyword">install</span></code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/bundle-install.png" alt="bundle-install" width="498" height="549" />
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-30. データベースの設定</div>
<div class="l-content--detail p-lesson">
config/database.ymlのproductionの箇所をpostgresqlを使うように修正します。
config/database.yml
<pre><code class="ruby hljs"><span class="hljs-comment"># SQLite version 3.x</span>
<span class="hljs-comment"># gem install sqlite3</span>
<span class="hljs-comment">#</span>
<span class="hljs-comment"># Ensure the SQLite 3 gem is defined in your Gemfile</span>
<span class="hljs-comment"># gem 'sqlite3'</span>
<span class="hljs-comment">#</span>
<span class="hljs-symbol">default:</span> &amp;default
  <span class="hljs-symbol">adapter:</span> sqlite3
  <span class="hljs-symbol">pool:</span> <span class="hljs-number">5</span>
  <span class="hljs-symbol">timeout:</span> <span class="hljs-number">5000</span>
<span class="hljs-symbol">development:</span>
  &lt;&lt;: *default
  <span class="hljs-symbol">database:</span> db/development.sqlite3
<span class="hljs-comment"># Warning: The database defined as "test" will be erased and</span>
<span class="hljs-comment"># re-generated from your development database when you run "rake".</span>
<span class="hljs-comment"># Do not set this db to the same as development or production.</span>
<span class="hljs-symbol">test:</span>
  &lt;&lt;: *default
  <span class="hljs-symbol">database:</span> db/test.sqlite3
<span class="hljs-symbol">production:</span>
  &lt;&lt;: *default
  <span class="hljs-symbol">adapter:</span> postgresql
  <span class="hljs-symbol">encoding:</span> unicode
  <span class="hljs-symbol">pool:</span> <span class="hljs-number">5</span></code></pre>
今までの変更を保存しておきましょう。ターミナルで以下の3つのコマンドを実行します。
<pre><code class="ruby hljs">$ git add .
$ git commit -m <span class="hljs-string">"Add postgresql"</span>
$ git push origin master</code></pre>
GitHubにアクセスしてMyBlogリポジトリに内容が反映されていればOKです。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>2-31. Herokuへのデプロイ</div>
<div class="l-content--detail p-lesson">
Herokuにプログラムをデプロイするために、Heroku内にアプリケーションを作成します。Herokuアプリケーションの作成には
<pre><code class="hljs sql">heroku <span class="hljs-keyword">create</span></code></pre>
コマンドを実行します。ターミナルで以下のコマンドを実行しましょう。
<pre><code class="hljs sql">$ heroku <span class="hljs-keyword">create</span> アプリケーション名</code></pre>
※ アプリケーション名はHeroku内で一意にしなければならず、他の人のアプリケーション名とかぶるとエラーになります。「Herokuアカウント名-my-blog」などユニークな名前にしましょう。
実行例：アプリケーション名をtest-my-blogとする場合、以下のようになります。
<pre><code class="hljs sql">$ heroku <span class="hljs-keyword">create</span> <span class="hljs-keyword">test</span>-my-blog</code></pre>
※ 実行時にHerokuのアカウント名とパスワードを求められるので入力してください。
heroku createコマンドを実行すると、gitリモートリポジトリが追加されます。git remote -vコマンドで追加されたリモートリポジトリを確認しましょう。ターミナルで以下のコマンドを実行しましょう.
<pre><code class="hljs ruby">$ git remote -v</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/remote-v.png" alt="remote-v" width="480" height="108" />originにはGitHubのリモートリポジトリが、herokuにはHerokuのリモートリポジトリが登録されているのが確認できます。今まで、git push origin masterコマンドでGitHubにプログラムをpushしていたように、git push heroku masterコマンドでHerokuにpushします。ターミナルで以下のコマンドを実行しましょう。
<pre><code class="hljs ruby">$ git push heroku master</code></pre>
※ この処理にはしばらく時間がかかります。途中でerrorやfaitalなどの文字が出力されてエラーになっていないか、確認しましょう。実行後、最後に
<pre><code class="hljs java">* [<span class="hljs-keyword">new</span> branch]      master -&gt; master</code></pre>
のように正しくpushできていればデプロイ完了です。もし途中でエラーが出た場合は、該当箇所のエラーメッセージを参考に修正し、再度pushを実行しましょう。
※ Cloud9上でmasterブランチ以外をpushする場合は、以下のコマンドを実行します。
<pre><code class="hljs ruby">$ git push heroku Cloud9上のブランチ名<span class="hljs-symbol">:master</span></code></pre>
デプロイ完了後、Herokuのデータベースを初期化するために、heroku run rails db:migrate コマンドを実行します。ターミナルで以下のコマンドを実行しましょう。
<pre><code class="hljs ruby">$ heroku run rails <span class="hljs-symbol">db:</span>migrate</code></pre>
以上でHerokuにアクセスする準備が整いました。ブラウザで以下のURLにアクセスして、アプリケーションが公開されていることを確認しましょう。
<pre><code class="hljs java">http:<span class="hljs-comment">//アプリケーション名.herokuapp.com</span></code></pre>
アクセス例： アプリケーション名をtest-my-blogとした場合、以下のようになります。
<pre><code class="hljs java">http:<span class="hljs-comment">//test-my-blog.herokuapp.com</span></code></pre>
※ アクセスしてもエラーが表示されている場合、ターミナルで以下のようにheroku restartコマンドでHerokuアプリケーションを再起動後アクセスしなおしてみてください。
<pre><code class="hljs ruby">$ heroku restart</code></pre>
※ それでも改善しない場合、Cloud9上でもエラーになっている可能性がありますので、Cloud9で動作を確認してみましょう。
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2407</wp:post_id>
		<wp:post_date><![CDATA[2019-03-15 01:03:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 16:03:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[graspy-2-ruby-on-rails]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:163:"https://writing.itprocollege.com/wp-content/uploads/2016/12/%E3%82%B5%E3%83%BC%E3%83%8F%E3%82%99%E3%83%BC%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Graspy 3. SQLite3</title>
		<link>https://tech.blog.uribou.me/graspy-3-sqlite3/</link>
		<pubDate>Thu, 14 Mar 2019 16:03:55 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2410</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="c-title--primary">3.データベース(SQLite)</h1>
<div class="l-content--detail p-lesson"></div>
<div class="l-content--detail p-lesson">
<div>3-1. SQLiteについて</div>
<div class="l-content--detail p-lesson">
Rails では SQLite が標準のデータベースになっており、db/development.sqlite3 がそのデータベースファイルであることはすでに学びました。このレッスンでは SQLite を使って、データベースの操作を学んでいきます。
SQLite は MySQL や PostgreSQL などのクライアントサーバー型のデータベースとは異なり、サーバーを起動する必要がありません。データは全てSQLite のファイルに書き込まれます。
開発段階では、頻繁にデータベースに対する変更、修正が生じます。 Rails では開発段階で SQLite を用い、デプロイ時に MySQL や PostgreSQL などを用いるといった、状況に応じて使うデータベースを個別設定することができます。
開発段階では扱いやすい SQLite を用いることで、効率よく開発や学習を進めることができます。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-2. データベースの作成</div>
<div class="l-content--detail p-lesson">
まずSQLiteを単体で使いながらデータベースの操作を学んでいきましょう。
新たにデータベースを作成するには以下のようにsqlite3コマンドを実行します。
<pre><code class="ruby hljs">
sqlite3 データベース名
</code></pre>
workspace配下に、mybook.sqlite3というデータベースを作成してみましょう。ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs css">
<span class="hljs-selector-tag">sqlite3</span> <span class="hljs-selector-tag">mybook</span><span class="hljs-selector-class">.sqlite3</span>
</code></pre>
実行例：
<pre><code class="ruby hljs">itpro-<span class="hljs-symbol">college:</span>~<span class="hljs-regexp">/workspace $ sqlite3 mybook.sqlite3
SQLite version 3.8.2 2013-12-06 14:53:30
Enter ".help" for instructions
Enter SQL statements terminated with a ";"</span></code></pre>
新たにデータベースが作成され、そのデータベースに接続された状態になります。ここで.tableコマンドを実行し、データベース内にテーブルがないことを確認しましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.table</span></code></pre>
実行例：
<pre><code class="hljs css">
<span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-class">.table</span>
<span class="hljs-selector-tag">sqlite</span>&gt;</code></pre>
.qコマンドを実行し、データベースの接続を閉じましょう。
<pre><code class="hljs">
sqlite&gt; .q
itpro-college:~/workspace $
</code></pre>
この時点で、Cloud9の左のディレクトリツリーにmybook.sqlite3というファイルが作成されているはずです。このファイルはデータベースファイルですので、ファイルを開いても文字化けしているようにみえます。このファイルは直接編集しないようにしましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2017/04/993610da520ffc55db91211857b87dfd-1.png" alt="sqlite3" />このようにSQLiteはファイル単位で管理しますので、データベースを削除したい場合はそのファイルを削除すれば良いだけです。また、データベースのバックアップもデータベースファイルをコピーするだけですみます。
※ データベース名に.sqlite3と拡張子をつけましたが、つけなくてもかまいません。ただし、分かりやすい名前にしないとSQLiteのデータベースファイルだとわからなくなってしまいますので、SQLiteを使う場合はデータベース名には.sqlite3と拡張子をつけることをオススメします。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-3. データベースへの接続</div>
<div class="l-content--detail p-lesson">
作成したデータベースを操作するためにはデータベースに接続する必要があります。データベースに接続するためには以下のようにsqlite3コマンドを実行します。
<pre><code class="hljs">
  sqlite3 データベース名
</code></pre>
sqlite3コマンドは先ほどデータベースを作成する時にも使いました。もし指定したデータベース名のファイルがなければ、データベースを作成し、すでにファイルがあればそのデータベースファイルに接続することになります。
実行例：
<pre><code class="hljs python">
itpro-college:~/workspace $ sqlite3 mybook.sqlite3
SQLite version <span class="hljs-number">3.8</span><span class="hljs-number">.2</span> <span class="hljs-number">2013</span><span class="hljs-number">-12</span><span class="hljs-number">-06</span> <span class="hljs-number">14</span>:<span class="hljs-number">53</span>:<span class="hljs-number">30</span>
Enter <span class="hljs-string">".help"</span> <span class="hljs-keyword">for</span> instructions
Enter SQL statements terminated <span class="hljs-keyword">with</span> a <span class="hljs-string">";"</span>
sqlite&gt;
</code></pre>
この状態でデータベースを操作します。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-4. テーブルの作成</div>
<div class="l-content--detail p-lesson">
テーブルを作成するにはCREATE TABLEを使います。
<pre><code class="hljs sql">
<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> テーブル名(カラム<span class="hljs-number">1</span> データ型, カラム<span class="hljs-number">2</span> データ型...);
</code></pre>
以下のようにusersテーブルを作成してみましょう。
<pre><code class="hljs sql">
<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span> <span class="hljs-built_in">integer</span>, <span class="hljs-keyword">name</span> <span class="hljs-built_in">varchar</span>);
</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">CREATE TABLE <span class="hljs-title">users</span><span class="hljs-params">(id integer, name varchar)</span></span>;
sqlite&gt;
</code></pre>
以下のように.tablesコマンドを実行するとデータベース内に作成されているテーブル名が確認できます。
<pre><code class="hljs css"><span class="hljs-selector-class">.tables</span></code></pre>
実行例：
<pre><code class="hljs css">
<span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-class">.tables</span>
<span class="hljs-selector-tag">users</span>
<span class="hljs-selector-tag">sqlite</span>&gt;
</code></pre>
usersテーブルが作成されていることがわかります。
以下のように.schemaコマンドを実行すると指定したテーブルの構造が確認できます。
<pre><code class="hljs css">
<span class="hljs-selector-class">.schema</span> テーブル名
</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; .<span class="hljs-function">schema users
CREATE TABLE <span class="hljs-title">users</span><span class="hljs-params">(id integer, name varchar)</span></span>;
sqlite&gt;
</code></pre>
※ integerは整数、varcharは文字列を意味します。つまり、idには整数が入り、nameには文字列がデータとして入ることになります。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-5. テーブルの削除</div>
<div class="l-content--detail p-lesson">
テーブルを削除するにはDROP TABLEを使います。
<pre><code class="hljs sql">
<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> テーブル名
</code></pre>
以下のように先ほど作成したusersテーブルを削除してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">users</span></code></pre>
実行例：
<pre><code class="hljs">sqlite&gt; DROP TABLE users;
sqlite&gt; </code></pre>
.tablesコマンドでusersテーブルが削除されているか確認しましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.tables</span></code></pre>
実行例：
<pre><code class="hljs css"><span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-class">.tables</span>
<span class="hljs-selector-tag">sqlite</span>&gt; </code></pre>
テーブルが存在しないので何も表示されていません。
次以降で必要ですので、改めてusersテーブルを作成しておきましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span> <span class="hljs-built_in">integer</span>, <span class="hljs-keyword">name</span> <span class="hljs-built_in">varchar</span>);</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; <span class="hljs-function">CREATE TABLE <span class="hljs-title">users</span><span class="hljs-params">(id integer, name varchar)</span></span>;
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-6. カラムの追加</div>
<div class="l-content--detail p-lesson">
.schemaコマンドを使ってもう一度usersテーブルの構造を確認しましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.schema</span> <span class="hljs-selector-tag">users</span></code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; .<span class="hljs-function">schema users
CREATE TABLE <span class="hljs-title">users</span><span class="hljs-params">(id integer, name varchar)</span></span>;
sqlite&gt; </code></pre>
このusersテーブルにemailカラムを追加します。カラムを追加するにはALTER TABLEを使います。
<pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> テーブル名 <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> カラム名 データ型</code></pre>
以下を実行し、usersテーブルにemailを追加しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> email <span class="hljs-built_in">varchar</span>;</code></pre>
実行例：
<pre><code class="hljs">sqlite&gt; ALTER TABLE users ADD COLUMN email varchar;
sqlite&gt; </code></pre>
.schemaコマンドを使ってusersテーブルの構造を確認してみましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.schema</span></code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; .<span class="hljs-function">schema users
CREATE TABLE <span class="hljs-title">users</span><span class="hljs-params">(id integer, name varchar, email varchar)</span></span>;
sqlite&gt; </code></pre>
emailカラムが追加されていることがわかります。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-7. データの追加</div>
<div class="l-content--detail p-lesson">
usersテーブルにデータを登録しましょう。データを登録するにはINSERT INTOを使います。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> テーブル名(カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>..) <span class="hljs-keyword">values</span> (値<span class="hljs-number">1</span>, 値<span class="hljs-number">2.</span>..)</code></pre>
以下、実行しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>, <span class="hljs-string">"James"</span>, <span class="hljs-string">"007@test.jp"</span>);</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(id, name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-string">"James"</span>, <span class="hljs-string">"007@test.jp"</span>)</span></span>;
sqlite&gt; </code></pre>
これでデータが登録できました。登録したデータを見るには次節のSELECT文を使います。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-8. データの取得</div>
<div class="l-content--detail p-lesson">
データを取得するにはSELECT文を使います。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名;</code></pre>
全てのカラムの情報を取得するには、*を使います。
以下を実行し、usersテーブルの情報を取得しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs ruby">sqlite&gt; SELECT * FROM users;
<span class="hljs-number">1</span><span class="hljs-params">|James|</span><span class="hljs-number">007</span>@test.jp
sqlite&gt; </code></pre>
さらにデータを追加してからSELECT文を実行してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>, <span class="hljs-string">"Nielsen"</span>, <span class="hljs-string">"008@test.jp"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>, <span class="hljs-string">"Lorre"</span>, <span class="hljs-string">"009@test.jp"</span>);
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs ruby">sqlite&gt; INSERT INTO users(id, name, email) values (<span class="hljs-number">2</span>, <span class="hljs-string">"Nielsen"</span>, <span class="hljs-string">"008@test.jp"</span>);
sqlite&gt; INSERT INTO users(id, name, email) values (<span class="hljs-number">3</span>, <span class="hljs-string">"Lorre"</span>, <span class="hljs-string">"009@test.jp"</span>);
sqlite&gt; SELECT * FROM users;
<span class="hljs-number">1</span><span class="hljs-params">|James|</span><span class="hljs-number">007</span>@test.jp
<span class="hljs-number">2</span><span class="hljs-params">|Nielsen|</span><span class="hljs-number">00</span>8@test.jp
<span class="hljs-number">3</span><span class="hljs-params">|Lorre|</span><span class="hljs-number">00</span>9@test.jp
sqlite&gt; </code></pre>
以下のように.header onと.mode columnを実行しておくと、データの取得結果が見やすくなります。
<pre><code class="hljs sql">.header on
.mode column
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs css"><span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-class">.header</span> <span class="hljs-selector-tag">on</span>
<span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-class">.mode</span> <span class="hljs-selector-tag">column</span>
<span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-tag">SELECT</span> * <span class="hljs-selector-tag">FROM</span> <span class="hljs-selector-tag">users</span>;
<span class="hljs-selector-tag">id</span>          <span class="hljs-selector-tag">name</span>        <span class="hljs-selector-tag">email</span>
<span class="hljs-selector-tag">----------</span>  <span class="hljs-selector-tag">----------</span>  <span class="hljs-selector-tag">-----------</span>
1           <span class="hljs-selector-tag">James</span>       007@<span class="hljs-keyword">test</span>.<span class="hljs-keyword">jp</span>
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span>@test.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span>@test.jp
sqlite&gt; </code></pre>
nameだけ取得したい場合は、以下のようにします。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs">sqlite&gt; SELECT name FROM users;
name
----------
James
Nielsen
Lorre
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-9. データの取得（WHERE句）</div>
<div class="l-content--detail p-lesson">
データを絞り込んで取得するにはSELECT文のWHERE句で条件をつけます。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名 <span class="hljs-keyword">WHERE</span> 条件;</code></pre>
以下を実行し、nameがJamesのものだけを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">name</span>=<span class="hljs-string">"James"</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users WHERE name=<span class="hljs-string">"James"</span>;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
WERE句には以下の比較演算子を使うことができます。
<table>
<tbody>
<tr>
<td>比較演算子</td>
<td>使用例</td>
<td>意味</td>
</tr>
<tr>
<td>=</td>
<td>a = b</td>
<td>aとbは等しい</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>a&lt;&gt;b</td>
<td>aとbは等しくない</td>
</tr>
<tr>
<td>&gt;</td>
<td>a &gt; b</td>
<td>aはbより大きい</td>
</tr>
<tr>
<td>&gt;=</td>
<td>a &gt;= b</td>
<td>aはb以上</td>
</tr>
<tr>
<td>&lt;</td>
<td>a &lt; b</td>
<td>aはbより小さい</td>
</tr>
<tr>
<td>&lt;=</td>
<td>a &lt;= b</td>
<td>aはb以下</td>
</tr>
</tbody>
</table>
以下を実行し、idが2以下のものだけを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>&lt;=<span class="hljs-number">2</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users WHERE id&lt;=<span class="hljs-number">2</span>;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
sqlite&gt;
</code></pre>
AND句を使って条件を複数設定することもできます。
以下を実行し、idが2以下で名前がJamesのものを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>&lt;=<span class="hljs-number">2</span> <span class="hljs-keyword">AND</span> <span class="hljs-keyword">name</span>=<span class="hljs-string">"James"</span>;</code></pre>
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users WHERE id&lt;=<span class="hljs-number">2</span> AND name=<span class="hljs-string">"James"</span>;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
sqlite&gt;
</code></pre>
OR句を使って条件を複数設定することもできます。
以下を実行し、idが1または3のものを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>=<span class="hljs-number">1</span> <span class="hljs-keyword">OR</span> <span class="hljs-keyword">id</span>=<span class="hljs-number">3</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users WHERE id=<span class="hljs-number">1</span> OR id=<span class="hljs-number">3</span>;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
NOT句を使って条件に合わないものを取得することもできます。
以下を実行し、idが1でないものを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">id</span>=<span class="hljs-number">1</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users WHERE NOT id=<span class="hljs-number">1</span>;
id          name        email
----------  ----------  -----------
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-10. データの更新</div>
<div class="l-content--detail p-lesson">
usersテーブルに登録されている情報を更新しましょう。データの情報を更新するにはUPDATE文を使います。
<pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> テーブル名 <span class="hljs-keyword">SET</span> カラム<span class="hljs-number">1</span>=値<span class="hljs-number">1</span>, カラム<span class="hljs-number">2</span>=値<span class="hljs-number">2</span>…;</code></pre>
以下を実行し、JamesをBondに変更してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">SET</span> <span class="hljs-keyword">name</span>=<span class="hljs-string">"Bond"</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">name</span>=“James<span class="hljs-string">";</span></code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; UPDATE users SET name=<span class="hljs-string">"Bond"</span> WHERE name=<span class="hljs-string">"James"</span>;
sqlite&gt; </code></pre>
usersテーブルの情報を取得し、nameが変更されたことを確認しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           Bond        <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
※ WHERE句で条件をしぼらないと全てのデータが変更対象となってしまうので注意してください。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-11. データの削除</div>
<div class="l-content--detail p-lesson">
usersテーブルに登録されている情報を削除してみましょう。データの情報を削除するにはDELETE文を使います。
<pre><code class="hljs sql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> テーブル名;</code></pre>
以下を実行し、nameがBondの情報を削除してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">name</span>=<span class="hljs-string">"Bond"</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; DELETE FROM users WHERE name=<span class="hljs-string">"Bond"</span>;
sqlite&gt; </code></pre>
usersテーブルの情報を取得し、nameがBondの情報が削除されていることを確認しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt;sqlite&gt; SELECT * FROM users;
id          name        email
----------  ----------  -----------
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
※ WHERE句で条件をしぼらないと全てのデータが削除対象となってしまうので注意してください。テーブルの情報全てを削除したい場合はWHERE句でしぼらずにDELETE文を実行しましょう。
以降の説明のために以下のINSERT文を実行してデータを追加しておきましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>, <span class="hljs-string">"James"</span>, <span class="hljs-string">"007@test.jp"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">4</span>, <span class="hljs-string">"James"</span>, <span class="hljs-string">"006@test.jp"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">5</span>, <span class="hljs-string">"Monica"</span>, <span class="hljs-string">"010@test.jp"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-string">"Berenice"</span>, <span class="hljs-string">"011@test.jp"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>, <span class="hljs-string">"Gemma"</span>, <span class="hljs-string">"012@test.jp"</span>);
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(id, name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-string">"James"</span>, <span class="hljs-string">"007@test.jp"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(id, name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-number">4</span>, <span class="hljs-string">"James"</span>, <span class="hljs-string">"006@test.jp"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(id, name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-number">5</span>, <span class="hljs-string">"Monica"</span>, <span class="hljs-string">"010@test.jp"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(id, name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-number">6</span>, <span class="hljs-string">"Berenice"</span>, <span class="hljs-string">"011@test.jp"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(id, name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-number">7</span>, <span class="hljs-string">"Gemma"</span>, <span class="hljs-string">"012@test.jp"</span>)</span></span>;
sqlite&gt; SELECT * FROM users;
id          name        email
----------  ----------  -----------
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">6</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
ここまででデータベースの基本的な操作(データの登録/取得/更新/削除)を学びました。以降はより詳細なデータ取得方法やカラムに制約をつける方法を学んでいきます。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-12. データの取得（ORDER BY句）</div>
<div class="l-content--detail p-lesson">
データをソートした状態で取得するにはSELECT文のORDER BY句でソート対象のカラムを指定します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名 <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> カラム<span class="hljs-number">1</span> [<span class="hljs-keyword">ASC</span>/<span class="hljs-keyword">DESC</span>], カラム<span class="hljs-number">2</span> [<span class="hljs-keyword">ASC</span>/<span class="hljs-keyword">DESC</span>]...;</code></pre>
昇順でソートしたければASC、降順でソートする場合はDESCを指定します。省略した場合は昇順でソートされます。
以下を実行し、nameでソートして情報を取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users ORDER BY name;
id          name        email
----------  ----------  -----------
<span class="hljs-number">6</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
次に、降順でソートしてみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">DESC</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users ORDER BY name DESC;
id          name        email
----------  ----------  -----------
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">6</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
Jamesが２人いますので、idでのソートを追加してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">DESC</span>, <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users ORDER BY name DESC, id;
id          name        email
----------  ----------  -----------
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">6</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-13. データの取得（BETWEEN句）</div>
<div class="l-content--detail p-lesson">
値の範囲を限定してデータを取得するにはSELECT文のBETWEEN句で値の範囲を指定します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名 <span class="hljs-keyword">WHERE</span> カラム <span class="hljs-keyword">BETWEEN</span> 値<span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> 値<span class="hljs-number">2</span>;</code></pre>
以下を実行し、idの範囲を限定してデータを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">2</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">5</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users WHERE id BETWEEN <span class="hljs-number">2</span> AND <span class="hljs-number">5</span> ORDER BY id;
id          name        email
----------  ----------  -----------
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-14. データの取得（IN句）</div>
<div class="l-content--detail p-lesson">
指定した値のいずれかに一致したデータを取得するにはSELECT文のIN句で値を指定します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名 <span class="hljs-keyword">WHERE</span> カラム <span class="hljs-keyword">IN</span>(値<span class="hljs-number">1</span>, 値<span class="hljs-number">2.</span>..);</code></pre>
以下を実行し、idの範囲を限定してデータを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span> <span class="hljs-keyword">IN</span>(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>) <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * <span class="hljs-function">FROM users WHERE id <span class="hljs-title">IN</span><span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>)</span> ORDER BY id</span>;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-15. データの取得（LIKE句）</div>
<div class="l-content--detail p-lesson">
指定したパターンにマッチした文字列に一致したデータを取得するにはSELECT文のLIKE句で文字列のパターンを指定します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名 <span class="hljs-keyword">WHERE</span> カラム <span class="hljs-keyword">LIKE</span> 文字列のパターン;</code></pre>
以下を実行し、nameに”a”が含まれているデータを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">"%a%"</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users WHERE name LIKE <span class="hljs-string">"%a%"</span> ORDER BY id;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
%は、0個以上の任意の文字列を表します。
同様に、emailに”00”が含まれているデータを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> email <span class="hljs-keyword">LIKE</span> <span class="hljs-string">"%00%"</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users WHERE email LIKE <span class="hljs-string">"%00%"</span> ORDER BY id;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-16. データの取得（IS NULL句）</div>
<div class="l-content--detail p-lesson">
値が入っていない(NULL)のデータを取得するにはSELECT文のNULL句を指定します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名 <span class="hljs-keyword">WHERE</span> カラム <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span>;</code></pre>
まず、以下のidがNULLのデータを登録しておきましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">name</span>, email) <span class="hljs-keyword">values</span> (<span class="hljs-string">"Rosamund"</span>, <span class="hljs-string">"013@test.jp"</span>);
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span><span class="hljs-params">(name, email)</span> <span class="hljs-title">values</span> <span class="hljs-params">(<span class="hljs-string">"Rosamund"</span>, <span class="hljs-string">"013@test.jp"</span>)</span></span>;
sqlite&gt; SELECT * FROM users ORDER BY id;
id          name        email
----------  ----------  -----------
            Rosamund    <span class="hljs-number">013</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">6</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
以下を実行し、idがNULLのデータを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span> <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span>;</code></pre>
実行例：
<pre><code class="hljs css">
<span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-tag">SELECT</span> * <span class="hljs-selector-tag">FROM</span> <span class="hljs-selector-tag">users</span> <span class="hljs-selector-tag">WHERE</span> <span class="hljs-selector-tag">id</span> <span class="hljs-selector-tag">IS</span> <span class="hljs-selector-tag">NULL</span>;
<span class="hljs-selector-tag">id</span>          <span class="hljs-selector-tag">name</span>        <span class="hljs-selector-tag">email</span>
<span class="hljs-selector-tag">----------</span>  <span class="hljs-selector-tag">----------</span>  <span class="hljs-selector-tag">-----------</span>
            <span class="hljs-selector-tag">Rosamund</span>    013@<span class="hljs-keyword">test</span>.<span class="hljs-keyword">jp</span>
sqlite&gt; </code></pre>
次に、idがNULLではないデータを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span> <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users WHERE id IS NOT NULL ORDER BY id;
id          name        email
----------  ----------  -----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">4</span>           James       <span class="hljs-number">006</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">5</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">6</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp
<span class="hljs-number">7</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-17. データの取得（DISTINCT句）</div>
<div class="l-content--detail p-lesson">
重複したデータを排除してデータを取得するにはSELECT文のDISTINCT句を指定します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span>カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル名;</code></pre>
まずDISTINCTを指定せずにnameを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span>;</code></pre>
実行例：
<pre><code class="hljs javascript">
sqlite&gt; select name <span class="hljs-keyword">from</span> users order by name;
name
----------
Berenice
Gemma
James
James
Lorre
Monica
Nielsen
Rosamund
sqlite&gt; </code></pre>
Jamesが２人登録されているので、重複して２回表示されています。
次にDISTINCTを指定してnameを取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span>;</code></pre>
実行例：
<pre><code class="hljs">
sqlite&gt; SELECT DISTINCT name FROM users ORDER BY name;
name
----------
Berenice
Gemma
James
Lorre
Monica
Nielsen
Rosamund
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-18. PRIMARY KEY制約</div>
<div class="l-content--detail p-lesson">
テーブルのカラムには様々な制約を事前に設定しておくことができます。
データを一意に識別するカラム(主キー)にはPRIMARY KEY制約を設定しておきましょう。
以下を実行して、新しくbooksテーブルを作成しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> books(<span class="hljs-keyword">id</span> <span class="hljs-built_in">integer</span> PRIMARY <span class="hljs-keyword">KEY</span> AUTOINCREMENT, title <span class="hljs-built_in">varchar</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">UNIQUE</span>, author <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">"不明"</span> );</code></pre>
実行例：
<pre><code class="hljs php">
sqlite&gt; CREATE TABLE books(id integer PRIMARY KEY AUTOINCREMENT, title varchar NOT <span class="hljs-keyword">NULL</span> UNIQUE, author <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">"不明"</span> );
sqlite&gt; </code></pre>
.tablesコマンドを実行してテーブルが作成されていることを確認します。
<pre><code class="hljs css"><span class="hljs-selector-class">.tables</span></code></pre>
実行例：
<pre><code class="hljs css"><span class="hljs-selector-tag">sqlite</span>&gt; <span class="hljs-selector-class">.tables</span>
<span class="hljs-selector-tag">books</span>  <span class="hljs-selector-tag">users</span>
<span class="hljs-selector-tag">sqlite</span>&gt; </code></pre>
booksテーブルに以下のデータを登録しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (title, author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Ruby on Railsカリキュラム"</span>, <span class="hljs-string">"さいとう"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (title, author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"PHPカリキュラム"</span>, <span class="hljs-string">"すずき"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (title, author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"SQLカリキュラム"</span>, <span class="hljs-string">"たなか"</span>);
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> books <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">id</span>;
</code></pre>
実行例：
<pre><code class="hljs">
sqlite&gt; SELECT * FROM books ORDER BY id;
id          title                            author
----------  -------------------------------  ------------
1           Ruby on Railsカリキュラム  さいとう
2           PHPカリキュラム            すずき
3           SQLカリキュラム            たなか
sqlite&gt; </code></pre>
booksテーブルのidカラムにはPRIMARY KEY制約を設定しました。またAUTOINCREMENTを設定しているので、自動的に採番され番号が振られています。
この状態で、すでに登録されているidと同じ値のデータを追加してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (<span class="hljs-keyword">id</span>, title, author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-string">"Javaカリキュラム"</span>, <span class="hljs-string">"こだか"</span>);</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">books</span> <span class="hljs-params">(id, title, author)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-string">"Javaカリキュラム"</span>, <span class="hljs-string">"こだか"</span>)</span></span>;
Error: UNIQUE constraint failed: books.id
sqlite&gt; </code></pre>
このように、PRIMARY KEY制約を設定しているので、idが同じものはエラーとなり登録されません。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-19. NOT NULL制約</div>
<div class="l-content--detail p-lesson">
値を必ず設定しておく必要があるカラムにはNOT NULL制約を設定しておきましょう。
まず、.schemaでbooksテーブルの設定をもう一度確認しましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.schema</span> <span class="hljs-selector-tag">books</span></code></pre>
実行例：
<pre><code class="hljs php">sqlite&gt; .schema books
CREATE TABLE books(id integer PRIMARY KEY AUTOINCREMENT, title varchar NOT <span class="hljs-keyword">NULL</span> UNIQUE, author <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">"不明"</span> );
sqlite&gt; </code></pre>
このようにtitleにはNOT NULL制約が設定されていました。
以下を実行して、titleがNULLのデータを登録してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"わたなべ"</span>);</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">books</span> <span class="hljs-params">(author)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"わたなべ"</span>)</span></span>;
Error: NOT NULL constraint failed: books.title
sqlite&gt; </code></pre>
このように、titleカラムがNULLのものはエラーとなり登録されません。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-20. UNIQUE制約</div>
<div class="l-content--detail p-lesson">
重複した値を登録させたくないカラムにはUNIQUE制約を設定しておきましょう。
まず、.schemaでbooksテーブルの設定をもう一度確認しましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.schema</span> <span class="hljs-selector-tag">books</span></code></pre>
実行例：
<pre><code class="hljs php">sqlite&gt; .schema books
CREATE TABLE books(id integer PRIMARY KEY AUTOINCREMENT, title varchar NOT <span class="hljs-keyword">NULL</span> UNIQUE, author <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">"不明"</span> );
sqlite&gt; </code></pre>
このようにtitleにはUNIQUE制約も設定されていました。
以下を実行して、titleが同じデータを登録してみましょう。
<pre><code class="hljs sql">
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (title, author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Ruby on Railsカリキュラム"</span>, <span class="hljs-string">"さいとう"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (title, author) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Ruby on Railsカリキュラム"</span>, <span class="hljs-string">"わたなべ"</span>);</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">books</span> <span class="hljs-params">(title, author)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Ruby on Railsカリキュラム"</span>, <span class="hljs-string">"わたなべ"</span>)</span></span>;
Error: UNIQUE constraint failed: books.title
sqlite&gt; </code></pre>
このように、同じtitleのものはエラーとなり登録されません。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-21. DEFAULT制約</div>
<div class="l-content--detail p-lesson">
値が指定されていない場合、自動的にデフォルトの値を設定しておきたいカラムにはDEFAULT制約を設定しておきましょう。
まず、.schemaでbooksテーブルの設定をもう一度確認しましょう。
<pre><code class="hljs css"><span class="hljs-selector-class">.schema</span> <span class="hljs-selector-tag">books</span></code></pre>
実行例：
<pre><code class="hljs php">sqlite&gt; .schema books
CREATE TABLE books(id integer PRIMARY KEY AUTOINCREMENT, title varchar NOT <span class="hljs-keyword">NULL</span> UNIQUE, author <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">"不明"</span> );
sqlite&gt; </code></pre>
このようにauthorにはDEFAULT制約が設定されていました。
以下を実行して、authorに値を指定せずにデータを登録してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> books (title) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Goカリキュラム"</span>);
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> books;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">books</span> <span class="hljs-params">(title)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Goカリキュラム"</span>)</span></span>;
sqlite&gt; SELECT * FROM books;
id          title                            author
----------  -------------------------------  ------------
<span class="hljs-number">1</span>           Ruby on Railsカリキュラム  さいとう
<span class="hljs-number">2</span>           PHPカリキュラム            すずき
<span class="hljs-number">3</span>           SQLカリキュラム            たなか
<span class="hljs-number">4</span>           Goカリキュラム             不明
sqlite&gt; </code></pre>
このように、authorにDEFAULT制約で設定した値が入ります。
様々な制約を設定しておくことで、不正なデータを登録させないようにブロックしたり、自動的に値を設定できることを学びました。次節以降は複数のテーブルを使ってデータを取得する方法を学んでいきます。その準備として以下のように今までのusersテーブルを削除し、再度制約をつけて作成しなおしましょう。また、新しくcompaniesテーブルとreviewsテーブルも作成しておきます。
まず以下を実行し、usersテーブルを削除し、再度制約をつけて作成しなおしましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">users</span>;
<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span> <span class="hljs-built_in">integer</span> PRIMARY <span class="hljs-keyword">KEY</span> AUTOINCREMENT, <span class="hljs-keyword">name</span> <span class="hljs-built_in">varchar</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>, email <span class="hljs-built_in">varchar</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">UNIQUE</span>, company_id <span class="hljs-built_in">integer</span> );
.tables</code></pre>
実行例：
<pre><code class="hljs php">
sqlite&gt; DROP TABLE users;
sqlite&gt; CREATE TABLE users(id integer PRIMARY KEY AUTOINCREMENT, name varchar NOT <span class="hljs-keyword">NULL</span>, email varchar NOT <span class="hljs-keyword">NULL</span> UNIQUE, company_id integer );
sqlite&gt; .tables
books  users
sqlite&gt; </code></pre>
次に以下を実行し、companiesテーブルとreviewsテーブルを作成しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> companies(<span class="hljs-keyword">id</span> <span class="hljs-built_in">integer</span> PRIMARY <span class="hljs-keyword">KEY</span> AUTOINCREMENT, <span class="hljs-keyword">name</span> <span class="hljs-built_in">varchar</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>);
<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> reviews(<span class="hljs-keyword">id</span> <span class="hljs-built_in">integer</span> PRIMARY <span class="hljs-keyword">KEY</span> AUTOINCREMENT, user_id <span class="hljs-built_in">integer</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>, book_id <span class="hljs-built_in">integer</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>, description <span class="hljs-built_in">text</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>);
.tables</code></pre>
実行例：
<pre><code class="hljs php">
sqlite&gt; CREATE TABLE companies(id integer PRIMARY KEY AUTOINCREMENT, name varchar NOT <span class="hljs-keyword">NULL</span>);
sqlite&gt; CREATE TABLE reviews(id integer PRIMARY KEY AUTOINCREMENT, user_id integer NOT <span class="hljs-keyword">NULL</span>, book_id integer NOT <span class="hljs-keyword">NULL</span>, description text NOT <span class="hljs-keyword">NULL</span>);
sqlite&gt; .tables
books      companies  reviews    users
sqlite&gt; </code></pre>
さらに以下を実行し、データを追加しておきましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> companies (<span class="hljs-keyword">name</span>) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"株式会社AAA"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> companies (<span class="hljs-keyword">name</span>) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"株式会社BBB"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> companies (<span class="hljs-keyword">name</span>) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"株式会社CCC"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span> (<span class="hljs-keyword">name</span>, email, company_id) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"James"</span>, <span class="hljs-string">"007@test.jp"</span>, <span class="hljs-number">1</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span> (<span class="hljs-keyword">name</span>, email, company_id) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Nielsen"</span>, <span class="hljs-string">"008@test.jp"</span>, <span class="hljs-number">1</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span> (<span class="hljs-keyword">name</span>, email, company_id) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Lorre"</span>, <span class="hljs-string">"009@test.jp"</span>, <span class="hljs-number">1</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span> (<span class="hljs-keyword">name</span>, email, company_id) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Monica"</span>, <span class="hljs-string">"010@test.jp"</span>, <span class="hljs-number">4</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span> (<span class="hljs-keyword">name</span>, email, company_id) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Berenice"</span>, <span class="hljs-string">"011@test.jp"</span>, <span class="hljs-number">2</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">users</span> (<span class="hljs-keyword">name</span>, email, company_id) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">"Gemma"</span>, <span class="hljs-string">"012@test.jp"</span>, <span class="hljs-number">2</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"Great!"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"Good Book!"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"How sweet!"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"Good job!"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"Amaging!"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"Boring!"</span>);
<span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> reviews (user_id, book_id, description) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"Great!"</span>);
</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">companies</span> <span class="hljs-params">(name)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"株式会社AAA"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">companies</span> <span class="hljs-params">(name)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"株式会社BBB"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">companies</span> <span class="hljs-params">(name)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"株式会社CCC"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span> <span class="hljs-params">(name, email, company_id)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"James"</span>, <span class="hljs-string">"007@test.jp"</span>, <span class="hljs-number">1</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span> <span class="hljs-params">(name, email, company_id)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Nielsen"</span>, <span class="hljs-string">"008@test.jp"</span>, <span class="hljs-number">1</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span> <span class="hljs-params">(name, email, company_id)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Lorre"</span>, <span class="hljs-string">"009@test.jp"</span>, <span class="hljs-number">1</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span> <span class="hljs-params">(name, email, company_id)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Monica"</span>, <span class="hljs-string">"010@test.jp"</span>, <span class="hljs-number">4</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span> <span class="hljs-params">(name, email, company_id)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Berenice"</span>, <span class="hljs-string">"011@test.jp"</span>, <span class="hljs-number">2</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">users</span> <span class="hljs-params">(name, email, company_id)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-string">"Gemma"</span>, <span class="hljs-string">"012@test.jp"</span>, <span class="hljs-number">2</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"Great!"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"Good Book!"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"How sweet!"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"Good job!"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"Amaging!"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"Boring!"</span>)</span></span>;
sqlite&gt; <span class="hljs-function">INSERT INTO <span class="hljs-title">reviews</span> <span class="hljs-params">(user_id, book_id, description)</span> <span class="hljs-title">VALUES</span> <span class="hljs-params">(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"Great!"</span>)</span></span>;
sqlite&gt; SELECT * FROM companies;
id          name
----------  ---------------
<span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">2</span>           株式会社BBB
<span class="hljs-number">3</span>           株式会社CCC
sqlite&gt; SELECT * FROM users;
id          name        email        company_id
----------  ----------  -----------  ----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>
<span class="hljs-number">4</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">4</span>
<span class="hljs-number">5</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>
<span class="hljs-number">6</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>
sqlite&gt; SELECT * FROM reviews;
id          user_id     book_id     description
----------  ----------  ----------  -----------
<span class="hljs-number">1</span>           <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           Great!
<span class="hljs-number">2</span>           <span class="hljs-number">1</span>           <span class="hljs-number">2</span>           Good Book!
<span class="hljs-number">3</span>           <span class="hljs-number">1</span>           <span class="hljs-number">3</span>           How sweet!
<span class="hljs-number">4</span>           <span class="hljs-number">2</span>           <span class="hljs-number">2</span>           Good job!
<span class="hljs-number">5</span>           <span class="hljs-number">2</span>           <span class="hljs-number">3</span>           Amaging!
<span class="hljs-number">6</span>           <span class="hljs-number">3</span>           <span class="hljs-number">1</span>           Boring!
<span class="hljs-number">7</span>           <span class="hljs-number">4</span>           <span class="hljs-number">1</span>           Great!
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-22. 複数テーブルからの情報取得</div>
<div class="l-content--detail p-lesson">
複数のテーブルから情報を取得する方法を学びます。
まず、companiesテーブルの内容を確認しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> companies;</code></pre>
実行例：
<pre><code class="hljs">
sqlite&gt; SELECT * FROM companies;
id          name
----------  ---------------
1           株式会社AAA
2           株式会社BBB
3           株式会社CCC
sqlite&gt; </code></pre>
次に、usersテーブルの内容を確認しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users;
id          name        email        company_id
----------  ----------  -----------  ----------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>
<span class="hljs-number">5</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>
<span class="hljs-number">6</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>
sqlite&gt; </code></pre>
usersテーブルのcompany_idは、companiesテーブルのidを指します。WHERE句にそれぞれが一致する条件（users.company_id=companies.id）を設定することで情報を取得することができます。
以下を実行して、usersテーブルのnameとそのユーザーが所属するcompaniesのnameを取得しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> users.name, companies.name <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>, companies <span class="hljs-keyword">WHERE</span> users.company_id=companies.id;</code></pre>
実行例：
<pre><code class="hljs">
sqlite&gt; SELECT users.name, companies.name FROM users, companies WHERE users.company_id=companies.id;
name        name
----------  ---------------
James       株式会社AAA
Nielsen     株式会社AAA
Lorre       株式会社AAA
Berenice    株式会社BBB
Gemma       株式会社BBB
sqlite&gt; </code></pre>
SELECT文の中でテーブルに別名(エイリアス)を設定することもできます。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> u.name, c.name <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u, companies c <span class="hljs-keyword">WHERE</span> u.company_id=c.id;</code></pre>
実行例：
<pre><code class="hljs">
sqlite&gt; SELECT u.name, c.name FROM users u, companies c WHERE u.company_id=c.id;
name        name
----------  ---------------
James       株式会社AAA
Nielsen     株式会社AAA
Lorre       株式会社AAA
Berenice    株式会社BBB
Gemma       株式会社BBB
sqlite&gt; </code></pre>
表示されたnameもどちらのnameか区別したい場合には、カラム名に別名(エイリアス)を設定することもできます。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> u.name <span class="hljs-keyword">AS</span> user_name, c.name <span class="hljs-keyword">AS</span> company_name <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u, companies c <span class="hljs-keyword">WHERE</span> u.company_id=c.id;</code></pre>
実行例：
<pre><code class="hljs php">
sqlite&gt; SELECT u.name <span class="hljs-keyword">AS</span> user_name, c.name <span class="hljs-keyword">AS</span> company_name FROM users u, companies c WHERE u.company_id=c.id;
user_name   company_name
----------  ---------------
James       株式会社AAA
Nielsen     株式会社AAA
Lorre       株式会社AAA
Berenice    株式会社BBB
Gemma       株式会社BBB
sqlite&gt;  </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-23. INNER JOIN句</div>
<div class="l-content--detail p-lesson">
複数のテーブルから指定したそれぞれのカラムが一致するデータのみを取得する場合には、内部結合（INNER JOIN）が使えます。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル<span class="hljs-number">1</span> <span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> テーブル<span class="hljs-number">2</span> <span class="hljs-keyword">ON</span> 条件;</code></pre>
以下を実行し、usersテーブルのcompany_idとcompaniesテーブルのidで内部結合させた情報を取得しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u <span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> companies c <span class="hljs-keyword">ON</span> u.company_id=c.id;</code></pre>
実行例：
<pre><code class="hljs java">sqlite&gt; SELECT * FROM users u INNER JOIN companies c ON u.company_id=c.id;
id          name        email        company_id  id          name
----------  ----------  -----------  ----------  ----------  ---------------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">5</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>           <span class="hljs-number">2</span>           株式会社BBB
<span class="hljs-number">6</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>           <span class="hljs-number">2</span>           株式会社BBB
sqlite&gt; </code></pre>
もちろん、前節のようにnameだけ取り出すこともできます。以下を実行してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> u.name <span class="hljs-keyword">AS</span> user_name, c.name <span class="hljs-keyword">AS</span> company_name <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u <span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> companies c <span class="hljs-keyword">ON</span> u.company_id=c.id;</code></pre>
実行例
<pre><code class="hljs php">
sqlite&gt; SELECT u.name <span class="hljs-keyword">AS</span> user_name, c.name <span class="hljs-keyword">AS</span> company_name FROM users u INNER JOIN companies c ON u.company_id=c.id;
user_name   company_name
----------  ---------------
James       株式会社AAA
Nielsen     株式会社AAA
Lorre       株式会社AAA
Berenice    株式会社BBB
Gemma       株式会社BBB
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-24. OUTER JOIN句</div>
<div class="l-content--detail p-lesson">
複数のテーブルからどちらか一方のテーブルにデータがあれば取得するような場合には、外部結合（LEFT OUTER JOIN）が使えます。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> カラム<span class="hljs-number">1</span>, カラム<span class="hljs-number">2.</span>.. <span class="hljs-keyword">FROM</span> テーブル<span class="hljs-number">1</span> <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">OUTER</span> <span class="hljs-keyword">JOIN</span> テーブル<span class="hljs-number">2</span> <span class="hljs-keyword">ON</span> 条件;</code></pre>
以下を実行し、usersテーブルのcompany_idとcompaniesテーブルのidで外部結合させた情報を取得しましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">OUTER</span> <span class="hljs-keyword">JOIN</span> companies c <span class="hljs-keyword">ON</span> u.company_id=c.id;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; SELECT * FROM users u LEFT OUTER JOIN companies c ON u.company_id=c.id;
id          name        email        company_id  id          name
----------  ----------  -----------  ----------  ----------  ---------------
<span class="hljs-number">1</span>           James       <span class="hljs-number">007</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">2</span>           Nielsen     <span class="hljs-number">008</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">3</span>           Lorre       <span class="hljs-number">009</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">1</span>           <span class="hljs-number">1</span>           株式会社AAA
<span class="hljs-number">4</span>           Monica      <span class="hljs-number">010</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">4</span>
<span class="hljs-number">5</span>           Berenice    <span class="hljs-number">011</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>           <span class="hljs-number">2</span>           株式会社BBB
<span class="hljs-number">6</span>           Gemma       <span class="hljs-number">012</span><span class="hljs-meta">@test</span>.jp  <span class="hljs-number">2</span>           <span class="hljs-number">2</span>           株式会社BBB
sqlite&gt; </code></pre>
idが4のデータはcompaniesテーブルには存在しませんが、usersテーブルにはcompany_idが4のデータが存在しますので、上記のように表示されます。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-25. 多対多のデータの取得</div>
<div class="l-content--detail p-lesson">
usersテーブルのデータが1つのcompany_idを持っているのは、ユーザーは必ず1つの会社に属しているという関係を表すのに適切です。しかし、図書館のように、複数の本があり、それぞれの本を複数のユーザーが借りてレビューするような場合はどのようなテーブルやカラムを作れば良いでしょうか。
このように複数のデータが他の複数のデータと結びつく関係を、多対多の関係といいます。
多対多の関係を表すにはusersテーブルとbooksテーブルの間に中間テーブルを作成し、それぞれのidを設定できるように設定します。ここでは中間テーブルをreviewsテーブルとしてデータを確認してみましょう。
まず、reviewsテーブルのデータを取得します。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> reviews;</code></pre>
実行例：
<pre><code class="hljs">
sqlite&gt; SELECT * FROM reviews;
id          user_id     book_id     description
----------  ----------  ----------  -----------
1           1           1           Great!
2           1           2           Good Book!
3           1           3           How sweet!
4           2           2           Good job!
5           2           3           Amaging!
6           3           1           Boring!
7           4           1           Great!
sqlite&gt; </code></pre>
user_idが1のユーザーがbook_id1, 2, 3の複数の本を借りている状態を表現できています。またbook_idからみても、book_idが1の本がuser_id1, 3, 4の複数のユーザーに借りられている状態も表現できていそうです。
それではより具体的に、以下を実行し、user_idが1のユーザーが借りた本の情報を取得してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">name</span>, title, description <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u, books b, reviews r <span class="hljs-keyword">WHERE</span> u.id=<span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> u.id=r.user_id <span class="hljs-keyword">AND</span> b.id=r.book_id; </code></pre>
実行例：
<pre><code class="hljs php">
sqlite&gt; SELECT name, title, description FROM users u, books b, reviews r WHERE u.id=<span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> u.id=r.user_id <span class="hljs-keyword">AND</span> b.id=r.book_id;
name        title                            description
----------  -------------------------------  -----------
James       Ruby on Railsカリキュラム  Great!
James       PHPカリキュラム            Good Book!
James       SQLカリキュラム            How sweet!
sqlite&gt;  </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-26. GROUP BY句</div>
<div class="l-content--detail p-lesson">
登録されているユーザーの人数を確認したい場合などにSQLiteで用意されているCOUNT関数を使うことができます。以下、実行してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">COUNT</span>(*) <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span>;</code></pre>
実行例：
<pre><code class="hljs java">
sqlite&gt; <span class="hljs-function">SELECT <span class="hljs-title">COUNT</span><span class="hljs-params">(*)</span> FROM users</span>;
COUNT(*)
----------
<span class="hljs-number">6</span>
sqlite&gt;  </code></pre>
さらにcompany_id毎に人数を集計したい場合、GROUP BY句でグルーピングすることができます。以下、実行してみましょう。
<pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> c.name <span class="hljs-keyword">AS</span> company_name, <span class="hljs-keyword">COUNT</span>(*) <span class="hljs-keyword">AS</span> user_count <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">users</span> u, companies c <span class="hljs-keyword">WHERE</span> u.company_id=c.id <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> u.company_id;  </code></pre>
実行例：
<pre><code class="hljs php">
sqlite&gt; SELECT c.name <span class="hljs-keyword">AS</span> company_name, COUNT(*) <span class="hljs-keyword">AS</span> user_count FROM users u, companies c WHERE u.company_id=c.id GROUP BY u.company_id;
company_name     user_count
---------------  ----------
株式会社AAA  <span class="hljs-number">3</span>
株式会社BBB  <span class="hljs-number">2</span>
sqlite&gt; </code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>3-27. 【課題】カテゴリで検索できるようにしよう！</div>
<div class="l-content--detail p-lesson">
条件１：categoriesテーブルを作成し、本のカテゴリ名を登録しましょう。
条件２：booksテーブルとcategoriesテーブルは多対多の関係として、中間テーブルにbooks_categoriesテーブルを作成しましょう。
条件３：booksテーブルに新しく本を登録し、それぞれの本に複数のカテゴリを設定しましょう。
ヒント１：categoriesテーブルはnameカラムを持ちます。
ヒント２：books_categoriesテーブルはbooks_idとcategory_idを持ちます。
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2410</wp:post_id>
		<wp:post_date><![CDATA[2019-03-15 01:03:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 16:03:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[graspy-3-sqlite3]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:98:"https://writing.itprocollege.com/wp-content/uploads/2017/04/993610da520ffc55db91211857b87dfd-1.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Graspy 4. ruby on rails 本棚アプリ</title>
		<link>https://tech.blog.uribou.me/post-2412/</link>
		<pubDate>Thu, 14 Mar 2019 16:05:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2412</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="c-title--primary">4.【最終書】本棚アプリを作ってみよう</h1>
<div class="l-content--detail p-lesson"></div>
<div class="l-content--detail p-lesson">
<div>4-1. 本棚アプリ</div>
<div class="l-content--detail p-lesson">
このレッスンではRuby on Railsのより実践的なアプリケーションとして、マイ本棚を作成していきます。
アプリケーションを作成しながら、Ruby on Railsの開発で良く使われるGemも解説していきます。
マイ本棚完成イメージ
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/%E6%9C%AC%E6%A3%9A%E5%AE%8C%E6%88%90%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B7%E3%82%99-1024x543.png" alt="%e6%9c%ac%e6%a3%9a%e5%ae%8c%e6%88%90%e3%82%a4%e3%83%a1%e3%83%bc%e3%82%b7%e3%82%99" width="840" height="445" />マイ本棚は、自分の本を登録できるだけでなく他の人の本やレビューも共有できるアプリです。ぜひ完成を目指して進めていきましょう。
</div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-2. GitHubのリポジトリ作成</div>
<div class="l-content--detail p-lesson">
GitHubで「BookShelf」という新しいリポジトリを作成します。 GitHubページを開き、右上の「＋」から
<pre><code class="hljs php"><span class="hljs-keyword">New</span> repository</code></pre>
を選択します。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Github-select-create-repository.png" alt="github-select-create-repository" width="254" height="291" />Repository nameに
<pre><code class="hljs">BookShelf</code></pre>
を入力して
<pre><code class="hljs sql"><span class="hljs-keyword">Create</span> repository</code></pre>
ボタンをクリックします。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Github-create-bookshelf.png" alt="github-create-bookshelf" width="1020" height="724" />リポジトリが正常に作成されたら、以下の画面になります。これでリポジトリの作成は完了です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Github-after-create-bookshelf.png" alt="github-after-create-bookshelf" width="1017" height="769" /></div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-3. アプリケーションの作成</div>
<div class="l-content--detail p-lesson">
Cloud9のターミナルで、
<pre><code class="hljs java">rails <span class="hljs-keyword">new</span></code></pre>
コマンドを実行してRuby on Railsアプリケーションを作成します。
下記のコマンドを実行してください。
<pre><code class="hljs java">$ rails <span class="hljs-keyword">new</span> BookShelf</code></pre>
<pre><code class="hljs">cd</code></pre>
コマンドで、作成したBookShelfフォルダに移動しましょう。ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ cd BookShelf</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-new-BookShelf.png" alt="rails-new-bookshelf" width="533" height="141" /></div>
<div class="c-course-learn c-course-learn--compleated"><a class="c-course-learn__button"><i class="material-icons">check_box</i>習得済み</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-4. Railsサーバの起動</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">rails s</code></pre>
コマンドで Railsサーバを起動します。ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ rails s -p $PORT -b $IP
</code></pre>
コマンドを実行すると、以下のようなメッセージが表示され、Railsサーバーが起動したことがわかります。
<pre><code class="hljs php">=&gt; Booting Puma
=&gt; Rails <span class="hljs-number">5.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> application starting in development on http:<span class="hljs-comment">//0.0.0.0:8080</span>
=&gt; Run `rails server -h` <span class="hljs-keyword">for</span> more startup options
Puma starting in single mode...
* Version <span class="hljs-number">3.6</span><span class="hljs-number">.0</span> (ruby <span class="hljs-number">2.3</span><span class="hljs-number">.0</span>-p0), codename: Sleepy Sunday Serenity
* Min threads: <span class="hljs-number">5</span>, max threads: <span class="hljs-number">5</span>
* Environment: development
* Listening on tcp:<span class="hljs-comment">//0.0.0.0:8080</span>
<span class="hljs-keyword">Use</span> <span class="hljs-title">Ctrl</span>-<span class="hljs-title">C</span> <span class="hljs-title">to</span> <span class="hljs-title">stop</span></code></pre>
Cloud9のメニュー→Preview→Preview Running Applicationをクリックし、Railsアプリケーションを表示しましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Preview-Running-Application.png" alt="preview-running-application" width="200" height="73" />以下、表示される画面です。この時点ではRailsのデフォルトのトップ画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Rails-s-1024x589.png" alt="rails-s" width="840" height="483" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-5. Railsサーバの停止</div>
<div class="l-content--detail p-lesson">
ターミナルで「Ctrl + c」を実行してRailsサーバを停止してください。
※ Railsサーバを起動したままでも開発することができます。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-6. GitHubへpush</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">git init</code></pre>
コマンドでCloud9上にGitリポジトリを作成しましょう。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ git init
</code></pre>
これでCloud9上にGitリポジトリが作成されました。次にRailsアプリケーションをCloud9上のGitリポジトリにコミットします。 ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ git add .
$ git commit -m <span class="hljs-string">"first commit"</span>
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/git-init.png" alt="git-init" width="574" height="214" />新しく作成したBookShelfフォルダ内のファイルがコミットされました。最後にCloud9上のGitリポジトリにコミットした内容をGitHubにpushします。
ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ git remote add origin <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>GitHubのユーザ名/BookShelf.git
$ git remote -v
$ git push origin master</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/12/git-push.png" alt="git-push" width="855" height="334" />
<pre><code class="hljs">git push origin master</code></pre>
コマンド実行後、GitHubのユーザー名とパスワードを要求されます。パスワードは入力しても表示されないようになっています。もし、ユーザー名やパスワードを間違えた場合、fatal: Authentication failed for ...と表示されますので、
<pre><code class="hljs">git push origin master</code></pre>
コマンドを再度実行し、正しいユーザー名とパスワードを入力しなおしましょう。
GitHubへのpushが正常終了したら、GitHubのBookShelfリポジトリにRailsアプリケーションのファイルが正しく反映されていることを確認しましょう。
<a href="https://writing.itprocollege.com/wp-content/uploads/2016/11/BookShelf-repository-after-push.png"><img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/BookShelf-repository-after-push.png" alt="bookshelf-repository-after-push" width="746" height="712" /></a></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-7. Deviseを使ったユーザー管理</div>
<div class="l-content--detail p-lesson">
Deviseについて：Deviseとはユーザーの登録、ログイン・ログアウトを簡単に実装するためのGemです。パスワードを忘れた時にリカバリメールを送る機能やパスワードを何回か間違えるとロックする機能など、たくさんの機能が盛り込まれています。しかもそれらが別々に実装されているので、必要な機能を選択して利用することができます。
<blockquote>参考URL:
<a href="https://github.com/plataformatec/devise" target="_blank" rel="noopener noreferrer">https://github.com/plataformatec/devise</a></blockquote>
RailsアプリケーションにDeviseというgemをインストールします。
それでは実際にDeviseを使ってみましょう。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-8. Deviseの準備</div>
<div class="l-content--detail p-lesson">
GemfileにDeviseのインストールに必要なgemを記述します。Gemfileの3行目に以下の記述を追記しましょう。
Gemfile
<pre><code class="ruby hljs">...
gem <span class="hljs-string">'devise'</span>
gem <span class="hljs-string">'devise-bootstrap-views'</span>
gem <span class="hljs-string">'devise-i18n'</span>
gem <span class="hljs-string">'devise-i18n-views'</span>
...</code></pre>
以下、記入例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Gem-devise.png" alt="gem-devise" width="992" height="413" />bundle installコマンドでGemfileに追記したgemをインストールします。
ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs sql">$ bundle <span class="hljs-keyword">install</span></code></pre>
次にrails generate devise:install コマンドでDeviseをインストールします。
ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs sql">$ rails generate devise:<span class="hljs-keyword">install</span></code></pre>
実行すると以下のように表示され、インストールが正常に完了します。
<pre><code class="hljs xml">Running via Spring preloader in process 2380
      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml
===============================================================================
Some setup you must do manually if you haven't yet:
  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:
       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }
     In production, :host should be set to the actual host of your application.
  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:
       root to: "home#index"
  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:
       <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"notice"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span> <span class="hljs-attr">notice</span> %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"alert"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span> <span class="hljs-attr">alert</span> %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
  4. You can copy Devise views (for customization) to your app by running:
       rails g devise:views
===============================================================================
</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-9. Userモデルの作成</div>
<div class="l-content--detail p-lesson">
Deviseを使ってUserモデルを作成します。
<pre><code class="hljs">rails generate devise User</code></pre>
コマンドでdeviseを利用したUserモデルを作成します。ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ rails generate devise User
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-generate-devise-User.png" alt="rails-generate-devise-user" width="561" height="176" />実行すると
<pre><code class="hljs">app/models/user.rb</code></pre>
が以下の内容で自動生成されていることを確認しましょう。
app/models/user.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span>
  <span class="hljs-comment"># Include default devise modules. Others available are:</span>
  <span class="hljs-comment"># :confirmable, :lockable, :timeoutable and :omniauthable</span>
  devise <span class="hljs-symbol">:database_authenticatable</span>, <span class="hljs-symbol">:registerable</span>,
         <span class="hljs-symbol">:recoverable</span>, <span class="hljs-symbol">:rememberable</span>, <span class="hljs-symbol">:trackable</span>, <span class="hljs-symbol">:validatable</span>
<span class="hljs-keyword">end</span>
</code></pre>
また、
<pre><code class="hljs">db/migrate/xxxxxxxxxxxxxx_devise_create_users.rb</code></pre>
が自動生成されます。32行目に以下の記述を追加しましょう。
db/migrate/xxxxxxxxxxxxxx_devise_create_users.rb
<pre><code class="ruby hljs"><span class="hljs-comment"># 追加</span>
t.string <span class="hljs-symbol">:name</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span></code></pre>
追記後のファイルの内容が下記のようになっていることを確認しましょう。
db/migrate/xxxxxxxxxxxxxx_devise_create_users.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DeviseCreateUsers</span> &lt; ActiveRecord::Migration[5.0]</span>
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span>
    create_table <span class="hljs-symbol">:users</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span>
      <span class="hljs-comment">## Database authenticatable</span>
      t.string <span class="hljs-symbol">:email</span>,              <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>, <span class="hljs-symbol">default:</span> <span class="hljs-string">""</span>
      t.string <span class="hljs-symbol">:encrypted_password</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>, <span class="hljs-symbol">default:</span> <span class="hljs-string">""</span>
      <span class="hljs-comment">## Recoverable</span>
      t.string   <span class="hljs-symbol">:reset_password_token</span>
      t.datetime <span class="hljs-symbol">:reset_password_sent_at</span>
      <span class="hljs-comment">## Rememberable</span>
      t.datetime <span class="hljs-symbol">:remember_created_at</span>
      <span class="hljs-comment">## Trackable</span>
      t.integer  <span class="hljs-symbol">:sign_in_count</span>, <span class="hljs-symbol">default:</span> <span class="hljs-number">0</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
      t.datetime <span class="hljs-symbol">:current_sign_in_at</span>
      t.datetime <span class="hljs-symbol">:last_sign_in_at</span>
      t.string   <span class="hljs-symbol">:current_sign_in_ip</span>
      t.string   <span class="hljs-symbol">:last_sign_in_ip</span>
      <span class="hljs-comment">## Confirmable</span>
      <span class="hljs-comment"># t.string   :confirmation_token</span>
      <span class="hljs-comment"># t.datetime :confirmed_at</span>
      <span class="hljs-comment"># t.datetime :confirmation_sent_at</span>
      <span class="hljs-comment"># t.string   :unconfirmed_email # Only if using reconfirmable</span>
      <span class="hljs-comment">## Lockable</span>
      <span class="hljs-comment"># t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts</span>
      <span class="hljs-comment"># t.string   :unlock_token # Only if unlock strategy is :email or :both</span>
      <span class="hljs-comment"># t.datetime :locked_at</span>
      <span class="hljs-comment"># 追加</span>
      t.string <span class="hljs-symbol">:name</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
      t.timestamps <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
    <span class="hljs-keyword">end</span>
    add_index <span class="hljs-symbol">:users</span>, <span class="hljs-symbol">:email</span>,                <span class="hljs-symbol">unique:</span> <span class="hljs-literal">true</span>
    add_index <span class="hljs-symbol">:users</span>, <span class="hljs-symbol">:reset_password_token</span>, <span class="hljs-symbol">unique:</span> <span class="hljs-literal">true</span>
    <span class="hljs-comment"># add_index :users, :confirmation_token,   unique: true</span>
    <span class="hljs-comment"># add_index :users, :unlock_token,         unique: true</span>
  <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span>
</code></pre>
このmigrationファイルをデータベースに反映します。 ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ rails <span class="hljs-symbol">db:</span>migrate
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-db-migrate-for-user.png" alt="rails-db-migrate-for-user" width="592" height="151" />これで、Userモデルが使えるようになりました。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-10. アクセス制限の設定</div>
<div class="l-content--detail p-lesson">
Deviseを使ってログインしていないユーザーがページを見られないようにします。
before_actionを使ってdeviseで提供されるメソッドであるauthenticate_user!メソッドがユーザーからのアクセスの最初に呼ばれるように設定します。deviseのコントローラ時に許可するストロングパラメータも設定します。
<pre><code class="hljs">app/controllers/application_controller.rb</code></pre>
を下記のように修正しましょう。
app/controllers/application_controller.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ApplicationController</span> &lt; ActionController::Base</span>
  protect_from_forgery <span class="hljs-symbol">with:</span> <span class="hljs-symbol">:exception</span>
  before_action <span class="hljs-symbol">:authenticate_user!</span>
  before_action <span class="hljs-symbol">:configure_permitted_parameters</span>, <span class="hljs-symbol">if:</span> <span class="hljs-symbol">:devise_controller?</span>
  protected
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">configure_permitted_parameters</span></span>
    devise_parameter_sanitizer.permit(<span class="hljs-symbol">:sign_up</span>) <span class="hljs-keyword">do</span> <span class="hljs-params">|user_params|</span>
      user_params.permit(<span class="hljs-symbol">:name</span>, <span class="hljs-symbol">:email</span>, <span class="hljs-symbol">:password</span>, <span class="hljs-symbol">:password_confirmation</span>)
    <span class="hljs-keyword">end</span>
    devise_parameter_sanitizer.permit(<span class="hljs-symbol">:account_update</span>) <span class="hljs-keyword">do</span> <span class="hljs-params">|user_params|</span>
      user_params.permit(<span class="hljs-symbol">:name</span>, <span class="hljs-symbol">:email</span>, <span class="hljs-symbol">:password</span>, <span class="hljs-symbol">:password_confirmation</span>, <span class="hljs-symbol">:current_password</span>)
    <span class="hljs-keyword">end</span>
  <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span>
</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-11. Bootstrapの設定</div>
<div class="l-content--detail p-lesson">
ここで表示用に使うBootstrapを設定しておきます。Bootstrapに必要なgemをGemfileの3行目に
<pre><code class="hljs java">gem <span class="hljs-string">'bootstrap-sass'</span>, <span class="hljs-string">'~&gt; 3.3.6'</span></code></pre>
を追記しましょう。
Gemfile
<pre><code class="ruby hljs">source <span class="hljs-string">'https://rubygems.org'</span>
gem <span class="hljs-string">'bootstrap-sass'</span>, <span class="hljs-string">'~&gt; 3.3.6'</span>
gem <span class="hljs-string">'devise'</span>
gem <span class="hljs-string">'devise-bootstrap-views'</span>
gem <span class="hljs-string">'devise-i18n'</span>
gem <span class="hljs-string">'devise-i18n-views'</span>
<span class="hljs-comment"># Bundle edge Rails instead: gem 'rails', github: 'rails/rails'</span>
gem <span class="hljs-string">'rails'</span>, <span class="hljs-string">'~&gt; 5.0.0'</span>, <span class="hljs-string">'&gt;= 5.0.0.1'</span>
...</code></pre>
<pre><code class="hljs sql">bundle <span class="hljs-keyword">install</span></code></pre>
コマンドでGemfileに追記したgemをインストールします。ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs sql">$ bundle <span class="hljs-keyword">install</span></code></pre>
<pre><code class="hljs">mv</code></pre>
コマンドでファイル名を変更し、application.cssの拡張子をscssにします。ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ mv app/assets/stylesheets/application.css app/assets/stylesheets/application.scss</code></pre>
※ フォルダツリーからapplication.cssを選択し、ファイル名をapplication.scssに変更していただいても同じです。
<pre><code class="hljs">app/assets/stylesheets/application.scss</code></pre>
の内容を削除し、下記のように修正します。
app/assets/stylesheets/application.scss
<pre><code class="ruby hljs">@import <span class="hljs-string">"bootstrap-sprockets"</span>;
@import <span class="hljs-string">'bootstrap'</span>;
@import <span class="hljs-string">'devise_bootstrap_views'</span>;</code></pre>
<pre><code class="hljs">app/assets/javascripts/application.js</code></pre>
の内容を削除し、下記のように修正します。
app/assets/javascripts/application.js
<pre><code class="ruby hljs">/<span class="hljs-regexp">/= require jquery
/</span><span class="hljs-regexp">/= require jquery_ujs
/</span><span class="hljs-regexp">/= require turbolinks
/</span><span class="hljs-regexp">/= require bootstrap-sprockets</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-12. i18nの設定</div>
<div class="l-content--detail p-lesson">
i18nについて：i18nとは異なる言語を表示できるようにするためのRails標準で実装されている機能です。internationalization（１８文字）が名前の由来です。国際的なアプリケーションを作るときだけでなく、一つの言語でも利用することによって以下のようなメリットがあります。
<ol>
 	<li>多くのgemは英語だがi18nを利用すれば日本語化できること。</li>
 	<li>文言を一箇所で管理できるため変更する際に便利であること。</li>
</ol>
<blockquote>参考URL:
<a href="http://railsguides.jp/i18n.html" target="_blank" rel="noopener noreferrer">http://railsguides.jp/i18n.html</a></blockquote>
i18nの設定i18nの初期設定ファイル
<pre><code class="hljs">config/initializers/locale.rb</code></pre>
を新規作成し、ファイル内に下記のように記述しましょう。
config/initializers/locale.rb
<pre><code class="ruby hljs">I18n.default_locale = <span class="hljs-symbol">:ja</span></code></pre>
その後、
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">g</span> <span class="hljs-selector-tag">devise</span><span class="hljs-selector-pseudo">:views</span><span class="hljs-selector-pseudo">:locale</span> <span class="hljs-selector-tag">ja</span></code></pre>
コマンドでDevise用の日本語ファイルを生成します。 ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails g <span class="hljs-symbol">devise:</span><span class="hljs-symbol">views:</span>locale ja</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/configlocalesdevise.views_.ja_.yml_.png" alt="configlocalesdevise-views-ja-yml" width="579" height="82" />コマンドを実行すると
<pre><code class="hljs">config/locales/devise.views.ja.yml</code></pre>
が以下の内容で自動生成されます。
config/locales/devise.views.ja.yml
<pre><code class="ruby hljs"><span class="hljs-symbol">ja:</span>
  <span class="hljs-symbol">activerecord:</span>
    <span class="hljs-symbol">attributes:</span>
      <span class="hljs-symbol">user:</span>
        <span class="hljs-symbol">current_password:</span> <span class="hljs-string">"現在のパスワード"</span>
        <span class="hljs-symbol">email:</span> <span class="hljs-string">"メールアドレス"</span>
        <span class="hljs-symbol">password:</span> <span class="hljs-string">"パスワード"</span>
        <span class="hljs-symbol">password_confirmation:</span> <span class="hljs-string">"確認用パスワード"</span>
        <span class="hljs-symbol">remember_me:</span> <span class="hljs-string">"ログインを記憶"</span>
    <span class="hljs-symbol">models:</span>
      <span class="hljs-symbol">user:</span> <span class="hljs-string">"ユーザ"</span>
  <span class="hljs-symbol">devise:</span>
    <span class="hljs-symbol">confirmations:</span>
      <span class="hljs-symbol">new:</span>
        <span class="hljs-symbol">resend_confirmation_instructions:</span> <span class="hljs-string">"アカウント確認メール再送"</span>
    <span class="hljs-symbol">mailer:</span>
      <span class="hljs-symbol">confirmation_instructions:</span>
        <span class="hljs-symbol">action:</span> <span class="hljs-string">"アカウント確認"</span>
        <span class="hljs-symbol">greeting:</span> <span class="hljs-string">"ようこそ、%{recipient}さん!"</span>
        <span class="hljs-symbol">instruction:</span> <span class="hljs-string">"次のリンクでメールアドレスの確認が完了します:"</span>
      <span class="hljs-symbol">reset_password_instructions:</span>
        <span class="hljs-symbol">action:</span> <span class="hljs-string">"パスワード変更"</span>
        <span class="hljs-symbol">greeting:</span> <span class="hljs-string">"こんにちは、%{recipient}さん!"</span>
        <span class="hljs-symbol">instruction:</span> <span class="hljs-string">"誰かがパスワードの再設定を希望しました。次のリンクでパスワードの再設定が出来ます。"</span>
        <span class="hljs-symbol">instruction_2:</span> <span class="hljs-string">"あなたが希望したのではないのなら、このメールは無視してください。"</span>
        <span class="hljs-symbol">instruction_3:</span> <span class="hljs-string">"上のリンクにアクセスして新しいパスワードを設定するまで、パスワードは変更されません。"</span>
      <span class="hljs-symbol">unlock_instructions:</span>
        <span class="hljs-symbol">action:</span> <span class="hljs-string">"アカウントのロック解除"</span>
        <span class="hljs-symbol">greeting:</span> <span class="hljs-string">"こんにちは、%{recipient}さん!"</span>
        <span class="hljs-symbol">instruction:</span> <span class="hljs-string">"アカウントのロックを解除するには下のリンクをクリックしてください。"</span>
        <span class="hljs-symbol">message:</span> <span class="hljs-string">"ログイン失敗が繰り返されたため、アカウントはロックされています。"</span>
    <span class="hljs-symbol">passwords:</span>
      <span class="hljs-symbol">edit:</span>
        <span class="hljs-symbol">change_my_password:</span> <span class="hljs-string">"パスワードを変更する"</span>
        <span class="hljs-symbol">change_your_password:</span> <span class="hljs-string">"パスワードを変更"</span>
        <span class="hljs-symbol">confirm_new_password:</span> <span class="hljs-string">"確認用新しいパスワード"</span>
        <span class="hljs-symbol">new_password:</span> <span class="hljs-string">"新しいパスワード"</span>
      <span class="hljs-symbol">new:</span>
        <span class="hljs-symbol">forgot_your_password:</span> <span class="hljs-string">"パスワードを忘れましたか?"</span>
        <span class="hljs-symbol">send_me_reset_password_instructions:</span> <span class="hljs-string">"パスワードの再設定方法を送信する"</span>
    <span class="hljs-symbol">registrations:</span>
      <span class="hljs-symbol">edit:</span>
        <span class="hljs-symbol">are_you_sure:</span> <span class="hljs-string">"本当に良いですか?"</span>
        <span class="hljs-symbol">cancel_my_account:</span> <span class="hljs-string">"アカウント削除"</span>
        <span class="hljs-symbol">currently_waiting_confirmation_for_email:</span> <span class="hljs-string">"%{email} の確認待ち"</span>
        <span class="hljs-symbol">leave_blank_if_you_don_t_want_to_change_it:</span> <span class="hljs-string">"空欄のままなら変更しません"</span>
        <span class="hljs-symbol">title:</span> <span class="hljs-string">"%{resource}編集"</span>
        <span class="hljs-symbol">unhappy:</span> <span class="hljs-string">"気に入りません"</span>
        <span class="hljs-symbol">update:</span> <span class="hljs-string">"更新"</span>
        <span class="hljs-symbol">we_need_your_current_password_to_confirm_your_changes:</span> <span class="hljs-string">"変更を反映するには現在のパスワードを入力してください"</span>
      <span class="hljs-symbol">new:</span>
        <span class="hljs-symbol">sign_up:</span> <span class="hljs-string">"アカウント登録"</span>
    <span class="hljs-symbol">sessions:</span>
      <span class="hljs-symbol">new:</span>
        <span class="hljs-symbol">sign_in:</span> <span class="hljs-string">"ログイン"</span>
    <span class="hljs-symbol">shared:</span>
      <span class="hljs-symbol">links:</span>
        <span class="hljs-symbol">back:</span> <span class="hljs-string">"戻る"</span>
        <span class="hljs-symbol">didn_t_receive_confirmation_instructions:</span> <span class="hljs-string">"アカウント確認のメールを受け取っていませんか?"</span>
        <span class="hljs-symbol">didn_t_receive_unlock_instructions:</span> <span class="hljs-string">"アカウントの凍結解除方法のメールを受け取っていませんか?"</span>
        <span class="hljs-symbol">forgot_your_password:</span> <span class="hljs-string">"パスワードを忘れましたか?"</span>
        <span class="hljs-symbol">sign_in:</span> <span class="hljs-string">"ログイン"</span>
        <span class="hljs-symbol">sign_in_with_provider:</span> <span class="hljs-string">"%{provider}でログイン"</span>
        <span class="hljs-symbol">sign_up:</span> <span class="hljs-string">"アカウント登録"</span>
    <span class="hljs-symbol">unlocks:</span>
      <span class="hljs-symbol">new:</span>
        <span class="hljs-symbol">resend_unlock_instructions:</span> <span class="hljs-string">"アカウントの凍結解除方法を再送する"</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-13. ユーザー登録・編集画面の作成</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">g</span> <span class="hljs-selector-tag">devise</span><span class="hljs-selector-pseudo">:views</span><span class="hljs-selector-pseudo">:bootstrap_templates</span></code></pre>
コマンドでUserのsignup画面を自動生成します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="hljs ruby">$ rails g <span class="hljs-symbol">devise:</span><span class="hljs-symbol">views:</span>bootstrap_templates</code></pre>
<pre><code class="hljs">app/views/devise</code></pre>
フォルダ内にファイルが自動生成されます。
<pre><code class="hljs">config/locales/devise.views.ja.yaml</code></pre>
のuser:の下に
<pre><code class="hljs java">name: <span class="hljs-string">"名前"</span></code></pre>
の記述追加します。
config/locales/devise.views.ja.yaml
<pre><code class="hljs php">ja:
  activerecord:
    attributes:
      user:
        name: <span class="hljs-string">"名前"</span>
        current_password: <span class="hljs-string">"現在のパスワード"</span>
        email: <span class="hljs-string">"メールアドレス"</span>
        password: <span class="hljs-string">"パスワード"</span>
        password_confirmation: <span class="hljs-string">"確認用パスワード"</span>
        remember_me: <span class="hljs-string">"ログインを記憶"</span>
    models:
      user: <span class="hljs-string">"ユーザ"</span>
<span class="hljs-comment"># 以下省略</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-14. フォームの編集</div>
<div class="l-content--detail p-lesson">
ユーザーの登録時に名前を入力できるようにフォームを編集します。
<pre><code class="hljs java">app/views/devise/registrations/<span class="hljs-keyword">new</span>.html.erb</code></pre>
の内容を下記のように修正してください。
<pre><code class="ruby hljs">&lt;%= bootstrap_devise_error_messages! %&gt;
&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">panel</span> <span class="hljs-title">panel</span>-<span class="hljs-title">default</span> <span class="hljs-title">devise</span>-<span class="hljs-title">bs</span>"&gt;</span>
  &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">panel</span>-<span class="hljs-title">heading</span>"&gt;</span>
    &lt;h4&gt;&lt;%= t(<span class="hljs-string">'.sign_up'</span>, <span class="hljs-symbol">:default</span> =&gt; <span class="hljs-string">"Sign up"</span>) %&gt;&lt;<span class="hljs-regexp">/h4&gt;
  &lt;/div</span>&gt;
  &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">panel</span>-<span class="hljs-title">body</span>"&gt;</span>
    &lt;%= form_for(resource, <span class="hljs-symbol">:as</span> =&gt; resource_name, <span class="hljs-symbol">:url</span> =&gt; registration_path(resource_name), <span class="hljs-symbol">html:</span> { <span class="hljs-symbol">role:</span> <span class="hljs-string">"form"</span> }) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;
      &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">form</span>-<span class="hljs-title">group</span>"&gt;</span>
        &lt;%= f.label <span class="hljs-symbol">:name</span> %&gt;
        &lt;%= f.text_field <span class="hljs-symbol">:name</span>, <span class="hljs-symbol">autofocus:</span> <span class="hljs-literal">true</span>, <span class="hljs-class"><span class="hljs-keyword">class</span>: "<span class="hljs-title">form</span>-<span class="hljs-title">control</span>" %&gt;</span>
      &lt;<span class="hljs-regexp">/div&gt;
      &lt;div class="form-group"&gt;
        &lt;%= f.label :email %&gt;
        &lt;%= f.email_field :email, class: "form-control" %&gt;
      &lt;/div</span>&gt;
      &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">form</span>-<span class="hljs-title">group</span>"&gt;</span>
        &lt;%= f.label <span class="hljs-symbol">:password</span> %&gt;
        &lt;%= f.password_field <span class="hljs-symbol">:password</span>, <span class="hljs-class"><span class="hljs-keyword">class</span>: "<span class="hljs-title">form</span>-<span class="hljs-title">control</span>" %&gt;</span>
      &lt;<span class="hljs-regexp">/div&gt;
      &lt;div class="form-group"&gt;
        &lt;%= f.label :password_confirmation %&gt;
        &lt;%= f.password_field :password_confirmation, class: "form-control" %&gt;
      &lt;/div</span>&gt;
      &lt;%= f.submit t(<span class="hljs-string">'.sign_up'</span>, <span class="hljs-symbol">:default</span> =&gt; <span class="hljs-string">"Sign up"</span>), <span class="hljs-class"><span class="hljs-keyword">class</span>: "<span class="hljs-title">btn</span> <span class="hljs-title">btn</span>-<span class="hljs-title">primary</span>" %&gt;</span>
    &lt;% <span class="hljs-keyword">end</span> %&gt;
  &lt;<span class="hljs-regexp">/div&gt;
&lt;/div</span>&gt;
&lt;%= render <span class="hljs-string">"devise/shared/links"</span> %&gt;</code></pre>
編集時にも同じように名前を入力できるようにフォームを編集します。
<pre><code class="hljs">app/views/devise/registrations/edit.html.erb</code></pre>
の内容を下記のように修正してください。
app/views/devise/registrations/edit.html.erb
<pre><code class="ruby hljs">&lt;%= bootstrap_devise_error_messages! %&gt;
&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">panel</span> <span class="hljs-title">panel</span>-<span class="hljs-title">default</span> <span class="hljs-title">devise</span>-<span class="hljs-title">bs</span>"&gt;</span>
  &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">panel</span>-<span class="hljs-title">heading</span>"&gt;</span>
    &lt;h4&gt;&lt;%= t(<span class="hljs-string">'.title'</span>, <span class="hljs-symbol">:resource</span> =&gt; resource_class.model_name.human , <span class="hljs-symbol">:default</span> =&gt; <span class="hljs-string">"Edit <span class="hljs-subst">#{resource_name.to_s.humanize}</span>"</span>) %&gt;&lt;<span class="hljs-regexp">/h4&gt;
  &lt;/div</span>&gt;
  &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">panel</span>-<span class="hljs-title">body</span>"&gt;</span>
    &lt;%= form_for(resource, <span class="hljs-symbol">:as</span> =&gt; resource_name, <span class="hljs-symbol">:url</span> =&gt; registration_path(resource_name), <span class="hljs-symbol">:html</span> =&gt; { <span class="hljs-symbol">:method</span> =&gt; <span class="hljs-symbol">:put</span> }) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;
      &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">form</span>-<span class="hljs-title">group</span>"&gt;</span>
        &lt;%= f.label <span class="hljs-symbol">:name</span> %&gt;
        &lt;%= f.text_field <span class="hljs-symbol">:name</span>, <span class="hljs-symbol">autofocus:</span> <span class="hljs-literal">true</span>, <span class="hljs-class"><span class="hljs-keyword">class</span>: "<span class="hljs-title">form</span>-<span class="hljs-title">control</span>" %&gt;</span>
      &lt;<span class="hljs-regexp">/div&gt;
      &lt;div class="form-group"&gt;
        &lt;%= f.label :email %&gt;
        &lt;%= f.email_field :email, class: "form-control" %&gt;
      &lt;/div</span>&gt;
      &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">form</span>-<span class="hljs-title">group</span>"&gt;</span>
        &lt;%= f.label <span class="hljs-symbol">:password</span> %&gt; &lt;i&gt;(&lt;%= t(<span class="hljs-string">'.leave_blank_if_you_don_t_want_to_change_it'</span>, <span class="hljs-symbol">:default</span> =&gt; <span class="hljs-string">"leave blank if you don't want to change it"</span>) %&gt;)&lt;<span class="hljs-regexp">/i&gt;
        &lt;%= f.password_field :password, :autocomplete =&gt; "off", class: "form-control" %&gt;
      &lt;/div</span>&gt;
      &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">form</span>-<span class="hljs-title">group</span>"&gt;</span>
        &lt;%= f.label <span class="hljs-symbol">:password_confirmation</span> %&gt;
        &lt;%= f.password_field <span class="hljs-symbol">:password_confirmation</span>, <span class="hljs-class"><span class="hljs-keyword">class</span>: "<span class="hljs-title">form</span>-<span class="hljs-title">control</span>"  %&gt;</span>
      &lt;<span class="hljs-regexp">/div&gt;
      &lt;div class="form-group"&gt;
        &lt;%= f.label :current_password %&gt; &lt;i&gt;(&lt;%= t('.we_need_your_current_password_to_confirm_your_changes', :default =&gt; 'we need your current password to confirm your changes') %&gt;)&lt;/i</span>&gt;
        &lt;%= f.password_field <span class="hljs-symbol">:current_password</span>, <span class="hljs-class"><span class="hljs-keyword">class</span>: "<span class="hljs-title">form</span>-<span class="hljs-title">control</span>" %&gt;</span>
      &lt;<span class="hljs-regexp">/div&gt;
      &lt;%= f.submit t('.update', :default =&gt; "Update"), class: "btn btn-primary" %&gt;
    &lt;% end %&gt;
  &lt;/div</span>&gt;
&lt;<span class="hljs-regexp">/div&gt;
&lt;p&gt;&lt;%= t('.unhappy', :default =&gt; 'Unhappy') %&gt;? &lt;%= link_to t('.cancel_my_account', :default =&gt; "Cancel my account"), registration_path(resource_name), :data =&gt; { :confirm =&gt; t('.are_you_sure', :default =&gt; "Are you sure?") }, :method =&gt; :delete %&gt;.&lt;/p</span>&gt;
&lt;%= link_to t(<span class="hljs-string">'.back'</span>, <span class="hljs-symbol">:default</span> =&gt; <span class="hljs-string">'Back'</span>), <span class="hljs-symbol">:back</span> %&gt;</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-15. レイアウトの編集</div>
<div class="l-content--detail p-lesson">
レイアウトを編集しましょう。
<pre><code class="hljs">app/views/layouts/application.html.erb</code></pre>
の内容を下記のように修正してください。
app/views/layouts/application.html.erb
<pre><code class="ruby hljs">&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt;BookShelf&lt;<span class="hljs-regexp">/title&gt;
 &lt;%= csrf_meta_tags %&gt;
 &lt;%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %&gt;
 &lt;%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %&gt;
 &lt;/head</span>&gt;
 &lt;body&gt;
 &lt;nav <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span> <span class="hljs-title">navbar</span>-<span class="hljs-title">inverse</span> <span class="hljs-title">navbar</span>-<span class="hljs-title">static</span>-<span class="hljs-title">top</span>"&gt;</span>
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">container</span>-<span class="hljs-title">fluid</span>"&gt;</span>
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span>-<span class="hljs-title">header</span>"&gt;</span>
 &lt;% <span class="hljs-keyword">if</span> user_signed_in? %&gt;
 &lt;button type=<span class="hljs-string">"button"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span>-<span class="hljs-title">toggle</span> <span class="hljs-title">collapsed</span>" <span class="hljs-title">data</span>-<span class="hljs-title">toggle</span>="<span class="hljs-title">collapse</span>" <span class="hljs-title">data</span>-<span class="hljs-title">target</span>="<span class="hljs-comment">#navbar-collapse"&gt;</span></span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;<span class="hljs-regexp">/button&gt;
 &lt;% end %&gt;
 &lt;a class="navbar-brand" href="/</span><span class="hljs-string">"&gt;BookShelf&lt;/a&gt;
 &lt;/div&gt;
 &lt;% if user_signed_in? %&gt;
 &lt;div class="</span>collapse navbar-collapse<span class="hljs-string">" id="</span>navbar-collapse<span class="hljs-string">"&gt;
 &lt;ul class="</span>nav navbar-nav<span class="hljs-string">"&gt;
 &lt;li&gt;&lt;%= link_to '本棚', '/' %&gt;&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;%= link_to 'レビュー', '/' %&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;ul class="</span>nav navbar-nav navbar-right<span class="hljs-string">"&gt;
 &lt;li class="</span>dropdown<span class="hljs-string">"&gt;
 &lt;a href="</span><span class="hljs-comment">#" class="dropdown-toggle" data-toggle="dropdown" role="button"&gt;アカウント &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt;</span>
 &lt;ul <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">dropdown</span>-<span class="hljs-title">menu</span>"&gt;</span>
 &lt;li&gt;&lt;%= link_to <span class="hljs-string">'設定'</span>, edit_user_registration_path %&gt;&lt;<span class="hljs-regexp">/li&gt;
 &lt;li role="separator" class="divider"&gt;&lt;/li</span>&gt;
 &lt;li&gt;&lt;%= link_to <span class="hljs-string">'ログアウト'</span>, destroy_user_session_path, <span class="hljs-symbol">method:</span> <span class="hljs-symbol">:delete</span> %&gt;&lt;<span class="hljs-regexp">/li&gt;
 &lt;/ul</span>&gt;
 &lt;<span class="hljs-regexp">/li&gt;
 &lt;/ul</span>&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;% end %&gt;
 &lt;/div</span>&gt;
 &lt;<span class="hljs-regexp">/nav&gt;
 &lt;div class="container"&gt;
 &lt;% if notice.present? %&gt;
 &lt;div class="alert alert-dismissable alert-success"&gt;
 &lt;button type="button" class="close" data-dismiss="alert"&gt;&amp;times;&lt;/button</span>&gt;
 &lt;p&gt;&lt;%= notice %&gt;&lt;<span class="hljs-regexp">/p&gt;
 &lt;/div</span>&gt;
 &lt;% <span class="hljs-keyword">end</span> %&gt;
 &lt;% <span class="hljs-keyword">if</span> alert.present? %&gt;
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">alert</span> <span class="hljs-title">alert</span>-<span class="hljs-title">dismissable</span> <span class="hljs-title">alert</span>-<span class="hljs-title">danger</span>"&gt;</span>
 &lt;button type=<span class="hljs-string">"button"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">close</span>" <span class="hljs-title">data</span>-<span class="hljs-title">dismiss</span>="<span class="hljs-title">alert</span>"&gt;&amp;<span class="hljs-title">times</span>;</span>&lt;<span class="hljs-regexp">/button&gt;
 &lt;p&gt;&lt;%= alert %&gt;&lt;/p</span>&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;% end %&gt;
 &lt;%= yield %&gt;
 &lt;/div</span>&gt;
 &lt;<span class="hljs-regexp">/body&gt;
&lt;/html</span>&gt;</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-16. 書籍登録ページの作成</div>
<div class="l-content--detail p-lesson">
いよいよ書籍登録ページを作成していきます。
<pre><code class="hljs">rails g scaffold</code></pre>
コマンドでBook関連のファイルを作成しましょう。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails g scaffold Book <span class="hljs-symbol">title:</span>string <span class="hljs-symbol">author:</span>string</code></pre>
Bookモデルの内容を
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span></code></pre>
コマンドでデータベースに反映します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span>migrate
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-db-migrate-books.png" alt="rails-db-migrate-books" width="583" height="117" />書籍関連ページをトップ画面に設定ます。
confing/routes.rbファイルに
<pre><code class="hljs java">root <span class="hljs-string">'books#index'</span></code></pre>
の記述を追記してください。
config/routes.rb
<pre><code class="ruby hljs">Rails.application.routes.draw <span class="hljs-keyword">do</span>
 root <span class="hljs-string">'books#index'</span>
 resources <span class="hljs-symbol">:books</span>
 devise_for <span class="hljs-symbol">:users</span>
<span class="hljs-keyword">end</span></code></pre>
これで、書籍画面が表示されるようになりました。Railsサーバーを起動して表示を確認しましょう。
<pre><code class="ruby hljs">$ rails s -p $PORT -b $IP</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-17. SimpleFormの導入</div>
<div class="l-content--detail p-lesson">
SimpleFormを導入し、書籍の登録フォームを作成します。
<pre><code class="hljs">Gemfile</code></pre>
に下記のように
<pre><code class="hljs java">gem <span class="hljs-string">'simple_form'</span></code></pre>
を追記しましょう。
Gemfile
<pre><code class="ruby hljs">source <span class="hljs-string">'https://rubygems.org'</span>
gem <span class="hljs-string">'simple_form'</span>
gem <span class="hljs-string">'bootstrap-sass'</span>, <span class="hljs-string">'~&gt; 3.3.6'</span>
gem <span class="hljs-string">'devise'</span>
gem <span class="hljs-string">'devise-bootstrap-views'</span>
gem <span class="hljs-string">'devise-i18n'</span>
gem <span class="hljs-string">'devise-i18n-views'</span>
<span class="hljs-comment"># Bundle edge Rails instead: gem 'rails', github: 'rails/rails'</span>
gem <span class="hljs-string">'rails'</span>, <span class="hljs-string">'~&gt; 5.0.0'</span>, <span class="hljs-string">'&gt;= 5.0.0.1'</span>
<span class="hljs-comment"># Use sqlite3 as the database for Active Record</span>
gem <span class="hljs-string">'sqlite3'</span>
<span class="hljs-comment"># Use Puma as the app server</span>
gem <span class="hljs-string">'puma'</span>, <span class="hljs-string">'~&gt; 3.0'</span>
&lt;strong&gt;<span class="hljs-comment">#以下、省略&lt;/strong&gt;</span>
</code></pre>
追記後、
<pre><code class="hljs sql">bundle <span class="hljs-keyword">install</span></code></pre>
コマンドで
<pre><code class="hljs">Gemfile</code></pre>
に追記したgemをインストールします。 ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ bundle install</code></pre>
SimpleFormを生成します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails g <span class="hljs-symbol">simple_form:</span>install --bootstrap</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-g-simple_form-install-1024x308.png" alt="rails-g-simple_form-install" width="840" height="253" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-18. SimpleFormを使った画面の修正</div>
<div class="l-content--detail p-lesson">
SimpleFormについて：RailsにはFormヘルパーというビューにformタグやinputタグなどを書き出すためのメソッドが用意されています。SimpleFormはそのヘルパーを拡張し、より使いやすくするためのgemです。
<blockquote>参考URL:
<a href="https://github.com/plataformatec/simple_form" target="_blank" rel="noopener noreferrer">https://github.com/plataformatec/simple_form</a></blockquote>
インストールしたSimpleFormを使って書籍画面を修正していきます。
<pre><code class="hljs">app/views/books/_form.html.erb</code></pre>
ファイルを下記のように修正しましょう。
app/views/books/_form.html.erb
<pre><code class="ruby hljs">&lt;%= simple_form_for(book) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;
  &lt;%= f.input <span class="hljs-symbol">:title</span> %&gt;
  &lt;%= f.input <span class="hljs-symbol">:author</span> %&gt;
  &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">actions</span>"&gt;</span>
    &lt;%= f.button <span class="hljs-symbol">:submit</span>, <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn-primary'</span> %&gt;
  &lt;<span class="hljs-regexp">/div&gt;
&lt;% end %&gt;</span></code></pre>
次に書籍一覧画面を修正していきます。
<pre><code class="hljs">app/views/books/index.html.erb</code></pre>
ファイルを下記のように修正しましょう。
app/views/books/index.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;Books&lt;<span class="hljs-regexp">/h1&gt;
&lt;table class="table table-striped"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th</span>&gt;
      &lt;th&gt;Author&lt;<span class="hljs-regexp">/th&gt;
      &lt;th&gt;&amp;nbsp;&lt;/th</span>&gt;
    &lt;<span class="hljs-regexp">/tr&gt;
  &lt;/thead</span>&gt;
  &lt;tbody&gt;
    &lt;% @books.each <span class="hljs-keyword">do</span> <span class="hljs-params">|book|</span> %&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;%= book.title %&gt;&lt;<span class="hljs-regexp">/td&gt;
        &lt;td&gt;&lt;%= book.author %&gt;&lt;/td</span>&gt;
        &lt;td <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">text</span>-<span class="hljs-title">right</span>"&gt;</span>
          &lt;%= link_to <span class="hljs-string">'Edit'</span>, edit_book_path(book), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-link btn-xs'</span> %&gt;
          &lt;%= link_to <span class="hljs-string">'Delete'</span>, book_path(book), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-xs btn-danger'</span>,
                          <span class="hljs-symbol">:method</span> =&gt; <span class="hljs-symbol">:delete</span>, <span class="hljs-symbol">:data</span> =&gt; { <span class="hljs-symbol">:confirm</span> =&gt; <span class="hljs-string">'Are you sure?'</span> } %&gt;
        &lt;<span class="hljs-regexp">/td&gt;
      &lt;/tr</span>&gt;
    &lt;% <span class="hljs-keyword">end</span> %&gt;
  &lt;<span class="hljs-regexp">/tbody&gt;
&lt;/table</span>&gt;
&lt;%= link_to <span class="hljs-string">'New Book'</span>, new_book_path, <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-primary'</span> %&gt;</code></pre>
Railsサーバーを起動して表示を確認しましょう。
<pre><code class="hljs ruby">$ rails s -p $PORT -b $IP</code></pre>
New BookボタンでNew Bookページを表示すると以下のようになります。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/New-Book-page-1024x375.png" alt="new-book-page" width="840" height="308" />Book情報登録後は、以下のようなメッセージ画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Created-book-page-1024x259.png" alt="created-book-page" width="840" height="212" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-19. バリデーションとエラー表示</div>
<div class="l-content--detail p-lesson">
Bookモデルにバリデーションを設定します。
<pre><code class="hljs">app/models/book.rb</code></pre>
ファイルを下記のように修正します。
app/models/book.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Book</span> &lt; ApplicationRecord</span>
  validates <span class="hljs-symbol">:title</span>, <span class="hljs-symbol">presence:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">255</span> }
  validates <span class="hljs-symbol">:author</span>, <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">255</span> }
<span class="hljs-keyword">end</span></code></pre>
エラーメッセージ用のlocaleを設定します。
<pre><code class="hljs">config/locale/ja.yml</code></pre>
ファイルを下記のように修正します。（ja.ymlファイルが存在しない場合は、ja.ymlファイルを新しく作成し、下記のように入力して下さい。）
config/locale/ja.yml
<pre><code class="ruby hljs"><span class="hljs-symbol">ja:</span>
  <span class="hljs-symbol">activerecord:</span>
    <span class="hljs-symbol">attributes:</span>
      <span class="hljs-symbol">book:</span>
        <span class="hljs-symbol">title:</span> <span class="hljs-string">"タイトル"</span>
        <span class="hljs-symbol">author:</span> <span class="hljs-string">"著者"</span>
    <span class="hljs-symbol">errors:</span>
      <span class="hljs-symbol">models:</span>
        <span class="hljs-symbol">book:</span>
          <span class="hljs-symbol">attributes:</span>
            <span class="hljs-symbol">title:</span>
              <span class="hljs-symbol">blank:</span> <span class="hljs-string">"タイトルは必ず入力してください"</span>
              <span class="hljs-symbol">too_long:</span> <span class="hljs-string">"タイトルが長すぎます"</span>
            <span class="hljs-symbol">author:</span>
              <span class="hljs-symbol">too_long:</span> <span class="hljs-string">"著者の文字数が大きすぎます"</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-20. シードを作成</div>
<div class="l-content--detail p-lesson">
書籍の情報を
<pre><code class="hljs">db/seeds/books.yml</code></pre>
ファイルとして作成します。ファイルは以下のリンクからダウンロードし、
<blockquote><a href="https://s3-ap-northeast-1.amazonaws.com/graspy-production/lessonMaterials/download/books.yml">こちらクリックしダウンロード</a></blockquote>
dbフォルダ配下にseedsフォルダを作成し、 books.ymlをseedsフォルダの下に配置してください。
books.yml
db/seeds/books.yml
<pre><code class="ruby hljs"><span class="hljs-symbol">books:</span>
  -
    <span class="hljs-symbol">title:</span> <span class="hljs-string">"達人プログラマー―システム開発の職人から名匠への道"</span>
    <span class="hljs-symbol">author:</span> <span class="hljs-string">"アンドリュー ハント, デビッド トーマス"</span></code></pre>
※ ダウンロードしたファイルにはおよそ100冊の書籍情報が事前に記述されています。
以下、books.ymlの配置例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/books.yml_-1024x638.png" alt="books-yml" width="840" height="523" />次にこの書籍情報ファイルを読み込み、データベースに登録するために登録処理ファイルを作成します。db/seeds/books.seeds.rbファイルを新規作成し、下記のように記述してください。
db/seeds/books.seeds.rb
<pre><code class="ruby hljs">file = Psych.load_file(<span class="hljs-string">"db/seeds/books.yml"</span>)
file[<span class="hljs-string">"books"</span>].each <span class="hljs-keyword">do</span> <span class="hljs-params">|params|</span>
  Book.find_or_create_by(params)
<span class="hljs-keyword">end</span></code></pre>
次にdb/seeds.rbファイルを下記のように修正します。
db/seeds.rb
<pre><code class="ruby hljs">Dir[File.join(Rails.root, <span class="hljs-string">'db'</span>, <span class="hljs-string">'seeds'</span>, <span class="hljs-string">'*.seeds.rb'</span>)].sort.each { <span class="hljs-params">|seed|</span> load seed }</code></pre>
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/seeds.rb_.png" alt="seeds-rb" width="849" height="513" />
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:seed</span></code></pre>
コマンドでシードファイルを実行し、書籍情報をデータベースに登録します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span>seed</code></pre>
Railsサーバーを起動して表示を確認しましょう。
<pre><code class="ruby hljs">$ rails s -p $PORT -b $IP</code></pre>
以下のようにデータが表示されていればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Books%E3%83%86%E3%82%99%E3%83%BC%E3%82%BF%E6%8A%95%E5%85%A5%E5%BE%8C-1024x520.png" alt="books%e3%83%86%e3%82%99%e3%83%bc%e3%82%bf%e6%8a%95%e5%85%a5%e5%be%8c" width="840" height="427" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-21. 【課題１】Kaminariを使ってページネーションを実装しよう。</div>
<div class="l-content--detail p-lesson">
Kaminariについて：KaminariとはRailsでページネーションを簡単に実装するためのGemです。ページネーションとはレコードの数が多い時に一定数ごとにページを切り分け、ページ数や「前へ」「次へ」などのUIを提供する機能のことを言います。
【条件】
<ol>
 	<li>Kaminariを使ってページネーションを実装すること。</li>
 	<li>ページネーションのデザインはBootstrapを用いたものにすること。</li>
</ol>
<blockquote>ヒント：Kaminariの利用方法はgithubページに書かれています。
<a href="https://github.com/amatsuda/kaminari" target="_blank" rel="noopener noreferrer">https://github.com/amatsuda/kaminari</a></blockquote>
以下のようにページネーションが表示されていればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/pagination-1024x507.png" alt="pagination" width="840" height="416" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-22. Reviewの作成</div>
<div class="l-content--detail p-lesson">
Reveiw機能を追加していきます。
<pre><code class="hljs">rails g scaffold</code></pre>
コマンドでRevie関連のファイルを作成します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails g scaffold Review <span class="hljs-symbol">user:</span>references <span class="hljs-symbol">book:</span>references <span class="hljs-symbol">description:</span>text</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-g-scafold-review.png" alt="rails-g-scafold-review" width="914" height="582" />作成された
<pre><code class="hljs">db/migrate/20xxXXXXXXXXXX_create_reviews.rb</code></pre>
ファイルを下記のように修正しましょう。
db/migrate/20xxXXXXXXXXXX_create_reviews.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CreateReviews</span> &lt; ActiveRecord::Migration[5.0]</span>
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span>
    create_table <span class="hljs-symbol">:reviews</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span>
      t.references <span class="hljs-symbol">:user</span>, <span class="hljs-symbol">foreign_key:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">index:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
      t.references <span class="hljs-symbol">:book</span>, <span class="hljs-symbol">foreign_key:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">index:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
      t.text <span class="hljs-symbol">:description</span>
      t.timestamps
    <span class="hljs-keyword">end</span>
  <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span></code></pre>
Reviewモデルの内容を
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span></code></pre>
コマンドでデータベースに反映します。 ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span>migrate
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-db-migrate-review.png" alt="rails-db-migrate-review" width="593" height="116" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-23. ルーティングの修正</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">config/routes.rb</code></pre>
ファイルを下記のように修正しましょう。
config/routes.rb
<pre><code class="ruby hljs">Rails.application.routes.draw <span class="hljs-keyword">do</span>
  resources <span class="hljs-symbol">:reviews</span>, <span class="hljs-symbol">only:</span> [<span class="hljs-symbol">:index</span>, <span class="hljs-symbol">:destroy</span>]
  root <span class="hljs-string">'books#index'</span>
  resources <span class="hljs-symbol">:books</span> <span class="hljs-keyword">do</span>
    resources <span class="hljs-symbol">:reviews</span>, <span class="hljs-symbol">except:</span> [<span class="hljs-symbol">:index</span>, <span class="hljs-symbol">:destroy</span>]
  <span class="hljs-keyword">end</span>
  devise_for <span class="hljs-symbol">:users</span>
<span class="hljs-keyword">end</span></code></pre>
メニューにレビュー画面へのリンクを追加するために
<pre><code class="hljs">app/views/layouts/application.html.erb</code></pre>
ファイルに
<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span> <span class="hljs-attr">link_to</span> 'レビュー', <span class="hljs-attr">reviews_path</span> %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre>
のように修正します。
app/views/layouts/application.html.erb
<pre><code class="ruby hljs">&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt;BookShelf&lt;<span class="hljs-regexp">/title&gt;
 &lt;%= csrf_meta_tags %&gt;
 &lt;%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %&gt;
 &lt;%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %&gt;
 &lt;/head</span>&gt;
 &lt;body&gt;
 &lt;nav <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span> <span class="hljs-title">navbar</span>-<span class="hljs-title">inverse</span> <span class="hljs-title">navbar</span>-<span class="hljs-title">static</span>-<span class="hljs-title">top</span>"&gt;</span>
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">container</span>-<span class="hljs-title">fluid</span>"&gt;</span>
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span>-<span class="hljs-title">header</span>"&gt;</span>
 &lt;% <span class="hljs-keyword">if</span> user_signed_in? %&gt;
 &lt;button type=<span class="hljs-string">"button"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span>-<span class="hljs-title">toggle</span> <span class="hljs-title">collapsed</span>" <span class="hljs-title">data</span>-<span class="hljs-title">toggle</span>="<span class="hljs-title">collapse</span>" <span class="hljs-title">data</span>-<span class="hljs-title">target</span>="<span class="hljs-comment">#navbar-collapse"&gt;</span></span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;<span class="hljs-regexp">/button&gt;
 &lt;% end %&gt;
 &lt;a class="navbar-brand" href="/</span><span class="hljs-string">"&gt;BookShelf&lt;/a&gt;
 &lt;/div&gt;
 &lt;% if user_signed_in? %&gt;
 &lt;div class="</span>collapse navbar-collapse<span class="hljs-string">" id="</span>navbar-collapse<span class="hljs-string">"&gt;
 &lt;ul class="</span>nav navbar-nav<span class="hljs-string">"&gt;
 &lt;li&gt;&lt;%= link_to '本棚', '/' %&gt;&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;%= link_to 'レビュー', reviews_path %&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;ul class="</span>nav navbar-nav navbar-right<span class="hljs-string">"&gt;
 &lt;li class="</span>dropdown<span class="hljs-string">"&gt;
 &lt;a href="</span><span class="hljs-comment">#" class="dropdown-toggle" data-toggle="dropdown" role="button"&gt;アカウント &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt;</span>
 &lt;ul <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">dropdown</span>-<span class="hljs-title">menu</span>"&gt;</span>
 &lt;li&gt;&lt;%= link_to <span class="hljs-string">'設定'</span>, edit_user_registration_path %&gt;&lt;<span class="hljs-regexp">/li&gt;
 &lt;li role="separator" class="divider"&gt;&lt;/li</span>&gt;
 &lt;li&gt;&lt;%= link_to <span class="hljs-string">'ログアウト'</span>, destroy_user_session_path, <span class="hljs-symbol">method:</span> <span class="hljs-symbol">:delete</span> %&gt;&lt;<span class="hljs-regexp">/li&gt;
 &lt;/ul</span>&gt;
 &lt;<span class="hljs-regexp">/li&gt;
 &lt;/ul</span>&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;% end %&gt;
 &lt;/div</span>&gt;
 &lt;<span class="hljs-regexp">/nav&gt;
 &lt;div class="container"&gt;
 &lt;% if notice.present? %&gt;
 &lt;div class="alert alert-dismissable alert-success"&gt;
 &lt;button type="button" class="close" data-dismiss="alert"&gt;&amp;times;&lt;/button</span>&gt;
 &lt;p&gt;&lt;%= notice %&gt;&lt;<span class="hljs-regexp">/p&gt;
 &lt;/div</span>&gt;
 &lt;% <span class="hljs-keyword">end</span> %&gt;
 &lt;% <span class="hljs-keyword">if</span> alert.present? %&gt;
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">alert</span> <span class="hljs-title">alert</span>-<span class="hljs-title">dismissable</span> <span class="hljs-title">alert</span>-<span class="hljs-title">danger</span>"&gt;</span>
 &lt;button type=<span class="hljs-string">"button"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">close</span>" <span class="hljs-title">data</span>-<span class="hljs-title">dismiss</span>="<span class="hljs-title">alert</span>"&gt;&amp;<span class="hljs-title">times</span>;</span>&lt;<span class="hljs-regexp">/button&gt;
 &lt;p&gt;&lt;%= alert %&gt;&lt;/p</span>&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;% end %&gt;
 &lt;%= yield %&gt;
 &lt;/div</span>&gt;
 &lt;<span class="hljs-regexp">/body&gt;
&lt;/html</span>&gt;</code></pre>
次に、書籍一覧から新規レビュー画面へのリンクを設定します。
<pre><code class="hljs">app/views/books/index.html.erb</code></pre>
ファイルでBookの編集リンクの上に新規Reviewへのリンクを追加します。
app/views/books/index.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;Books&lt;<span class="hljs-regexp">/h1&gt;
&lt;table class="table table-striped"&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Title&lt;/th</span>&gt;
 &lt;th&gt;Author&lt;<span class="hljs-regexp">/th&gt;
 &lt;th&gt;&amp;nbsp;&lt;/th</span>&gt;
 &lt;<span class="hljs-regexp">/tr&gt;
 &lt;/thead</span>&gt;
 &lt;tbody&gt;
 &lt;% @books.each <span class="hljs-keyword">do</span> <span class="hljs-params">|book|</span> %&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;%= book.title %&gt;&lt;<span class="hljs-regexp">/td&gt;
 &lt;td&gt;&lt;%= book.author %&gt;&lt;/td</span>&gt;
 &lt;td <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">text</span>-<span class="hljs-title">right</span>"&gt;</span>
 &lt;%= link_to <span class="hljs-string">'Review'</span>, new_book_review_path(book), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-link btn-xs'</span> %&gt;
 &lt;%= link_to <span class="hljs-string">'Edit'</span>, edit_book_path(book), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-link btn-xs'</span> %&gt;
 &lt;%= link_to <span class="hljs-string">'Delete'</span>, book_path(book), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-xs btn-danger'</span>,
 <span class="hljs-symbol">:method</span> =&gt; <span class="hljs-symbol">:delete</span>, <span class="hljs-symbol">:data</span> =&gt; { <span class="hljs-symbol">:confirm</span> =&gt; <span class="hljs-string">'Are you sure?'</span> } %&gt;
 &lt;<span class="hljs-regexp">/td&gt;
 &lt;/tr</span>&gt;
 &lt;% <span class="hljs-keyword">end</span> %&gt;
 &lt;<span class="hljs-regexp">/tbody&gt;
&lt;/table</span>&gt;
&lt;%= paginate @books %&gt;
&lt;%= link_to <span class="hljs-string">'New Book'</span>, new_book_path, <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-primary'</span> %&gt;</code></pre>
Railsサーバーを起動して表示を確認しましょう。
<pre><code class="ruby hljs">$ rails s -p $PORT -b $IP</code></pre>
以下のようにReviewリンクが表示されればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/books-index-with-review-link-1024x526.png" alt="books-index-with-review-link" width="840" height="431" />Reviewリンクをクリックすると以下の画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/new-review-1024x410.png" alt="new-review" width="840" height="336" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-24. ReviewControllerの編集</div>
<div class="l-content--detail p-lesson">
ReviewControllerを編集します。
<pre><code class="hljs">app/controllers/reviews_controller.rb</code></pre>
ファイルにbefore_actionを追加します。before_actionで実行するset_bookメソッドはprivateの下に記述します。ストロングパラメーターの設定を変更するためにreview_paramsメソッドも修正します。
また、ルーティングを変更したので、create, updateメソッド内にある成功時のredirect_toの第一引数を以下のように変更します。
<pre><code class="ruby hljs">format.html { redirect_to [@book, @review], <span class="hljs-symbol">notice:</span> <span class="hljs-string">'Review was successfully created.'</span> }</code></pre>
<pre><code class="ruby hljs">format.html { redirect_to [@book, @review], <span class="hljs-symbol">notice:</span> <span class="hljs-string">'Review was successfully updated.'</span> }</code></pre>
app/controllers/reviews_controller.rb
<pre><code class="ruby hljs">
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReviewsController</span> &lt; ApplicationController</span>
before_action <span class="hljs-symbol">:set_review</span>, <span class="hljs-symbol">only:</span> [<span class="hljs-symbol">:show</span>, <span class="hljs-symbol">:edit</span>, <span class="hljs-symbol">:update</span>, <span class="hljs-symbol">:destroy</span>]
before_action <span class="hljs-symbol">:set_book</span>, <span class="hljs-symbol">only:</span> [<span class="hljs-symbol">:show</span>, <span class="hljs-symbol">:new</span>, <span class="hljs-symbol">:create</span>, <span class="hljs-symbol">:edit</span>, <span class="hljs-symbol">:update</span>]
 <span class="hljs-comment"># GET /reviews</span>
 <span class="hljs-comment"># GET /reviews.json</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span>
 @reviews = Review.page params[<span class="hljs-symbol">:page</span>]
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># GET /reviews/1</span>
 <span class="hljs-comment"># GET /reviews/1.json</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show</span></span>
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># GET /reviews/new</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">new</span></span>
  @review = Review.new
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># GET /reviews/1/edit</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">edit</span></span>
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># POST /reviews</span>
 <span class="hljs-comment"># POST /reviews.json</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create</span></span>
   @review = Review.new(review_params)
   respond_to <span class="hljs-keyword">do</span> <span class="hljs-params">|format|</span>
   <span class="hljs-keyword">if</span> @review.save
    format.html { redirect_to [@book, @review], <span class="hljs-symbol">notice:</span> <span class="hljs-string">'Review was successfully created.'</span> }
    format.json { render <span class="hljs-symbol">:show</span>, <span class="hljs-symbol">status:</span> <span class="hljs-symbol">:created</span>, <span class="hljs-symbol">location:</span> @review }
  <span class="hljs-keyword">else</span>
    format.html { render <span class="hljs-symbol">:new</span> }
 format.json { render <span class="hljs-symbol">json:</span> @review.errors, <span class="hljs-symbol">status:</span> <span class="hljs-symbol">:unprocessable_entity</span> }
 <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># PATCH/PUT /reviews/1</span>
 <span class="hljs-comment"># PATCH/PUT /reviews/1.json</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update</span></span>
 respond_to <span class="hljs-keyword">do</span> <span class="hljs-params">|format|</span>
 <span class="hljs-keyword">if</span> @review.update(review_params)
 format.html { redirect_to [@book, @review], <span class="hljs-symbol">notice:</span> <span class="hljs-string">'Review was successfully updated.'</span> }
 format.json { render <span class="hljs-symbol">:show</span>, <span class="hljs-symbol">status:</span> <span class="hljs-symbol">:ok</span>, <span class="hljs-symbol">location:</span> @review }
 <span class="hljs-keyword">else</span>
 format.html { render <span class="hljs-symbol">:edit</span> }
 format.json { render <span class="hljs-symbol">json:</span> @review.errors, <span class="hljs-symbol">status:</span> <span class="hljs-symbol">:unprocessable_entity</span> }
 <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># DELETE /reviews/1</span>
 <span class="hljs-comment"># DELETE /reviews/1.json</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">destroy</span></span>
 @review.destroy
 respond_to <span class="hljs-keyword">do</span> <span class="hljs-params">|format|</span>
 format.html { redirect_to reviews_url, <span class="hljs-symbol">notice:</span> <span class="hljs-string">'Review was successfully destroyed.'</span> }
 format.json { head <span class="hljs-symbol">:no_content</span> }
 <span class="hljs-keyword">end</span>
 <span class="hljs-keyword">end</span>
 private
 <span class="hljs-comment"># Use callbacks to share common setup or constraints between actions.</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">set_review</span></span>
 @review = Review.find(params[<span class="hljs-symbol">:id</span>])
 <span class="hljs-keyword">end</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">set_book</span></span>
 @book = Book.find(params[<span class="hljs-symbol">:book_id</span>])
 <span class="hljs-keyword">end</span>
 <span class="hljs-comment"># Never trust parameters from the scary internet, only allow the white list through.</span>
 <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">review_params</span></span>
 permitted_review_params = params.<span class="hljs-keyword">require</span>(<span class="hljs-symbol">:review</span>).permit(<span class="hljs-symbol">:description</span>)
 permitted_review_params[<span class="hljs-symbol">:user</span>] = current_user
 permitted_review_params[<span class="hljs-symbol">:book</span>] = @book
 permitted_review_params
 <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-25. Review画面の編集</div>
<div class="l-content--detail p-lesson">
Review画面を編集します。
<pre><code class="hljs">app/views/reviews/_form.html.erb</code></pre>
ファイルを下記のように編集してください。
app/views/reviews/_form.html.erb
<pre><code class="ruby hljs">&lt;h2&gt;&lt;%= <span class="hljs-string">"<span class="hljs-subst">#{@book.title}</span>についてのレビュー"</span> %&gt;&lt;<span class="hljs-regexp">/h2&gt;
&lt;%= simple_form_for([@book, @review]) do |f| %&gt;
  &lt;%= f.input :description %&gt;
  &lt;div class="form-actions"&gt;
    &lt;%= f.button :submit, :class =&gt; 'btn-primary' %&gt;
  &lt;/div</span>&gt;
&lt;% <span class="hljs-keyword">end</span> %&gt;
</code></pre>
Review一覧画面の
<pre><code class="hljs">app/views/reviews/index.html.erb</code></pre>
ファイルを下記のように編集してください。
app/views/reviews/index.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;Reviews&lt;<span class="hljs-regexp">/h1&gt;
&lt;table class="table table-striped"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;User&lt;/th</span>&gt;
      &lt;th&gt;Book&lt;<span class="hljs-regexp">/th&gt;
      &lt;th&gt;Description&lt;/th</span>&gt;
      &lt;th &gt;&lt;<span class="hljs-regexp">/th&gt;
    &lt;/tr</span>&gt;
  &lt;<span class="hljs-regexp">/thead&gt;
  &lt;tbody&gt;
    &lt;% @reviews.each do |review| %&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;%= review.user.id %&gt;&lt;/td</span>&gt;
        &lt;td&gt;&lt;%= review.book.title %&gt;&lt;<span class="hljs-regexp">/td&gt;
        &lt;td&gt;
          &lt;%= review.description.truncate(30) %&gt;
          &lt;% if review.description.length &gt; 30 %&gt;
            &lt;%= link_to '続きを読む', book_review_path(review.book, review), :class =&gt; 'btn btn-link' %&gt;
          &lt;% end %&gt;
        &lt;/td</span>&gt;
        &lt;td <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">text</span>-<span class="hljs-title">right</span>"&gt;</span>
          &lt;%= link_to <span class="hljs-string">'Edit'</span>, edit_book_review_path(review.book, review), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-default btn-xs'</span> %&gt;
          &lt;%= link_to <span class="hljs-string">'Destroy'</span>, review_path(review), <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn btn-xs btn-danger'</span>,
                      <span class="hljs-symbol">:method</span> =&gt; <span class="hljs-symbol">:delete</span>, <span class="hljs-symbol">:data</span> =&gt; <span class="hljs-string">'Are you sure?'</span> %&gt;
        &lt;<span class="hljs-regexp">/td&gt;
      &lt;/tr</span>&gt;
    &lt;% <span class="hljs-keyword">end</span> %&gt;
  &lt;<span class="hljs-regexp">/tbody&gt;
&lt;/table</span>&gt;
&lt;%= paginate @reviews %&gt;
</code></pre>
Review画面の
<pre><code class="hljs">app/views/reviews/show.html.erb</code></pre>
ファイルを下記のように編集しましょう。
app/views/reviews/show.html.erbを編集
<pre><code class="ruby hljs">&lt;h2&gt;&lt;%= @review.book.title %&gt;&lt;<span class="hljs-regexp">/h2&gt;
&lt;p&gt;&lt;%= @review.user.name %&gt;: &lt;/p</span>&gt;
&lt;blockquote&gt;&lt;%= @review.description %&gt;&lt;<span class="hljs-regexp">/blockquote&gt;
&lt;%= link_to 'Edit', edit_book_review_path(@review.book, @review) %&gt; |
&lt;%= link_to 'Back', reviews_path %&gt;
</span></code></pre>
Review編集画面の
<pre><code class="hljs">app/views/reviews/edit.html.erb</code></pre>
ファイルを下記のように編集しましょう。
app/views/reviews/edit.html.erbを編集
<pre><code class="ruby hljs">&lt;h1&gt;Editing Review&lt;<span class="hljs-regexp">/h1&gt;
&lt;%= render 'form', review: @review %&gt;
&lt;%= link_to 'Show', book_review_path(@review.book, @review) %&gt; |
&lt;%= link_to 'Back', reviews_path %&gt;</span></code></pre>
Railsサーバーを起動して表示を確認しましょう。
<pre><code class="ruby hljs">$ rails s -p $PORT -b $IP</code></pre>
以下の本棚ページから「達人プログラマー―システム開発の職人から名匠への道」のReviewリンクをクリックして以下の画面が表示されればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Review-new-page-1024x368.png" alt="review-new-page" width="840" height="302" />Descriptionにレビュー内容を入力してCreate reviewボタンをクリックすると以下のメッセージ画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Review-create-page-1024x302.png" alt="review-create-page" width="840" height="248" />ここでbackリンク、またはメニューからレビューをクリックすると以下のレビュー一覧画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Review-index-page-1024x234.png" alt="review-index-page" width="840" height="192" />レビュー一覧画面のEditボタンをクリックするとレビュー編集画面が表示されます。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/Review-edit-page-1024x381.png" alt="review-edit-page" width="840" height="313" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-26. Categoryの作成</div>
<div class="l-content--detail p-lesson">
Reveiw機能を追加していきます。
<pre><code class="hljs">rails g model</code></pre>
コマンドでCategoryモデルを作成します。さらに、
<pre><code class="hljs">rails g migration</code></pre>
コマンドでBookモデルとCategoryモデルのアソシエーションを作成します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails g model Category <span class="hljs-symbol">name:</span>string
$ rails g migration CreateBooksCategories <span class="hljs-symbol">category:</span>references <span class="hljs-symbol">book:</span>references</code></pre>
作成された
<pre><code class="hljs">db/migrate/20xxXXXXXXXXXX_create_books_categories.rb</code></pre>
ファイルを下記のように修正しましょう。
db/migrate/20xxXXXXXXXXXX_create_books_categories.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CreateBooksCategories</span> &lt; ActiveRecord::Migration</span>
  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span>
    create_table <span class="hljs-symbol">:books_categories</span>, <span class="hljs-symbol">id:</span> <span class="hljs-literal">false</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span>
      t.references <span class="hljs-symbol">:category</span>, <span class="hljs-symbol">foreign_key:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">index:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
      t.references <span class="hljs-symbol">:book</span>, <span class="hljs-symbol">foreign_key:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">index:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span>
    <span class="hljs-keyword">end</span>
  <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span></code></pre>
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:migrate</span></code></pre>
コマンドでデータベースに反映します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span>migrate
</code></pre>
以下、実行例です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rake-db-migrate-category.png" alt="rake-db-migrate-category" width="582" height="192" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-27. アソシエーションの設定</div>
<div class="l-content--detail p-lesson">
CategoryモデルとBookモデルのアソシエーションを設定するために
<pre><code class="hljs">app/models/category.erb</code></pre>
ファイルを下記のように編集しましょう。
app/models/category.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Category</span> &lt; ApplicationRecord</span>
  has_and_belongs_to_many <span class="hljs-symbol">:books</span>
<span class="hljs-keyword">end</span></code></pre>
<pre><code class="hljs">app/models/book.erb</code></pre>
ファイルも同様に下記のように編集しましょう。
app/models/book.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Book</span> &lt; ApplicationRecord</span>
  validates <span class="hljs-symbol">:title</span>, <span class="hljs-symbol">presence:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">255</span> }
  validates <span class="hljs-symbol">:author</span>, <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">255</span> }
  has_and_belongs_to_many <span class="hljs-symbol">:categories</span>
<span class="hljs-keyword">end</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-28. Category用シードを作成</div>
<div class="l-content--detail p-lesson">
カテゴリーの情報を
<pre><code class="hljs">db/seeds/categories.yml</code></pre>
ファイルとして作成します。ファイルは以下のリンクからダウンロードし、
<blockquote><a href="https://s3-ap-northeast-1.amazonaws.com/graspy-production/lessonMaterials/download/categories.yml">こちらクリックしダウンロード</a></blockquote>
<pre><code class="hljs">db/seeds/</code></pre>
フォルダの下に配置してください。
categories.yml
db/seeds/categories.yml
<pre><code class="ruby hljs"><span class="hljs-symbol">categories:</span>
  - <span class="hljs-symbol">name:</span> <span class="hljs-string">"文学・評論"</span>
...</code></pre>
※ ダウンロードしたファイルにはおよそ30カテゴリーが事前に記述されています。
次にこのカテゴリ情報ファイルを読み込み、データベースに登録するために登録処理ファイルを作成します。
db/seeds/categories.seeds.rbファイルを新規作成し、下記のように記述してください。
db/seeds/categories.seeds.rb
<pre><code class="ruby hljs">file = Psych.load_file(<span class="hljs-string">"db/seeds/categories.yml"</span>)
file[<span class="hljs-string">"categories"</span>].each <span class="hljs-keyword">do</span> <span class="hljs-params">|params|</span>
  Category.find_or_create_by(params)
<span class="hljs-keyword">end</span></code></pre>
次にdb/seeds.rbファイルを下記の
<pre><code class="hljs css"><span class="hljs-selector-tag">rails</span> <span class="hljs-selector-tag">db</span><span class="hljs-selector-pseudo">:seed</span></code></pre>
コマンドでシードファイルを実行し、カテゴリー情報をデータベースに登録します。
ターミナルで下記のコマンドを実行してください。
<pre><code class="ruby hljs">$ rails <span class="hljs-symbol">db:</span>seed</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-29. 書籍フォームの修正</div>
<div class="l-content--detail p-lesson">
書籍フォームでカテゴリーを選択できるようにするために
<pre><code class="hljs">app/views/books/_form.html.erb</code></pre>
ファイルを下記のように編集しましょう。
app/views/books/_form.html.erb
<pre><code class="ruby hljs">&lt;%= simple_form_for(book) <span class="hljs-keyword">do</span> <span class="hljs-params">|f|</span> %&gt;
  &lt;%= f.input <span class="hljs-symbol">:title</span> %&gt;
  &lt;%= f.input <span class="hljs-symbol">:author</span> %&gt;
  &lt;%= f.association <span class="hljs-symbol">:categories</span>, <span class="hljs-symbol">as:</span> <span class="hljs-symbol">:select</span>, <span class="hljs-symbol">multiple:</span> <span class="hljs-literal">true</span> %&gt;
  &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">actions</span>"&gt;</span>
    &lt;%= f.button <span class="hljs-symbol">:submit</span>, <span class="hljs-symbol">:class</span> =&gt; <span class="hljs-string">'btn-primary'</span> %&gt;
  &lt;<span class="hljs-regexp">/div&gt;
&lt;% end %&gt;</span></code></pre>
選択したカテゴリーを登録するためにBooksControllerのストロングパラメーターにcategory_idsを追加します。に
<pre><code class="hljs">app/controllers/books_controller.rb</code></pre>
ファイルのbook_paramsメソッドを下記のように修正しましょう。
app/controllers/books_controller.rb
<pre><code class="ruby hljs">...
<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">book_params</span></span>
  params.<span class="hljs-keyword">require</span>(<span class="hljs-symbol">:book</span>).permit(<span class="hljs-symbol">:title</span>, <span class="hljs-symbol">:author</span>, <span class="hljs-symbol">category_ids:</span> [])
<span class="hljs-keyword">end</span>
...</code></pre>
Railsサーバーを起動して表示を確認しましょう。
<pre><code class="ruby hljs">$ rails s -p $PORT -b $IP</code></pre>
本棚ページでNew Bookボタンをクリックします。New BookページでCategoriesの内容が以下のように表示されていればOKです。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/new-book-page-with-category-300x124.png" alt="new-book-page-with-category" width="300" height="124" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-30. マイ本棚</div>
<div class="l-content--detail p-lesson">
自分がレビューした本のみを一覧表示するマイ本棚を作成します。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-31. ルーティングの修正</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">config/routes.rb</code></pre>
ファイルに新しいルーティング情報
<pre><code class="hljs java">get <span class="hljs-string">'my_books'</span>, to: <span class="hljs-string">'books#my_books'</span></code></pre>
を下記のように追加しましょう。
config/routes.rb
<pre><code class="ruby hljs">Rails.application.routes.draw <span class="hljs-keyword">do</span>
 resources <span class="hljs-symbol">:reviews</span>, <span class="hljs-symbol">only:</span> [<span class="hljs-symbol">:index</span>, <span class="hljs-symbol">:destroy</span>]
 root <span class="hljs-string">'books#index'</span>
 resources <span class="hljs-symbol">:books</span> <span class="hljs-keyword">do</span>
 resources <span class="hljs-symbol">:reviews</span>, <span class="hljs-symbol">except:</span> [<span class="hljs-symbol">:index</span>, <span class="hljs-symbol">:destroy</span>]
 <span class="hljs-keyword">end</span>
 devise_for <span class="hljs-symbol">:users</span>
 get <span class="hljs-string">'my_books'</span>, <span class="hljs-symbol">to:</span> <span class="hljs-string">'books#my_books'</span>
<span class="hljs-keyword">end</span></code></pre>
UserモデルにBookモデルとのアソシエーションを設定します。
app/models/user.rb
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span>
  devise <span class="hljs-symbol">:database_authenticatable</span>, <span class="hljs-symbol">:registerable</span>,
         <span class="hljs-symbol">:recoverable</span>, <span class="hljs-symbol">:rememberable</span>, <span class="hljs-symbol">:trackable</span>, <span class="hljs-symbol">:validatable</span>
  has_many <span class="hljs-symbol">:reviews</span>
  has_many <span class="hljs-symbol">:books</span>, <span class="hljs-symbol">through:</span> <span class="hljs-symbol">:reviews</span>
<span class="hljs-keyword">end</span></code></pre>
BooksControllerのprivateの上にmy_booksアクションを追加し、マイ本棚画面のパラメーターを設定します。
app/controllers/books_controller.rb
<pre><code class="ruby hljs">...
<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_books</span></span>
  @books = current_user.books.page params[<span class="hljs-symbol">:page</span>]
<span class="hljs-keyword">end</span>
private
...</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-32. マイ本棚画面の作成</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">app/views/books/my_books.html.erb</code></pre>
ファイルを新規作成し、下記のように記述します。
app/views/books/my_books.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;My Books&lt;<span class="hljs-regexp">/h1&gt;
&lt;%= render 'table', books: @books %&gt;
&lt;%= paginate @books %&gt;</span></code></pre>
以下、参考にしてみてください。<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/my_books.html.erb_.png" alt="my_books-html-erb" width="672" height="529" />
<pre><code class="hljs">app/views/books/_books.html.erb</code></pre>
ファイルを新規作成し、index.html.erbのtableタグを切り出します。@tableはtableに修正します。
app/views/books/_books.html.erb
<pre><code class="ruby hljs">&lt;table <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">table</span> <span class="hljs-title">table</span>-<span class="hljs-title">striped</span>"&gt;</span>
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;<span class="hljs-regexp">/th&gt;
      &lt;th&gt;Author&lt;/th</span>&gt;
      &lt;th&gt;&amp;nbsp;&lt;<span class="hljs-regexp">/th&gt;
    &lt;/tr</span>&gt;
  &lt;<span class="hljs-regexp">/thead&gt;
  &lt;tbody&gt;
    &lt;% books.each do |book| %&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;%= book.title %&gt;&lt;/td</span>&gt;
        &lt;td&gt;&lt;%= book.author %&gt;&lt;<span class="hljs-regexp">/td&gt;
        &lt;td class="text-right"&gt;
          &lt;%= link_to 'Review', new_book_review_path(book), :class =&gt; 'btn btn-link btn-xs' %&gt;
          &lt;%= link_to 'Edit', edit_book_path(book), :class =&gt; 'btn btn-link btn-xs' %&gt;
          &lt;%= link_to 'Delete', book_path(book), :class =&gt; 'btn btn-xs btn-danger',
                      :method =&gt; :delete, :data =&gt; { :confirm =&gt; 'Are you sure?' } %&gt;
        &lt;/td</span>&gt;
      &lt;<span class="hljs-regexp">/tr&gt;
    &lt;% end %&gt;
  &lt;/tbody</span>&gt;
&lt;<span class="hljs-regexp">/table&gt;</span></code></pre>
そして、
<pre><code class="hljs">app/views/books/my_books.html.erb</code></pre>
ファイルを下記のように修正します。
<pre><code class="ruby hljs">&lt;h1&gt;Books&lt;<span class="hljs-regexp">/h1&gt;
&lt;%= render 'table', books: @books %&gt;
&lt;%= paginate @books %&gt;
&lt;%= link_to 'New Book', new_book_path, :class =&gt; 'btn btn-primary' %&gt;</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-33. リンクの設定</div>
<div class="l-content--detail p-lesson">
<pre><code class="hljs">app/views/layouts/application.html.erb</code></pre>
ファイルにマイ本棚ページへのリンク
<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span> <span class="hljs-attr">link_to</span> 'マイ本棚', <span class="hljs-attr">my_books_path</span> %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre>
を下記のように追記します。
app/views/layouts/application.html.erb
<pre><code class="ruby hljs">&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt;BookShelf&lt;<span class="hljs-regexp">/title&gt;
 &lt;%= csrf_meta_tags %&gt;
 &lt;%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %&gt;
 &lt;%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %&gt;
 &lt;/head</span>&gt;
 &lt;body&gt;
 &lt;nav <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span> <span class="hljs-title">navbar</span>-<span class="hljs-title">inverse</span> <span class="hljs-title">navbar</span>-<span class="hljs-title">static</span>-<span class="hljs-title">top</span>"&gt;</span>
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">container</span>-<span class="hljs-title">fluid</span>"&gt;</span>
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span>-<span class="hljs-title">header</span>"&gt;</span>
 &lt;% <span class="hljs-keyword">if</span> user_signed_in? %&gt;
 &lt;button type=<span class="hljs-string">"button"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">navbar</span>-<span class="hljs-title">toggle</span> <span class="hljs-title">collapsed</span>" <span class="hljs-title">data</span>-<span class="hljs-title">toggle</span>="<span class="hljs-title">collapse</span>" <span class="hljs-title">data</span>-<span class="hljs-title">target</span>="<span class="hljs-comment">#navbar-collapse"&gt;</span></span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">icon</span>-<span class="hljs-title">bar</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;</span>
 &lt;<span class="hljs-regexp">/button&gt;
 &lt;% end %&gt;
 &lt;a class="navbar-brand" href="/</span><span class="hljs-string">"&gt;BookShelf&lt;/a&gt;
 &lt;/div&gt;
 &lt;% if user_signed_in? %&gt;
 &lt;div class="</span>collapse navbar-collapse<span class="hljs-string">" id="</span>navbar-collapse<span class="hljs-string">"&gt;
 &lt;ul class="</span>nav navbar-nav<span class="hljs-string">"&gt;
 &lt;li&gt;&lt;%= link_to '本棚', '/' %&gt;&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;%= link_to 'マイ本棚', my_books_path %&gt;&lt;/li&gt;
 &lt;li&gt;&lt;%= link_to 'レビュー', reviews_path %&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;ul class="</span>nav navbar-nav navbar-right<span class="hljs-string">"&gt;
 &lt;li class="</span>dropdown<span class="hljs-string">"&gt;
 &lt;a href="</span><span class="hljs-comment">#" class="dropdown-toggle" data-toggle="dropdown" role="button"&gt;アカウント &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt;</span>
 &lt;ul <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">dropdown</span>-<span class="hljs-title">menu</span>"&gt;</span>
 &lt;li&gt;&lt;%= link_to <span class="hljs-string">'設定'</span>, edit_user_registration_path %&gt;&lt;<span class="hljs-regexp">/li&gt;
 &lt;li role="separator" class="divider"&gt;&lt;/li</span>&gt;
 &lt;li&gt;&lt;%= link_to <span class="hljs-string">'ログアウト'</span>, destroy_user_session_path, <span class="hljs-symbol">method:</span> <span class="hljs-symbol">:delete</span> %&gt;&lt;<span class="hljs-regexp">/li&gt;
 &lt;/ul</span>&gt;
 &lt;<span class="hljs-regexp">/li&gt;
 &lt;/ul</span>&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;% end %&gt;
 &lt;/div</span>&gt;
 &lt;<span class="hljs-regexp">/nav&gt;
 &lt;div class="container"&gt;
 &lt;% if notice.present? %&gt;
 &lt;div class="alert alert-dismissable alert-success"&gt;
 &lt;button type="button" class="close" data-dismiss="alert"&gt;&amp;times;&lt;/button</span>&gt;
 &lt;p&gt;&lt;%= notice %&gt;&lt;<span class="hljs-regexp">/p&gt;
 &lt;/div</span>&gt;
 &lt;% <span class="hljs-keyword">end</span> %&gt;
 &lt;% <span class="hljs-keyword">if</span> alert.present? %&gt;
 &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">alert</span> <span class="hljs-title">alert</span>-<span class="hljs-title">dismissable</span> <span class="hljs-title">alert</span>-<span class="hljs-title">danger</span>"&gt;</span>
 &lt;button type=<span class="hljs-string">"button"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">close</span>" <span class="hljs-title">data</span>-<span class="hljs-title">dismiss</span>="<span class="hljs-title">alert</span>"&gt;&amp;<span class="hljs-title">times</span>;</span>&lt;<span class="hljs-regexp">/button&gt;
 &lt;p&gt;&lt;%= alert %&gt;&lt;/p</span>&gt;
 &lt;<span class="hljs-regexp">/div&gt;
 &lt;% end %&gt;
 &lt;%= yield %&gt;
 &lt;/div</span>&gt;
 &lt;<span class="hljs-regexp">/body&gt;
&lt;/html</span>&gt;</code></pre>
Railsサーバーを起動して表示を確認しましょう。
<pre><code class="ruby hljs">$ rails s -p $PORT -b $IP</code></pre>
メニューにマイ本棚が追加され、マイ本棚ページに以下のように自分がレビューした本が表示されていれば成功です。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/my-book-page-1024x248.png" alt="my-book-page" width="840" height="203" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-34. 検索機能</div>
<div class="l-content--detail p-lesson">
本の検索が行えるように機能を追加します。
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-35. 検索するためのUIの追加</div>
<div class="l-content--detail p-lesson">
ビューにキーワードを入力し、送信するUI（ユーザーインターフェイス）を追加します。
views/books/index.html.erb
<pre><code class="ruby hljs">&lt;h1&gt;Books&lt;<span class="hljs-regexp">/h1&gt;
&lt;form action="&lt;%= books_path %&gt;" method="get" class="form-inline"&gt;
  &lt;input class="form-control" type="text" name="s_title" value="&lt;%= request[:s_title] %&gt;"&gt;
  &lt;button class="btn btn-default" type="submit"&gt;検索&lt;/button</span>&gt;
&lt;<span class="hljs-regexp">/form&gt;
&lt;%= render 'table', books: @books %&gt;
&lt;%= paginate @books %&gt;
&lt;%= link_to 'New Book', new_book_path, :class =&gt; 'btn btn-primary' %&gt;</span></code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-36. 検索機能専用のモジュールを作成する</div>
<div class="l-content--detail p-lesson">
models/concerns/search_book.rbを作成し、下記のように編集しましょう。
<pre><code class="ruby hljs">
<span class="hljs-class"><span class="hljs-keyword">module</span> <span class="hljs-title">SearchBook</span></span>
  extend ActiveSupport::Concern
  included <span class="hljs-keyword">do</span>
    scope <span class="hljs-symbol">:search_title</span>, lambda { <span class="hljs-params">|keyword|</span>
      table = Book.arel_table
      condition = table[<span class="hljs-symbol">:title</span>].matches(<span class="hljs-string">"%<span class="hljs-subst">#{keyword}</span>%"</span>)
      where(condition)
    }
    scope <span class="hljs-symbol">:search_category</span>, lambda { <span class="hljs-params">|category_id|</span>
      table = Category.arel_table
      condition = table[<span class="hljs-symbol">:id</span>].eq(category_id)
      where(condition)
    }
    scope <span class="hljs-symbol">:search</span>, lambda { <span class="hljs-params">|s|</span>
      r = <span class="hljs-keyword">self</span>
      r = r.search_title(s[<span class="hljs-symbol">:s_title</span>]) <span class="hljs-keyword">if</span> s[<span class="hljs-symbol">:s_title</span>].present?
      r = r.joins(<span class="hljs-symbol">:categories</span>).search_category(s[<span class="hljs-symbol">:s_category</span>]) <span class="hljs-keyword">if</span> s[<span class="hljs-symbol">:s_category</span>].present?
      <span class="hljs-keyword">return</span> r <span class="hljs-keyword">if</span> r != <span class="hljs-keyword">self</span>
      where({})
    }
  <span class="hljs-keyword">end</span>
<span class="hljs-keyword">end</span>
</code></pre>
モジュールとActiveSupport::Concernについて：
モデルに機能を追加していくとモデルが肥大化してわかりづらくなります。そこで一部の機能を切り分けるためにモジュールを作成し、それをモデル側でincludeすることによって、コードに簡潔さを保つことができます。Railsのモデルの一部をモジュールに切り分ける場合、ActiveRecordの機能を使って拡張する必要がありますが、その機能をモジュール側でも使いやすくするために用意されているのがActiveSupport::Concernです。
included do ~ endの内部ではモデルの中に書くのと同じように記述することができます。
<blockquote>参考URL:
<a href="http://api.rubyonrails.org/classes/ActiveSupport/Concern.html" target="_blank" rel="noopener noreferrer">http://api.rubyonrails.org/classes/ActiveSupport/Concern.html</a></blockquote>
scopeについて：
ここでいうscopeとはモデルのメソッドを指します。主にモデルがデータベースにアクセスするときの条件を追加するために、モデルにクラスメソッドを動的に追加するために使われます。scopeを理解するにはメソッドチェーンをまず理解しなければなりません。よく使うwhereメソッドもメソッドチェーンが可能です。例えば where(name: 'john').where(email: 'example@examle.com') のようにwhereの結果に対し、さらにwhereを呼ぶことが可能です。つまり条件をscopeでまとめておいて、必要な時に必要な条件を複数繋げることができます。
<blockquote>参考URL:
<a href="http://railsguides.jp/active_record_querying.html#%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97" target="_blank" rel="noopener noreferrer">http://railsguides.jp/active_record_querying.html#%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97</a></blockquote>
arel_tableについて：
モデルがデータベースにアクセスする際に、内部的にはArel（アレル）というライブラリを使っています。モデルの機能として公開されているメソッドの他に、内部で使用されているArelを直接利用することによって、コードをより簡潔に利用することができる場合があります。ArelはRails5.0ではプライベートライブラリですので直接使わない方が良いという意見もありますが、特に禁止されている訳ではありません。また5.xではパブリックライブラリになることが予定されています。モデルにはarel_tableというメソッドが用意されており、呼び出すことでArelを直接使うことができます。
<blockquote>参考URL:
<a href="http://www.rubydoc.info/github/rails/arel" target="_blank" rel="noopener noreferrer">http://www.rubydoc.info/github/rails/arel</a></blockquote>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-37. モデルにモジュールをincludeする</div>
<div class="l-content--detail p-lesson">
models/book.rbにモジュールをincludeする記述を追加しましょう。
<pre><code class="ruby hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Book</span> &lt; ApplicationRecord</span>
  <span class="hljs-keyword">include</span> SearchBook
  validates <span class="hljs-symbol">:title</span>, <span class="hljs-symbol">presence:</span> <span class="hljs-literal">true</span>, <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">255</span> }
  validates <span class="hljs-symbol">:author</span>, <span class="hljs-symbol">length:</span> { <span class="hljs-symbol">maximum:</span> <span class="hljs-number">255</span> }
  has_and_belongs_to_many <span class="hljs-symbol">:categories</span>
<span class="hljs-keyword">end</span>
</code></pre>
ここまでできたらきちんと機能するかどうかターミナルでコンソールを起動し、動作確認をしましょう。
<pre><code class="ruby hljs">rails c
<span class="hljs-meta">irb(main):001:0&gt;</span> Book.search(<span class="hljs-symbol">s_title:</span> <span class="hljs-string">'Rails'</span>)
Book Load (<span class="hljs-number">0</span>.<span class="hljs-number">4</span>ms)  SELECT <span class="hljs-string">"books"</span>.* FROM <span class="hljs-string">"books"</span> WHERE (<span class="hljs-string">"books"</span>.<span class="hljs-string">"title"</span> LIKE <span class="hljs-string">'%Rails%'</span>)
=&gt; #&lt;ActiveRecord::Relation [#&lt;Book id: 87, title: "RailsによるアジャイルWebアプリケーション開発 第4版", author: "Sam Ruby, Dave Thomas, David Heinemeier Hansson", created_at: "2016-10-21 01:09:30", updated_at: "2016-10-21 01:09:30"&gt;]&gt;</code></pre>
このように検索結果が表示されれば成功です。なんらかのエラーが起きた時はコードを編集してください。新しいコードをコンソールに反映させるにはreload!コマンドを実行してコードを読み直す必要があります。
<pre><code class="ruby hljs"><span class="hljs-meta">irb(main):001:0&gt;</span> reload!
Reloading...
=&gt; true
<span class="hljs-meta">irb(main):002:0&gt;</span>
</code></pre>
</div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-38. コントローラーを編集して、ビューとモデルを結びつける</div>
<div class="l-content--detail p-lesson">
controllers/books_controller.rbのindexアクションを編集しましょう。
※課題１で実装した内容によって、コードが一部違う可能性があります。
<pre><code class="ruby hljs">  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span>
    @books = Book.page params[<span class="hljs-symbol">:page</span>]
    @books = @books.search(<span class="hljs-symbol">s_title:</span> params[<span class="hljs-symbol">:s_title</span>], <span class="hljs-symbol">s_category:</span> params[<span class="hljs-symbol">:s_category</span>]) <span class="hljs-keyword">if</span> params[<span class="hljs-symbol">:s_title</span>].present? <span class="hljs-params">||</span> params[<span class="hljs-symbol">:s_category</span>].present?
  <span class="hljs-keyword">end</span></code></pre>
ブラウザでbooks/にアクセスし、検索機能が動作するのを確認しましょう。
<img src="https://writing.itprocollege.com/wp-content/uploads/2016/11/rails-3.37-1024x518.png" alt="rails-3-37" width="840" height="425" /></div>
<div class="c-course-learn"><a class="c-course-learn__button"><i class="material-icons">check_box_outline_blank</i>習得したのでクリック</a></div>
<div class="c-course-learn__share">
<p class="c-course-learn__share__txt">進捗率シェアでポイントゲット！（1日1回）</p>
<ul class="c-share-buttons__list c-share-buttons__list--small">
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
 	<li class="c-share-buttons__list__item"></li>
</ul>
</div>
</div>
<div class="l-content--detail p-lesson">
<div>4-39. 【最終課題】検索機能を拡張しよう！</div>
<div class="l-content--detail p-lesson">
条件１：キーワードの他にカテゴリでも検索できるように追加すること。
条件２：scopeを追加して実装すること。
ヒント１：カテゴリを選択できるようにするselectタグはselect_tagとoptions_for_selectメソッドを使うと簡単です。
ヒント２：BookモデルにとってCategoryモデルは、booksテーブルがbooks_categoriesテーブルを通してcategoriesテーブルと結びついている関係にあります。そのため検索にはjoinsメソッドを使います。
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2412</wp:post_id>
		<wp:post_date><![CDATA[2019-03-15 01:05:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 16:05:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-2412]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:154:"https://writing.itprocollege.com/wp-content/uploads/2016/11/%E6%9C%AC%E6%A3%9A%E5%AE%8C%E6%88%90%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B7%E3%82%99-1024x543.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>移住いっぽ@都留 で学んだこと</title>
		<link>https://tech.blog.uribou.me/yi-zhu-itupo-du-liu/</link>
		<pubDate>Fri, 18 Dec 2015 03:29:21 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/yi-zhu-itupo-du-liu/</guid>
		<description></description>
		<content:encoded><![CDATA[移住後すぐ、自宅のDIYから始めたという<a href="http://www.earth-c.info/">かとうさんち</a>訪問に加え、お米の収穫体験、都留に移住した先輩方や行政の方のお話を聞けるとあって、<a href="http://kokucheese.com/event/index/320277/">移住いっぽ〜都留の「暮らし」を訪ねる2日間〜</a>に参加しました。当初は妻と娘、家族総出で訪問の予定でしたが、第二子をお腹に抱えたまま遠出するのが時期的に怖くなってきたということで、実家に残して行きました… ゴメン。
<hr />
<img src="https://farm6.staticflickr.com/5660/21579155498_c6f54ed6ca_z_d.jpg" alt="TEFさん所有の田んぼ" />
移住いっぽのスケジュールは以下のように盛り沢山。日程全て消化する頃には皆疲労困憊といった様子でしたが、他の移住説明会にはない、具体的なイメージが湧く構成でした。
<ol>
<li>かとうさんちの暮らしを拝見、ビジョンを知る</li>
<li>稲刈り体験</li>
<li>都留名所巡り</li>
<li>シェアハウスはのひろ邸にて歓迎会</li>
<li>先輩移住者の移住に至る経緯と暮らしを拝見</li>
<li>都留市職員の方から行政サポート内容の紹介</li>
</ol>
中でも強く印象に残っているのは以下３つ。
<ul>
<li>かとうさんが実践する循環型の暮らし</li>
<li>先輩移住者の一人、山田さんが移住したキッカケ</li>
<li>先輩移住者の一人、梅崎さんが運営する風と土の自然学校</li>
</ul>
<hr />
<h1>かとうさんが実践する循環型の暮らし</h1>
<img src="https://farm1.staticflickr.com/671/21578193968_405eb27670_z_d.jpg" alt="家畜小屋全景" />
初対面のかとうさんの印象は、少年のような目と心を持ち続けている人、といった感じ。
山を自ら切り拓き、ログハウスをDIYした後、そこを拠点に今度は家族で住む家をリノベーションしたという話だけで圧倒されましたが… その根底にあるのは、循環型で衣食住全てを実践することでした。
羊からは毛を服を頂き、服を作る。<br />
鶏からは卵と肉を頂く。<br />
馬は、化石燃料を使わずに田畑を耕す。
家畜の餌は、米を脱穀した後に残る藁や野菜クズで賄い、その糞は肥料として食に繋げる。
最初からこの形を思い描いていたわけではなく、家を作ったら食も、食の次は衣を… とステップアップして今に至るとのこと。ステップアップし過ぎでしょと内心ツッコミつつ、突き詰めるとこの形になるのだろうと思いました。
<h1>先輩移住者の一人、山田さんが移住したキッカケ</h1>
<img src="https://farm1.staticflickr.com/653/21579167748_35b7e04192_z_d.jpg" alt="DIY真っ最中の縁側" />
週末だけ都留で生活する、二拠点移住を実践する山田さん。匝瑳市で一年間、田んぼに通い、価値観が変わったのが移住のキッカケだそうです。詳しくは<a href="http://noutenkinakurashi.blog.fc2.com/blog-entry-1.html">ブログ、農天気な暮らしはじめました</a>に書かれていますが、ここで高坂さんの話を聞けるとは思わなかったので、ちょっと衝撃でした。
写真は、山田さん宅でリノベーション中の縁側です。現役を退いた大工さんの手助けを貰いながら、少しづつ完成に近づいているそうです。周囲は街灯もなく、夜は満天の星空を眺めることができるそうで。この縁側で星を眺めるのが夢だそうです。
<h1>先輩移住者の一人、梅崎さんが運営する風と土の自然学校</h1>
<img src="https://farm1.staticflickr.com/732/21579013890_344700b815_z_d.jpg" alt="風と土の自然学校" />
とにかく気さくで面白い梅沢さん。参加できなかった嫁が絶対好きなキャラなので、是非知り合いになって欲しいなぁ。<a href="http://ameblo.jp/noteki-kurashi/">風と土の自然学校</a>という、子供も大人も勉強になるイベントを梅沢さんご夫婦が主催されているので、家族総出でお世話になりたいと思います。その学校で学ぶことの片鱗を、昼食や対話の中で感じました。
<img src="https://farm1.staticflickr.com/713/21579012380_ca61f62287_z_d.jpg" alt="昼食" />
梅沢さん宅で昼食を頂いたのですが、その際驚いたのは、いただきますの意味「命を私の命にさせていただきます」を口に出して言うルールでした。４歳の娘さんもちゃんと言えてたのが驚きでした。写真はメインディッシュのドライカレーで、細かく刻んだゴボウを肉の代わりにしており、説明を聞くまで肉無しとは気付かないほど。これはスゴイ。
昼食の後は、梅沢さんの自己紹介を経て、ちょっとコーチングのような形に。参加者は皆、なんらかの形で地方移住を考えている人たち。しかし、移住に今一歩踏み出せないでいる。自分にとっての理由は複数ありますが、それを言う前から、ほぼ全て梅沢さんに言い当てられました。移住の目的については、梅沢さんが想像する答えの方が、より根源的なものと感じました。その内容は、「本人は気付いていないかもしれないが、自らの頭脳や体を余すことなく使い尽くして社会貢献したいと思っているのではないか？それを実践しやすい環境は都会ではなく地方であると、本能的に理解しているのではないか？」といったものです。今まで漠然としていた自分の思いを見透かされたような気分でした。
<hr />
移住いっぽに参加することで、具体的なヒントを多く頂きました。たくさんの魅力的な人がそこにいる。循環型の暮らしを実践できる環境もそこにある。完全に移住せずとも、二拠点生活を実践する例も実在する。仕事は…　まだこれからですが、やりたいことを実践するための環境はそこにある、と感じた二日間でした。
<hr />
おまけ。<br />
２日目の朝から、日に五回以上、大が快便という、初の体験をしました。ご馳走になった食事は全て地元食材の野菜中心メニューでしたが… これがデトックス効果というものか？単に食べ過ぎ？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1414</wp:post_id>
		<wp:post_date><![CDATA[2015-12-18 12:29:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-18 03:29:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[yi-zhu-itupo-du-liu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e3%81%8d%e6%96%b9"><![CDATA[生き方]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e7%a7%bb%e4%bd%8f"><![CDATA[移住]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5660/21579155498_c6f54ed6ca_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>移住後すぐ、自宅のDIYから始めたという<a href="http://www.earth-c.info/">かとうさんち</a>訪問に加え、お米の収穫体験、都留に移住した先輩方や行政の方のお話を聞けるとあって、<a href="http://kokucheese.com/event/index/320277/">移住いっぽ〜都留の「暮らし」を訪ねる2日間〜</a>に参加しました。当初は妻と娘、家族総出で訪問の予定でしたが、第二子をお腹に抱えたまま遠出するのが時期的に怖くなってきたということで、実家に残して行きました… ゴメン。</p>

<hr />

<p><img src="https://farm6.staticflickr.com/5660/21579155498_c6f54ed6ca_z_d.jpg" alt="TEFさん所有の田んぼ" /></p>

<p>移住いっぽのスケジュールは以下のように盛り沢山。日程全て消化する頃には皆疲労困憊といった様子でしたが、他の移住説明会にはない、具体的なイメージが湧く構成でした。</p>

<ol>
<li>かとうさんちの暮らしを拝見、ビジョンを知る  </li>
<li>稲刈り体験  </li>
<li>都留名所巡り  </li>
<li>シェアハウスはのひろ邸にて歓迎会  </li>
<li>先輩移住者の移住に至る経緯と暮らしを拝見  </li>
<li>都留市職員の方から行政サポート内容の紹介</li>
</ol>

<p>中でも強く印象に残っているのは以下３つ。</p>

<ul>
<li>かとうさんが実践する循環型の暮らし</li>
<li>先輩移住者の一人、山田さんが移住したキッカケ</li>
<li>先輩移住者の一人、梅崎さんが運営する風と土の自然学校</li>
</ul>

<hr />

<h1 id="">かとうさんが実践する循環型の暮らし</h1>

<p><img src="https://farm1.staticflickr.com/671/21578193968_405eb27670_z_d.jpg" alt="家畜小屋全景" />
初対面のかとうさんの印象は、少年のような目と心を持ち続けている人、といった感じ。</p>

<p>山を自ら切り拓き、ログハウスをDIYした後、そこを拠点に今度は家族で住む家をリノベーションしたという話だけで圧倒されましたが… その根底にあるのは、循環型で衣食住全てを実践することでした。</p>

<p>羊からは毛を服を頂き、服を作る。 <br />
鶏からは卵と肉を頂く。 <br />
馬は、化石燃料を使わずに田畑を耕す。
家畜の餌は、米を脱穀した後に残る藁や野菜クズで賄い、その糞は肥料として食に繋げる。  </p>

<p>最初からこの形を思い描いていたわけではなく、家を作ったら食も、食の次は衣を… とステップアップして今に至るとのこと。ステップアップし過ぎでしょと内心ツッコミつつ、突き詰めるとこの形になるのだろうと思いました。</p>

<h1 id="">先輩移住者の一人、山田さんが移住したキッカケ</h1>

<p><img src="https://farm1.staticflickr.com/653/21579167748_35b7e04192_z_d.jpg" alt="DIY真っ最中の縁側" />
週末だけ都留で生活する、二拠点移住を実践する山田さん。匝瑳市で一年間、田んぼに通い、価値観が変わったのが移住のキッカケだそうです。詳しくは<a href="http://noutenkinakurashi.blog.fc2.com/blog-entry-1.html">ブログ、農天気な暮らしはじめました</a>に書かれていますが、ここで高坂さんの話を聞けるとは思わなかったので、ちょっと衝撃でした。</p>

<p>写真は、山田さん宅でリノベーション中の縁側です。現役を退いた大工さんの手助けを貰いながら、少しづつ完成に近づいているそうです。周囲は街灯もなく、夜は満天の星空を眺めることができるそうで。この縁側で星を眺めるのが夢だそうです。</p>

<h1 id="">先輩移住者の一人、梅崎さんが運営する風と土の自然学校</h1>

<p><img src="https://farm1.staticflickr.com/732/21579013890_344700b815_z_d.jpg" alt="風と土の自然学校" />
とにかく気さくで面白い梅沢さん。参加できなかった嫁が絶対好きなキャラなので、是非知り合いになって欲しいなぁ。<a href="http://ameblo.jp/noteki-kurashi/">風と土の自然学校</a>という、子供も大人も勉強になるイベントを梅沢さんご夫婦が主催されているので、家族総出でお世話になりたいと思います。その学校で学ぶことの片鱗を、昼食や対話の中で感じました。</p>

<p><img src="https://farm1.staticflickr.com/713/21579012380_ca61f62287_z_d.jpg" alt="昼食" />
梅沢さん宅で昼食を頂いたのですが、その際驚いたのは、いただきますの意味「命を私の命にさせていただきます」を口に出して言うルールでした。４歳の娘さんもちゃんと言えてたのが驚きでした。写真はメインディッシュのドライカレーで、細かく刻んだゴボウを肉の代わりにしており、説明を聞くまで肉無しとは気付かないほど。これはスゴイ。</p>

<p>昼食の後は、梅沢さんの自己紹介を経て、ちょっとコーチングのような形に。参加者は皆、なんらかの形で地方移住を考えている人たち。しかし、移住に今一歩踏み出せないでいる。自分にとっての理由は複数ありますが、それを言う前から、ほぼ全て梅沢さんに言い当てられました。移住の目的については、梅沢さんが想像する答えの方が、より根源的なものと感じました。その内容は、「本人は気付いていないかもしれないが、自らの頭脳や体を余すことなく使い尽くして社会貢献したいと思っているのではないか？それを実践しやすい環境は都会ではなく地方であると、本能的に理解しているのではないか？」といったものです。今まで漠然としていた自分の思いを見透かされたような気分でした。</p>

<hr />

<p>移住いっぽに参加することで、具体的なヒントを多く頂きました。たくさんの魅力的な人がそこにいる。循環型の暮らしを実践できる環境もそこにある。完全に移住せずとも、二拠点生活を実践する例も実在する。仕事は…　まだこれからですが、やりたいことを実践するための環境はそこにある、と感じた二日間でした。</p>

<hr />

<p>おまけ。 <br />
２日目の朝から、日に五回以上、大が快便という、初の体験をしました。ご馳走になった食事は全て地元食材の野菜中心メニューでしたが… これがデトックス効果というものか？単に食べ過ぎ？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1415]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6117783302]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562647]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>太陽光発電システムの要、チャージコントローラまとめ。</title>
		<link>https://tech.blog.uribou.me/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/</link>
		<pubDate>Fri, 18 Dec 2015 07:20:15 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/</guid>
		<description></description>
		<content:encoded><![CDATA[太陽光パネルで発電した電力を蓄電池に貯めるには、チャージコントローラ（略してチャーコン）が必要です。チャーコンを選定する際に気にするべき仕様は、使うパネルの発電能力や蓄電池の容量に寄るので、ここでは触れません。規模別に大まかな分類と、個人的に必須な機能、その機能を持ったチャーコンをリストアップしておこうと思います。
<h1>株式会社電菱SA-Bシリーズ（PWM制御）</h1>
<img src="http://www.denryo.com/solar_controller/charge_discharge/img/p/sa-ba.gif" alt="SA-B" />
手軽に手頃に太陽光発電するなら、PWM制御のコントローラにしましょう。株式会社電菱さんのSA-Bシリーズがオススメです。スマホ充電用のシステムにはこれを使っています。
細かい仕様は<a href="http://www.denryo.com/solar_controller/charge_discharge/sa-ba.html">公式サイト</a>を参照してもらうとして、特徴は何よりその小ささ。手のひら半分に収まり、軽いです。値段もお手頃で、12V用Max10Aならアマゾンで3000円程度で入手できます。12V用20A, 24V用Max10A…と容量が増すにつれて値段も1000円程度ずつ高くなります。



とても良い製品なんですが、欠点もあります。
PWM制御なので、充電効率があまり良くありません。
また、蓄電池の寿命をできる限り延ばすために、バッテリー低電圧保護という機能が付いているんですが、~~一旦この機能が働くと、その後蓄電池の電圧が回復しても、負荷への電力供給が止まったままになります。電力供給を再開するには、一旦太陽光パネルと蓄電池の接続線を外して再接続する必要があるのが地味に手間です。間にスイッチを挟めば少しはその手間も軽減できるかな…。~~ <strong>スイマセン、嘘でした。</strong>12.5V？程度以上までバッテリーの電圧が回復すると、負荷への電力供給を再開してくれるようです。
<h1>TriStar TS-MPPT-45/60（MPPT制御）</h1>
<img src="http://www.morningstarcorp.com/wp-content/uploads/2013/11/TS-MPPT_Angled-60-F_retouch_feature.png" alt="TS-MPPT-60" />
より効率的な太陽光発電システムを作るなら、TriStar社製TS-MPPT-60がオススメです。家電用のシステムには、これを使っています。
これを選んだ決定的な機能として、Ethernetがあります。無線LANコンバータと併用することで、無線で発電状況を監視できるのが、他では得られない利点ですね。（EthernetなしのTS-MPPT-45もあります）
機能面だけでなく、性能面でも優れています。名前の通りMPPT制御なので、気象条件毎の太陽電池からの最大電力を取り出すことができます。MPPT制御チャーコンの中でもこのTS-MPPTシリーズは定評があるようです。<a href="http://www.morningstarcorp.com/wp-content/uploads/2014/02/150V-TS-MPPT-Operators-Manual.pdf">マニュアル</a>には、システム電圧毎の充電効率が記載されています。12Vなら約92%〜98%、24Vなら約95%〜99%、48Vなら約97%〜99%と、かなりの高効率です。
実際の計測値を見るとイメージしやすいと思うので、我が家の実データを以下に記載します。…下記の計算は、充電量が発電量を上回るという矛盾した結果になりますが、データ取得時刻に誤差があるせいなので、あくまで参考ということにしてください…。
下のグラフから、蓄電池の電圧12.5、チャーコンから蓄電池への電流9.89Aの積、約123Wの電力で充電していることが分かります。
<img src="https://farm6.staticflickr.com/5698/21661854836_fa3cf5c416_z_d.jpg" alt="chargecurrent" />
下のグラフは、その時の太陽光パネルの生の発電量です。パネルの電圧50V、電流2.29Aの積で、約114.5Wの電力を発電できていることが分かります。ざっくり言うと、太陽光パネルと蓄電池の電圧差も無駄にすることなく、充電にまわしているということですね。
<img src="https://farm1.staticflickr.com/636/21065228364_58aed76ccc_z_d.jpg" alt="arraycurrent" />
ただ、これには重大な欠点が３つあります。<br />
<strong>デカい。重い。値段が高い。</strong>
巨大なヒートシンクのせいなんですが、とにかくデカくて重いです。高さ約30cm、重さは5kgあります。
さらに、値段も張ります。日本で並行輸入品を買うと、軽く10万円以上します。

わざわざ「日本で」と書いたのは理由があって… <a href="http://www.amazon.com/Morningstar-TS-MPPT-60-Tristar-Mppt-Amp/dp/B007NMVL7E">amazon本店</a>だと、6〜7万円程度なんです。関税かかってるのか詳細はわかりませんが、個人で輸入する勇気はなかったので、代理店経由で購入しました。
<h1>BlueSkyENERGY SBシリーズ+UCM（MPPT制御）</h1>
（調査中）オプションでEthernet機能を付加できるらしい。
<img src="http://www.blueskyenergyinc.com/images/site/product-family-banner.jpg" alt="SOLARBOOST" /><img src="http://www.blueskyenergyinc.com/images/made/images/uploads/products/UCM_1_150_150.jpg" alt="UCM" />
<a href="http://www.blueskyenergyinc.com/uploads/pdf/BSE_UCM_datasheet.pdf">UCMデータシート</a>
UCMとの接続可能な機種は以下の通り
<ul>
<li>SB2512i</li>
<li>SB2512iX</li>
<li>SB1524iX</li>
<li>SB3024iL</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1421</wp:post_id>
		<wp:post_date><![CDATA[2015-12-18 16:20:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-18 07:20:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:71:"http://www.denryo.com/solar_controller/charge_discharge/img/p/sa-ba.gif";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>太陽光パネルで発電した電力を蓄電池に貯めるには、チャージコントローラ（略してチャーコン）が必要です。チャーコンを選定する際に気にするべき仕様は、使うパネルの発電能力や蓄電池の容量に寄るので、ここでは触れません。規模別に大まかな分類と、個人的に必須な機能、その機能を持ったチャーコンをリストアップしておこうと思います。</p>

<h1 id="sabpwm">株式会社電菱SA-Bシリーズ（PWM制御）</h1>

<p><img src="http://www.denryo.com/solar_controller/charge_discharge/img/p/sa-ba.gif" alt="SA-B" /></p>

<p>手軽に手頃に太陽光発電するなら、PWM制御のコントローラにしましょう。株式会社電菱さんのSA-Bシリーズがオススメです。スマホ充電用のシステムにはこれを使っています。</p>

<p>細かい仕様は<a href="http://www.denryo.com/solar_controller/charge_discharge/sa-ba.html">公式サイト</a>を参照してもらうとして、特徴は何よりその小ささ。手のひら半分に収まり、軽いです。値段もお手頃で、12V用Max10Aならアマゾンで3000円程度で入手できます。12V用20A, 24V用Max10A…と容量が増すにつれて値段も1000円程度ずつ高くなります。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=dodo5522-22&o=9&p=8&l=as1&m=amazon&f=ifr&ref=qf_sp_asin_til&asins=B00C74LVAU" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>  

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00EU7ZZD6&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>  

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00ITLI2SO&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>とても良い製品なんですが、欠点もあります。</p>

<p>PWM制御なので、充電効率があまり良くありません。</p>

<p>また、蓄電池の寿命をできる限り延ばすために、バッテリー低電圧保護という機能が付いているんですが、<del>一旦この機能が働くと、その後蓄電池の電圧が回復しても、負荷への電力供給が止まったままになります。電力供給を再開するには、一旦太陽光パネルと蓄電池の接続線を外して再接続する必要があるのが地味に手間です。間にスイッチを挟めば少しはその手間も軽減できるかな…。</del> <strong>スイマセン、嘘でした。</strong>12.5V？程度以上までバッテリーの電圧が回復すると、負荷への電力供給を再開してくれるようです。</p>

<h1 id="tristartsmppt4560mppt">TriStar TS-MPPT-45/60（MPPT制御）</h1>

<p><img src="http://www.morningstarcorp.com/wp-content/uploads/2013/11/TS-MPPT_Angled-60-F_retouch_feature.png" alt="TS-MPPT-60" /></p>

<p>より効率的な太陽光発電システムを作るなら、TriStar社製TS-MPPT-60がオススメです。家電用のシステムには、これを使っています。</p>

<p>これを選んだ決定的な機能として、Ethernetがあります。無線LANコンバータと併用することで、無線で発電状況を監視できるのが、他では得られない利点ですね。（EthernetなしのTS-MPPT-45もあります）</p>

<p>機能面だけでなく、性能面でも優れています。名前の通りMPPT制御なので、気象条件毎の太陽電池からの最大電力を取り出すことができます。MPPT制御チャーコンの中でもこのTS-MPPTシリーズは定評があるようです。<a href="http://www.morningstarcorp.com/wp-content/uploads/2014/02/150V-TS-MPPT-Operators-Manual.pdf">マニュアル</a>には、システム電圧毎の充電効率が記載されています。12Vなら約92%〜98%、24Vなら約95%〜99%、48Vなら約97%〜99%と、かなりの高効率です。</p>

<p>実際の計測値を見るとイメージしやすいと思うので、我が家の実データを以下に記載します。…下記の計算は、充電量が発電量を上回るという矛盾した結果になりますが、データ取得時刻に誤差があるせいなので、あくまで参考ということにしてください…。</p>

<p>下のグラフから、蓄電池の電圧12.5、チャーコンから蓄電池への電流9.89Aの積、約123Wの電力で充電していることが分かります。
<img src="https://farm6.staticflickr.com/5698/21661854836_fa3cf5c416_z_d.jpg" alt="chargecurrent" />
下のグラフは、その時の太陽光パネルの生の発電量です。パネルの電圧50V、電流2.29Aの積で、約114.5Wの電力を発電できていることが分かります。ざっくり言うと、太陽光パネルと蓄電池の電圧差も無駄にすることなく、充電にまわしているということですね。
<img src="https://farm1.staticflickr.com/636/21065228364_58aed76ccc_z_d.jpg" alt="arraycurrent" /></p>

<p>ただ、これには重大な欠点が３つあります。 <br />
<strong>デカい。重い。値段が高い。</strong></p>

<p>巨大なヒートシンクのせいなんですが、とにかくデカくて重いです。高さ約30cm、重さは5kgあります。</p>

<p>さらに、値段も張ります。日本で並行輸入品を買うと、軽く10万円以上します。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B0041O2KPY&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>わざわざ「日本で」と書いたのは理由があって… <a href="http://www.amazon.com/Morningstar-TS-MPPT-60-Tristar-Mppt-Amp/dp/B007NMVL7E">amazon本店</a>だと、6〜7万円程度なんです。関税かかってるのか詳細はわかりませんが、個人で輸入する勇気はなかったので、代理店経由で購入しました。</p>

<h1 id="blueskyenergysbucmmppt">BlueSkyENERGY SBシリーズ+UCM（MPPT制御）</h1>

<p>（調査中）オプションでEthernet機能を付加できるらしい。</p>

<p><img src="http://www.blueskyenergyinc.com/images/site/product-family-banner.jpg" alt="SOLARBOOST" title="" /><img src="http://www.blueskyenergyinc.com/images/made/images/uploads/products/UCM_1_150_150.jpg" alt="UCM" title="" /></p>

<p><a href="http://www.blueskyenergyinc.com/uploads/pdf/BSE_UCM_datasheet.pdf">UCMデータシート</a></p>

<p>UCMとの接続可能な機種は以下の通り</p>

<ul>
<li>SB2512i</li>
<li>SB2512iX</li>
<li>SB1524iX</li>
<li>SB3024iL</li>
</ul>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1422]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949897899]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477016]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>245</wp:comment_id>
			<wp:comment_author><![CDATA[Dang k'y d nhn 100 USDT]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[881184@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/vi/register-person?ref=W0BCQMF1</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-06 03:53:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-05 18:53:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>電気工事士二種 筆記試験に合格するには</title>
		<link>https://tech.blog.uribou.me/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha/</link>
		<pubDate>Fri, 18 Dec 2015 02:55:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha/</guid>
		<description></description>
		<content:encoded><![CDATA[オフグリッド化に向けて、電気工事くらい自分でできるようにならねば…　という動機で勉強し始めた電気工事士。100点満点中60点とればいいので、普通に勉強すれば受かると思うけれど…忘備録代わりにメモしときます。
<h2>ぜんぶ解くべし! 第2種電気工事士筆記過去問</h2>

コレ一冊、全問正解するまで繰り返しやれば、合格できます。
過去数年分の問題の同傾向問題をジャンルごとにまとめてあります。
他に参考書が不要なほど解説も充実していて、値段も手頃、その上Kindle版ならいつでもどこでも復習できて、いいことづくめ。
ただし、単線図から複線図を描き起こす方法を全く知らない人には、参考書が追加で必要です。→それは自分
<h2>第二種電気工事士技能試験候補問題丸わかり</h2>

複線図については、技能試験の勉強を少し先取りする必要があります。
複線図を書いたこともないという方には、この本がお勧めです。
本当にど素人（→自分）でも理解できるように、カラーの図解入りで懇切丁寧に解説されていると感じました。実際、理解しやすかったです。
が、その反面、トリッキーな時間短縮技についてはほとんど触れておらず、技能試験にこの本だけで挑むのは難あり。
<h2>詳解 第二種電気工事士筆記試験過去問題集</h2>

本当に制限時間内に解けるか不安だったので、これもやりました。
1冊目の問題集をほぼ完璧に解けてから過去問を解くと… 制限時間のおよそ半分で90点代を連発できますf^_^;)
ただし、この過去問題集、 <strong>詳解</strong> と謳いながら全く詳しく解説してくれないので、最後の仕上げに使うのが良いと思います。
<h1>結果は…</h1>
筆記試験、無事合格！
今、来月の実技試験に向けて練習してます。時間短縮テクニックはYouTube動画で学ぶのがオススメかも。そのうちまとめます。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1428</wp:post_id>
		<wp:post_date><![CDATA[2015-12-18 11:55:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-18 02:55:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e8%b3%87%e6%a0%bc"><![CDATA[資格]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>オフグリッド化に向けて、電気工事くらい自分でできるようにならねば…　という動機で勉強し始めた電気工事士。100点満点中60点とればいいので、普通に勉強すれば受かると思うけれど…忘備録代わりにメモしときます。</p>

<h2 id="2">ぜんぶ解くべし! 第2種電気工事士筆記過去問</h2>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4907394136&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>コレ一冊、全問正解するまで繰り返しやれば、合格できます。</p>

<p>過去数年分の問題の同傾向問題をジャンルごとにまとめてあります。</p>

<p>他に参考書が不要なほど解説も充実していて、値段も手頃、その上Kindle版ならいつでもどこでも復習できて、いいことづくめ。</p>

<p>ただし、単線図から複線図を描き起こす方法を全く知らない人には、参考書が追加で必要です。→それは自分</p>

<h2 id="">第二種電気工事士技能試験候補問題丸わかり</h2>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4485214389&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>複線図については、技能試験の勉強を少し先取りする必要があります。</p>

<p>複線図を書いたこともないという方には、この本がお勧めです。</p>

<p>本当にど素人（→自分）でも理解できるように、カラーの図解入りで懇切丁寧に解説されていると感じました。実際、理解しやすかったです。</p>

<p>が、その反面、トリッキーな時間短縮技についてはほとんど触れておらず、技能試験にこの本だけで挑むのは難あり。</p>

<h2 id="">詳解 第二種電気工事士筆記試験過去問題集</h2>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4415217176&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>本当に制限時間内に解けるか不安だったので、これもやりました。</p>

<p>1冊目の問題集をほぼ完璧に解けてから過去問を解くと… 制限時間のおよそ半分で90点代を連発できますf^_^;)</p>

<p>ただし、この過去問題集、 <strong>詳解</strong> と謳いながら全く詳しく解説してくれないので、最後の仕上げに使うのが良いと思います。</p>

<h1 id="">結果は…</h1>

<p>筆記試験、無事合格！</p>

<p>今、来月の実技試験に向けて練習してます。時間短縮テクニックはYouTube動画で学ぶのがオススメかも。そのうちまとめます。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1429]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5948903660]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620245]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>膨れ上がる教育費負担…少子化対策は？</title>
		<link>https://tech.blog.uribou.me/peng-reshang-garujiao-yu-fei-fu-dan-are-shao-zi-hua-dui-ce-ha/</link>
		<pubDate>Tue, 22 Dec 2015 00:56:46 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/peng-reshang-garujiao-yu-fei-fu-dan-are-shao-zi-hua-dui-ce-ha/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.asahi.com/articles/ASHD15H4PHD1UTIL03D.html">国立大授業料、５４万円が９３万円に　２０３１年度試算</a>の記事を見てビックリ。
<pre><code> 文部科学省は１日、年間約５４万円の国立大学授業料について、２０３１年度には９３万円程度に上がるという試算を示した。大学の収入の核となる国の運営費交付金が大幅に減らされる可能性があり、大学が減らなければ、授業料で減収分を賄う必要性があるという。
　財務省は、全８６国立大学の収入の３〜４割を占める運営費交付金約１兆１千億円を３１年度までに約９８００億円にする方針だ。
　文科省の常盤豊・高等教育局長は「授業料で賄うとして試算すると（３１年度には）約９３万円。年間２万５千円の値上げが必要」と答えた。馳浩文科相は「学生になるべく教育費負担をかけないようにする必要がある」として、来年度予算で交付金の額を充実する考えを示した。
</code></pre>
<a href="http://www.mext.go.jp/b_menu/shingi/kokuritu/005/gijiroku/06052921/005/002.htm">文部科学省が公表しているデータ</a>を<a href="http://blog.rinka-blossom.com/matplotlibnohuontoshe-ding/">簡単にグラフ化</a>して見ると、大学の学費は値上げの一途。
今後もまだまだ上がるそうです。
<img src="https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg" alt="" />
軽減税率の適用範囲拡大の煽りで、<a href="http://irorio.jp/nagasawamaki/20151217/288799/">子育て給付金も来年度から廃止</a>することが決定したみたいですし。
年3千円程度の給付金、支給するだけ経費の無駄じゃないか？とは思ってましたが、それと同時に年金受給者への3万円支給を決定するというのは、<strong>少子化対策やる気はさらさらありません</strong>という意思表明にしか見えない…。
<a href="http://toyokeizai.net/articles/-/94995?display=b">世界で43位の東大を抜いた、26位のシンガポール国立大学NUS、｢学費･家賃タダ｣の正体　海外に出て気づく｢日本の大学の未来は暗い｣</a>を見ると、羨ましい限り。
結局、国はどこに向かって走っているのか、そこへ辿り着くにはどんな犠牲を払う必要があるのか、何も分からない現状が不安や不満を増幅させているとしか思えない。
選挙に出向いて投票するくらいしか出来ることはないのか？デモに参加？それを実行したところで利害関係者達の利になること以外は変わらないよね？
何をどうすればいいのか、今日も何も結論は出ず…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1437</wp:post_id>
		<wp:post_date><![CDATA[2015-12-22 09:56:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-22 00:56:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[peng-reshang-garujiao-yu-fei-fu-dan-are-shao-zi-hua-dui-ce-ha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://www.asahi.com/articles/ASHD15H4PHD1UTIL03D.html">国立大授業料、５４万円が９３万円に　２０３１年度試算</a>の記事を見てビックリ。</p>

<pre><code> 文部科学省は１日、年間約５４万円の国立大学授業料について、２０３１年度には９３万円程度に上がるという試算を示した。大学の収入の核となる国の運営費交付金が大幅に減らされる可能性があり、大学が減らなければ、授業料で減収分を賄う必要性があるという。

　財務省は、全８６国立大学の収入の３〜４割を占める運営費交付金約１兆１千億円を３１年度までに約９８００億円にする方針だ。

　文科省の常盤豊・高等教育局長は「授業料で賄うとして試算すると（３１年度には）約９３万円。年間２万５千円の値上げが必要」と答えた。馳浩文科相は「学生になるべく教育費負担をかけないようにする必要がある」として、来年度予算で交付金の額を充実する考えを示した。
</code></pre>

<p><a href="http://www.mext.go.jp/b_menu/shingi/kokuritu/005/gijiroku/06052921/005/002.htm">文部科学省が公表しているデータ</a>を<a href="http://blog.rinka-blossom.com/matplotlibnohuontoshe-ding/">簡単にグラフ化</a>して見ると、大学の学費は値上げの一途。</p>

<p>今後もまだまだ上がるそうです。</p>

<p><img src="https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg" alt="" /></p>

<p>軽減税率の適用範囲拡大の煽りで、<a href="http://irorio.jp/nagasawamaki/20151217/288799/">子育て給付金も来年度から廃止</a>することが決定したみたいですし。</p>

<p>年3千円程度の給付金、支給するだけ経費の無駄じゃないか？とは思ってましたが、それと同時に年金受給者への3万円支給を決定するというのは、<strong>少子化対策やる気はさらさらありません</strong>という意思表明にしか見えない…。</p>

<p><a href="http://toyokeizai.net/articles/-/94995?display=b">世界で43位の東大を抜いた、26位のシンガポール国立大学NUS、｢学費･家賃タダ｣の正体　海外に出て気づく｢日本の大学の未来は暗い｣</a>を見ると、羨ましい限り。</p>

<p>結局、国はどこに向かって走っているのか、そこへ辿り着くにはどんな犠牲を払う必要があるのか、何も分からない現状が不安や不満を増幅させているとしか思えない。</p>

<p>選挙に出向いて投票するくらいしか出来ることはないのか？デモに参加？それを実行したところで利害関係者達の利になること以外は変わらないよね？</p>

<p>何をどうすればいいのか、今日も何も結論は出ず…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6081343930]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562648]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>コトモファームで野菜育ててます　…高速飛ばして片道１時間かかりますが…（汗</title>
		<link>https://tech.blog.uribou.me/shi-min-nong-yuan-jie-ritemasu-gao-su-fei-basitepian-dao-1shi-jian-kakarimasuga/</link>
		<pubDate>Fri, 18 Dec 2015 00:05:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-min-nong-yuan-jie-ritemasu-gao-su-fei-basitepian-dao-1shi-jian-kakarimasuga/</guid>
		<description></description>
		<content:encoded><![CDATA[食べ物を作る実体験と知識を得たい。
土や虫に触れる機会を子供に与えたい。
という想いから、家の近くで貸してくれる農園を探すも見つからず。立川にはいくつかありましたが、駐車場なし、立川市民優先、もろもろ条件が合わず断念。
そんな折、書店でふと目に入った、田舎暮らしの本 ２０１５年５月号の市民農園特集の文字。

なんとなく眺めていると、以前読んだ<a href="http://www.amazon.co.jp/%E8%B5%B7%E6%A5%AD%E5%AE%B6%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E4%BC%81%E6%A5%AD%E3%81%A7%E5%83%8D%E3%81%8F-%E5%B0%8F%E6%9D%89-%E4%BF%8A%E5%93%89/dp/4844373293">起業家のように企業で働く</a>で紹介されたホームレス農園の小島希世子さんが代表を務める<a href="http://www.eto-na-en.com/cotomo-farm/index.html">コトモファーム</a>が掲載されていました。
農園の所在地は…　神奈川県藤沢市。
車で片道１時間かかるのは…　正直腰が引けました。気軽に通える距離でないと、長続きしないんじゃないかと。
でも、他の農園の紹介も一通り見てみると、農薬も化学肥料も使わない野菜の作り方を指導してもらえるのはコトモファーム以外にありませんでした。
１〜２週間悩んだ末、とにかく始めてみないことには何もわからんと思い、娘と一緒に行ってみました。
実際に行ってみると、想像していたほど距離も感じることもなく、農薬や肥料を使わない代わりに雑草を活用した自然農的な手法に魅力を感じて、即契約。
それ以来、今のところ半年以上、１〜２週間おきに農園に通い続けて、野菜を育ててます。と言うより、勝手に育ってくれていると言った方が正確な気がします。
小島さんからは、「雑草を活用して、いかに手間ヒマかけずに楽をして、美味しい野菜を育てるかが肝なんです」と教わりましたが、正にそれを実体験しています。
<img src="https://farm1.staticflickr.com/613/21013464281_c68f270755_z_d.jpg" alt="夏野菜の収穫" />
<img src="https://farm6.staticflickr.com/5733/22085086449_51a9efac3e_z_d.jpg" alt="３歳児の耕作" />
<img src="https://farm6.staticflickr.com/5670/23608995795_ae475bacd5_z_d.jpg" alt="大豆の皮むき" />
一年を通して旬な野菜を自分で育て、収穫し、味わうことができるのは、なかなか贅沢な体験です。
太陽光の自家発電と同じく、「かかった経費でペイできるほど野菜が採れるのか」が問題ではないと考えているので、末長くお世話になろうと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1443</wp:post_id>
		<wp:post_date><![CDATA[2015-12-18 09:05:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-18 00:05:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-min-nong-yuan-jie-ritemasu-gao-su-fei-basitepian-dao-1shi-jian-kakarimasuga]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:65:"https://farm1.staticflickr.com/613/21013464281_c68f270755_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>食べ物を作る実体験と知識を得たい。</p>

<p>土や虫に触れる機会を子供に与えたい。</p>

<p>という想いから、家の近くで貸してくれる農園を探すも見つからず。立川にはいくつかありましたが、駐車場なし、立川市民優先、もろもろ条件が合わず断念。</p>

<p>そんな折、書店でふと目に入った、田舎暮らしの本 ２０１５年５月号の市民農園特集の文字。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00TIVB2J0&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>なんとなく眺めていると、以前読んだ<a href="http://www.amazon.co.jp/%E8%B5%B7%E6%A5%AD%E5%AE%B6%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E4%BC%81%E6%A5%AD%E3%81%A7%E5%83%8D%E3%81%8F-%E5%B0%8F%E6%9D%89-%E4%BF%8A%E5%93%89/dp/4844373293">起業家のように企業で働く</a>で紹介されたホームレス農園の小島希世子さんが代表を務める<a href="http://www.eto-na-en.com/cotomo-farm/index.html">コトモファーム</a>が掲載されていました。</p>

<p>農園の所在地は…　神奈川県藤沢市。</p>

<p>車で片道１時間かかるのは…　正直腰が引けました。気軽に通える距離でないと、長続きしないんじゃないかと。</p>

<p>でも、他の農園の紹介も一通り見てみると、農薬も化学肥料も使わない野菜の作り方を指導してもらえるのはコトモファーム以外にありませんでした。</p>

<p>１〜２週間悩んだ末、とにかく始めてみないことには何もわからんと思い、娘と一緒に行ってみました。</p>

<p>実際に行ってみると、想像していたほど距離も感じることもなく、農薬や肥料を使わない代わりに雑草を活用した自然農的な手法に魅力を感じて、即契約。</p>

<p>それ以来、今のところ半年以上、１〜２週間おきに農園に通い続けて、野菜を育ててます。と言うより、勝手に育ってくれていると言った方が正確な気がします。</p>

<p>小島さんからは、「雑草を活用して、いかに手間ヒマかけずに楽をして、美味しい野菜を育てるかが肝なんです」と教わりましたが、正にそれを実体験しています。</p>

<p><img src="https://farm1.staticflickr.com/613/21013464281_c68f270755_z_d.jpg" alt="夏野菜の収穫" /></p>

<p><img src="https://farm6.staticflickr.com/5733/22085086449_51a9efac3e_z_d.jpg" alt="３歳児の耕作" /></p>

<p><img src="https://farm6.staticflickr.com/5670/23608995795_ae475bacd5_z_d.jpg" alt="大豆の皮むき" /></p>

<p>一年を通して旬な野菜を自分で育て、収穫し、味わうことができるのは、なかなか贅沢な体験です。</p>

<p>太陽光の自家発電と同じく、「かかった経費でペイできるほど野菜が採れるのか」が問題ではないと考えているので、末長くお世話になろうと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1444]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5981879971]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533645]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>市民のための太陽光発電標準化セミナー開催@東京都千代田区</title>
		<link>https://tech.blog.uribou.me/shi-min-notamenotai-yang-guang-fa-dian-biao-zhun-hua-seminakai-cui-dong-jing-du-qian-dai-tian-qu/</link>
		<pubDate>Tue, 15 Dec 2015 05:28:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-min-notamenotai-yang-guang-fa-dian-biao-zhun-hua-seminakai-cui-dong-jing-du-qian-dai-tian-qu/</guid>
		<description></description>
		<content:encoded><![CDATA[まだまだ空席あるようです。興味ある方は<a href="http://peatix.com/event/131724">Peatix</a>からどうぞ。
標準化と聞くと、どうしても遠い世界のことと思いがちなんですが（自分含む）、<a href="http://techon.nikkeibp.co.jp/atcl/feature/15/302961/112500007/">群馬県伊勢崎市で起きた太陽光発電施設の倒壊事故</a>を見ると、身近な話であることを実感しました。
最近よく遊びに行かせてもらってる山梨県都留市周辺にも、土地代が安い山を買って木を切り、山肌に直接太陽光パネルを敷き詰めた発電施設が目に付きます。
素人目にも、地震や台風で倒壊しそうに見えるほど、美しくない施工をしていました。
平地だと土地代が高く、山を平地にならすのもお金がかかるから、山の斜面に直接施工するんだそうで。
FITでの目先の利益に走った結果なんですかね。
国際標準に準拠したJIS規格の架台強度に即しているのかは分かりませんが、公然と批判できるくらいの知識は持ちたいなと。
セミナーで教わろうとする時点で他力本願な気もしますが、まぁ、良い機会を頂いたということで。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1446</wp:post_id>
		<wp:post_date><![CDATA[2015-12-15 14:28:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-15 05:28:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-min-notamenotai-yang-guang-fa-dian-biao-zhun-hua-seminakai-cui-dong-jing-du-qian-dai-tian-qu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>まだまだ空席あるようです。興味ある方は<a href="http://peatix.com/event/131724">Peatix</a>からどうぞ。</p>

<p>標準化と聞くと、どうしても遠い世界のことと思いがちなんですが（自分含む）、<a href="http://techon.nikkeibp.co.jp/atcl/feature/15/302961/112500007/">群馬県伊勢崎市で起きた太陽光発電施設の倒壊事故</a>を見ると、身近な話であることを実感しました。</p>

<p>最近よく遊びに行かせてもらってる山梨県都留市周辺にも、土地代が安い山を買って木を切り、山肌に直接太陽光パネルを敷き詰めた発電施設が目に付きます。</p>

<p>素人目にも、地震や台風で倒壊しそうに見えるほど、美しくない施工をしていました。</p>

<p>平地だと土地代が高く、山を平地にならすのもお金がかかるから、山の斜面に直接施工するんだそうで。</p>

<p>FITでの目先の利益に走った結果なんですかね。</p>

<p>国際標準に準拠したJIS規格の架台強度に即しているのかは分かりませんが、公然と批判できるくらいの知識は持ちたいなと。</p>

<p>セミナーで教わろうとする時点で他力本願な気もしますが、まぁ、良い機会を頂いたということで。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6200679147]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562646]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>80歳で「長く生き過ぎた」と言わせる社会、それが今の日本の姿？</title>
		<link>https://tech.blog.uribou.me/chang-kusheng-kiguo-gitandesunetolou-rasu80sui-nooye-san/</link>
		<pubDate>Tue, 15 Dec 2015 22:13:38 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/chang-kusheng-kiguo-gitandesunetolou-rasu80sui-nooye-san/</guid>
		<description></description>
		<content:encoded><![CDATA[とあるテレビ番組にて、長年エンジニアとしての人生を歩んできた８０歳のお爺さんが紹介されていました。
数年前に奥さんを亡くし、それからは一人暮らし。
80歳を過ぎたあたりから体にもガタが出始め、定期的に病院に通うように。
年金支給額は約12万円/月。家賃で6万円が消え、自己負担額が増した医療費も支払い、光熱費などの諸経費を引くと…　最終的に幾ら残るのかは容易に想像できる。
お爺さん自身もさすがに暮らしていけないと思い、最も重い家賃を減らそうと引っ越しを決意するも、不動産業者からは「紹介できる物件はありません」の一言。
まさに、AERA 2015年 9/14 号で特集された「都会で老いるコストとリスク」、そのものだった。

番組で見た内容そのままの記事も見つけた。もしかすると、この再放送だったのかもしれない。
<a href="http://www.nhk.or.jp/kaisetsu-blog/400/220607.html">2015年06月11日 (木)　視点・論点　「高齢者の住まいの貧困」</a>
<pre><code>ＮＰＯほっとプラス代表理事　藤田孝典
民間賃貸住宅は再開発などの影響から、安いアパートなどが次々に改装され、改装後の家賃は高額に跳ね上がっています。そして、低所得者でも借りられる低家賃の賃貸住宅があったとしても、身寄りがない高齢者を積極的に受け入れてくれる大家や不動産屋は少ないといえます。
高齢社会にともない、居室内で起こる孤立死も増加しています。部屋のなかで、入居者が亡くなり、事故物件になってしまうことを嫌う傾向も強くなっています。そのため、身元保証人や連帯保証人がいない低所得の高齢者が借りられる住居が少ないのです。
要するに、公営住宅が足りず、民間賃貸住宅も高家賃化や高齢者排除の動向があります。だから高齢者が住まいを確保することが困難になりつつあるのです。
そのため、住まいがない状況で、役所に相談に来られた高齢者をどこに紹介したらいいのか悩んだ挙句、役所が今回のような危険で劣悪な簡易宿泊所などの施設に頼る結果を招いてしまっています。
</code></pre>
独り身の高齢者を襲う悲惨な状況を見ていると、藤田氏の言葉通り、「明日は我が身」になりかねない…。
番組に登場していた80歳のお爺さんが漏らした、「私はてっきり80歳が（人生の）定年だと思ってました。長く生き過ぎたんでしょうね。」という言葉が、とても印象に残っています。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1447</wp:post_id>
		<wp:post_date><![CDATA[2015-12-16 07:13:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-15 22:13:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[chang-kusheng-kiguo-gitandesunetolou-rasu80sui-nooye-san]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>とあるテレビ番組にて、長年エンジニアとしての人生を歩んできた８０歳のお爺さんが紹介されていました。</p>

<p>数年前に奥さんを亡くし、それからは一人暮らし。</p>

<p>80歳を過ぎたあたりから体にもガタが出始め、定期的に病院に通うように。</p>

<p>年金支給額は約12万円/月。家賃で6万円が消え、自己負担額が増した医療費も支払い、光熱費などの諸経費を引くと…　最終的に幾ら残るのかは容易に想像できる。</p>

<p>お爺さん自身もさすがに暮らしていけないと思い、最も重い家賃を減らそうと引っ越しを決意するも、不動産業者からは「紹介できる物件はありません」の一言。</p>

<p>まさに、AERA 2015年 9/14 号で特集された「都会で老いるコストとリスク」、そのものだった。</p>

<iframe align="center" src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B01419QIVU&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>番組で見た内容そのままの記事も見つけた。もしかすると、この再放送だったのかもしれない。</p>

<p><a href="http://www.nhk.or.jp/kaisetsu-blog/400/220607.html">2015年06月11日 (木)　視点・論点　「高齢者の住まいの貧困」</a></p>

<pre><code>ＮＰＯほっとプラス代表理事　藤田孝典

民間賃貸住宅は再開発などの影響から、安いアパートなどが次々に改装され、改装後の家賃は高額に跳ね上がっています。そして、低所得者でも借りられる低家賃の賃貸住宅があったとしても、身寄りがない高齢者を積極的に受け入れてくれる大家や不動産屋は少ないといえます。

高齢社会にともない、居室内で起こる孤立死も増加しています。部屋のなかで、入居者が亡くなり、事故物件になってしまうことを嫌う傾向も強くなっています。そのため、身元保証人や連帯保証人がいない低所得の高齢者が借りられる住居が少ないのです。
要するに、公営住宅が足りず、民間賃貸住宅も高家賃化や高齢者排除の動向があります。だから高齢者が住まいを確保することが困難になりつつあるのです。

そのため、住まいがない状況で、役所に相談に来られた高齢者をどこに紹介したらいいのか悩んだ挙句、役所が今回のような危険で劣悪な簡易宿泊所などの施設に頼る結果を招いてしまっています。
</code></pre>

<p>独り身の高齢者を襲う悲惨な状況を見ていると、藤田氏の言葉通り、「明日は我が身」になりかねない…。</p>

<p>番組に登場していた80歳のお爺さんが漏らした、「私はてっきり80歳が（人生の）定年だと思ってました。長く生き過ぎたんでしょうね。」という言葉が、とても印象に残っています。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5945301890]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591165]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>晴天と曇天の発電量の差は？</title>
		<link>https://tech.blog.uribou.me/qing-tian-totan-tian-tonofa-dian-liang-nochai/</link>
		<pubDate>Fri, 18 Dec 2015 07:19:38 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/qing-tian-totan-tian-tonofa-dian-liang-nochai/</guid>
		<description></description>
		<content:encoded><![CDATA[今日は朝から夕方まで、太陽光が満遍なく降り注いだようです。
<img src="https://farm1.staticflickr.com/736/23160124284_7eb9db0f6d_z_d.jpg" alt="" />
Array Currentが示すのは、太陽光パネルがチャージコントローラに供給する電流値。Charge Currentが示すのは、チャージコントローラがバッテリーに供給する電流値です。
<a href="http://blog.rinka-blossom.com/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/">先の記事</a>でも触れましたが、MPPT（Maximum Power Point Tracking）方式のチャージコントローラを使っているので、このように蓄電池を充電する電流量が増すことになります。
ご参考に、以下は昨日の発電状況です。
<img src="https://farm1.staticflickr.com/611/23160124274_f02fe08389_z_d.jpg" alt="" />
なんて貧相なグラフ…。
これでもまだマシな方で、雨の日はこのようなピーク値すら出ません。太陽の有り難さを実感するのも、このシステムの利点かも。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1450</wp:post_id>
		<wp:post_date><![CDATA[2015-12-18 16:19:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-18 07:19:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[qing-tian-totan-tian-tonofa-dian-liang-nochai]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:65:"https://farm1.staticflickr.com/736/23160124284_7eb9db0f6d_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今日は朝から夕方まで、太陽光が満遍なく降り注いだようです。</p>

<p><img src="https://farm1.staticflickr.com/736/23160124284_7eb9db0f6d_z_d.jpg" alt="" /></p>

<p>Array Currentが示すのは、太陽光パネルがチャージコントローラに供給する電流値。Charge Currentが示すのは、チャージコントローラがバッテリーに供給する電流値です。</p>

<p><a href="http://blog.rinka-blossom.com/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/">先の記事</a>でも触れましたが、MPPT（Maximum Power Point Tracking）方式のチャージコントローラを使っているので、このように蓄電池を充電する電流量が増すことになります。</p>

<p>ご参考に、以下は昨日の発電状況です。</p>

<p><img src="https://farm1.staticflickr.com/611/23160124274_f02fe08389_z_d.jpg" alt="" /></p>

<p>なんて貧相なグラフ…。</p>

<p>これでもまだマシな方で、雨の日はこのようなピーク値すら出ません。太陽の有り難さを実感するのも、このシステムの利点かも。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5977467017]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605564]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>260</wp:comment_id>
			<wp:comment_author><![CDATA[бнанс бонус за рестрацю]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[71328888@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/uk-UA/join?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-20 21:59:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-20 12:59:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>餅つき＆薪割り体験@八王子 が開催されます。</title>
		<link>https://tech.blog.uribou.me/bing-tukixin-ge-riti-yan-ba-wang-zi/</link>
		<pubDate>Fri, 18 Dec 2015 03:29:55 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/bing-tukixin-ge-riti-yan-ba-wang-zi/</guid>
		<description></description>
		<content:encoded><![CDATA[今年の10月辺りから大変お世話になっている<a href="http://www.teforum.org/">NPO法人 都留環境フォーラム</a>さん繋がりで知り合った、昭島在住の市職員の方からのご紹介です。
<a href="http://www.h7.dion.ne.jp/~academy/index.html">NPO法人自然環境アカデミー</a>さん主催のイベントです。
<pre><code>「里山を保全復元する活動」 無料・一般
12月19日土曜日　9:00〜12:00　八王子滝山里山保全地域集合
</code></pre>
詳細は<a href="http://www.h7.dion.ne.jp/~academy/img/takiyama.pdf">こちら</a>から。
八王子滝山の田んぼを復元し、そこで収穫したお米で餅つきをするそうです。
車で５分の距離なので、家族総出で行って参ります。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1452</wp:post_id>
		<wp:post_date><![CDATA[2015-12-18 12:29:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-18 03:29:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bing-tukixin-ge-riti-yan-ba-wang-zi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="di-chan-di-xiao"><![CDATA[地産地消]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今年の10月辺りから大変お世話になっている<a href="http://www.teforum.org/">NPO法人 都留環境フォーラム</a>さん繋がりで知り合った、昭島在住の市職員の方からのご紹介です。</p>

<p><a href="http://www.h7.dion.ne.jp/~academy/index.html">NPO法人自然環境アカデミー</a>さん主催のイベントです。</p>

<pre><code>「里山を保全復元する活動」 無料・一般
12月19日土曜日　9:00〜12:00　八王子滝山里山保全地域集合  
</code></pre>

<p>詳細は<a href="http://www.h7.dion.ne.jp/~academy/img/takiyama.pdf">こちら</a>から。</p>

<p>八王子滝山の田んぼを復元し、そこで収穫したお米で餅つきをするそうです。</p>

<p>車で５分の距離なので、家族総出で行って参ります。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6117934378]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634492]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>灯台下暗し！餅つき体験を通して八王子の里山保全活動を知る。</title>
		<link>https://tech.blog.uribou.me/deng-tai-xia-an-si-ba-wang-zi-noli-shan-bao-quan-huo-dong-wozhi-ru/</link>
		<pubDate>Sat, 19 Dec 2015 15:30:08 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/deng-tai-xia-an-si-ba-wang-zi-noli-shan-bao-quan-huo-dong-wozhi-ru/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/bing-tukixin-ge-riti-yan-ba-wang-zi/">NPO法人自然環境アカデミーさん主催の餅つき大会</a>に行ってきました。
場所はここ。我が家から車で５分の道の駅八王子滝山から、さらに徒歩５分の超近場。
<img src="/content/images/2015/12/----------2015-12-19-23-13-14.png" alt="" />
いつもの大通りをテクテク歩き、この路地かな？というところに入ると…　見えてきました、里山保全地域。
<img src="https://farm6.staticflickr.com/5629/23818659636_98f128abc7_z_d.jpg" alt="" />
何だろう、この感じ。
ちょっとした異世界に入る感覚がしました。「千と千尋の神隠し」の冒頭で、千尋たちが異世界に足を踏み入れる時のシーンのような、あの感覚。
都会的な大通りから繋がる路地にちょっと足を踏み入れると、そこには全く想像していなかった里山の風景が広がっていました。
後から聞いた話では、毎年６月には蛍が自然発生するとのこと。それが元で、東京都はこの地域の保全を行うことを決定したのだとか。
こんな身近に、こんな良い場所があったなんて…　
<img src="https://farm6.staticflickr.com/5720/23216652584_74cd3e2cea_z_d.jpg" alt="" />
裏山の散策で、野生化した逞しい小松菜を３束もいただいた上、刃物の知識と経験豊富な指導者付きの薪割り体験、餅つき体験、里山保全の経緯などなど…
うーん、これは楽しい。
特に子供が思いっきり走り回れる裏山という環境は、とても貴重だと思いました。
嫁さんの友人が、適度な都会と田舎が同居する八王子が好きで、最近土地と家を買って家庭菜園を楽しんでいると聞き、納得です。
<img src="https://farm1.staticflickr.com/584/23549052150_a108245f2e_z_d.jpg" alt="" />
何度見ても美味しそう。実際、美味しかった。
<img src="https://farm1.staticflickr.com/725/23216624954_bda5bcfdb9_z_d.jpg" alt="" />
これが、実際にもち米を収穫した後の田んぼ。
耕作放棄地となっていた田んぼを、自然環境アカデミーさんが修復したそうです。
詳しくい話を聞けば聞くほど、その苦労たるや…。
ここに限った話ではないですが、一度失ったものを取り戻すのがどれだけ大変か、思い知らされた気がしました。
<img src="https://farm6.staticflickr.com/5728/23844745775_4fd18c2693_z_d.jpg" alt="" />
来年以降も昭島にいれば、この里山保全活動に協力しつつ、子供の環境教育の場としてもお世話になりたいですね。
どうも会社の動向が怪しいので、どうなることやら…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1453</wp:post_id>
		<wp:post_date><![CDATA[2015-12-20 00:30:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-19 15:30:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[deng-tai-xia-an-si-ba-wang-zi-noli-shan-bao-quan-huo-dong-wozhi-ru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="di-chan-di-xiao"><![CDATA[地産地消]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:57:"/content/images/2015/12/----------2015-12-19-23-13-14.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/bing-tukixin-ge-riti-yan-ba-wang-zi/">NPO法人自然環境アカデミーさん主催の餅つき大会</a>に行ってきました。</p>

<p>場所はここ。我が家から車で５分の道の駅八王子滝山から、さらに徒歩５分の超近場。</p>

<p><img src="/content/images/2015/12/----------2015-12-19-23-13-14.png" alt="" /></p>

<p>いつもの大通りをテクテク歩き、この路地かな？というところに入ると…　見えてきました、里山保全地域。</p>

<p><img src="https://farm6.staticflickr.com/5629/23818659636_98f128abc7_z_d.jpg" alt="" /></p>

<p>何だろう、この感じ。</p>

<p>ちょっとした異世界に入る感覚がしました。「千と千尋の神隠し」の冒頭で、千尋たちが異世界に足を踏み入れる時のシーンのような、あの感覚。</p>

<p>都会的な大通りから繋がる路地にちょっと足を踏み入れると、そこには全く想像していなかった里山の風景が広がっていました。</p>

<p>後から聞いた話では、毎年６月には蛍が自然発生するとのこと。それが元で、東京都はこの地域の保全を行うことを決定したのだとか。</p>

<p>こんな身近に、こんな良い場所があったなんて…　</p>

<p><img src="https://farm6.staticflickr.com/5720/23216652584_74cd3e2cea_z_d.jpg" alt="" /></p>

<p>裏山の散策で、野生化した逞しい小松菜を３束もいただいた上、刃物の知識と経験豊富な指導者付きの薪割り体験、餅つき体験、里山保全の経緯などなど…</p>

<p>うーん、これは楽しい。</p>

<p>特に子供が思いっきり走り回れる裏山という環境は、とても貴重だと思いました。</p>

<p>嫁さんの友人が、適度な都会と田舎が同居する八王子が好きで、最近土地と家を買って家庭菜園を楽しんでいると聞き、納得です。</p>

<p><img src="https://farm1.staticflickr.com/584/23549052150_a108245f2e_z_d.jpg" alt="" /></p>

<p>何度見ても美味しそう。実際、美味しかった。</p>

<p><img src="https://farm1.staticflickr.com/725/23216624954_bda5bcfdb9_z_d.jpg" alt="" /></p>

<p>これが、実際にもち米を収穫した後の田んぼ。</p>

<p>耕作放棄地となっていた田んぼを、自然環境アカデミーさんが修復したそうです。</p>

<p>詳しくい話を聞けば聞くほど、その苦労たるや…。</p>

<p>ここに限った話ではないですが、一度失ったものを取り戻すのがどれだけ大変か、思い知らされた気がしました。</p>

<p><img src="https://farm6.staticflickr.com/5728/23844745775_4fd18c2693_z_d.jpg" alt="" /></p>

<p>来年以降も昭島にいれば、この里山保全活動に協力しつつ、子供の環境教育の場としてもお世話になりたいですね。</p>

<p>どうも会社の動向が怪しいので、どうなることやら…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1454]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6365754474]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648888]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>178</wp:comment_id>
			<wp:comment_author><![CDATA[Buksan ang Binance Account]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[38599740@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ph/register-person?ref=S5H7X3LP</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.31]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-19 14:05:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-19 05:05:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>サラリーマンからキコリへの転身。</title>
		<link>https://tech.blog.uribou.me/sararimankarakikorihenozhuan-shen/</link>
		<pubDate>Sat, 26 Dec 2015 21:56:40 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/sararimankarakikorihenozhuan-shen/</guid>
		<description></description>
		<content:encoded><![CDATA[いや、自分のことじゃないですよ。密かに狙ってるのは内緒ですが…。
facebookのとあるグループで偶然目にしたKINOWA代表の方の経歴。
そう思っても実際に行動に移すまでには、とても深い悩みと多くの苦労があったんじゃないかと、勝手に想像してしまう。
https://kinowablog.wordpress.com/
<pre><code>大学を卒業し、普通の会社員として３０歳まで東京に住んでいました。
満員電車。駅のホームでも我先にと押し合いへし合い。
もう少し人間らしく生きてもいいんじゃないだろうか？
富山でのきこり生活を決めたのは、そんな疑問からでした。
森林組合に１５年勤め、南砺森林メンテナンスとして起業したのが４５歳。
少々遅いような気もしましたが、それが私のタイミングでした。
木の話、木の輪、木の和
たくさんのWAを木で作っていく。
すべてに便利を望む生き方から、すこし手間をかける生き方へ。
プラスチックから木へ。
そんな生活のお手伝いができればと思い、
KINOWAを立ち上げました。
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1458</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 06:56:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-26 21:56:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sararimankarakikorihenozhuan-shen]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>いや、自分のことじゃないですよ。密かに狙ってるのは内緒ですが…。</p>

<p>facebookのとあるグループで偶然目にしたKINOWA代表の方の経歴。</p>

<p>そう思っても実際に行動に移すまでには、とても深い悩みと多くの苦労があったんじゃないかと、勝手に想像してしまう。</p>

<p><a href="https://kinowablog.wordpress.com/">https://kinowablog.wordpress.com/</a>  </p>

<pre><code>大学を卒業し、普通の会社員として３０歳まで東京に住んでいました。
満員電車。駅のホームでも我先にと押し合いへし合い。
もう少し人間らしく生きてもいいんじゃないだろうか？
富山でのきこり生活を決めたのは、そんな疑問からでした。

森林組合に１５年勤め、南砺森林メンテナンスとして起業したのが４５歳。
少々遅いような気もしましたが、それが私のタイミングでした。

木の話、木の輪、木の和
たくさんのWAを木で作っていく。
すべてに便利を望む生き方から、すこし手間をかける生き方へ。
プラスチックから木へ。
そんな生活のお手伝いができればと思い、
KINOWAを立ち上げました。  
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4fdfcce8d6ebb6b48044b5f8375d38f3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5978028132]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648891]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>170</wp:comment_id>
			<wp:comment_author><![CDATA[最佳Binance推荐代码]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[87993483@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/join?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-16 02:37:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-15 17:37:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>179</wp:comment_id>
			<wp:comment_author><![CDATA[conta da binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[7691625@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/pt-BR/register?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.31]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-19 23:43:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-19 14:43:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>賃貸でも思い切ったDIYができる、ディアウォール。</title>
		<link>https://tech.blog.uribou.me/ren-dai-diynowei-fang-dear-wall/</link>
		<pubDate>Tue, 09 Feb 2016 15:25:46 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ren-dai-diynowei-fang-dear-wall/</guid>
		<description></description>
		<content:encoded><![CDATA[賃貸なので思い切ったDIYができず、フラストレーション溜まっていたので…　それをモチベーションに、何か方法はないものかとネットを探していたら、ディアウォールという製品を発見。
近くのジョイフル本田を歩いていると、実物が見つかりました。
<img src="https://farm2.staticflickr.com/1707/24571180530_67d6ec91b0_z_d.jpg" alt="" />
で、即購入↓。
<img src="https://farm2.staticflickr.com/1591/24239798703_efbc09023e_z_d.jpg" alt="" />
<img src="https://farm2.staticflickr.com/1534/24866647445_988726f0c1_z_d.jpg" alt="" />
猫たちが爪研ぎにも使ってますが、そもそも何のために購入したかというと…
<img src="https://farm2.staticflickr.com/1519/24868326676_989da5f785_z_d.jpg" alt="" />
<img src="https://farm2.staticflickr.com/1581/24266481954_39aa698553_z_d.jpg" alt="" />
<img src="https://farm2.staticflickr.com/1592/24876495036_cd98947c34_z_d.jpg" alt="" />
ノートPC、スマホ、タブレット充電用の20Wパネル×２枚を、より日当たりの良い高さに設置するためでした。
2x4材を柱か代わりにするわけで、強度が心配だな…　と思ってましたが、寸法を間違わなければ意外と頑丈で安心しました。
これを使えば、夢だった<a href="http://matome.naver.jp/odai/2138295219999114301/2138312926005588403">キャットウォーク</a>も設置できる…！
交通事故に遭ったり病気をもらってきたりと、外に出すと色々と心配が絶えないため、我が家の猫たちは完全室内飼い。
安全なのはとても良いのだけど、運動不足になりがちなのです。
スィティッシュ＋アメショのこてつ君、食事制限により今はベスト体重近くまで持ち直しましたものの、ちょっと油断するとすぐ太る…。
そういうわけで、特に上下運動をするための階段、征服感を味わえる高い場所の通路を作ってあげたい。
ちゃんと作ろうとすると、ジグソーくらい必要かな…？太陽光で緩やかに充電したいので、バッテリー電源式を物色中。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1461</wp:post_id>
		<wp:post_date><![CDATA[2016-02-10 00:25:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-09 15:25:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ren-dai-diynowei-fang-dear-wall]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1707/24571180530_67d6ec91b0_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>賃貸なので思い切ったDIYができず、フラストレーション溜まっていたので…　それをモチベーションに、何か方法はないものかとネットを探していたら、ディアウォールという製品を発見。</p>

<p>近くのジョイフル本田を歩いていると、実物が見つかりました。</p>

<p><img src="https://farm2.staticflickr.com/1707/24571180530_67d6ec91b0_z_d.jpg" alt="" /></p>

<p>で、即購入↓。</p>

<p><img src="https://farm2.staticflickr.com/1591/24239798703_efbc09023e_z_d.jpg" alt="" /></p>

<p><img src="https://farm2.staticflickr.com/1534/24866647445_988726f0c1_z_d.jpg" alt="" /></p>

<p>猫たちが爪研ぎにも使ってますが、そもそも何のために購入したかというと…</p>

<p><img src="https://farm2.staticflickr.com/1519/24868326676_989da5f785_z_d.jpg" alt="" /></p>

<p><img src="https://farm2.staticflickr.com/1581/24266481954_39aa698553_z_d.jpg" alt="" /></p>

<p><img src="https://farm2.staticflickr.com/1592/24876495036_cd98947c34_z_d.jpg" alt="" /></p>

<p>ノートPC、スマホ、タブレット充電用の20Wパネル×２枚を、より日当たりの良い高さに設置するためでした。</p>

<p>2x4材を柱か代わりにするわけで、強度が心配だな…　と思ってましたが、寸法を間違わなければ意外と頑丈で安心しました。</p>

<p>これを使えば、夢だった<a href="http://matome.naver.jp/odai/2138295219999114301/2138312926005588403">キャットウォーク</a>も設置できる…！</p>

<p>交通事故に遭ったり病気をもらってきたりと、外に出すと色々と心配が絶えないため、我が家の猫たちは完全室内飼い。</p>

<p>安全なのはとても良いのだけど、運動不足になりがちなのです。</p>

<p>スィティッシュ＋アメショのこてつ君、食事制限により今はベスト体重近くまで持ち直しましたものの、ちょっと油断するとすぐ太る…。</p>

<p>そういうわけで、特に上下運動をするための階段、征服感を味わえる高い場所の通路を作ってあげたい。</p>

<p>ちゃんと作ろうとすると、ジグソーくらい必要かな…？太陽光で緩やかに充電したいので、バッテリー電源式を物色中。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00473Y9MG&ref=tf_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>  

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B0176ECDIY&ref=tf_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1462]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5944394946]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477016]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>太陽光発電＆蓄電システムの作りかた - 蓄電池の選定方法</title>
		<link>https://tech.blog.uribou.me/xu-dian-chi-noxuan-bifang/</link>
		<pubDate>Thu, 18 Feb 2016 18:53:30 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/xu-dian-chi-noxuan-bifang/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">太陽光発電＆蓄電システムの作りかた</a>で触れた通り、蓄電池をどれにするかでも結構悩みました。
というより、悩まなかった物はなかったんですが…　中でも蓄電池は悩みの種でした。
新品である程度の容量を確保しようとすると、太陽光パネルのコストの比じゃない値段になりますから…。
中古で蓄電池を譲ってくれるところはないだろうか…　と思って探していたら、<a href="http://www.offgrid-child.com/">NPO法人 非電化地域の人々に蓄電池をおくる会</a>と出会い、悩みは解決しました。
下の表の通り、（used）が付いた型名のkWh当り価格[yen/kWh]をみると分かりますが、他とは桁違いに安い値段で蓄電池が手に入ります。（2016年からは価格改定したそうです。）

HPには紹介されていない蓄電池も扱っているので、興味のある方は問い合わせてみてください。
家電を動かすための7.2kWh蓄電池とは別に、ノートPCやスマホ充電用のGS YUASA PWL12V38を購入しましたが、これもHPには載っていない裏メニュー品でした。
一度作ってしまえば無料で使える上、原発由来でない電力なので、嫁さんも進んで使ってます。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1463</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 03:53:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 18:53:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xu-dian-chi-noxuan-bifang]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">太陽光発電＆蓄電システムの作りかた</a>で触れた通り、蓄電池をどれにするかでも結構悩みました。</p>

<p>というより、悩まなかった物はなかったんですが…　中でも蓄電池は悩みの種でした。</p>

<p>新品である程度の容量を確保しようとすると、太陽光パネルのコストの比じゃない値段になりますから…。</p>

<p>中古で蓄電池を譲ってくれるところはないだろうか…　と思って探していたら、<a href="http://www.offgrid-child.com/">NPO法人 非電化地域の人々に蓄電池をおくる会</a>と出会い、悩みは解決しました。</p>

<p>下の表の通り、（used）が付いた型名のkWh当り価格[yen/kWh]をみると分かりますが、他とは桁違いに安い値段で蓄電池が手に入ります。（2016年からは価格改定したそうです。）</p>

<iframe width="100%" height="600" type="embed" src="https://docs.google.com/spreadsheets/d/1j-a-eZra982_TnLE04xUpUaMg5EQGjxsTRICRdtFSv8/pubhtml?gid=1083044253&amp;single=true&amp;widget=true&amp;headers=false"></iframe>

<p>HPには紹介されていない蓄電池も扱っているので、興味のある方は問い合わせてみてください。</p>

<p>家電を動かすための7.2kWh蓄電池とは別に、ノートPCやスマホ充電用のGS YUASA PWL12V38を購入しましたが、これもHPには載っていない裏メニュー品でした。</p>

<p>一度作ってしまえば無料で使える上、原発由来でない電力なので、嫁さんも進んで使ってます。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5959850704]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490507]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>233</wp:comment_id>
			<wp:comment_author><![CDATA[Zarejestruj sie na www.binance.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[38395882@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/pl/register?ref=V3MG69RO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-28 03:10:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-27 18:10:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>今年の御神籤が明日の祭りを暗示してそうで怖い。</title>
		<link>https://tech.blog.uribou.me/jin-nian-noyu-shen-qian-jie-guo/</link>
		<pubDate>Sat, 16 Jan 2016 14:13:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/jin-nian-noyu-shen-qian-jie-guo/</guid>
		<description></description>
		<content:encoded><![CDATA[神頼みというわけではありませんが…　小吉でした。
微妙…。
でもその内容が今後のことを示していそうで、ちょっと怖い。
<pre><code>これまでは、ずいぶんくろうもしたなれど、
心、直しく、行いに悪しきことなければ
おのづからこれよりよきこと重なるべし
家内和合して、心正直にあるべし
</code></pre>
これは素直に従うべきでしょうね。
<pre><code>家うつり、ふしん、たびだちなど春はじめてよし
</code></pre>
１〜３月の社内異動のことを暗示しているような。
<pre><code>うりかひよし
職は何にても心に任すべし
</code></pre>
はい。
明日が今年初出勤となりますが、それと同時に、構造改革という名のリストラ策の一環、特別公募枠リスト開示の日。
果たして凶と出るか吉と出るか…？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1471</wp:post_id>
		<wp:post_date><![CDATA[2016-01-16 23:13:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-16 14:13:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jin-nian-noyu-shen-qian-jie-guo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>神頼みというわけではありませんが…　小吉でした。</p>

<p>微妙…。</p>

<p>でもその内容が今後のことを示していそうで、ちょっと怖い。</p>

<pre><code>これまでは、ずいぶんくろうもしたなれど、
心、直しく、行いに悪しきことなければ
おのづからこれよりよきこと重なるべし
家内和合して、心正直にあるべし
</code></pre>

<p>これは素直に従うべきでしょうね。</p>

<pre><code>家うつり、ふしん、たびだちなど春はじめてよし
</code></pre>

<p>１〜３月の社内異動のことを暗示しているような。</p>

<pre><code>うりかひよし
職は何にても心に任すべし
</code></pre>

<p>はい。</p>

<p>明日が今年初出勤となりますが、それと同時に、構造改革という名のリストラ策の一環、特別公募枠リスト開示の日。</p>

<p>果たして凶と出るか吉と出るか…？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6405604708]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677713]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>285</wp:comment_id>
			<wp:comment_author><![CDATA[melhor código de indicac~ao binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[81912393@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/pt-PT/join?ref=V3MG69RO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.49]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-21 01:22:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-20 16:22:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>今年の初仕事はコトモファームで。</title>
		<link>https://tech.blog.uribou.me/kotomohuamudejin-nian-chu-shi-shi/</link>
		<pubDate>Sun, 03 Jan 2016 23:47:46 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/kotomohuamudejin-nian-chu-shi-shi/</guid>
		<description></description>
		<content:encoded><![CDATA[会社での仕事始めは明日。
冬休み最終日の今日は、家族総出で畑に繰り出しました！
ちょっと頭が他より飛び抜けてしまった大根を、試しに一本抜いてお持ち帰り。
<img src="https://farm2.staticflickr.com/1626/23537431564_efa0a13a67_z_d.jpg" alt="" />
ちょっと細身な気もしますが、長さは十分。真っ直ぐに育ってくれました。美味しくいただきまーす。
<img src="https://farm2.staticflickr.com/1697/23538962543_565c72a90b_z_d.jpg" alt="" />
いくつか植えた種のうち、唯一順調に成長中の白菜。収穫はまだまだ先っぽいですが、しっかり結球してくれそうな気配を感じます。
<img src="https://farm2.staticflickr.com/1700/23797811419_8ec731dab9_z_d.jpg" alt="" />
３歳の娘と一緒に、土と野菜たちに今年もよろしくお願いしますと挨拶して、帰宅の途につきました。
来週開催される、今年初講習の日は餅つき大会があるようですが…　残念ながら不参加です。
本当に残念…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1472</wp:post_id>
		<wp:post_date><![CDATA[2016-01-04 08:47:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-03 23:47:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[kotomohuamudejin-nian-chu-shi-shi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1626/23537431564_efa0a13a67_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>会社での仕事始めは明日。</p>

<p>冬休み最終日の今日は、家族総出で畑に繰り出しました！</p>

<p>ちょっと頭が他より飛び抜けてしまった大根を、試しに一本抜いてお持ち帰り。</p>

<p><img src="https://farm2.staticflickr.com/1626/23537431564_efa0a13a67_z_d.jpg" alt="" /></p>

<p>ちょっと細身な気もしますが、長さは十分。真っ直ぐに育ってくれました。美味しくいただきまーす。</p>

<p><img src="https://farm2.staticflickr.com/1697/23538962543_565c72a90b_z_d.jpg" alt="" /></p>

<p>いくつか植えた種のうち、唯一順調に成長中の白菜。収穫はまだまだ先っぽいですが、しっかり結球してくれそうな気配を感じます。</p>

<p><img src="https://farm2.staticflickr.com/1700/23797811419_8ec731dab9_z_d.jpg" alt="" /></p>

<p>３歳の娘と一緒に、土と野菜たちに今年もよろしくお願いしますと挨拶して、帰宅の途につきました。</p>

<p>来週開催される、今年初講習の日は餅つき大会があるようですが…　残念ながら不参加です。</p>

<p>本当に残念…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1473]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6392373705]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663162]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>225</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[76813193@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ka-GE/register?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.47]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-18 04:43:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-17 19:43:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>節電のため、窓を断熱してみる - 下準備</title>
		<link>https://tech.blog.uribou.me/chuang-noduan-re-wodiysurutamenoxia-zhun-bei/</link>
		<pubDate>Thu, 07 Jan 2016 12:57:29 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/chuang-noduan-re-wodiysurutamenoxia-zhun-bei/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">オフグリッドし始めた</a>とはいえ、賃貸なので薪ストーブを入れるわけにもいかず、普通に200Vエアコンは使っています。
でも最近よく妻から言われるのが、開いてもいない窓から冷気が入ってくる気がすると。
そこで思い出したのが<a href="http://greenz.jp/2015/01/28/watadenschool_ecohouse1/">【グリーンズの学校】賃貸でもできる。冬温かく夏涼しい家をDIYでつくろう！</a>の記事。
プラスチックダンボールを使って内窓をつけると、かなりの断熱効果があるそうです。しかも安い。
その材料は週末にホームセンターで買い揃えるとして、効果を測定するには放射熱温度計が便利とのこと。
最安で2000円程度とのことでしたが、本当でした。しかも軽くて取り回しやすい。必要ないのにいろんな温度を測って遊んでます。妻も一緒に。

<img src="http://ecx.images-amazon.com/images/I/41Q5S0WFLcL.jpg" alt="" />
最安で2000とはいえピンキリで、こんな高級品もありました。
よくテレビで見るサーモグラフィ的な映像が家庭で楽しめますね。

<img src="http://ecx.images-amazon.com/images/I/611TDjr5eoL._SL1276_.jpg" alt="" />
さらに探してみたら、iPhoneで同じことができるガジェットを発見しました。
ちょっと食指が動きましたが、ここまでの機能性は不要と思い直して、最初の2000円の温度計を購入しました。

<img src="http://ecx.images-amazon.com/images/I/71FTclXGmaL._SL1500_.jpg" alt="" />
プラスチックダンボールでの断熱効果はまた別途レポートしようと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1474</wp:post_id>
		<wp:post_date><![CDATA[2016-01-07 21:57:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-07 12:57:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[chuang-noduan-re-wodiysurutamenoxia-zhun-bei]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:53:"http://ecx.images-amazon.com/images/I/41Q5S0WFLcL.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">オフグリッドし始めた</a>とはいえ、賃貸なので薪ストーブを入れるわけにもいかず、普通に200Vエアコンは使っています。</p>

<p>でも最近よく妻から言われるのが、開いてもいない窓から冷気が入ってくる気がすると。</p>

<p>そこで思い出したのが<a href="http://greenz.jp/2015/01/28/watadenschool_ecohouse1/">【グリーンズの学校】賃貸でもできる。冬温かく夏涼しい家をDIYでつくろう！</a>の記事。</p>

<p>プラスチックダンボールを使って内窓をつけると、かなりの断熱効果があるそうです。しかも安い。</p>

<p>その材料は週末にホームセンターで買い揃えるとして、効果を測定するには放射熱温度計が便利とのこと。</p>

<p>最安で2000円程度とのことでしたが、本当でした。しかも軽くて取り回しやすい。必要ないのにいろんな温度を測って遊んでます。妻も一緒に。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B012M91P5U&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p><img src="http://ecx.images-amazon.com/images/I/41Q5S0WFLcL.jpg" alt="" /></p>

<p>最安で2000とはいえピンキリで、こんな高級品もありました。</p>

<p>よくテレビで見るサーモグラフィ的な映像が家庭で楽しめますね。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00QEXIS2O&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p><img src="http://ecx.images-amazon.com/images/I/611TDjr5eoL._SL1276_.jpg" alt="" /></p>

<p>さらに探してみたら、iPhoneで同じことができるガジェットを発見しました。</p>

<p>ちょっと食指が動きましたが、ここまでの機能性は不要と思い直して、最初の2000円の温度計を購入しました。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00P80MJMO&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p><img src="http://ecx.images-amazon.com/images/I/71FTclXGmaL._SL1500_.jpg" alt="" /></p>

<p>プラスチックダンボールでの断熱効果はまた別途レポートしようと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6008607015]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663165]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>255</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[84859317@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/bg/register?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-12 10:33:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-12 01:33:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>電気工事士二種合格しました！</title>
		<link>https://tech.blog.uribou.me/dian-qi-gong-shi-shi-er-zhong-he-ge/</link>
		<pubDate>Thu, 18 Feb 2016 18:54:14 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dian-qi-gong-shi-shi-er-zhong-he-ge/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/dian-qi-gong-shi-shi-er-zhong-ji-neng-shi-yan-nihe-ge-suruniha/">技能試験に受かるには</a>で先走りましたが、無事合格しました。
これで堂々と自宅の電気工事ができます。
と同時に、不正会計の煽りでゴタゴタしている会社のリストラ策の一環、特別公募での電気工事業務枠に応募できるみたい。
身の振りをどうするか…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1476</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 03:54:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 18:54:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dian-qi-gong-shi-shi-er-zhong-he-ge]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e8%b3%87%e6%a0%bc"><![CDATA[資格]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/dian-qi-gong-shi-shi-er-zhong-ji-neng-shi-yan-nihe-ge-suruniha/">技能試験に受かるには</a>で先走りましたが、無事合格しました。</p>

<p>これで堂々と自宅の電気工事ができます。</p>

<p>と同時に、不正会計の煽りでゴタゴタしている会社のリストラ策の一環、特別公募での電気工事業務枠に応募できるみたい。</p>

<p>身の振りをどうするか…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5953586878]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505213]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[binance Препоръчителство]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[80024618@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/bg/register?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.156]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-25 13:00:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-25 04:00:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>仕事に悩む。</title>
		<link>https://tech.blog.uribou.me/jin-lu-ninao-mu/</link>
		<pubDate>Mon, 25 Jan 2016 13:32:14 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/jin-lu-ninao-mu/</guid>
		<description></description>
		<content:encoded><![CDATA[今、会社全体が揺れに揺れている上、自部門の事業が傾きまくってるわけですが、
<ul>
<li>その事業に残って最期まで見届けるか</li>
<li>社内の他事業に異動するか</li>
<li>転職するか</li>
</ul>
その岐路に立っています。
そして未だ結論出せず。
残っても先がない上、これ以上今の職場で年齢を重ねるのは、あまりにリスキー。
なので、他事業に異動するための手続きを進めているけれど、これも確実に通るとは言えず。
なので、他の道も同時並行で探している最中ではあるのだけれど…　セルフブランディングとか意識し始めたのが遅すぎたと激しく後悔しています。
とりあえず、選択肢を揃えるところから。まずは異動手続きを進めようと思う。
何のために働くのか、何が好きなのか、今後どうなりたいのかを真剣に考える機会をくれたこと、それだけは感謝したい。今の会社（事業部）に対して。
ある程度落ち着いたら、とあるセルフブランディング術の講義に是非とも参加したい。主に西日本で開催されていたけれど、最近関東で開催されたことを知り、次回の募集を逃すまいと、ストーキング中。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1477</wp:post_id>
		<wp:post_date><![CDATA[2016-01-25 22:32:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-25 13:32:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jin-lu-ninao-mu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今、会社全体が揺れに揺れている上、自部門の事業が傾きまくってるわけですが、</p>

<ul>
<li>その事業に残って最期まで見届けるか</li>
<li>社内の他事業に異動するか</li>
<li>転職するか</li>
</ul>

<p>その岐路に立っています。</p>

<p>そして未だ結論出せず。</p>

<p>残っても先がない上、これ以上今の職場で年齢を重ねるのは、あまりにリスキー。</p>

<p>なので、他事業に異動するための手続きを進めているけれど、これも確実に通るとは言えず。</p>

<p>なので、他の道も同時並行で探している最中ではあるのだけれど…　セルフブランディングとか意識し始めたのが遅すぎたと激しく後悔しています。</p>

<p>とりあえず、選択肢を揃えるところから。まずは異動手続きを進めようと思う。</p>

<p>何のために働くのか、何が好きなのか、今後どうなりたいのかを真剣に考える機会をくれたこと、それだけは感謝したい。今の会社（事業部）に対して。</p>

<p>ある程度落ち着いたら、とあるセルフブランディング術の講義に是非とも参加したい。主に西日本で開催されていたけれど、最近関東で開催されたことを知り、次回の募集を逃すまいと、ストーキング中。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6147928071]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490507]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ブログタイトルを考え直してみる</title>
		<link>https://tech.blog.uribou.me/burogutaitoruwokao-ezhi-su/</link>
		<pubDate>Fri, 05 Feb 2016 21:46:01 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/burogutaitoruwokao-ezhi-su/</guid>
		<description></description>
		<content:encoded><![CDATA[自給自足、DIY、プログラミング、仕事の迷走っぷり… と、一貫性のないことをブログに書いてきて、何だかなぁと思ったこと。
そもそも自分は何をしたいのか？
短期的には色々浮かぶけれど、長期的な視点で達成したいことは何なのか？
最近、時間がちょっと空くと、そればっかり考えてる。
何となくわかっている気もするけれど、簡潔に言葉で表現できない。
足りないのは国語力？読書量？論理的思考力？
ブログタイトルくらいサクッと決められないもんだろうか…]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1478</wp:post_id>
		<wp:post_date><![CDATA[2016-02-06 06:46:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-05 21:46:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[burogutaitoruwokao-ezhi-su]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>自給自足、DIY、プログラミング、仕事の迷走っぷり… と、一貫性のないことをブログに書いてきて、何だかなぁと思ったこと。</p>

<p>そもそも自分は何をしたいのか？</p>

<p>短期的には色々浮かぶけれど、長期的な視点で達成したいことは何なのか？</p>

<p>最近、時間がちょっと空くと、そればっかり考えてる。</p>

<p>何となくわかっている気もするけれど、簡潔に言葉で表現できない。</p>

<p>足りないのは国語力？読書量？論理的思考力？</p>

<p>ブログタイトルくらいサクッと決められないもんだろうか…</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7001998447]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477018]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>脱・東京電力を真剣に考え始める。</title>
		<link>https://tech.blog.uribou.me/tuo-dong-jing-dian-li-wozhen-jian-nikao-eru/</link>
		<pubDate>Mon, 08 Feb 2016 03:49:13 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tuo-dong-jing-dian-li-wozhen-jian-nikao-eru/</guid>
		<description></description>
		<content:encoded><![CDATA[関東脱出とかそういう話ではなく…
嫁さん合意の元、<strong>4月から始まる電力自由化に乗っかって、東京電力からの電力購入を止める</strong>ことにしました。
<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">オフグリッド化を試みている</a>とはいえ、完全に独立できるのはだいぶ先の話になりそうなので…
<h1>小売電気事業者一覧</h1>
資源エネルギー庁のHPに<a href="http://www.enecho.meti.go.jp/category/electricity_and_gas/electric/summary/retailers_list/">小売電気事業者の一覧</a>がありました。
その数、169件。
多すぎる…。
当然、再生可能エネルギー由来の電力購入優先なのですが…　どうやって精査しよう？
<h1>無理やり精査した結果</h1>
ざっくり調べてみると候補は以下のとおりですが、まだ決めかねてます。
<ul>
<li><a href="http://mitsuurokogreenenergy.jp/teaser/about/">ミツウロコグリーンエネルギー</a>
<ul>
<li>風力、太陽光中心</li>
<li>再生可能エネルギー導入に積極的とのこと</li>
</ul></li>
<li><a href="https://denki.marubeni.co.jp/about/">丸紅新電力</a>
<ul>
<li>水力、風力、太陽光、バイオマス、地熱</li>
<li>地熱発電技術力が高くて火山帯にある国なのに、なぜか地熱発電率が低い日本で、地熱由来電力を供給してくれるのは珍しい？</li>
<li>首都圏に５箇所の火力発電所を新設したらしい？うーん・・</li>
</ul></li>
</ul>
あとは、斬新すぎて自分の理解が追いつかない、えねぱそSTORE。個人宅で発電した電力を購入できるらしい。どういうシステム？
<ul>
<li><a href="http://store.ene-paso.net/">えねぱそSTORE</a></li>
</ul>
こちらは情報が少なすぎてよく分からず。
<ul>
<li><a href="https://ne-greena.jp/lineup/index.html">GREENa</a></li>
<li><a href="http://seikatsuclub.coop/coop/press/20141121a.html">生活クラブエナジー</a></li>
</ul>
<h1>結論</h1>
まだ成熟していないせいか、情報が少なすぎる気がしました。
山の木を切り倒して太陽光パネルを敷き詰めるような事業主の電力を買いたくはありませんが、どう調べればいいのやら…といった状態。
少ない情報を元にしてではありますが、今の所<a href="http://mitsuurokogreenenergy.jp/teaser/about/">ミツウロコグリーンエネルギー</a>さんですかね…。
取り急ぎ、原発由来電力を早々に切り離しにかかります。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1479</wp:post_id>
		<wp:post_date><![CDATA[2016-02-08 12:49:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-08 03:49:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tuo-dong-jing-dian-li-wozhen-jian-nikao-eru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>関東脱出とかそういう話ではなく…</p>

<p>嫁さん合意の元、<strong>4月から始まる電力自由化に乗っかって、東京電力からの電力購入を止める</strong>ことにしました。</p>

<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">オフグリッド化を試みている</a>とはいえ、完全に独立できるのはだいぶ先の話になりそうなので…</p>

<h1 id="">小売電気事業者一覧</h1>

<p>資源エネルギー庁のHPに<a href="http://www.enecho.meti.go.jp/category/electricity_and_gas/electric/summary/retailers_list/">小売電気事業者の一覧</a>がありました。</p>

<p>その数、169件。</p>

<p>多すぎる…。</p>

<p>当然、再生可能エネルギー由来の電力購入優先なのですが…　どうやって精査しよう？</p>

<h1 id="">無理やり精査した結果</h1>

<p>ざっくり調べてみると候補は以下のとおりですが、まだ決めかねてます。</p>

<ul>
<li><a href="http://mitsuurokogreenenergy.jp/teaser/about/">ミツウロコグリーンエネルギー</a>
<ul><li>風力、太陽光中心</li>
<li>再生可能エネルギー導入に積極的とのこと</li></ul></li>
<li><a href="https://denki.marubeni.co.jp/about/">丸紅新電力</a>
<ul><li>水力、風力、太陽光、バイオマス、地熱</li>
<li>地熱発電技術力が高くて火山帯にある国なのに、なぜか地熱発電率が低い日本で、地熱由来電力を供給してくれるのは珍しい？</li>
<li>首都圏に５箇所の火力発電所を新設したらしい？うーん・・</li></ul></li>
</ul>

<p>あとは、斬新すぎて自分の理解が追いつかない、えねぱそSTORE。個人宅で発電した電力を購入できるらしい。どういうシステム？</p>

<ul>
<li><a href="http://store.ene-paso.net/">えねぱそSTORE</a></li>
</ul>

<p>こちらは情報が少なすぎてよく分からず。</p>

<ul>
<li><a href="https://ne-greena.jp/lineup/index.html">GREENa</a></li>
<li><a href="http://seikatsuclub.coop/coop/press/20141121a.html">生活クラブエナジー</a></li>
</ul>

<h1 id="">結論</h1>

<p>まだ成熟していないせいか、情報が少なすぎる気がしました。</p>

<p>山の木を切り倒して太陽光パネルを敷き詰めるような事業主の電力を買いたくはありませんが、どう調べればいいのやら…といった状態。</p>

<p>少ない情報を元にしてではありますが、今の所<a href="http://mitsuurokogreenenergy.jp/teaser/about/">ミツウロコグリーンエネルギー</a>さんですかね…。</p>

<p>取り急ぎ、原発由来電力を早々に切り離しにかかります。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955557335]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447166]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>発電状況を可視化してインターネット経由で参照したい、特異な人のためのノウハウ。</title>
		<link>https://tech.blog.uribou.me/hems-like-system/</link>
		<pubDate>Sun, 21 Feb 2016 14:59:27 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/hems-like-system/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">自家発電し始めたら</a>、近未来的なかっこいい絵面で発電状況を管理したいと思ってたんですよね。
で、作ったのが<a href="http://grid.rinka-blossom.com/">これ</a>、発電状況管理用ダッシュボードです。
<img src="https://farm2.staticflickr.com/1563/24518689514_28251b3e31_z_d.jpg" alt="" />
上段が太陽光パネルからの電流量（ArrayCurrent）と充電流量（ChargeCurrent）を示しています。下段は太陽光パネルの電圧（ArrayVoltage）、蓄電池の電圧（BatteryBoltage）、蓄電池の目標電圧（TargetVoltage）です。
さらに下の方に行くと、単独のグラフで見たいパラメータを並べてます。チャージコントローラのヒートシンク温度とかですね。
<img src="https://farm2.staticflickr.com/1577/25056091411_6d9ebc0c5a_z_d.jpg" alt="" />
こういったデータを簡単にグラフで可視化してくれるオンラインサービスがいくつかあります。
実際に使ってみたのは以下の３つで、最終的には最も使いやすく、可視化後の見た目が良いkeenioに落ち着きました。
<ul>
<li><a href="https://keen.io/">keenio</a></li>
<li><a href="https://m2x.att.com">m2x</a></li>
<li><a href="https://xively.com/">xively</a></li>
</ul>
参考までに、xivelyだと以下のような無機質なグラフになります。
<img src="https://farm6.staticflickr.com/5624/24067056806_ccfd661283_z_d.jpg" alt="" />
xivelyは、挙げた３つのサービのなかで最も簡単に可視化できる利点を持ってますが、逆に何も変更できないのが欠点です。上の無機質なグラフ一択なんです…。
更に致命的な欠点もあって、時々過去データを紛失します。その上、10分間隔なんて長いインターバル置いてデータを送っていても、時々エラーで受け付けてくれません。
といった感じで、他に良いサービスはないものか…　と探していたら、m2xというサービスを見つけました。
m2xだと以下のようなグラフになります。
<img src="https://farm6.staticflickr.com/5629/24093132855_ce989f7ace_z_d.jpg" alt="" />
サーバは安定しているようなんですが、この見た目がなんとも…。
xivelyより後発のm2xでも満足できず、さらに後発のkeenioに辿り着きました。
keenioは、xivelyやm2xとは違って、オンラインのデータベースを提供するようなサービスです。グラフで可視化してブラウザから参照できるような仕組みは、基本的に提供してくれません。
が、PaaS等のサービスと併用することで、自分が望むデータのみを可視化して、好きなデザインを採用した<a href="http://keen.github.io/dashboards/">Dashboard</a>を設置することが出来ます。
Dashboardサンプルのソースは<a href="https://github.com/keen/dashboards/tree/gh-pages/examples">github</a>に置いてありますが、この辺りを眺めていると、<a href="http://getbootstrap.com/css/">TwitterのBootstrap</a>と<a href="https://developers.google.com/chart/interactive/docs/">Google Charts</a>を使用していることに気付くと思います。
例えば、<a href="http://grid.rinka-blossom.com/">発電状況管理用ダッシュボード</a>で多用しているのはAreaChartという種類のグラフですが、その設定は<a href="https://github.com/keen/dashboards/blob/gh-pages/examples/starter-kit/keen.dashboard.js">keen.dashboard.js</a>の以下の部分になります。
<pre><code class="javascript">var client = new Keen({
  projectId: "5368fa5436bf5a5623000000",
  readKey: "3f324dcb5636316d6865ab0ebbbbc725224c7f8f3e8899c7733439965d6d4a2c7f13bf7765458790bd50ec76b4361687f51cf626314585dc246bb51aeb455c0a1dd6ce77a993d9c953c5fc554d1d3530ca5d17bdc6d1333ef3d8146a990c79435bb2c7d936f259a22647a75407921056"
});
Keen.ready(function(){
  ...
  // ----------------------------------------
  // Pageviews Area Chart
  // ----------------------------------------
  var pageviews_timeline = new Keen.Query("count", {
    eventCollection: "pageviews",
    interval: "hourly",
    groupBy: "user.device_info.browser.family",
    timeframe: {
      start: "2014-05-04T00:00:00.000Z",
      end: "2014-05-05T00:00:00.000Z"
    }
  });
  client.draw(pageviews_timeline, document.getElementById("chart-01"), {
    chartType: "areachart",
    title: false,
    height: 250,
    width: "auto",
    chartOptions: {
      chartArea: {
        height: "85%",
        left: "5%",
        top: "5%",
        width: "80%"
      },
      isStacked: true
    }
  });
</code></pre>
Keenクラスは<a href="https://keen.io/docs/api/">keenio API reference</a>の通りですが、chartOptionsの設定は<a href="https://developers.google.com/chart/interactive/docs/gallery/areachart">Google ChartsのAreaChart</a>そのまんまです。
例えば、凡例をグラフ内に表示したい場合はlegendオプションを、Y軸に21000以上の値を表示したいならvAxisオプションを追加すれば良いことになります。
<pre><code class="javascript">  client.draw(pageviews_timeline, document.getElementById("chart-01"), {
    chartType: "areachart",
    title: false,
    height: 250,
    width: "auto",
    chartOptions: {
      chartArea: {
        height: "85%",
        left: "5%",
        top: "5%",
        width: "80%"
      },
      isStacked: true
      legend: {position: 'in'},
      vAxis: {minValue: 21000},
    }
  });
</code></pre>
発電状況監視に限らず、何らかのデータを収集して可視化し、インターネット経由で参照したい方の参考になれば幸いです。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1418</wp:post_id>
		<wp:post_date><![CDATA[2016-02-21 23:59:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-21 14:59:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hems-like-system]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1563/24518689514_28251b3e31_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">自家発電し始めたら</a>、近未来的なかっこいい絵面で発電状況を管理したいと思ってたんですよね。</p>

<p>で、作ったのが<a href="http://grid.rinka-blossom.com/">これ</a>、発電状況管理用ダッシュボードです。</p>

<p><img src="https://farm2.staticflickr.com/1563/24518689514_28251b3e31_z_d.jpg" alt="" />
上段が太陽光パネルからの電流量（ArrayCurrent）と充電流量（ChargeCurrent）を示しています。下段は太陽光パネルの電圧（ArrayVoltage）、蓄電池の電圧（BatteryBoltage）、蓄電池の目標電圧（TargetVoltage）です。</p>

<p>さらに下の方に行くと、単独のグラフで見たいパラメータを並べてます。チャージコントローラのヒートシンク温度とかですね。
<img src="https://farm2.staticflickr.com/1577/25056091411_6d9ebc0c5a_z_d.jpg" alt="" /></p>

<p>こういったデータを簡単にグラフで可視化してくれるオンラインサービスがいくつかあります。</p>

<p>実際に使ってみたのは以下の３つで、最終的には最も使いやすく、可視化後の見た目が良いkeenioに落ち着きました。</p>

<ul>
<li><a href="https://keen.io/">keenio</a></li>
<li><a href="https://m2x.att.com">m2x</a></li>
<li><a href="https://xively.com/">xively</a></li>
</ul>

<p>参考までに、xivelyだと以下のような無機質なグラフになります。</p>

<p><img src="https://farm6.staticflickr.com/5624/24067056806_ccfd661283_z_d.jpg" alt="" /></p>

<p>xivelyは、挙げた３つのサービのなかで最も簡単に可視化できる利点を持ってますが、逆に何も変更できないのが欠点です。上の無機質なグラフ一択なんです…。</p>

<p>更に致命的な欠点もあって、時々過去データを紛失します。その上、10分間隔なんて長いインターバル置いてデータを送っていても、時々エラーで受け付けてくれません。</p>

<p>といった感じで、他に良いサービスはないものか…　と探していたら、m2xというサービスを見つけました。</p>

<p>m2xだと以下のようなグラフになります。</p>

<p><img src="https://farm6.staticflickr.com/5629/24093132855_ce989f7ace_z_d.jpg" alt="" /></p>

<p>サーバは安定しているようなんですが、この見た目がなんとも…。</p>

<p>xivelyより後発のm2xでも満足できず、さらに後発のkeenioに辿り着きました。</p>

<p>keenioは、xivelyやm2xとは違って、オンラインのデータベースを提供するようなサービスです。グラフで可視化してブラウザから参照できるような仕組みは、基本的に提供してくれません。</p>

<p>が、PaaS等のサービスと併用することで、自分が望むデータのみを可視化して、好きなデザインを採用した<a href="http://keen.github.io/dashboards/">Dashboard</a>を設置することが出来ます。</p>

<p>Dashboardサンプルのソースは<a href="https://github.com/keen/dashboards/tree/gh-pages/examples">github</a>に置いてありますが、この辺りを眺めていると、<a href="http://getbootstrap.com/css/">TwitterのBootstrap</a>と<a href="https://developers.google.com/chart/interactive/docs/">Google Charts</a>を使用していることに気付くと思います。</p>

<p>例えば、<a href="http://grid.rinka-blossom.com/">発電状況管理用ダッシュボード</a>で多用しているのはAreaChartという種類のグラフですが、その設定は<a href="https://github.com/keen/dashboards/blob/gh-pages/examples/starter-kit/keen.dashboard.js">keen.dashboard.js</a>の以下の部分になります。</p>

<pre><code class="language-javascript">var client = new Keen({  
  projectId: "5368fa5436bf5a5623000000",
  readKey: "3f324dcb5636316d6865ab0ebbbbc725224c7f8f3e8899c7733439965d6d4a2c7f13bf7765458790bd50ec76b4361687f51cf626314585dc246bb51aeb455c0a1dd6ce77a993d9c953c5fc554d1d3530ca5d17bdc6d1333ef3d8146a990c79435bb2c7d936f259a22647a75407921056"
});

Keen.ready(function(){  
  ...

  // ----------------------------------------
  // Pageviews Area Chart
  // ----------------------------------------
  var pageviews_timeline = new Keen.Query("count", {
    eventCollection: "pageviews",
    interval: "hourly",
    groupBy: "user.device_info.browser.family",
    timeframe: {
      start: "2014-05-04T00:00:00.000Z",
      end: "2014-05-05T00:00:00.000Z"
    }
  });
  client.draw(pageviews_timeline, document.getElementById("chart-01"), {
    chartType: "areachart",
    title: false,
    height: 250,
    width: "auto",
    chartOptions: {
      chartArea: {
        height: "85%",
        left: "5%",
        top: "5%",
        width: "80%"
      },
      isStacked: true
    }
  });
</code></pre>

<p>Keenクラスは<a href="https://keen.io/docs/api/">keenio API reference</a>の通りですが、chartOptionsの設定は<a href="https://developers.google.com/chart/interactive/docs/gallery/areachart">Google ChartsのAreaChart</a>そのまんまです。</p>

<p>例えば、凡例をグラフ内に表示したい場合はlegendオプションを、Y軸に21000以上の値を表示したいならvAxisオプションを追加すれば良いことになります。</p>

<pre><code class="language-javascript">  client.draw(pageviews_timeline, document.getElementById("chart-01"), {
    chartType: "areachart",
    title: false,
    height: 250,
    width: "auto",
    chartOptions: {
      chartArea: {
        height: "85%",
        left: "5%",
        top: "5%",
        width: "80%"
      },
      isStacked: true
      legend: {position: 'in'},
      vAxis: {minValue: 21000},
    }
  });
</code></pre>

<p>発電状況監視に限らず、何らかのデータを収集して可視化し、インターネット経由で参照したい方の参考になれば幸いです。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947928626]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548384]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>307</wp:comment_id>
			<wp:comment_author><![CDATA[Binance美国注册]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[13220496@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/zh-CN/register?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.227]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-08-03 09:22:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-08-03 00:22:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>アウトレット太陽光パネルとは。</title>
		<link>https://tech.blog.uribou.me/autoretutotai-yang-guang-paneru/</link>
		<pubDate>Thu, 18 Feb 2016 18:55:50 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/autoretutotai-yang-guang-paneru/</guid>
		<description></description>
		<content:encoded><![CDATA[DIY太陽光システムで1500W家電も使えるようにするため、蓄電池容量を倍増しようと、久しぶりに<a href="http://www.offgrid-child.com/%E5%86%8D%E7%94%9F%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC%E8%B2%A9%E5%A3%B2%E3%82%B3%E3%83%BC%E3%83%8A%E3%83%BC/">非電化地域に蓄電池を贈る会</a>の鈴木さんとお話ししました。
高性能のリユースバッテリーを、新品価格の１割程度の価格で提供してくれる、庶民の味方です。
更には、１個当たり20kg超えのバッテリーを6個も、無料で届けてくれるなんて…　有難いやら申し訳ないやら…。
その際教えてくれたのが、アウトレット太陽光パネルのお話。
某有名日本企業製の太陽光パネルアウトレット品を、格安で提供してくれるそうです。
よくある服や雑貨のアウトレット品と同じく、工場で不良としてはじかれて正規品として販売されることのない、でも見た目も性能的にも正規品とほとんど変わらないパネルなんだとか。
ただ、どうも100W以上のパネルからだそうで、我が家のサブシステムにするには大きすぎて…　残念ながら見送り。
もっと広い庭付きの、日当たりが良い、南向きの家に引っ越したい！
最近会社の動向がおかしいので、引っ越しはありうるかも。希望通りの物件が見つかるか不明ですが…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1425</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 03:55:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 18:55:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[autoretutotai-yang-guang-paneru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>DIY太陽光システムで1500W家電も使えるようにするため、蓄電池容量を倍増しようと、久しぶりに<a href="http://www.offgrid-child.com/%E5%86%8D%E7%94%9F%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC%E8%B2%A9%E5%A3%B2%E3%82%B3%E3%83%BC%E3%83%8A%E3%83%BC/">非電化地域に蓄電池を贈る会</a>の鈴木さんとお話ししました。</p>

<p>高性能のリユースバッテリーを、新品価格の１割程度の価格で提供してくれる、庶民の味方です。</p>

<p>更には、１個当たり20kg超えのバッテリーを6個も、無料で届けてくれるなんて…　有難いやら申し訳ないやら…。</p>

<p>その際教えてくれたのが、アウトレット太陽光パネルのお話。</p>

<p>某有名日本企業製の太陽光パネルアウトレット品を、格安で提供してくれるそうです。</p>

<p>よくある服や雑貨のアウトレット品と同じく、工場で不良としてはじかれて正規品として販売されることのない、でも見た目も性能的にも正規品とほとんど変わらないパネルなんだとか。</p>

<p>ただ、どうも100W以上のパネルからだそうで、我が家のサブシステムにするには大きすぎて…　残念ながら見送り。</p>

<p>もっと広い庭付きの、日当たりが良い、南向きの家に引っ越したい！</p>

<p>最近会社の動向がおかしいので、引っ越しはありうるかも。希望通りの物件が見つかるか不明ですが…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5959835023]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533643]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>車もオフグリッド。</title>
		<link>https://tech.blog.uribou.me/kiyanpingukahuesuta/</link>
		<pubDate>Thu, 18 Feb 2016 18:57:50 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/kiyanpingukahuesuta/</guid>
		<description></description>
		<content:encoded><![CDATA[アウトドアビレッジの<a href="http://www.campingcar-festa.jp/">関東キャンピングカーフェスタ</a>に行ってきました。
太陽光パネルと蓄電池とインバータを内蔵した車内が、いわばオフグリッド化した家のようで…　施工する方も楽しいだろうなぁ。
<img src="https://farm6.staticflickr.com/5695/22758939243_285c7adaa0_k_d.jpg" alt="" />
全体はこんな感じ。
<img src="https://farm6.staticflickr.com/5723/23018145609_fa72182619_k_d.jpg" alt="" />
見た感じ、200W程度のパネルかな？屋根に設置して、おそらく屋根に穴を開けて、パネルの真下から車内に配線を通しているんでしょうね。屋根の面積があまり余ってそうだから、もっと大容量のパネルにすればいいのに。
<img src="https://farm6.staticflickr.com/5823/23303530541_2b9f6d7207_k_d.jpg" alt="" />
1500Wインバータを壁内に隠すように搭載していました。蓄電池容量は不明。居住空間の床下に格納しているとすれば…　2kWh程度かな？そんなに大容量ではないと思う。
けど、日本中を旅しながらブログを書いて生計を立てるような人であれば、十分生活していけるんだろうなぁ。
<img src="https://farm6.staticflickr.com/5654/23303530071_38b7037f3d_k_d.jpg" alt="" />
こちらは太陽光パネルなし。でもデザインや色使いが好み。なんて言ってると、また嫁から女子力高い好みと言われそう。
<img src="https://farm6.staticflickr.com/5645/23303530391_bbf8144436_k_d.jpg" alt="" />
<img src="https://farm1.staticflickr.com/753/22757730434_74a419e4fe_k_d.jpg" alt="" />
これを見た限りでは、おそらく軽トラの荷台に居住空間を後付けしたような構造なんだと思う。「あなただけのオープンカフェ」・・　魅力的すぎる。
<hr />
普通車と違って、軽は10年持たずに乗りつぶしてしまうことを考えると…　せっかくキャンピングカーとして軽トラを改造しても、その設備ごと廃車することになるんだろうか。
そう考えると、買うとしても牽引タイプが良いような気がする。発電システムは自前で。
発電蓄電容量を自分で自由に決めたいと思い始めると、やっぱりDIYなのかな。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1434</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 03:57:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 18:57:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[kiyanpingukahuesuta]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5695/22758939243_285c7adaa0_k_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>アウトドアビレッジの<a href="http://www.campingcar-festa.jp/">関東キャンピングカーフェスタ</a>に行ってきました。</p>

<p>太陽光パネルと蓄電池とインバータを内蔵した車内が、いわばオフグリッド化した家のようで…　施工する方も楽しいだろうなぁ。</p>

<p><img src="https://farm6.staticflickr.com/5695/22758939243_285c7adaa0_k_d.jpg" alt="" />
全体はこんな感じ。</p>

<p><img src="https://farm6.staticflickr.com/5723/23018145609_fa72182619_k_d.jpg" alt="" />
見た感じ、200W程度のパネルかな？屋根に設置して、おそらく屋根に穴を開けて、パネルの真下から車内に配線を通しているんでしょうね。屋根の面積があまり余ってそうだから、もっと大容量のパネルにすればいいのに。</p>

<p><img src="https://farm6.staticflickr.com/5823/23303530541_2b9f6d7207_k_d.jpg" alt="" />
1500Wインバータを壁内に隠すように搭載していました。蓄電池容量は不明。居住空間の床下に格納しているとすれば…　2kWh程度かな？そんなに大容量ではないと思う。</p>

<p>けど、日本中を旅しながらブログを書いて生計を立てるような人であれば、十分生活していけるんだろうなぁ。</p>

<p><img src="https://farm6.staticflickr.com/5654/23303530071_38b7037f3d_k_d.jpg" alt="" />
こちらは太陽光パネルなし。でもデザインや色使いが好み。なんて言ってると、また嫁から女子力高い好みと言われそう。</p>

<p><img src="https://farm6.staticflickr.com/5645/23303530391_bbf8144436_k_d.jpg" alt="" />
<img src="https://farm1.staticflickr.com/753/22757730434_74a419e4fe_k_d.jpg" alt="" />
これを見た限りでは、おそらく軽トラの荷台に居住空間を後付けしたような構造なんだと思う。「あなただけのオープンカフェ」・・　魅力的すぎる。</p>

<hr />

<p>普通車と違って、軽は10年持たずに乗りつぶしてしまうことを考えると…　せっかくキャンピングカーとして軽トラを改造しても、その設備ごと廃車することになるんだろうか。</p>

<p>そう考えると、買うとしても牽引タイプが良いような気がする。発電システムは自前で。</p>

<p>発電蓄電容量を自分で自由に決めたいと思い始めると、やっぱりDIYなのかな。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1435]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5965941629]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533644]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>matplotlibを使って可視化したグラフの文字化け解消法。</title>
		<link>https://tech.blog.uribou.me/matplotlibnohuontoshe-ding/</link>
		<pubDate>Thu, 10 Mar 2016 03:54:03 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/matplotlibnohuontoshe-ding/</guid>
		<description></description>
		<content:encoded><![CDATA[Excelで描けるようなグラフを、pythonで描くことができます。
その機能を提供しているのがmatplotlibというパッケージ。
Excelで描けるものをスクリプト言語で描く意味は、主に自動化のためですかね…。
日々更新される類のデータを定期的に取得してグラフ化し、その画像をメールで送信するのを自動化するような用途で使えます。
ここでは例として、<a href="http://www.mext.go.jp/b_menu/shingi/kokuritu/005/gijiroku/06052921/005/002.htm">文部科学省が公表している国立私立大の授業料推移データ</a>を使います。
以下のようにdata.csvファイルとして保存します。（vimで空白を,に置換する等、適当に整形してあります）
<pre><code>年度,授業料（円）,入学料（円）,検定料（円）,授業料（円）,入学料（円）,検定料（円）,授業料（倍）,入学料（倍）,検定料（倍）
昭和50年,36000,50000,5000,182677,95584,9647,5.1,1.9,1.9
昭和51年,96000,50000,7500,221844,121888,11452,2.3,2.4,1.5
昭和52年,96000,60000,7500,248066,135205,13084,2.6,2.3,1.7
昭和53年,144000,60000,10000,286568,157019,14722,2,2.6,1.5
...
</code></pre>
国立私立それぞれの授業料実データ部分をpythonで読み取り、リスト化して、ラベル設定や判例表示設定など調整し、最後にgraph.pngに書き出しています。
<pre><code class="python">from matplotlib import pyplot
with open("data.csv", "r", encoding="shift-jis") as fp:
    x, xlabels = [], []
    y1, y2 = [], []
    for linenum, line in enumerate(fp):
        if linenum is 0:
            continue
        x.append(linenum)
        xlabels.append(line.split(",")[0])
        y1.append(line.split(",")[1])
        y2.append(line.split(",")[4])
# x軸のラベル設定
pyplot.xticks(x, xlabels, rotation=90)
# x軸のラベル表示スペースを拡大
pyplot.subplots_adjust(bottom=0.2)
# cyanの実線で描画
pyplot.plot(x, y1, 'c-', label="国立大学")
# magendaの実線で描画
pyplot.plot(x, y2, 'm-', label="私立大学")
# grid, title, 凡例表示
pyplot.title("国立大学と私立大学の授業料等の推移")
pyplot.legend()
pyplot.grid()
#pyplot.show()
pyplot.savefig("graph.png")
</code></pre>
その結果が以下の図です。
<img src="https://farm6.staticflickr.com/5755/23508632942_794c8b078d_z_d.jpg" alt="" />
いわゆる豆腐ですね…。これはmatplotlibが日本語フォントを持たないためです。
ちょっと古い上、python2の情報ですが、<a href="http://blog.olgabotvinnik.com/blog/2012/11/15/2012-11-15-how-to-set-helvetica-as-the-default-sans-serif-font-in/">How to set Helvetica as the default sans-serif font in Matplotlib</a>でフォントの追加方法を解説しています。<sup id="fnref-1"><a href="#fn-1" class="jetpack-footnote">1</a></sup>
システムから日本語対応したフォントを引っ張ってきてもいいんですが、手持ちのマックにはttfフォントが見当たらなかったので、<a href="http://ipafont.ipa.go.jp/old/ipafont/download.html#en">IPAフォント</a>を頂きました。
ダウンロードしたzipファイルを解凍し、以下のようにコピーします。コピー先は環境に依るのでご注意を。
<pre><code class="bash">$ cp ~/Downloads/IPAfont00303/*.ttf /usr/local/lib/python3.4/site-packages/matplotlib/mpl-data/fonts/ttf/
</code></pre>
設定ファイルをホーム下にコピーして、それを編集します。
<pre><code class="bash">$ cp /usr/local/lib/python3.4/site-packages/matplotlib/mpl-data/matplotlibrc ~/.matplotlib/
$ vi ~/.matplotlib/matplotlibrc
</code></pre>
font.familyにフォント名を設定します。
ここで指定するのはフォントファイル名ではないのでご注意を。
<code>open ipa.ttf</code>のようにして、使いたいフォント名を確認してから設定してください。
<pre><code class="bash:matplotlibrc"># The font.size property is the default font size for text, given in pts.
# 12pt is the standard value.
#
font.family         : IPAmincho
</code></pre>
キャッシュデータを削除します。
<pre><code class="bash">$ rm ~/.matplotlib/fontList.py3k.cache
</code></pre>
これで、次回<code>import matplotlib</code>した時に、キャッシュデータが自動的に生成され、日本語表示が可能になります。
先ほどのpythonスクリプトを再実行すると、以下のように豆腐が解消されているのがわかります。
<img src="https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg" alt="" />
<div class="footnotes">
<hr />
<ol>
<li id="fn-1">
matplotlib標準のフォントが美しくない！とご立腹の様子&#160;<a href="#fnref-1">&#8617;</a>
</li>
</ol>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1439</wp:post_id>
		<wp:post_date><![CDATA[2016-03-10 12:54:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-10 03:54:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[matplotlibnohuontoshe-ding]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5755/23508632942_794c8b078d_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>Excelで描けるようなグラフを、pythonで描くことができます。</p>

<p>その機能を提供しているのがmatplotlibというパッケージ。</p>

<p>Excelで描けるものをスクリプト言語で描く意味は、主に自動化のためですかね…。</p>

<p>日々更新される類のデータを定期的に取得してグラフ化し、その画像をメールで送信するのを自動化するような用途で使えます。</p>

<p>ここでは例として、<a href="http://www.mext.go.jp/b_menu/shingi/kokuritu/005/gijiroku/06052921/005/002.htm">文部科学省が公表している国立私立大の授業料推移データ</a>を使います。</p>

<p>以下のようにdata.csvファイルとして保存します。（vimで空白を,に置換する等、適当に整形してあります）</p>

<pre><code>年度,授業料（円）,入学料（円）,検定料（円）,授業料（円）,入学料（円）,検定料（円）,授業料（倍）,入学料（倍）,検定料（倍）
昭和50年,36000,50000,5000,182677,95584,9647,5.1,1.9,1.9
昭和51年,96000,50000,7500,221844,121888,11452,2.3,2.4,1.5
昭和52年,96000,60000,7500,248066,135205,13084,2.6,2.3,1.7
昭和53年,144000,60000,10000,286568,157019,14722,2,2.6,1.5
...
</code></pre>

<p>国立私立それぞれの授業料実データ部分をpythonで読み取り、リスト化して、ラベル設定や判例表示設定など調整し、最後にgraph.pngに書き出しています。</p>

<pre><code class="language-python">from matplotlib import pyplot

with open("data.csv", "r", encoding="shift-jis") as fp:  
    x, xlabels = [], []
    y1, y2 = [], []
    for linenum, line in enumerate(fp):
        if linenum is 0:
            continue
        x.append(linenum)
        xlabels.append(line.split(",")[0])
        y1.append(line.split(",")[1])
        y2.append(line.split(",")[4])

# x軸のラベル設定
pyplot.xticks(x, xlabels, rotation=90)  
# x軸のラベル表示スペースを拡大
pyplot.subplots_adjust(bottom=0.2)

# cyanの実線で描画
pyplot.plot(x, y1, 'c-', label="国立大学")  
# magendaの実線で描画
pyplot.plot(x, y2, 'm-', label="私立大学")

# grid, title, 凡例表示
pyplot.title("国立大学と私立大学の授業料等の推移")  
pyplot.legend()  
pyplot.grid()

#pyplot.show()
pyplot.savefig("graph.png")  
</code></pre>

<p>その結果が以下の図です。</p>

<p><img src="https://farm6.staticflickr.com/5755/23508632942_794c8b078d_z_d.jpg" alt="" /></p>

<p>いわゆる豆腐ですね…。これはmatplotlibが日本語フォントを持たないためです。</p>

<p>ちょっと古い上、python2の情報ですが、<a href="http://blog.olgabotvinnik.com/blog/2012/11/15/2012-11-15-how-to-set-helvetica-as-the-default-sans-serif-font-in/">How to set Helvetica as the default sans-serif font in Matplotlib</a>でフォントの追加方法を解説しています。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>システムから日本語対応したフォントを引っ張ってきてもいいんですが、手持ちのマックにはttfフォントが見当たらなかったので、<a href="http://ipafont.ipa.go.jp/old/ipafont/download.html#en">IPAフォント</a>を頂きました。</p>

<p>ダウンロードしたzipファイルを解凍し、以下のようにコピーします。コピー先は環境に依るのでご注意を。</p>

<pre><code class="language-bash">$ cp ~/Downloads/IPAfont00303/*.ttf /usr/local/lib/python3.4/site-packages/matplotlib/mpl-data/fonts/ttf/
</code></pre>

<p>設定ファイルをホーム下にコピーして、それを編集します。</p>

<pre><code class="language-bash">$ cp /usr/local/lib/python3.4/site-packages/matplotlib/mpl-data/matplotlibrc ~/.matplotlib/
$ vi ~/.matplotlib/matplotlibrc
</code></pre>

<p>font.familyにフォント名を設定します。</p>

<p>ここで指定するのはフォントファイル名ではないのでご注意を。</p>

<p><code>open ipa.ttf</code>のようにして、使いたいフォント名を確認してから設定してください。</p>

<pre><code class="language-bash:matplotlibrc"># The font.size property is the default font size for text, given in pts.
# 12pt is the standard value.
#
font.family         : IPAmincho  
</code></pre>

<p>キャッシュデータを削除します。</p>

<pre><code class="language-bash">$ rm ~/.matplotlib/fontList.py3k.cache
</code></pre>

<p>これで、次回<code>import matplotlib</code>した時に、キャッシュデータが自動的に生成され、日本語表示が可能になります。</p>

<p>先ほどのpythonスクリプトを再実行すると、以下のように豆腐が解消されているのがわかります。</p>

<p><img src="https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg" alt="" /></p>

<div class="footnotes"><ol><li class="footnote" id="fn:1"><p>matplotlib標準のフォントが美しくない！とご立腹の様子 <a href="#fnref:1" title="return to article">_</a></p></li></ol></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1440]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942574869]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677712]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>anyenvとは？</title>
		<link>https://tech.blog.uribou.me/anyenvhuan-jing-gou-zhu-dehamatuta/</link>
		<pubDate>Sat, 20 Feb 2016 06:17:03 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/anyenvhuan-jing-gou-zhu-dehamatuta/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="http://grid.rinka-blossom.com/">発電状況監視システム</a>のような、何か簡単なWebシステムを作りたくなった時、Ruby on railsがあると楽に組めるだろうか？rubyも勉強してみようか？</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>なんて考え始めると、複数バージョンのインタプリタを管理できるrbenvを入れておきたくなる。同様に、pythonはpyenv、nodejsはndenvがある。名前が似ているだけでなく、使い方もほぼ同じ。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ということは、これらを一括管理する方法があるのでは？と思ってググったらありました。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><a href="https://github.com/riywo/anyenv">anyenv</a>です。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>インストール方法</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>homeディレクトリ下にanyenvコードをcloneします。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ git clone https://github.com/riywo/anyenv ~/.anyenv</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>環境設定</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>homeディレクトリ下の.bash_profileにanyenv環境設定して、shellを再起動する。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>bash以外のshellを使う方は適宜読み替えてください。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ echo 'export PATH="$HOME/.anyenv/bin:$PATH"' &gt;&gt; ~/.bash_profile
$ echo 'eval "$(anyenv init -)"' &gt;&gt; ~/.bash_profile
$ exec $SHELL -l</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>動作確認</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>以下のようにコマンドを実行すると、使用可能なenv系ツールをリストアップしてくれます。<br>…Go, Lua, Scalaにも同様のツールが存在することを、ここで初めて知りました。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ anyenv install -l
Available **envs:
   Renv
   crenv
   denv
   erlenv
   ...
   goenv
   luaenv
   ...
   ndenv
   ...
   pyenv
   rbenv
   ...
   scalaenv
</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>anyenv環境下のpyenvにプラグイン追加</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>virtualenvプラグインも、以下のようにすれば導入できます。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ git clone https://github.com/yyuu/pyenv-virtualenv ~/.anyenv/envs/pyenv/plugins/pyenv-virtualenv</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>トラブルシューティング</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>こんなに簡単な導入手順なのに、何故かハマりました。<br><code>pyenv global 3.5</code>のようにコマンド実行しても、pythonバージョンが切り替わらないのです。<br>いろいろググってみると、どうも事前にpyenvを導入してuninstallした際、pyenvの設定ファイルが中途半端にhome下に残っていたのが原因であることが判明しました。<sup><a href="#fn-1">1</a></sup></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>pyenvのバージョン選択はまず、pyenv shellで設定されるPYENV_VERSION環境変数。<br>次に、pyenv localで設定できる、カレントディレクトリにある.python-versionファイル。<br>次に、pyenv global で設定できる~/.pyenv/versionファイル。<br>全てがなかったらsystemのpython。</p></blockquote>
<!-- /wp:quote -->

<!-- wp:heading -->
<h2>まとめ（注意点）</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>既にpyenvインストール済みだった人は上記のファイルを全て削除しておきましょう。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1445</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 15:17:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 06:17:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[anyenvhuan-jing-gou-zhu-dehamatuta]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://grid.rinka-blossom.com/">発電状況監視システム</a>のような、何か簡単なWebシステムを作りたくなった時、Ruby on railsがあると楽に組めるだろうか？rubyも勉強してみようか？</p>
<p>なんて考え始めると、複数バージョンのインタプリタを管理できるrbenvを入れておきたくなる。</p>
<p>同様に、pythonにもpyenvというものがある。</p>
<p>最近流行りのnodejsにもndenvというものがある。</p>
<p>名前が似ているだけでなく、使い方もほぼ同じ。</p>
<p>ということは、これらを一括管理する方法があるのでは？</p>
<p>と思ってググったらありました。<a href="https://github.com/riywo/anyenv">anyenv</a>です。</p>
<p>インストール手順は上のリンク先を見れば分かりますが、一応解説。</p>
<h4 id="anyenv">anyenvコード取得</h4>
<p>homeディレクトリ下にanyenvコードをcloneします。</p>
<pre><code class="language-bash">$ git clone https://github.com/riywo/anyenv ~/.anyenv
</code></pre>
<h4 id="anyenv">anyenv環境設定</h4>
<p>homeディレクトリ下の.bash_profileにanyenv環境設定して、shellを再起動する。</p>
<p>bash以外のshellを使う方は適宜読み替えてください。</p>
<pre><code class="language-bash">$ echo 'export PATH="$HOME/.anyenv/bin:$PATH"' &gt;&gt; ~/.bash_profile
$ echo 'eval "$(anyenv init -)"' &gt;&gt; ~/.bash_profile
$ exec $SHELL -l
</code></pre>
<h4 id="anyenv">anyenv動作確認</h4>
<p>以下のようにコマンドを実行すると、使用可能なenv系ツールをリストアップしてくれます。</p>
<p>…Go, Lua, Scalaにも同様のツールが存在することを、ここで初めて知りました。</p>
<pre><code class="language-bash">$ anyenv install -l
Available **envs:
   Renv
   crenv
   denv
   erlenv
   ...
   goenv
   luaenv
   ...
   ndenv
   ...
   pyenv
   rbenv
   ...
   scalaenv
</code></pre>
<h4 id="anyenvpyenv">anyenv環境下のpyenvへのプラグイン導入</h4>
<p>virtualenvプラグインも、以下のようにすれば導入できます。</p>
<pre><code class="language-bash">$ git clone https://github.com/yyuu/pyenv-virtualenv ~/.anyenv/envs/pyenv/plugins/pyenv-virtualenv
</code></pre>
<h4 id="">トラブルシューティング</h4>
<p>こんなに簡単な導入手順なのに、何故かハマりました。</p>
<p><code>pyenv global 3.5</code>のようにコマンド実行しても、pythonバージョンが切り替わらないのです。</p>
<p>いろいろググってみると、どうも事前にpyenvを導入した後uninstallした際、pyenvの設定ファイルが中途半端にhome下に残っていたのが原因であることが判明しました。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<pre><code>pyenvのバージョン選択はまず、pyenv shellで設定されるPYENV_VERSION環境変数。
次に、pyenv localで設定できる、カレントディレクトリにある.python-versionファイル。
次に、pyenv global で設定できる~/.pyenv/versionファイル。
全てがなかったらsystemのpython。
</code></pre>
<p>既にpyenvインストール済みだった人は上記のファイルを全て削除しておきましょう。</p>
<div class="footnotes"><ol><li class="footnote" id="fn:1"><p><a href="http://qiita.com/1234224576/items/11ad3509fe4b0a9a33ed">pyenv globalで切り替わらない！</a> <a href="#fnref:1" title="return to article">_</a></p></li></ol></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[anyenvとは？]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[pyenv, nodenv, rbenvなどを統括して管理することができるanyenvの紹介。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[Python,Node,Ruby,anyenv]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989696280]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577288]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2707]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3205]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>237</wp:comment_id>
			<wp:comment_author><![CDATA[registro na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[27296939@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/pt-BR/register?ref=S5H7X3LP</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.159]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-30 04:53:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-29 19:53:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>太陽光発電＆蓄電システムの作りかた - 太陽光パネルの選定方法</title>
		<link>https://tech.blog.uribou.me/tai-yang-guang-fa-dian-xu-dian-sisutemunozuo-rikata-tai-yang-guang-paneruxuan-ding/</link>
		<pubDate>Thu, 18 Feb 2016 18:55:26 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tai-yang-guang-fa-dian-xu-dian-sisutemunozuo-rikata-tai-yang-guang-paneruxuan-ding/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.chikuden-sys.com/introdisp.asp?id=53">蓄電システム.com</a>さんで<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">DIY太陽光発電</a>の紹介をしたら、SunPower社製パネルについて質問されたので、太陽光パネルに特化した情報としてまとめました。
こんなタイトル付けといて何ですが、太陽光パネルってどうやって選定すればいいんでしょう？ 目的に応じて決めてくださいと言われればそれまでですが…。
仕様（電気的特性）はメーカー毎に異なるし、システム容量を後から増やしたくてもパネル仕様を揃えないといけないし…　そもそも、その時メーカーが残っているかも心配（失礼）。
そんな悩みを解決してくれそうな話が<a href="http://blog.rinka-blossom.com/shi-min-notamenotai-yang-guang-fa-dian-biao-zhun-hua-seminakai-cui-dong-jing-du-qian-dai-tian-qu/">市民のための標準化セミナー</a>で語られたんですが…　分かったことは、仕様標準化にはまだまだ時間がかかるということでした。
のんびり標準化を待てないので、とりあえず<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">太陽光発電＆蓄電システムを自作する</a>に当たって収集した情報を以下にまとめます。

結論から言うと、単位面積当りの発電量が最大のSunPower社製327Wパネルがベストということになりました。
モジュール変換効率 [%]が20.1、単位面積当り発電容量 [W/m^2]が200.5のやつですね。
最初は発電容量当たり単価で最安のパネルを購入しようと思ったんですが、この表には挙げていないパネルの口コミで、保護ガラス（樹脂？）が紫外線で日焼けしたとか、雨水が配線に入り込んでショートしたとか、安いパネルにはそれなりのトラブルが起きているようで…　多少コストをかけてでも品質を重視しました。
これでパネルは決まりましたが、何枚購入するのか？蓄電池は？チャージコントローラは？家電を使うにはDC-&gt;ACインバータも必要だよね？
…ということで、まだまだ続きます。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1466</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 03:55:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 18:55:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tai-yang-guang-fa-dian-xu-dian-sisutemunozuo-rikata-tai-yang-guang-paneruxuan-ding]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://www.chikuden-sys.com/introdisp.asp?id=53">蓄電システム.com</a>さんで<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">DIY太陽光発電</a>の紹介をしたら、SunPower社製パネルについて質問されたので、太陽光パネルに特化した情報としてまとめました。</p>

<p>こんなタイトル付けといて何ですが、太陽光パネルってどうやって選定すればいいんでしょう？ 目的に応じて決めてくださいと言われればそれまでですが…。</p>

<p>仕様（電気的特性）はメーカー毎に異なるし、システム容量を後から増やしたくてもパネル仕様を揃えないといけないし…　そもそも、その時メーカーが残っているかも心配（失礼）。</p>

<p>そんな悩みを解決してくれそうな話が<a href="http://blog.rinka-blossom.com/shi-min-notamenotai-yang-guang-fa-dian-biao-zhun-hua-seminakai-cui-dong-jing-du-qian-dai-tian-qu/">市民のための標準化セミナー</a>で語られたんですが…　分かったことは、仕様標準化にはまだまだ時間がかかるということでした。</p>

<p>のんびり標準化を待てないので、とりあえず<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">太陽光発電＆蓄電システムを自作する</a>に当たって収集した情報を以下にまとめます。</p>

<iframe width="100%" height="400" style="embed" src="https://docs.google.com/spreadsheets/d/1j-a-eZra982_TnLE04xUpUaMg5EQGjxsTRICRdtFSv8/pubhtml?gid=290653402&amp;single=true&amp;widget=true&amp;headers=false"></iframe>

<p>結論から言うと、単位面積当りの発電量が最大のSunPower社製327Wパネルがベストということになりました。</p>

<p>モジュール変換効率 [%]が20.1、単位面積当り発電容量 [W/m^2]が200.5のやつですね。</p>

<p>最初は発電容量当たり単価で最安のパネルを購入しようと思ったんですが、この表には挙げていないパネルの口コミで、保護ガラス（樹脂？）が紫外線で日焼けしたとか、雨水が配線に入り込んでショートしたとか、安いパネルにはそれなりのトラブルが起きているようで…　多少コストをかけてでも品質を重視しました。</p>

<p>これでパネルは決まりましたが、何枚購入するのか？蓄電池は？チャージコントローラは？家電を使うにはDC->ACインバータも必要だよね？</p>

<p>…ということで、まだまだ続きます。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5953589158]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505214]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>193</wp:comment_id>
			<wp:comment_author><![CDATA[Recomandare Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[48318223@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ro/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.152]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-28 02:24:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-27 17:24:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>268</wp:comment_id>
			<wp:comment_author><![CDATA[Kod polecajacy Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[70485058@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/pl/register-person?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.76]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-10 06:27:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-09 21:27:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>300</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[86090550@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/it/join?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.229]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-30 17:28:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-30 08:28:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>GitHubにpush済みのpythonコードをCIしてみる。</title>
		<link>https://tech.blog.uribou.me/githubnipushji-minopythonkodowocisitemita/</link>
		<pubDate>Sat, 20 Feb 2016 06:16:41 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/githubnipushji-minopythonkodowocisitemita/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">DIY太陽光発電システム</a>の発電状況をグラフ化してチェックできるようにしていますが、背後では、Pythonというプログラミング言語で記述したソフトウェアが動いています。
<a href="https://pypi.python.org/pypi/tsmppt60-driver">PyPIに公開している</a>ので、ぜひ使ってやってください。こんな感じ↓で見つかります。
<pre><code class="bash">$ pip search tsmppt60-driver
tsmppt60-driver           - Python module to get status of your solar charge controller TS-MPPT-60.
</code></pre>
…事前に<a href="http://blog.rinka-blossom.com/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/">TS-MPPT-60</a>を入手する必要はありますが…。
PyPIで公開するに当たって、さすがにテストは真面目に書かないとまずかろうと思い、unittestやdoctest、nose、MiniMockを使ってみました。
個別の詳細はまた今度に回して、今回はCI（Continuous Integration）、継続的インテグレーションネタです。
有名なCIツールにJenkinsがありますが、今回作ったtsmppt60-driverはgithubにOSSとしてpushしてあるので、流行りの<a href="https://travis-ci.org">TravisCI</a>を使わせて頂きました。
TravisCIを使うに当たって、全体の流れは以下のような感じでになります。
<ol>
<li>TravisCIアカウント登録（GitHubアカウントとの連携可能）</li>
<li>TravisCIのWeb設定画面上で、CI対象のGitHubリポジトリを選択</li>
<li>TravisCIのヘルプに従って設定した.travis.ymlファイルをGitHubリポジトリに追加</li>
</ol>
githubアカウントを持っていれば、ブラウザ上で簡単なGUI操作のみで、githubへのpushをhookして自動ビルド＆テストしてくれる上、<a href="https://travis-ci.org/dodo5522/tsmppt60_driver"><img src="https://travis-ci.org/dodo5522/tsmppt60_driver.svg" alt="Build Status" /></a>のようなバッジをREADMEに表示することもできます。
その設定は、以下のようにとても簡単です。
まずは<a href="https://travis-ci.org">TravisCI</a>に飛び、Sign In With GitHubでログインします。
<img src="https://farm2.staticflickr.com/1683/24018710732_dd04f20cd2_z_d.jpg" alt="" />
すると、すでにGitHubとの連携が完了しているので、CIしたいリポジトリのスイッチをONにします。
以下の例ではhome-automationリポジトリのCIをONしています。
<img src="https://farm6.staticflickr.com/5804/23498590394_75ab8d395d_z_d.jpg" alt="" />
上の画像のギアマークをクリックすると、詳細な設定やビルド履歴を参照することができます。
多分、デフォルトでpushをトリガーにビルドする設定になっていると思います。
<img src="https://farm6.staticflickr.com/5634/23759022829_dfae5a669a_z_d.jpg" alt="" />
あとは<a href="https://docs.travis-ci.com/user/languages/python">TravisCIのヘルプ</a>に従って設定した.travis.ymlファイルをGitHubリポジトリに追加、pushするだけです。
tsmppt60-driverはpythonパッケージなので、以下のようにpython向けの設定になります。
<pre><code class="ruby">language: python
python:
  - "2.7"
  - "3.2"
  - "3.3"
  - "3.4"
  - "3.5"
  # does not have headers provided, please ask https://launchpad.net/~pypy/+archive/ppa
  # maintainers to fix their pypy-dev package.
  - "pypy"
# command to install dependencies
install:
  - pip install .
  - pip install -r requirements.txt -r test-requirements.txt
# command to run tests
script: nosetests
</code></pre>
Pythonの主要バージョン、最新バージョンは一通り押さえておき、ビルド、テスト前に必要なパッケージをpip installするようにしています。
requirements.txtはtsmppt60-driverが動作するのに必要な依存パッケージが、test-requirements.txtにはテスト実行するのに必要な依存パッケージが記載されています。
<pre><code class="bash">$ cat requirements.txt
requests&gt;=2.8.0
$ cat test-requirements.txt
MiniMock&gt;=1.2.8
nose
coverage
</code></pre>
これらの.travis.yml, requirements.txt, test-requirements.txtをtsmppt60-driverリポジトリのルートに置いてgit add/commit/pushすると、以下のように結果が表示されます。
<img src="https://farm2.staticflickr.com/1678/24127272595_9b76e39601_z_d.jpg" alt="" />
ビルドやテストに成功し続けている間は何も通知してくれませんが、一旦失敗するとJenkinsのようにFailした旨をメールで通知してくれます。
GitHubのREADMEにビルドステータスのバッジを表示する方法も<a href="https://docs.travis-ci.com/user/status-images/">TravisCIのヘルプ</a>に載っています。
privateリポジトリのビルドステータス表示には、バッジへのURLにセキュリティトークンが含まれるので注意、とありますが、今回のリポジトリはpublic扱いなので問題ありません。
これでテスト環境は整ったので、次は<a href="http://blog.rinka-blossom.com/githubnipushji-minopythonkodowo/">テストコードのカバレッジ計測</a>に続きます。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1467</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 15:16:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 06:16:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[githubnipushji-minopythonkodowocisitemita]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">DIY太陽光発電システム</a>の発電状況をグラフ化してチェックできるようにしていますが、背後では、Pythonというプログラミング言語で記述したソフトウェアが動いています。</p>
<p><a href="https://pypi.python.org/pypi/tsmppt60-driver">PyPIに公開している</a>ので、ぜひ使ってやってください。こんな感じ↓で見つかります。</p>
<pre><code class="language-bash">$ pip search tsmppt60-driver
tsmppt60-driver           - Python module to get status of your solar charge controller TS-MPPT-60.
</code></pre>
<p>…事前に<a href="http://blog.rinka-blossom.com/tai-yang-guang-fa-dian-sisutemunoyao-tiyazikontororawoxuan-bu/">TS-MPPT-60</a>を入手する必要はありますが…。</p>
<p>PyPIで公開するに当たって、さすがにテストは真面目に書かないとまずかろうと思い、unittestやdoctest、nose、MiniMockを使ってみました。</p>
<p>個別の詳細はまた今度に回して、今回はCI（Continuous Integration）、継続的インテグレーションネタです。</p>
<p>有名なCIツールにJenkinsがありますが、今回作ったtsmppt60-driverはgithubにOSSとしてpushしてあるので、流行りの<a href="https://travis-ci.org">TravisCI</a>を使わせて頂きました。</p>
<p>TravisCIを使うに当たって、全体の流れは以下のような感じでになります。</p>
<ol>
<li>TravisCIアカウント登録（GitHubアカウントとの連携可能）  </li>
<li>TravisCIのWeb設定画面上で、CI対象のGitHubリポジトリを選択  </li>
<li>TravisCIのヘルプに従って設定した.travis.ymlファイルをGitHubリポジトリに追加</li>
</ol>
<p>githubアカウントを持っていれば、ブラウザ上で簡単なGUI操作のみで、githubへのpushをhookして自動ビルド＆テストしてくれる上、<a href="https://travis-ci.org/dodo5522/tsmppt60_driver"><img src="https://travis-ci.org/dodo5522/tsmppt60_driver.svg" alt="Build Status" title="" /></a>のようなバッジをREADMEに表示することもできます。</p>
<p>その設定は、以下のようにとても簡単です。</p>
<p>まずは<a href="https://travis-ci.org">TravisCI</a>に飛び、Sign In With GitHubでログインします。</p>
<p><img src="https://farm2.staticflickr.com/1683/24018710732_dd04f20cd2_z_d.jpg" alt="" /></p>
<p>すると、すでにGitHubとの連携が完了しているので、CIしたいリポジトリのスイッチをONにします。</p>
<p>以下の例ではhome-automationリポジトリのCIをONしています。</p>
<p><img src="https://farm6.staticflickr.com/5804/23498590394_75ab8d395d_z_d.jpg" alt="" /></p>
<p>上の画像のギアマークをクリックすると、詳細な設定やビルド履歴を参照することができます。</p>
<p>多分、デフォルトでpushをトリガーにビルドする設定になっていると思います。</p>
<p><img src="https://farm6.staticflickr.com/5634/23759022829_dfae5a669a_z_d.jpg" alt="" /></p>
<p>あとは<a href="https://docs.travis-ci.com/user/languages/python">TravisCIのヘルプ</a>に従って設定した.travis.ymlファイルをGitHubリポジトリに追加、pushするだけです。</p>
<p>tsmppt60-driverはpythonパッケージなので、以下のようにpython向けの設定になります。</p>
<pre><code class="language-ruby">language: python
python:
  - "2.7"
  - "3.2"
  - "3.3"
  - "3.4"
  - "3.5"
  # does not have headers provided, please ask https://launchpad.net/~pypy/+archive/ppa
  # maintainers to fix their pypy-dev package.
  - "pypy"
# command to install dependencies
install:
  - pip install .
  - pip install -r requirements.txt -r test-requirements.txt
# command to run tests
script: nosetests
</code></pre>
<p>Pythonの主要バージョン、最新バージョンは一通り押さえておき、ビルド、テスト前に必要なパッケージをpip installするようにしています。</p>
<p>requirements.txtはtsmppt60-driverが動作するのに必要な依存パッケージが、test-requirements.txtにはテスト実行するのに必要な依存パッケージが記載されています。</p>
<pre><code class="language-bash">$ cat requirements.txt
requests&gt;=2.8.0
$ cat test-requirements.txt
MiniMock&gt;=1.2.8
nose
coverage
</code></pre>
<p>これらの.travis.yml, requirements.txt, test-requirements.txtをtsmppt60-driverリポジトリのルートに置いてgit add/commit/pushすると、以下のように結果が表示されます。</p>
<p><img src="https://farm2.staticflickr.com/1678/24127272595_9b76e39601_z_d.jpg" alt="" /></p>
<p>ビルドやテストに成功し続けている間は何も通知してくれませんが、一旦失敗するとJenkinsのようにFailした旨をメールで通知してくれます。</p>
<p>GitHubのREADMEにビルドステータスのバッジを表示する方法も<a href="https://docs.travis-ci.com/user/status-images/">TravisCIのヘルプ</a>に載っています。</p>
<p>privateリポジトリのビルドステータス表示には、バッジへのURLにセキュリティトークンが含まれるので注意、とありますが、今回のリポジトリはpublic扱いなので問題ありません。</p>
<p>これでテスト環境は整ったので、次は<a href="http://blog.rinka-blossom.com/githubnipushji-minopythonkodowo/">テストコードのカバレッジ計測</a>に続きます。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1981]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5973417378]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605562]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>277</wp:comment_id>
			<wp:comment_author><![CDATA[開立binance帳戶]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[90934160@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/zh-TC/register-person?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.159]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-11 17:35:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-11 08:35:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>GitHubにpush済みのpythonコードのテストカバレッジを計測してみる。</title>
		<link>https://tech.blog.uribou.me/githubnipushji-minopythonkodowo/</link>
		<pubDate>Sat, 20 Feb 2016 06:17:22 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/githubnipushji-minopythonkodowo/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/githubnipushji-minopythonkodowocisitemita/">DIY太陽光発電システム監視用のPythonドライバをCIしてみた記事</a>の続編で、今回はpythonコードのカバレッジ（テストのカバー率）を計測します。
<h1>コマンドラインでカバレッジを計測する</h1>
<h2>まずはテストを実行</h2>
以下のようなtest runnerコードを毎回書くのは面倒なので、noseパッケージをpip installし、nosetestsコマンドを使います。
<pre><code class="python">import unittest
if __name__ == "__main__":
    all_tests = unittest.TestLoader().discover("./", "test_*.py")
    unittest.TextTestRunner(verbosity=1).run(all_tests)
</code></pre>
nosetestsは、noseパッケージをpip installすると使えるようになるコマンドです。
<a href="http://nose.readthedocs.org/en/latest/finding_tests.html">nosetestsのテストケースの見つけ方</a>を見ると分かりますが、とりあえずunittest.TestCaseのサブクラスをかき集めて実行してくれるようです。
<pre><code class="bash">tsmppt60_driver $ nosetests -v
test_init (test_base_controller.TestChargeControllerStatus) ... ok
test_compute_scaler_current (test_base_management.TestMb) ... ok
test_compute_scaler_voltage (test_base_management.TestMb) ... ok
----------------------------------------------------------------------
Ran 3 tests in 0.230s
OK
</code></pre>
<a href="http://nose.readthedocs.org/en/latest/setuptools_integration.html">setup.pyのtest_suiteに以下のように書いておき</a>、noseにtest suiteをかき集めてもらって、setup.py経由でテスト実行することも可能です。
<pre><code class="python">setup (
    # ...
    test_suite='nose.collector'
)
</code></pre>
<pre><code class="bash">$ python setup.py test
</code></pre>
<h2>テストカバレッジ計測</h2>
カバレッジを計測するには、以下の--with-coverageオプションをつけます。
命令網羅だけでなく、--cover-branchesオプションで分岐網羅もできるようです。
<pre><code class="bash">tsmppt60_driver $ nosetests -h | grep coverage
...
  --with-coverage       Enable plugin Coverage:  Activate a coverage report
  --cover-branches      Include branch coverage in coverage report
...
tsmppt60_driver $ nosetests -v --with-coverage
test_init (test_base_controller.TestChargeControllerStatus) ... ok
test_compute_scaler_current (test_base_management.TestMb) ... ok
test_compute_scaler_voltage (test_base_management.TestMb) ... ok
Name                                                       Stmts   Miss  Cover   Missing
----------------------------------------------------------------------------------------
minimock.py                                                  197     79    60%   51-57, 63-66, 108-109, 113, 229, 231-232, 237-238, 241-242, 258, 264-265, 290, 294, 297, 300, 325, 335-341, 364, 388-393, 408, 417-418, 455-465, 479-487, 493, 506, 517, 526, 528, 530-533, 537, 540-548, 551-565, 643-644
...
</code></pre>
カバレッジ計測結果は、同ディレクトリ下の.coverageファイルに記録されます。
<pre><code class="bash">tsmppt60_driver $ cat .coverage | head
!coverage.py: This is a private format, don't read it directly!{"lines": {"/Users/
</code></pre>
<h2>テストカバレッジレポート作成</h2>
coverageパッケージとコマンドを使って、カバレッジレポートを生成します。
pip installしてヘルプ表示すると、以下のようなサブコマンドが用意されていることが分かります。
<pre><code class="bash">$ pip install coverage
$ coverage --help
Coverage.py, version 4.0.3
Measure, collect, and report on code coverage in Python programs.
usage: coverage &lt;command&gt; [options] [args]
Commands:
    annotate    Annotate source files with execution information.
    combine     Combine a number of data files.
    erase       Erase previously collected coverage data.
    help        Get help on using coverage.py.
    html        Create an HTML report.
    report      Report coverage stats on modules.
    run         Run a Python program and measure code execution.
    xml         Create an XML report of coverage results.
</code></pre>
カバレッジ計測結果が記録された.coverageファイルを読み込み、レポートを表示することができます。
--includeオプションで対象モジュールを絞らないと、テスト対象以外の依存モジュールも一緒くたにレポートしてしまい、煩雑になるのでご注意を。
<pre><code class="bash">tsmppt60_driver $ coverage report --include=tsmppt60_driver/*
Name                          Stmts   Miss  Cover
-------------------------------------------------
tsmppt60_driver/__init__.py      28     16    43%
tsmppt60_driver/base.py         117     51    56%
tsmppt60_driver/status.py        60     37    38%
-------------------------------------------------
TOTAL                           205    104    49%
</code></pre>
コード内のどのパスがカバーできて、どのパスがカバーできていないのかを視覚的に確認できる、HTML形式のレポートも生成できます。
<pre><code class="bash">tsmppt60_driver $ coverage html --include=tsmppt60_driver/*
tsmppt60_driver $ open htmlcov/index.html
</code></pre>
こんな感じです。
<img src="https://farm2.staticflickr.com/1515/24413123892_ab1d5b8613_z_d.jpg" alt="" />
<h1>Webサービスを使って自動的にカバレッジを計測する</h1>
前置きが長くなりましたが、ここからが本題です。
<a href="http://blog.rinka-blossom.com/githubnipushji-minopythonkodowocisitemita/">前回紹介したTravisCI</a>と連携しやすい<a href="https://coveralls.io/">Coveralls</a>を使います。
.travis.ymlが設定済みであれば以下のような内容だったと思いますが、
<pre><code>language: python
python:
  - "2.7"
# - "3.2"
# TODO:
# dest.write(u'  ')
# ^
# SyntaxError: invalid syntax
  - "3.3"
  - "3.4"
  - "3.5"
  # does not have headers provided, please ask https://launchpad.net/~pypy/+archive/ppa
  # maintainers to fix their pypy-dev package.
  - "pypy"
# command to install dependencies
install:
  - pip install .
  - pip install -r requirements.txt -r test-requirements.txt
</code></pre>
これに以下を追記して、
<pre><code>script:
  - coverage run --source=tsmppt60_driver setup.py test
after_success:
  - coveralls
</code></pre>
test-requirements.txtには以下を追記します。
<pre><code>nose
coverage
coveralls
</code></pre>
ほとんど<a href="https://github.com/coagulant/coveralls-python">coveralls-python</a>のREADMEに従うだけなんですけどね。
これでgithubリポジトリにpushする度、自動的にTravisCIでテストを回し、自動的にCoverallsでカバレッジ計測してくれます。
<img src="https://farm2.staticflickr.com/1638/23537481564_56c23632fe_z_d.jpg" alt="" />
<h1>バッジの表示</h1>
<h2>Coverallsのカバレッジ計測結果バッジ</h2>
coverallsのREPOSで、カバレッジ計測後に対象のリポジトリのリンクに飛び、画面上の方に「BADGE YOUR REPO: TSMPPT60_DRIVER」というリンクがあるので、そこでバッジのURLを取得できます。
MARKDOWN形式他、一通り揃っているので、環境に合わせてコピペして使ってください。
<img src="https://farm2.staticflickr.com/1672/23797864439_021774c782_z_d.jpg" alt="" />
GitHubのREADMEにも、以下のようなバッジを貼ることができます。
<a href="https://coveralls.io/github/dodo5522/tsmppt60_driver?branch=master"><img src="https://coveralls.io/repos/dodo5522/tsmppt60_driver/badge.svg?branch=master&amp;service=github" alt="Coverage Status" /></a>
<h2>いろいろなバッジ</h2>
TravisCIやCoverallsのようなバッジをREADMEに貼ると、なんだか他の情報も同じようなバッジで表示したくなります。よね？
そこで、<a href="http://shields.io/">shields.io</a>というサービスがあります。
上記リンク先の通り、以下のようなフォーマットで様々なバッジを自分で作ることができます。
<pre><code>https://img.shields.io/badge/&lt;SUBJECT&gt;-&lt;STATUS&gt;-&lt;COLOR&gt;.svg
</code></pre>
例えば以下のようにすると、
<pre><code>https://img.shields.io/badge/python-3.3,3.4,3.5-blue.svg
</code></pre>
以下のように表示されます。
<a href="https://pypi.python.org/pypi/tsmppt60_driver"><img src="https://img.shields.io/badge/python-3.3,3.4,3.5-blue.svg" alt="python" /></a>
あまり意味はないですが、こんなバッジも作れちゃいます。
<a href=""><img src="https://img.shields.io/badge/hello-world-red.svg" alt="hoge" /></a>
<a href=""><img src="https://img.shields.io/badge/mac-book-green.svg" alt="hoge" /></a>
<a href=""><img src="https://img.shields.io/badge/ubuntu-14.04-yellow.svg" alt="hoge" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1469</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 15:17:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 06:17:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[githubnipushji-minopythonkodowo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1515/24413123892_ab1d5b8613_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/githubnipushji-minopythonkodowocisitemita/">DIY太陽光発電システム監視用のPythonドライバをCIしてみた記事</a>の続編で、今回はpythonコードのカバレッジ（テストのカバー率）を計測します。</p>

<h1 id="">コマンドラインでカバレッジを計測する</h1>

<h2 id="">まずはテストを実行</h2>

<p>以下のようなtest runnerコードを毎回書くのは面倒なので、noseパッケージをpip installし、nosetestsコマンドを使います。</p>

<pre><code class="language-python">import unittest

if __name__ == "__main__":  
    all_tests = unittest.TestLoader().discover("./", "test_*.py")
    unittest.TextTestRunner(verbosity=1).run(all_tests)
</code></pre>

<p>nosetestsは、noseパッケージをpip installすると使えるようになるコマンドです。</p>

<p><a href="http://nose.readthedocs.org/en/latest/finding_tests.html">nosetestsのテストケースの見つけ方</a>を見ると分かりますが、とりあえずunittest.TestCaseのサブクラスをかき集めて実行してくれるようです。</p>

<pre><code class="language-bash">tsmppt60_driver $ nosetests -v  
test_init (test_base_controller.TestChargeControllerStatus) ... ok  
test_compute_scaler_current (test_base_management.TestMb) ... ok  
test_compute_scaler_voltage (test_base_management.TestMb) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.230s

OK  
</code></pre>

<p><a href="http://nose.readthedocs.org/en/latest/setuptools_integration.html">setup.pyのtest_suiteに以下のように書いておき</a>、noseにtest suiteをかき集めてもらって、setup.py経由でテスト実行することも可能です。</p>

<pre><code class="language-python">setup (  
    # ...
    test_suite='nose.collector'
)
</code></pre>

<pre><code class="language-bash">$ python setup.py test
</code></pre>

<h2 id="">テストカバレッジ計測</h2>

<p>カバレッジを計測するには、以下の--with-coverageオプションをつけます。</p>

<p>命令網羅だけでなく、--cover-branchesオプションで分岐網羅もできるようです。</p>

<pre><code class="language-bash">tsmppt60_driver $ nosetests -h | grep coverage  
...
  --with-coverage       Enable plugin Coverage:  Activate a coverage report
  --cover-branches      Include branch coverage in coverage report
...

tsmppt60_driver $ nosetests -v --with-coverage  
test_init (test_base_controller.TestChargeControllerStatus) ... ok  
test_compute_scaler_current (test_base_management.TestMb) ... ok  
test_compute_scaler_voltage (test_base_management.TestMb) ... ok

Name                                                       Stmts   Miss  Cover   Missing  
----------------------------------------------------------------------------------------
minimock.py                                                  197     79    60%   51-57, 63-66, 108-109, 113, 229, 231-232, 237-238, 241-242, 258, 264-265, 290, 294, 297, 300, 325, 335-341, 364, 388-393, 408, 417-418, 455-465, 479-487, 493, 506, 517, 526, 528, 530-533, 537, 540-548, 551-565, 643-644  
...
</code></pre>

<p>カバレッジ計測結果は、同ディレクトリ下の.coverageファイルに記録されます。</p>

<pre><code class="language-bash">tsmppt60_driver $ cat .coverage | head  
!coverage.py: This is a private format, don't read it directly!{"lines": {"/Users/
</code></pre>

<h2 id="">テストカバレッジレポート作成</h2>

<p>coverageパッケージとコマンドを使って、カバレッジレポートを生成します。 <br />
pip installしてヘルプ表示すると、以下のようなサブコマンドが用意されていることが分かります。</p>

<pre><code class="language-bash">$ pip install coverage
$ coverage --help
Coverage.py, version 4.0.3  
Measure, collect, and report on code coverage in Python programs.

usage: coverage &lt;command&gt; [options] [args]

Commands:  
    annotate    Annotate source files with execution information.
    combine     Combine a number of data files.
    erase       Erase previously collected coverage data.
    help        Get help on using coverage.py.
    html        Create an HTML report.
    report      Report coverage stats on modules.
    run         Run a Python program and measure code execution.
    xml         Create an XML report of coverage results.
</code></pre>

<p>カバレッジ計測結果が記録された.coverageファイルを読み込み、レポートを表示することができます。</p>

<p>--includeオプションで対象モジュールを絞らないと、テスト対象以外の依存モジュールも一緒くたにレポートしてしまい、煩雑になるのでご注意を。</p>

<pre><code class="language-bash">tsmppt60_driver $ coverage report --include=tsmppt60_driver/*  
Name                          Stmts   Miss  Cover  
-------------------------------------------------
tsmppt60_driver/__init__.py      28     16    43%  
tsmppt60_driver/base.py         117     51    56%  
tsmppt60_driver/status.py        60     37    38%  
-------------------------------------------------
TOTAL                           205    104    49%  
</code></pre>

<p>コード内のどのパスがカバーできて、どのパスがカバーできていないのかを視覚的に確認できる、HTML形式のレポートも生成できます。</p>

<pre><code class="language-bash">tsmppt60_driver $ coverage html --include=tsmppt60_driver/*  
tsmppt60_driver $ open htmlcov/index.html  
</code></pre>

<p>こんな感じです。</p>

<p><img src="https://farm2.staticflickr.com/1515/24413123892_ab1d5b8613_z_d.jpg" alt="" /></p>

<h1 id="web">Webサービスを使って自動的にカバレッジを計測する</h1>

<p>前置きが長くなりましたが、ここからが本題です。</p>

<p><a href="http://blog.rinka-blossom.com/githubnipushji-minopythonkodowocisitemita/">前回紹介したTravisCI</a>と連携しやすい<a href="https://coveralls.io/">Coveralls</a>を使います。</p>

<p>.travis.ymlが設定済みであれば以下のような内容だったと思いますが、</p>

<pre><code>language: python  
python:  
  - "2.7"
# - "3.2"
# TODO:
# dest.write(u'  ')
# ^
# SyntaxError: invalid syntax
  - "3.3"
  - "3.4"
  - "3.5"
  # does not have headers provided, please ask https://launchpad.net/~pypy/+archive/ppa
  # maintainers to fix their pypy-dev package.
  - "pypy"
# command to install dependencies
install:  
  - pip install .
  - pip install -r requirements.txt -r test-requirements.txt
</code></pre>

<p>これに以下を追記して、</p>

<pre><code>script:  
  - coverage run --source=tsmppt60_driver setup.py test
after_success:  
  - coveralls
</code></pre>

<p>test-requirements.txtには以下を追記します。</p>

<pre><code>nose  
coverage  
coveralls  
</code></pre>

<p>ほとんど<a href="https://github.com/coagulant/coveralls-python">coveralls-python</a>のREADMEに従うだけなんですけどね。</p>

<p>これでgithubリポジトリにpushする度、自動的にTravisCIでテストを回し、自動的にCoverallsでカバレッジ計測してくれます。</p>

<p><img src="https://farm2.staticflickr.com/1638/23537481564_56c23632fe_z_d.jpg" alt="" /></p>

<h1 id="">バッジの表示</h1>

<h2 id="coveralls">Coverallsのカバレッジ計測結果バッジ</h2>

<p>coverallsのREPOSで、カバレッジ計測後に対象のリポジトリのリンクに飛び、画面上の方に「BADGE YOUR REPO: TSMPPT60_DRIVER」というリンクがあるので、そこでバッジのURLを取得できます。</p>

<p>MARKDOWN形式他、一通り揃っているので、環境に合わせてコピペして使ってください。</p>

<p><img src="https://farm2.staticflickr.com/1672/23797864439_021774c782_z_d.jpg" alt="" /></p>

<p>GitHubのREADMEにも、以下のようなバッジを貼ることができます。</p>

<p><a href="https://coveralls.io/github/dodo5522/tsmppt60_driver?branch=master"><img src="https://co
veralls.io/repos/dodo5522/tsmppt60_driver/badge.svg?branch=master&amp;service=github" alt="Coverage Status" title="" /></a></p>

<h2 id="">いろいろなバッジ</h2>

<p>TravisCIやCoverallsのようなバッジをREADMEに貼ると、なんだか他の情報も同じようなバッジで表示したくなります。よね？</p>

<p>そこで、<a href="http://shields.io/">shields.io</a>というサービスがあります。</p>

<p>上記リンク先の通り、以下のようなフォーマットで様々なバッジを自分で作ることができます。</p>

<pre><code>https://img.shields.io/badge/&lt;SUBJECT&gt;-&lt;STATUS&gt;-&lt;COLOR&gt;.svg  
</code></pre>

<p>例えば以下のようにすると、</p>

<pre><code>https://img.shields.io/badge/python-3.3,3.4,3.5-blue.svg  
</code></pre>

<p>以下のように表示されます。</p>

<p><a href="https://pypi.python.org/pypi/tsmppt60_driver"><img src="https://img.shields.io/badge/python-3.3,3.4,3.5-blue.svg" alt="python" title="" /></a></p>

<p>あまり意味はないですが、こんなバッジも作れちゃいます。</p>

<p><a href=""><img src="https://img.shields.io/badge/hello-world-red.svg" alt="hoge" title="" /></a>
<a href=""><img src="https://img.shields.io/badge/mac-book-green.svg" alt="hoge" title="" /></a>
<a href=""><img src="https://img.shields.io/badge/ubuntu-14.04-yellow.svg" alt="hoge" title="" /></a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1470]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942070356]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620242]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>259</wp:comment_id>
			<wp:comment_author><![CDATA[registrati su binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[33760746@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/it/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.69]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-19 17:46:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-19 08:46:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>晴天の日は蓄電が捗ります。</title>
		<link>https://tech.blog.uribou.me/xu-dian-gabu-rimasu/</link>
		<pubDate>Thu, 18 Feb 2016 18:54:58 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/xu-dian-gabu-rimasu/</guid>
		<description></description>
		<content:encoded><![CDATA[今日も有難い晴天。
<a href="http://grid.rinka-blossom.com/">ここ一週間は蓄電が捗っています。</a>
掃除機や電気ケトル、ドライヤーと日々活躍しているので、雨天曇天だと憂鬱なんですよね… 電気買わないといけないので。
我が家で使ってるのは以下の通り、フツーの家電です。それぞれ微妙に型番が違いますが… あ、掃除機がタイムセール中だ。



かなりバブリーな家電が揃ってますが、いい物を長く使うのが我が家のポリシーなので…。
ミーレの掃除機は使い続けて早10年です。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1475</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 03:54:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 18:54:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xu-dian-gabu-rimasu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今日も有難い晴天。</p>

<p><a href="http://grid.rinka-blossom.com/">ここ一週間は蓄電が捗っています。</a></p>

<p>掃除機や電気ケトル、ドライヤーと日々活躍しているので、雨天曇天だと憂鬱なんですよね… 電気買わないといけないので。</p>

<p>我が家で使ってるのは以下の通り、フツーの家電です。それぞれ微妙に型番が違いますが… あ、掃除機がタイムセール中だ。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B018G2F2X8&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00LP0FEOG&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00BT7VOI0&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>かなりバブリーな家電が揃ってますが、いい物を長く使うのが我が家のポリシーなので…。</p>

<p>ミーレの掃除機は使い続けて早10年です。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941043327]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505214]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>249</wp:comment_id>
			<wp:comment_author><![CDATA[bonus za registraci na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[59297836@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/cs/register?ref=WTOZ531Y</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-08 00:14:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-07 15:14:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>データサイエンス、機械学習の入口に立ってみる。</title>
		<link>https://tech.blog.uribou.me/detasaiensuji-jie-xue-xi-nogai-yao-woxue-bubizjapan/</link>
		<pubDate>Sat, 20 Feb 2016 06:17:46 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/detasaiensuji-jie-xue-xi-nogai-yao-woxue-bubizjapan/</guid>
		<description></description>
		<content:encoded><![CDATA[現職の会社がおかしくなり始めてから、大企業にありがちな上流工程に特化していくことに危機感を感じたこともあり、<a href="http://ritsuan.com/company/reason/">リツアンSTC</a>さんとコンタクトを取り始めたんですが、まだ入社したわけでもないのに<a href="http://bizjapan.org/">Bizjapan</a>さん主催の勉強会に誘っていただきました。
開催日2/13(土)の前日夜でしたが…Σ（・□・；）
ただ、その概要を見ると、これは受講しないと勿体なすぎると感じたので、嫁さんに無理を言って行きました。勉強会後の打ち上げが本番という定説がありますが、今回はさすがに参加せず…。
コモディティ化しがちな製品群よりも、データの加工、分析、可視化技術はそうそう簡単に廃れないのかなと。一部、現職の製品でも活用していた気がするけど。
以下、<a href="https://machinelearningstudy.doorkeeper.jp/events/39151">DoorKeeper</a>に掲載されている概要です。
<h1>概要</h1>
<blockquote>
  今回公開するレクチャーは、Bizjapanの理系大学院生により、文系の学生が大半を占めるBizjapanメンバーにデータサイエンスを導入するために作成し使用しているものです。内容的には、データサイエンス概略、機械学習概略、データ解析を行うためのツール比較(Excel、R、Python) 、Excelのヘルプの使い方、Excelによるデータの視覚化、線形回帰・曲線回帰とその最適な回帰式の選択方法、ソルバーでの最適化問題の解法、統計ソフトRの基本操作とRStudio、使用するデータについての解説、Rでのデータ操作、help関数の使い方とhelp画面の見方、CRANの見方、パッケージのインストール・実行方法、グラフィクスパッケージ、各種機械学習関数の使い方とformulaについて、機械学習のパッケージを用いた機械学習例、データの読み込みと書き出し、を予定しています。
</blockquote>
統計学をちゃんと学んでいない身としては、色々とガクブルな用語が出てきます…。
でも、Rの基本操作以降はPythonやRubyをある程度以上触ったことがあれば、意外とついて行けました。
とは言え、R組み込み関数のhelpに表示される機能や実装概要を読んでもサッパリ理解できませんけど…。
<h1>イベント趣旨</h1>
これも<a href="https://machinelearningstudy.doorkeeper.jp/events/39151">DoorKeeper</a>に掲載されています。
<blockquote>
  ・データサイエンス・機械学習の概要を理解する。<br />
  ・Excel, Rでのデータの可視化と機械学習をできるようにする。<br />
  ・CRANの各種パッケージを利用できるようにする。
</blockquote>
開始時刻には遅れてしまったので、概要は聞けませんでした。
ExcelはOSXにインストール済みだったのが2011版な上、サービスパックをインストールしてなくてリゾルバーなどのツールが入っておらず、全くついていけませんでした。というより、サンプルデータも持ってなかったので、ただ聞いてるだけになってしまった…。
Rでのデータ可視化以降は、とても楽しいひと時でした。
今回は機械学習までは進みませんでしたが、RStudioの使い方、CRANの見所を教えてもらえたので、サンプルを試しながらRに触れて慣れることはできそうです。
具体的には以下のような内容でした。
<ol>
<li>RStudioコンソールで<code>data()</code>を実行すると、R/RStudioに標準で用意されたサンプルデータを参照できる
<pre><code>AirPassengers      Monthly Airline Passenger Numbers
                   1949-1960
BJsales            Sales Data with Leading Indicator
BJsales.lead (BJsales)
                   Sales Data with Leading Indicator
BOD                Biochemical Oxygen Demand
CO2                Carbon Dioxide Uptake in Grass Plants
</code></pre></li>
<li>同様に、<code>help(CO2)</code>を実行すると、そのデータに関する詳細説明を参照できる
<pre><code>CO2 {datasets}  R Documentation
Carbon Dioxide Uptake in Grass Plants
Description
The CO2 data frame has 84 rows and 5 columns of data from an experiment on the cold tolerance of the grass species Echinochloa crus-galli.
...
Examples
require(stats); require(graphics)
coplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b")
## fit the data for the first plant
fm1 &lt;- nls(uptake ~ SSasymp(conc, Asym, lrc, c0),
   data = CO2, subset = Plant == "Qn1")
summary(fm1)
## fit each plant separately
fmlist &lt;- list()
for (pp in levels(CO2$Plant)) {
  fmlist[[pp]] &lt;- nls(uptake ~ SSasymp(conc, Asym, lrc, c0),
      data = CO2, subset = Plant == pp)
}
## check the coefficients by plant
print(sapply(fmlist, coef), digits = 3)
</code></pre></li>
<li>データのhelpの最後の方にあるExampleに書かれたサンプルコードを実行すると、そのデータをどう加工し分析すべきか、大体分かる</p></li>
</ol>
<p>上記のCO2データだと結果をprintするだけなので面白みが少ないんですが、<code>help(heatmap)</code>のサンプルを試すと面白いです。
<pre><code class="r">require(graphics); require(grDevices)
x  &lt;- as.matrix(mtcars)
rc &lt;- rainbow(nrow(x), start = 0, end = .3)
cc &lt;- rainbow(ncol(x), start = 0, end = .3)
hv &lt;- heatmap(x, col = cm.colors(256), scale = "column",
              RowSideColors = rc, ColSideColors = cc, margins = c(5,10),
              xlab = "specification variables", ylab =  "Car Models",
              main = "heatmap(&lt;Mtcars data&gt;, ..., scale = ?"column?")")
utils::str(hv) # the two re-ordering index vectors
## no column dendrogram (nor reordering) at all:
heatmap(x, Colv = NA, col = cm.colors(256), scale = "column",
        RowSideColors = rc, margins = c(5,10),
        xlab = "specification variables", ylab =  "Car Models",
        main = "heatmap(&lt;Mtcars data&gt;, ..., scale = ?"column?")")
## "no nothing"
heatmap(x, Rowv = NA, Colv = NA, scale = "column",
        main = "heatmap(*, NA, NA) ~= image(t(x))")
round(Ca &lt;- cor(attitude), 2)
symnum(Ca) # simple graphic
heatmap(Ca,               symm = TRUE, margins = c(6,6)) # with reorder()
heatmap(Ca, Rowv = FALSE, symm = TRUE, margins = c(6,6)) # _NO_ reorder()
## slightly artificial with color bar, without and with ordering:
cc &lt;- rainbow(nrow(Ca))
heatmap(Ca, Rowv = FALSE, symm = TRUE, RowSideColors = cc, ColSideColors = cc,
    margins = c(6,6))
heatmap(Ca,     symm = TRUE, RowSideColors = cc, ColSideColors = cc,
    margins = c(6,6))
## For variable clustering, rather use distance based on cor():
symnum( cU &lt;- cor(USJudgeRatings) )
hU &lt;- heatmap(cU, Rowv = FALSE, symm = TRUE, col = topo.colors(16),
             distfun = function(c) as.dist(1 - c), keep.dendro = TRUE)
## The Correlation matrix with same reordering:
round(100 * cU[hU[[1]], hU[[2]]])
## The column dendrogram:
utils::str(hU$Colv)
</code></pre>
上記サンプルをRStudioで実行すると、以下のような結果が得られます。
<img src="https://farm2.staticflickr.com/1689/24380251354_785bec4ccf_z_d.jpg" alt="" />
似たような傾向のデータをソートした上で可視化しているので、マップ画像を見るとその傾向が見て取れると思います。
<h1>まとめ</h1>
世の中ではこういう分析が行われているのか…と、興奮と危機感が入り混じった気持ちになりました。
次回の開催日は未定っぽいですが、今後も参加して理解を深めたい内容でした。
また、これほどサンプルコードやサンプルデータが充実したhelpは他にないと感じました。Rだけでなく、Pythonでデータ解析の勉強をする際にも活用できそうです。
そんなわけで、途中で止まっていたこの本を再開しようかなと。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1482</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 15:17:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 06:17:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[detasaiensuji-jie-xue-xi-nogai-yao-woxue-bubizjapan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1689/24380251354_785bec4ccf_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942607119]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620243]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>227</wp:comment_id>
			<wp:comment_author><![CDATA[Бонус при регистрации на binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[61248478@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ru-UA/register-person?ref=DB40ITMB</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.4]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-19 11:32:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-19 02:32:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>賃貸でもキャットウォークを設置したい人に情報まとめ。</title>
		<link>https://tech.blog.uribou.me/ren-dai-dekiyatutouokuwodiysuruniha/</link>
		<pubDate>Sat, 27 Feb 2016 04:21:23 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ren-dai-dekiyatutouokuwodiysuruniha/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/ren-dai-diynowei-fang-dear-wall/">スマホ充電用の太陽光パネル設置に使ってみたディアウォール</a>ですが、本当に作りたいのはキャットウォーク。
調べてみると、既に実践している人は意外と多い様子。
「<a href="http://www.huffingtonpost.jp/mansionlab/diy_b_5565939.html">DIYでマンションにキャットウォークを作ってみた</a>」で実践されている方法は、まんまやろうとしていたことでした。
ただ、想像していた通りではありますが、かなり大変そう…。
何より、棚や階段の高さを事前にしっかりと設計しておいて、組み立て後に高さ調整をしづらいというのが、尻込みしてしまいますね…。
使い心地を検証するのは人間ではなく、あくまで猫たちなので、後から高さを微調整できるようにしたい。
と思って眺めていると、「<a href="http://b.zma.jp/entry/2014/12/13/212901">DIYでキャットウォークを作ってみたよ</a>」という記事を発見！
ブログ作者のM氏は「<a href="http://blog.livedoor.jp/neko_chin/archives/5429003.html">ベンガル猫ブログ</a>」の記事に影響を受けて作り始めたそうです。
<pre><code>DIYでキャットウォークを作り始めたのは、ちょうど２年前の今頃の時期。
我が家にミーコさんが来て２ヶ月経った頃でキャットウォークが欲しくなり、
たまたま見かけた「ベンガル猫ブログ」に影響を受けて作り始めました。
</code></pre>
ベンガル猫さんも、最初に見つけた記事並みかそれ以上に本格的に作られてます。
自分は ~~もっと楽に作りたい~~ 無垢材の雰囲気を活かしつつ作りたいので、M氏の記事を参考にしようかと。
材料は全て、自宅近くのジョイフル本田で揃うことは調査済みなので、まずはざっくり設計してみようと思います。
次回に続く。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1483</wp:post_id>
		<wp:post_date><![CDATA[2016-02-27 13:21:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-27 04:21:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ren-dai-dekiyatutouokuwodiysuruniha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/ren-dai-diynowei-fang-dear-wall/">スマホ充電用の太陽光パネル設置に使ってみたディアウォール</a>ですが、本当に作りたいのはキャットウォーク。</p>

<p>調べてみると、既に実践している人は意外と多い様子。</p>

<p>「<a href="http://www.huffingtonpost.jp/mansionlab/diy_b_5565939.html">DIYでマンションにキャットウォークを作ってみた</a>」で実践されている方法は、まんまやろうとしていたことでした。</p>

<p>ただ、想像していた通りではありますが、かなり大変そう…。</p>

<p>何より、棚や階段の高さを事前にしっかりと設計しておいて、組み立て後に高さ調整をしづらいというのが、尻込みしてしまいますね…。</p>

<p>使い心地を検証するのは人間ではなく、あくまで猫たちなので、後から高さを微調整できるようにしたい。</p>

<p>と思って眺めていると、「<a href="http://b.zma.jp/entry/2014/12/13/212901">DIYでキャットウォークを作ってみたよ</a>」という記事を発見！</p>

<p>ブログ作者のM氏は「<a href="http://blog.livedoor.jp/neko_chin/archives/5429003.html">ベンガル猫ブログ</a>」の記事に影響を受けて作り始めたそうです。</p>

<pre><code>DIYでキャットウォークを作り始めたのは、ちょうど２年前の今頃の時期。

我が家にミーコさんが来て２ヶ月経った頃でキャットウォークが欲しくなり、

たまたま見かけた「ベンガル猫ブログ」に影響を受けて作り始めました。
</code></pre>

<p>ベンガル猫さんも、最初に見つけた記事並みかそれ以上に本格的に作られてます。</p>

<p>自分は <del>もっと楽に作りたい</del> 無垢材の雰囲気を活かしつつ作りたいので、M氏の記事を参考にしようかと。</p>

<p>材料は全て、自宅近くのジョイフル本田で揃うことは調査済みなので、まずはざっくり設計してみようと思います。</p>

<p>次回に続く。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6008768045]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634491]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>自家発電した電気は使い切らないと勿体無い。</title>
		<link>https://tech.blog.uribou.me/zi-jia-fa-dian-sitadian-qi-hashi-iqie-ranaitomotutainai/</link>
		<pubDate>Sat, 27 Feb 2016 05:13:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/zi-jia-fa-dian-sitadian-qi-hashi-iqie-ranaitomotutainai/</guid>
		<description></description>
		<content:encoded><![CDATA[今日は晴れてて、とってもいい天気。
発電もさぞ捗っているだろうと夕刻にチェックしてみると…
<img src="https://farm2.staticflickr.com/1646/25299734725_a3d526710c_z_d.jpg" alt="" />
まったく捗ってない！
上段のグラフを見てわかる通り、朝９時を境に電流量が激減して4A以下をキープしてしまっています。
局地的に濃い曇空になったのか？
蓄電池の電圧をチェックしてみると。
<img src="https://farm2.staticflickr.com/1717/25211434191_a8f4cf7e2b_z_d.jpg" alt="" />
朝9時の時点で満充電されてしまったようです…。
太陽光で蓄電池を効率的に充電するにはチャージコントローラ（チャーコン）が必須なんですが、蓄電池の電圧が最大28.6Vまで充電するようにチャーコンを設定してるんですね。
充電しすぎると、蓄電池内部の電解液からガスが発生したり、蓄電池の寿命を縮めたりするので、それを防ぐための機能がチャーコンには元々備わっているんです。
今日は妻と子供がママ会へ、自分もカメラのレンズを物色しに出かけてしまったので、昼に電気を使わなかったのが原因で、余剰電力ができてしまいました。
貯められなかった分の電力は捨てられるので、非常に勿体無い…。
ちなみに、晴れの日の太陽光を蓄電池に貯め切った場合に描くグラフは以下のように綺麗なカーブを描きます。
<img src="https://farm2.staticflickr.com/1537/25187103752_16a71ce3ae_z_d.jpg" alt="" />
理想的には、今の倍の容量の蓄電池（14kWh）と、3倍の太陽光パネル（2kW）が欲しいんですが、庭面積の問題で夢叶わず。引っ越したいな…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1485</wp:post_id>
		<wp:post_date><![CDATA[2016-02-27 14:13:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-27 05:13:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[zi-jia-fa-dian-sitadian-qi-hashi-iqie-ranaitomotutainai]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1646/25299734725_a3d526710c_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今日は晴れてて、とってもいい天気。</p>

<p>発電もさぞ捗っているだろうと夕刻にチェックしてみると…</p>

<p><img src="https://farm2.staticflickr.com/1646/25299734725_a3d526710c_z_d.jpg" alt="" /></p>

<p>まったく捗ってない！</p>

<p>上段のグラフを見てわかる通り、朝９時を境に電流量が激減して4A以下をキープしてしまっています。</p>

<p>局地的に濃い曇空になったのか？</p>

<p>蓄電池の電圧をチェックしてみると。</p>

<p><img src="https://farm2.staticflickr.com/1717/25211434191_a8f4cf7e2b_z_d.jpg" alt="" /></p>

<p>朝9時の時点で満充電されてしまったようです…。</p>

<p>太陽光で蓄電池を効率的に充電するにはチャージコントローラ（チャーコン）が必須なんですが、蓄電池の電圧が最大28.6Vまで充電するようにチャーコンを設定してるんですね。</p>

<p>充電しすぎると、蓄電池内部の電解液からガスが発生したり、蓄電池の寿命を縮めたりするので、それを防ぐための機能がチャーコンには元々備わっているんです。</p>

<p>今日は妻と子供がママ会へ、自分もカメラのレンズを物色しに出かけてしまったので、昼に電気を使わなかったのが原因で、余剰電力ができてしまいました。</p>

<p>貯められなかった分の電力は捨てられるので、非常に勿体無い…。</p>

<p>ちなみに、晴れの日の太陽光を蓄電池に貯め切った場合に描くグラフは以下のように綺麗なカーブを描きます。</p>

<p><img src="https://farm2.staticflickr.com/1537/25187103752_16a71ce3ae_z_d.jpg" alt="" /></p>

<p>理想的には、今の倍の容量の蓄電池（14kWh）と、3倍の太陽光パネル（2kW）が欲しいんですが、庭面積の問題で夢叶わず。引っ越したいな…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5959826231]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477017]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>原発を動かし続けるための、核燃料サイクルという神話。</title>
		<link>https://tech.blog.uribou.me/yuan-fa-wodong-kasisok-kerutamenibi-yao-na-he-ran-liao-saikurutoiushen-hua/</link>
		<pubDate>Thu, 03 Mar 2016 06:44:05 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/yuan-fa-wodong-kasisok-kerutamenibi-yao-na-he-ran-liao-saikurutoiushen-hua/</guid>
		<description></description>
		<content:encoded><![CDATA[ここ最近の報道ステーション、古舘伊知郎さんが飛ばしますね。
２０１６年３月３日放送の内容も、かなり突っ込んだ内容でした。
原発を動かし続けるために必要な、核燃料サイクルという神話。
もし、その神話が無くなれば、これまで資源として扱ってきたプルトニウムはただのゴミと化してしまう。
原発を動かし続けるには、核のゴミを生み出しているのではなく、再処理によって資源を生み出しているという名目が必要。
<strong>核燃料サイクルの実現可能性は問題ではない。</strong>
<strong>あくまで核燃料サイクルという神話が必要なだけなのだ。</strong>
世界中で高速増殖炉の研究が断念される中、失敗続きの日本がそれを止めない理由としては十分すぎる内容でした。
その原発関連システム開発の一部を担う企業のグループ会社へ来月から転籍となる自分は、一体何をしてるんだろう。
辞めてしまいたい。
でもその勇気がない。
独立できるだけの実力が自分にあるとは、お世辞にも言えない。
だから大したことは何もできない今の自分を脱するためにも、転籍してパワーエレクトロニクス関連技術を身に付けて、将来的には再生可能エネルギーに関連した仕事に就ければ…という思いもあって、転籍を決めた。
けど本当にそんな理想、実現できるのか。
汚れきった原発から得たお金で成り立つ自分の仕事、生活、そこから抜け出せない自分。
情けない。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1486</wp:post_id>
		<wp:post_date><![CDATA[2016-03-03 15:44:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-03 06:44:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[yuan-fa-wodong-kasisok-kerutamenibi-yao-na-he-ran-liao-saikurutoiushen-hua]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ここ最近の報道ステーション、古舘伊知郎さんが飛ばしますね。</p>

<p>２０１６年３月３日放送の内容も、かなり突っ込んだ内容でした。</p>

<p>原発を動かし続けるために必要な、核燃料サイクルという神話。</p>

<p>もし、その神話が無くなれば、これまで資源として扱ってきたプルトニウムはただのゴミと化してしまう。</p>

<p>原発を動かし続けるには、核のゴミを生み出しているのではなく、再処理によって資源を生み出しているという名目が必要。</p>

<p><strong>核燃料サイクルの実現可能性は問題ではない。</strong></p>

<p><strong>あくまで核燃料サイクルという神話が必要なだけなのだ。</strong></p>

<p>世界中で高速増殖炉の研究が断念される中、失敗続きの日本がそれを止めない理由としては十分すぎる内容でした。</p>

<p>その原発関連システム開発の一部を担う企業のグループ会社へ来月から転籍となる自分は、一体何をしてるんだろう。</p>

<p>辞めてしまいたい。</p>

<p>でもその勇気がない。</p>

<p>独立できるだけの実力が自分にあるとは、お世辞にも言えない。</p>

<p>だから大したことは何もできない今の自分を脱するためにも、転籍してパワーエレクトロニクス関連技術を身に付けて、将来的には再生可能エネルギーに関連した仕事に就ければ…という思いもあって、転籍を決めた。</p>

<p>けど本当にそんな理想、実現できるのか。</p>

<p>汚れきった原発から得たお金で成り立つ自分の仕事、生活、そこから抜け出せない自分。</p>

<p>情けない。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6356475710]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634492]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>これってカイゼン？ヨーグルトの安定剤。</title>
		<link>https://tech.blog.uribou.me/koretutekaizen/</link>
		<pubDate>Fri, 04 Mar 2016 18:36:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/koretutekaizen/</guid>
		<description></description>
		<content:encoded><![CDATA[明治プロビオヨーグルト、わざわざこんな注意書きをするということは、一般的なヨーグルトには「乳清を出さないために安定剤を添加している」ってことだよね…。
<pre><code>安定剤を使用しておりませんので、乳清と呼ばれる液体が見られることがありますが、安心してお召し上がりください。
</code></pre>
安定剤を添加している企業様、天然由来で安全性は確保されているらしいけど、たかが乳清のために余計なもの入れないで欲しい。
嫁の話によると、アロエヨーグルトの蓋にはヨーグルトが付きにくい素材を採用していると、パッケージにウリとして記載されているらしい。
これらのカイゼンって、おそらくはお客様の意見（クレーム？）から生まれたんだろうなぁ…と思うと、今の添加物だらけな食品が蔓延している状況って、同様に「お客様の意見（クレーム）」に企業が応え過ぎた結果であることにも、納得。
世の中には、大根に土がついているだけでクレームを入れる消費者の方も実在するので。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1487</wp:post_id>
		<wp:post_date><![CDATA[2016-03-05 03:36:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-04 18:36:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[koretutekaizen]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>明治プロビオヨーグルト、わざわざこんな注意書きをするということは、一般的なヨーグルトには「乳清を出さないために安定剤を添加している」ってことだよね…。</p>

<pre><code>安定剤を使用しておりませんので、乳清と呼ばれる液体が見られることがありますが、安心してお召し上がりください。
</code></pre>

<p>安定剤を添加している企業様、天然由来で安全性は確保されているらしいけど、たかが乳清のために余計なもの入れないで欲しい。</p>

<p>嫁の話によると、アロエヨーグルトの蓋にはヨーグルトが付きにくい素材を採用していると、パッケージにウリとして記載されているらしい。</p>

<p>これらのカイゼンって、おそらくはお客様の意見（クレーム？）から生まれたんだろうなぁ…と思うと、今の添加物だらけな食品が蔓延している状況って、同様に「お客様の意見（クレーム）」に企業が応え過ぎた結果であることにも、納得。</p>

<p>世の中には、大根に土がついているだけでクレームを入れる消費者の方も実在するので。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955802216]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663163]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>野菜クズが芽を出しました。</title>
		<link>https://tech.blog.uribou.me/ye-cai-kuzugaya-wochu-simasita/</link>
		<pubDate>Fri, 04 Mar 2016 18:39:58 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ye-cai-kuzugaya-wochu-simasita/</guid>
		<description></description>
		<content:encoded><![CDATA[使い切った野菜クズをプランターに埋めてコンポスト代わりにしていました。
春になったら何を植えようかな…と思っていたのに、肥料にならずに芽をだしました！
これは多分大根。
<img src="https://farm2.staticflickr.com/1718/25421433371_405a969c99_z_d.jpg" alt="" />
レタス。
<img src="https://farm2.staticflickr.com/1680/25146671259_612da24ce5_z_d.jpg" alt="" />
<img src="https://farm2.staticflickr.com/1666/25488098406_af8833c249_z_d.jpg" alt="" />
植物の生命力って凄い。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1488</wp:post_id>
		<wp:post_date><![CDATA[2016-03-05 03:39:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-04 18:39:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ye-cai-kuzugaya-wochu-simasita]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1718/25421433371_405a969c99_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>使い切った野菜クズをプランターに埋めてコンポスト代わりにしていました。</p>

<p>春になったら何を植えようかな…と思っていたのに、肥料にならずに芽をだしました！</p>

<p>これは多分大根。</p>

<p><img src="https://farm2.staticflickr.com/1718/25421433371_405a969c99_z_d.jpg" alt="" /></p>

<p>レタス。</p>

<p><img src="https://farm2.staticflickr.com/1680/25146671259_612da24ce5_z_d.jpg" alt="" /></p>

<p><img src="https://farm2.staticflickr.com/1666/25488098406_af8833c249_z_d.jpg" alt="" /></p>

<p>植物の生命力って凄い。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1489]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5964553053]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477019]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>電力会社を乗り換えたら停電リスクが高まるって？</title>
		<link>https://tech.blog.uribou.me/dian-li-xiao-mai-zi-you-hua/</link>
		<pubDate>Wed, 09 Mar 2016 21:04:35 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dian-li-xiao-mai-zi-you-hua/</guid>
		<description></description>
		<content:encoded><![CDATA[4月から電力小売自由化が始まりますが、乗り換え先はもう決まりましたか？
私は東京在住なので、原発事故で有名な東京電力から嫌々電気を買っていますが、これを機に再エネを主に扱う事業者に切り替えようとしています。
が、色々調べてみると、不思議なことに気づきます。
<strong>小売事業者の供給が、消費者の需要を満たせなくても、消費者側が何らかの不利益を被ることはない</strong>
という、ある意味夢のような謳い文句です。
ここで言う不利益とは、要するに停電のことです。もしくは、かつてあった計画停電みたいな。
需要を供給が満たせなくても、誰も不利益を被ることなく、自動的に不足分を補うシステムがいつの間にか稼働していたの？？
なんて都合の良い話はもちろんありません。
不利益は全て、<strong>電力小売事業者が既存の電力会社にペナルティを支払う</strong>ことで被ることになります。
詳しくは<a href="http://enesuke.jp/30%E5%88%86%E5%90%8C%E6%99%82%E5%90%8C%E9%87%8F%E3%83%BB%E3%82%A4%E3%83%B3%E3%83%90%E3%83%A9%E3%83%B3%E3%82%B9%E6%96%99%E9%87%91/">PPSが戦う「30分同時同量」ルールとインバランス料金リスク</a>で分かりやすく解説されています。
<pre><code>需要に供給が追いつかなかった場合
不足が発生すると「インバランス料金」を支払って一般送配電事業者に穴埋めをしてもらうわけだけど、このインバランスが3%を越えると、最大で3倍以上の金額を払って調達しないといけなくなる
逆に3%を超えて発電量が余剰になってしまったぶんは、無償で渡さないといけない
</code></pre>
さらには、<a href="http://zasshi.news.yahoo.co.jp/article?a=20160201-01036738-sspa-soci">電力自由化でも、電気代が安くできない「託送料金」のカラクリ</a>なんて記事もあります。
<pre><code>「自由化といっても、自由化されたのは発電部門だけ。肝心の送電の自由化は’20年まで延ばされました。つまり、発電しても送電するのには電力会社の送電線を借りなければならない。そのために支払うのが『託送料金』です。1kW通すだけで、全国平均で約9円を支払わなければなりません」
田中氏によると、発電するコストや電気を卸してもらうコストなどに1kWで約11円かかるので、新電力会社は必要経費だけで約20円を費やす。そして、現在の電気料金は1kWで約25円だ。
「つまり、電力会社と同じ料金で一般家庭に売っても、1kWで約5円の儲けにしかなりません。月300kWを使う家庭からでは1500円の利益しかない。数万世帯と契約しなければ、事務所の維持費や人件費、配当などを賄うことは不可能。これでは地域内の数百人や数千人が対象の小規模な新電力会社はやっていけません」
福島第一原発の爆発事故を機に、エネルギーを県内で100％自給しようとの趣旨で設立された「会津電力」は、14年10月から合計2.5MW（約800世帯分）の太陽光発電を行っているが、今回の自由化には参入しない
</code></pre>
自動的に不足分を補うシステムなんて存在せず、東京電力のような既存の電力会社が絶対に損をしないためのシステム（法整備）が進んでいたに過ぎないことが分かります。
それにしてもテレビで流れる情報は全く当てになりませんね。
電力自由化に限った話じゃないですが、本質を突いた報道が少なすぎると改めて思いました。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1490</wp:post_id>
		<wp:post_date><![CDATA[2016-03-10 06:04:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-09 21:04:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dian-li-xiao-mai-zi-you-hua]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>4月から電力小売自由化が始まりますが、乗り換え先はもう決まりましたか？</p>

<p>私は東京在住なので、原発事故で有名な東京電力から嫌々電気を買っていますが、これを機に再エネを主に扱う事業者に切り替えようとしています。</p>

<p>が、色々調べてみると、不思議なことに気づきます。</p>

<p><strong>小売事業者の供給が、消費者の需要を満たせなくても、消費者側が何らかの不利益を被ることはない</strong></p>

<p>という、ある意味夢のような謳い文句です。</p>

<p>ここで言う不利益とは、要するに停電のことです。もしくは、かつてあった計画停電みたいな。</p>

<p>需要を供給が満たせなくても、誰も不利益を被ることなく、自動的に不足分を補うシステムがいつの間にか稼働していたの？？</p>

<p>なんて都合の良い話はもちろんありません。</p>

<p>不利益は全て、<strong>電力小売事業者が既存の電力会社にペナルティを支払う</strong>ことで被ることになります。</p>

<p>詳しくは<a href="http://enesuke.jp/30%E5%88%86%E5%90%8C%E6%99%82%E5%90%8C%E9%87%8F%E3%83%BB%E3%82%A4%E3%83%B3%E3%83%90%E3%83%A9%E3%83%B3%E3%82%B9%E6%96%99%E9%87%91/">PPSが戦う「30分同時同量」ルールとインバランス料金リスク</a>で分かりやすく解説されています。</p>

<pre><code>需要に供給が追いつかなかった場合

不足が発生すると「インバランス料金」を支払って一般送配電事業者に穴埋めをしてもらうわけだけど、このインバランスが3%を越えると、最大で3倍以上の金額を払って調達しないといけなくなる

逆に3%を超えて発電量が余剰になってしまったぶんは、無償で渡さないといけない
</code></pre>

<p>さらには、<a href="http://zasshi.news.yahoo.co.jp/article?a=20160201-01036738-sspa-soci">電力自由化でも、電気代が安くできない「託送料金」のカラクリ</a>なんて記事もあります。</p>

<pre><code>「自由化といっても、自由化されたのは発電部門だけ。肝心の送電の自由化は’20年まで延ばされました。つまり、発電しても送電するのには電力会社の送電線を借りなければならない。そのために支払うのが『託送料金』です。1kW通すだけで、全国平均で約9円を支払わなければなりません」

田中氏によると、発電するコストや電気を卸してもらうコストなどに1kWで約11円かかるので、新電力会社は必要経費だけで約20円を費やす。そして、現在の電気料金は1kWで約25円だ。

「つまり、電力会社と同じ料金で一般家庭に売っても、1kWで約5円の儲けにしかなりません。月300kWを使う家庭からでは1500円の利益しかない。数万世帯と契約しなければ、事務所の維持費や人件費、配当などを賄うことは不可能。これでは地域内の数百人や数千人が対象の小規模な新電力会社はやっていけません」

福島第一原発の爆発事故を機に、エネルギーを県内で100％自給しようとの趣旨で設立された「会津電力」は、14年10月から合計2.5MW（約800世帯分）の太陽光発電を行っているが、今回の自由化には参入しない
</code></pre>

<p>自動的に不足分を補うシステムなんて存在せず、東京電力のような既存の電力会社が絶対に損をしないためのシステム（法整備）が進んでいたに過ぎないことが分かります。</p>

<p>それにしてもテレビで流れる情報は全く当てになりませんね。</p>

<p>電力自由化に限った話じゃないですが、本質を突いた報道が少なすぎると改めて思いました。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955558040]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677711]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>データの可視化をseabornでお手軽に。</title>
		<link>https://tech.blog.uribou.me/detanoke-shi-hua-wopythondeshou-qing-ni/</link>
		<pubDate>Sat, 12 Mar 2016 05:36:28 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/detanoke-shi-hua-wopythondeshou-qing-ni/</guid>
		<description></description>
		<content:encoded><![CDATA[文字化け解消法で紹介した<a href="http://blog.rinka-blossom.com/matplotlibnohuontoshe-ding/">matplotlib</a>ですが、使いこなせる気が全くしないのが正直なところ。
だってこのキーワード引数の多さったら…　覚えきれませんよ。
plot関数だけでも指定可能な引数は３０以上かな。
http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot
<pre><code>Property    Description
agg_filter  unknown
alpha       float (0.0 transparent through 1.0 opaque)
animated    [True | False]
antialiased or aa   [True | False]
axes        an Axes instance
clip_box    a matplotlib.transforms.Bbox instance
clip_on     [True | False]
...
</code></pre>
それでいて出来上がるのはこんな~~ダサい~~グラフ。
<img src="https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg" alt="" />
頑張れば綺麗なグラフも描画できるみたいなんですけど、あまり学習意欲が湧きませんよね。
そこで<a href="http://stanford.edu/~mwaskom/software/seaborn/examples/index.html">seaborn</a>の出番です。
<pre><code>Seaborn is a Python visualization library based on matplotlib. It provides a high-level interface for drawing attractive statistical graphics.
</code></pre>
意訳すると、matplotlibのwrapperとしてより高レベルな（抽象化された）インタフェースを提供してくれるそうです。
urllibに対するrequestsパッケージみたいな位置づけかな。
インタフェースも大事ですが、こんなheatmapを10行程程度のコードで描画できてしまうなら、学習意欲が湧いてきますよね。
<img src="http://stanford.edu/~mwaskom/software/seaborn/_images/structured_heatmap.png" alt="" />
とは言え、いきなりheatmap描くような大そうなデータは持ち合わせていないので、我が家の家電製品の消費電力データを使って基本的なグラフを描画してみようと思います。
<pre><code>$ cat 冷蔵庫.csv
No.,DateTime,Watt,kWh
    1,2015/03/02-23:25:44,58.9,0
    2,2015/03/02-23:35:44,50.6,0.01
    3,2015/03/02-23:45:44,50.3,0.02
    4,2015/03/02-23:55:44,61.7,0.02
    5,2015/03/03-00:05:44,72.4,0.03
    6,2015/03/03-00:15:44,51.3,0.04
    7,2015/03/03-00:25:44,47.7,0.05
    8,2015/03/03-00:35:44,47.6,0.06
    9,2015/03/03-00:45:44,20.2,0.06
   10,2015/03/03-00:55:44,40.5,0.06
</code></pre>
これはサンワサプライ製TAP-TST10で取得したログです。リアルタイムにロギングできないのが欠点ですが…まぁ安いので。

これをpandasでDataFrame化するとこうなります。
<pre><code class="python">import pandas as pd
data = pd.read_csv("冷蔵庫.csv")
print(data)
       No.             DateTime  Watt    kWh
0        1  2015/03/02-23:25:44  58.9   0.00
1        2  2015/03/02-23:35:44  50.6   0.01
2        3  2015/03/02-23:45:44  50.3   0.02
3        4  2015/03/02-23:55:44  61.7   0.02
4        5  2015/03/03-00:05:44  72.4   0.03
5        6  2015/03/03-00:15:44  51.3   0.04
6        7  2015/03/03-00:25:44  47.7   0.05
7        8  2015/03/03-00:35:44  47.6   0.06
8        9  2015/03/03-00:45:44  20.2   0.06
9       10  2015/03/03-00:55:44  40.5   0.06
10      11  2015/03/03-01:05:44  59.4   0.07
...
[1441 rows x 4 columns]
print(data.DateTime)
0       2015/03/02-23:25:44
1       2015/03/02-23:35:44
2       2015/03/02-23:45:44
3       2015/03/02-23:55:44
4       2015/03/03-00:05:44
5       2015/03/03-00:15:44
6       2015/03/03-00:25:44
7       2015/03/03-00:35:44
8       2015/03/03-00:45:44
9       2015/03/03-00:55:44
10      2015/03/03-01:05:44
...
Name: DateTime, dtype: object
print(data['Watt'])
0       58.9
1       50.6
2       50.3
3       61.7
4       72.4
5       51.3
6       47.7
7       47.6
8       20.2
9       40.5
10      59.4
Name: Watt, dtype: float64
</code></pre>
これをseabornで可視化するコードはこうなります。
<pre><code class="python">import seaborn as sns
import pandas as pd
data = pd.read_csv("冷蔵庫.csv")
# 比較的簡単なpointplotを使う
ax = sns.pointplot(
    x='DateTime',   # x軸にDateTime
    y='Watt',       # y軸にWatt
    data=data,      # DataFrameを指定
    markers=[''])   # dataをplotするマーカーを非表示に
# x軸方向のデータが多すぎるので1日毎にラベルを間引く（データは間引かない）
xlabels = [datetime.split('-')[0]
    if list(data.DateTime).index(datetime) % 144 is 0 else ''
    for datetime in data.DateTime]
# x軸ラベルを設定＆ラベル表示を90度回転
ax.set_xticklabels(xlabels, rotation='vertical')
# pngファイルに書き出す
sns.plt.savefig('冷蔵庫.png')
</code></pre>
データが詰まりすぎてますね…。
<img src="https://farm2.staticflickr.com/1676/25041526554_79e0a9d504_z_d.jpg" alt="" />
以下のようにちょっと間引きます。
<pre><code class="python">data = pd.read_csv("冷蔵庫.csv")[:360]
</code></pre>
今度はいい感じになりました。
<img src="https://farm2.staticflickr.com/1508/25041526534_c69459ff72_z_d.jpg" alt="" />
冷蔵庫の定格消費電力は約110Wと表記されているので、ピーク値が114.0Wなのをみると、大体スペック通りですね。
<pre><code class="python">data.Watt.mean()
44.557499999999997
data.Watt.min()
2.2999999999999998
data.Watt.max()
114.0
</code></pre>
消費電力量は？
<pre><code class="python">import seaborn as sns
import pandas as pd
data = pd.read_csv("冷蔵庫.csv")
# 比較的簡単なpointplotを使う
ax = sns.pointplot(
    x='DateTime',   # x軸にDateTime
    y='kWh',        # y軸にkWh（積算消費電力量）
    data=data,      # DataFrameを指定
    markers=[''])   # dataをplotするマーカーを非表示に
# x軸方向のデータが多すぎるので1日毎にラベルを間引く（データは間引かない）
xlabels = [datetime.split('-')[0]
    if list(data.DateTime).index(datetime) % 144 is 0 else ''
    for datetime in data.DateTime]
# x軸ラベルを設定＆ラベル表示を90度回転
ax.set_xticklabels(xlabels, rotation='vertical')
# pngファイルに書き出す
sns.plt.savefig('冷蔵庫kWh.png')
</code></pre>
<img src="https://farm2.staticflickr.com/1522/25553923552_93778735e6_z_d.jpg" alt="" />
1kWh/日程度の消費電力量なことが分かります。
<pre><code class="python">data.kWh.max() / 10.0
1.0589999999999999
</code></pre>
<a href="http://stanford.edu/~mwaskom/software/seaborn/api.html">seabornのAPI reference</a>や<a href="http://stanford.edu/~mwaskom/software/seaborn/examples/index.html">gallery</a>を見ると、テンション高くなりますね。
まずは道具を使いこなせるようにならねば。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1491</wp:post_id>
		<wp:post_date><![CDATA[2016-03-12 14:36:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-12 05:36:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[detanoke-shi-hua-wopythondeshou-qing-ni]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>文字化け解消法で紹介した<a href="http://blog.rinka-blossom.com/matplotlibnohuontoshe-ding/">matplotlib</a>ですが、使いこなせる気が全くしないのが正直なところ。</p>

<p>だってこのキーワード引数の多さったら…　覚えきれませんよ。</p>

<p>plot関数だけでも指定可能な引数は３０以上かな。 <br />
<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot">http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot</a></p>

<pre><code>Property    Description  
agg_filter    unknown  
alpha        float (0.0 transparent through 1.0 opaque)  
animated    [True | False]  
antialiased or aa    [True | False]  
axes        an Axes instance  
clip_box    a matplotlib.transforms.Bbox instance  
clip_on        [True | False]  
...
</code></pre>

<p>それでいて出来上がるのはこんな<del>ダサい</del>グラフ。
<img src="https://farm6.staticflickr.com/5703/23439509492_98fdb9472a_z_d.jpg" alt="" /></p>

<p>頑張れば綺麗なグラフも描画できるみたいなんですけど、あまり学習意欲が湧きませんよね。</p>

<p>そこで<a href="http://stanford.edu/~mwaskom/software/seaborn/examples/index.html">seaborn</a>の出番です。</p>

<pre><code>Seaborn is a Python visualization library based on matplotlib. It provides a high-level interface for drawing attractive statistical graphics.  
</code></pre>

<p>意訳すると、matplotlibのwrapperとしてより高レベルな（抽象化された）インタフェースを提供してくれるそうです。</p>

<p>urllibに対するrequestsパッケージみたいな位置づけかな。</p>

<p>インタフェースも大事ですが、こんなheatmapを10行程程度のコードで描画できてしまうなら、学習意欲が湧いてきますよね。</p>

<p><img src="http://stanford.edu/~mwaskom/software/seaborn/_images/structured_heatmap.png" alt="" /></p>

<p>とは言え、いきなりheatmap描くような大そうなデータは持ち合わせていないので、我が家の家電製品の消費電力データを使って基本的なグラフを描画してみようと思います。</p>

<pre><code>$ cat 冷蔵庫.csv 
No.,DateTime,Watt,kWh  
    1,2015/03/02-23:25:44,58.9,0
    2,2015/03/02-23:35:44,50.6,0.01
    3,2015/03/02-23:45:44,50.3,0.02
    4,2015/03/02-23:55:44,61.7,0.02
    5,2015/03/03-00:05:44,72.4,0.03
    6,2015/03/03-00:15:44,51.3,0.04
    7,2015/03/03-00:25:44,47.7,0.05
    8,2015/03/03-00:35:44,47.6,0.06
    9,2015/03/03-00:45:44,20.2,0.06
   10,2015/03/03-00:55:44,40.5,0.06
</code></pre>

<p>これはサンワサプライ製TAP-TST10で取得したログです。リアルタイムにロギングできないのが欠点ですが…まぁ安いので。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00C5WBB90&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>これをpandasでDataFrame化するとこうなります。</p>

<pre><code class="language-python">import pandas as pd

data = pd.read_csv("冷蔵庫.csv")  
print(data)

       No.             DateTime  Watt    kWh
0        1  2015/03/02-23:25:44  58.9   0.00  
1        2  2015/03/02-23:35:44  50.6   0.01  
2        3  2015/03/02-23:45:44  50.3   0.02  
3        4  2015/03/02-23:55:44  61.7   0.02  
4        5  2015/03/03-00:05:44  72.4   0.03  
5        6  2015/03/03-00:15:44  51.3   0.04  
6        7  2015/03/03-00:25:44  47.7   0.05  
7        8  2015/03/03-00:35:44  47.6   0.06  
8        9  2015/03/03-00:45:44  20.2   0.06  
9       10  2015/03/03-00:55:44  40.5   0.06  
10      11  2015/03/03-01:05:44  59.4   0.07  
...
[1441 rows x 4 columns]

print(data.DateTime)  
0       2015/03/02-23:25:44  
1       2015/03/02-23:35:44  
2       2015/03/02-23:45:44  
3       2015/03/02-23:55:44  
4       2015/03/03-00:05:44  
5       2015/03/03-00:15:44  
6       2015/03/03-00:25:44  
7       2015/03/03-00:35:44  
8       2015/03/03-00:45:44  
9       2015/03/03-00:55:44  
10      2015/03/03-01:05:44  
...
Name: DateTime, dtype: object

print(data['Watt'])  
0       58.9  
1       50.6  
2       50.3  
3       61.7  
4       72.4  
5       51.3  
6       47.7  
7       47.6  
8       20.2  
9       40.5  
10      59.4  
Name: Watt, dtype: float64  
</code></pre>

<p>これをseabornで可視化するコードはこうなります。</p>

<pre><code class="language-python">import seaborn as sns  
import pandas as pd

data = pd.read_csv("冷蔵庫.csv")

# 比較的簡単なpointplotを使う
ax = sns.pointplot(  
    x='DateTime',   # x軸にDateTime
    y='Watt',       # y軸にWatt
    data=data,      # DataFrameを指定
    markers=[''])   # dataをplotするマーカーを非表示に

# x軸方向のデータが多すぎるので1日毎にラベルを間引く（データは間引かない）
xlabels = [datetime.split('-')[0]  
    if list(data.DateTime).index(datetime) % 144 is 0 else ''
    for datetime in data.DateTime]

# x軸ラベルを設定＆ラベル表示を90度回転
ax.set_xticklabels(xlabels, rotation='vertical')

# pngファイルに書き出す
sns.plt.savefig('冷蔵庫.png')  
</code></pre>

<p>データが詰まりすぎてますね…。
<img src="https://farm2.staticflickr.com/1676/25041526554_79e0a9d504_z_d.jpg" alt="" /></p>

<p>以下のようにちょっと間引きます。</p>

<pre><code class="language-python">data = pd.read_csv("冷蔵庫.csv")[:360]  
</code></pre>

<p>今度はいい感じになりました。
<img src="https://farm2.staticflickr.com/1508/25041526534_c69459ff72_z_d.jpg" alt="" /></p>

<p>冷蔵庫の定格消費電力は約110Wと表記されているので、ピーク値が114.0Wなのをみると、大体スペック通りですね。</p>

<pre><code class="language-python">data.Watt.mean()  
44.557499999999997

data.Watt.min()  
2.2999999999999998

data.Watt.max()  
114.0  
</code></pre>

<p>消費電力量は？</p>

<pre><code class="language-python">import seaborn as sns  
import pandas as pd

data = pd.read_csv("冷蔵庫.csv")

# 比較的簡単なpointplotを使う
ax = sns.pointplot(  
    x='DateTime',   # x軸にDateTime
    y='kWh',        # y軸にkWh（積算消費電力量）
    data=data,      # DataFrameを指定
    markers=[''])   # dataをplotするマーカーを非表示に

# x軸方向のデータが多すぎるので1日毎にラベルを間引く（データは間引かない）
xlabels = [datetime.split('-')[0]  
    if list(data.DateTime).index(datetime) % 144 is 0 else ''
    for datetime in data.DateTime]

# x軸ラベルを設定＆ラベル表示を90度回転
ax.set_xticklabels(xlabels, rotation='vertical')

# pngファイルに書き出す
sns.plt.savefig('冷蔵庫kWh.png')  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1522/25553923552_93778735e6_z_d.jpg" alt="" /></p>

<p>1kWh/日程度の消費電力量なことが分かります。</p>

<pre><code class="language-python">data.kWh.max() / 10.0  
1.0589999999999999  
</code></pre>

<p><a href="http://stanford.edu/~mwaskom/software/seaborn/api.html">seabornのAPI reference</a>や<a href="http://stanford.edu/~mwaskom/software/seaborn/examples/index.html">gallery</a>を見ると、テンション高くなりますね。</p>

<p>まずは道具を使いこなせるようにならねば。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1492]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d616345bd3fcd51dae86301139e62cc9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942119726]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548385]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[conta binance gratuita]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[78513002@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/pt-PT/register?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.191]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-24 17:57:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-24 08:57:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>これは何の花でしょう？</title>
		<link>https://tech.blog.uribou.me/korehahe-nohua-desiyou/</link>
		<pubDate>Sun, 13 Mar 2016 14:51:03 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/korehahe-nohua-desiyou/</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="https://farm2.staticflickr.com/1637/25746554855_eabcdf6802_z_d.jpg" alt="" />
答えは…白菜です。
クイズ形式にしておいてなんですが、恥ずかしながら生まれて初めて見ました。白菜の花。
つい色んな角度から撮っちゃいました。
今日収穫するつもりが花を咲かせてしまったので…　種取り用に切り替えます。固定種ですし。
<img src="https://farm2.staticflickr.com/1582/25119941983_8b40c8a789_z_d.jpg" alt="" />
マクロだと可愛いのに、広角だと結構グロいんです。
頭かち割って花が生えてきたような画で…。
<img src="https://farm2.staticflickr.com/1588/25651482251_398000d880_z_d.jpg" alt="" />
こちらはまだ開花までいってません、ブロッコリーです。
開花どころか、生育が悪くて収穫できるか怪しいかも…。
<img src="https://farm2.staticflickr.com/1585/25720499816_636b2668da_z_d.jpg" alt="" />
こちらは毎週安定した収穫量を誇るホウレンソウ。
軽く湯がいて冷凍すれば長期保存が可能なんですが…　冷凍庫が溢れそうですが（汗、ほうれん草好きな妻と自分にとっては嬉しい悲鳴。
おかげさまで、今年の冬はホウレンソウを買った記憶がないです＼(^o^)／
が、こちらもそろそろ花が咲きそうで、終わりが近づいているのが残念…。
でも、こんな始まりと終わりを実体験できるのも、家庭菜園の醍醐味ですよね。
主要な野菜はほぼ一年中スーパーで買うことができて便利ですけど、反面、「旬の野菜」を意識することが全くありません。
お金で全て解決する生活から、少しずつでも脱却していきたいと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1493</wp:post_id>
		<wp:post_date><![CDATA[2016-03-13 23:51:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-13 14:51:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[korehahe-nohua-desiyou]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1637/25746554855_eabcdf6802_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><img src="https://farm2.staticflickr.com/1637/25746554855_eabcdf6802_z_d.jpg" alt="" /></p>

<p>答えは…白菜です。</p>

<p>クイズ形式にしておいてなんですが、恥ずかしながら生まれて初めて見ました。白菜の花。</p>

<p>つい色んな角度から撮っちゃいました。</p>

<p>今日収穫するつもりが花を咲かせてしまったので…　種取り用に切り替えます。固定種ですし。</p>

<p><img src="https://farm2.staticflickr.com/1582/25119941983_8b40c8a789_z_d.jpg" alt="" /></p>

<p>マクロだと可愛いのに、広角だと結構グロいんです。</p>

<p>頭かち割って花が生えてきたような画で…。</p>

<p><img src="https://farm2.staticflickr.com/1588/25651482251_398000d880_z_d.jpg" alt="" /></p>

<p>こちらはまだ開花までいってません、ブロッコリーです。</p>

<p>開花どころか、生育が悪くて収穫できるか怪しいかも…。</p>

<p><img src="https://farm2.staticflickr.com/1585/25720499816_636b2668da_z_d.jpg" alt="" /></p>

<p>こちらは毎週安定した収穫量を誇るホウレンソウ。</p>

<p>軽く湯がいて冷凍すれば長期保存が可能なんですが…　冷凍庫が溢れそうですが（汗、ほうれん草好きな妻と自分にとっては嬉しい悲鳴。</p>

<p>おかげさまで、今年の冬はホウレンソウを買った記憶がないです＼(^o^)／</p>

<p>が、こちらもそろそろ花が咲きそうで、終わりが近づいているのが残念…。</p>

<p>でも、こんな始まりと終わりを実体験できるのも、家庭菜園の醍醐味ですよね。</p>

<p>主要な野菜はほぼ一年中スーパーで買うことができて便利ですけど、反面、「旬の野菜」を意識することが全くありません。</p>

<p>お金で全て解決する生活から、少しずつでも脱却していきたいと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1494]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5984888584]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562645]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>脱原発の前に、まずは脱東電を。</title>
		<link>https://tech.blog.uribou.me/ge-ren-de-nituo-yuan-fa/</link>
		<pubDate>Wed, 30 Mar 2016 05:54:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ge-ren-de-nituo-yuan-fa/</guid>
		<description></description>
		<content:encoded><![CDATA[４月から始まる電力自由化。
<a href="http://blog.rinka-blossom.com/tuo-dong-jing-dian-li-wozhen-jian-nikao-eru/">以前調べた通り</a>、それなりに規模が大きく、再生可能エネルギー比率が高く、企業向けの実績もある<a href="https://www.mitsuurokogreenenergy.com/company/plant/">ミツウロコグリーンエネルギー</a>にて、事前予約しちゃいました〜。
電力会社を変えるなんて経験なかったので、本当にこのまま進めていいのか？目的は果たせるのか？といった不安から、色々と検討調査した結果をまとめてみます。
<h1>賃貸物件で電力会社切り替え可能か？</h1>
可能。
<a href="http://power-hikaku.info/choice/keitai/chintai.php">賃貸マンション・アパートでも新電力を選べる</a>で、そのまんま解説されています。
<a href="http://blog.rinka-blossom.com/dian-li-xiao-mai-zi-you-hua/">電力会社を替えると停電リスクが高まるという誤解</a>でも触れた通り、送電網は変わらず、あくまで契約者本人と電力会社間の契約なので、大家さんに許可をもらう必要もなし。
<h1>電気料金はどう変わるのか？</h1>
目的は経費削減ではないのですが、一応見積もってみたところ、数千円/年程度は安くなりそうです。
大抵の電力小売業者さんは、簡単な見積もりWebフォームを用意しているので、特に面倒な手続きなしに見積もることができます。
ミツウロコグリーンエネルギーの見積もりフォームは<a href="http://mitsuurokogreenenergy.jp/teaser/">こちら</a>から。
<h1>過去のログデータを参照可能か？</h1>
可能。
<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">オフグリッドシステムの作り方</a>でも紹介した電気家計簿ですが、電力消費状況のフィードバックを得る何らかの手段は欲しい。
ミツウロコグリーンエネルギーに問い合わせたところ、似たようなサービスを提供してくれるとのことで、安心しました。
<h1>「脱原発」にはなるのか？</h1>
完全に「脱原発」とは言えない。
そもそも送電網は東電の所有物。
またもし、需要が供給を超えた場合には、ミツウロコグリーンエネルギーが東電にペナルティ料を支払い、東電が不足電力分を供給することになる。
その不足電力分は、原発（現在は停止中とはいえ）を含む非再生可能エネルギー由来となる。
…って、何だかなぁって感じですが、まぁ…　タイトルの通り、まずは脱東電しちゃおうと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1496</wp:post_id>
		<wp:post_date><![CDATA[2016-03-30 14:54:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-30 05:54:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ge-ren-de-nituo-yuan-fa]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>４月から始まる電力自由化。</p>

<p><a href="http://blog.rinka-blossom.com/tuo-dong-jing-dian-li-wozhen-jian-nikao-eru/">以前調べた通り</a>、それなりに規模が大きく、再生可能エネルギー比率が高く、企業向けの実績もある<a href="https://www.mitsuurokogreenenergy.com/company/plant/">ミツウロコグリーンエネルギー</a>にて、事前予約しちゃいました〜。</p>

<p>電力会社を変えるなんて経験なかったので、本当にこのまま進めていいのか？目的は果たせるのか？といった不安から、色々と検討調査した結果をまとめてみます。</p>

<h1 id="">賃貸物件で電力会社切り替え可能か？</h1>

<p>可能。</p>

<p><a href="http://power-hikaku.info/choice/keitai/chintai.php">賃貸マンション・アパートでも新電力を選べる</a>で、そのまんま解説されています。</p>

<p><a href="http://blog.rinka-blossom.com/dian-li-xiao-mai-zi-you-hua/">電力会社を替えると停電リスクが高まるという誤解</a>でも触れた通り、送電網は変わらず、あくまで契約者本人と電力会社間の契約なので、大家さんに許可をもらう必要もなし。</p>

<h1 id="">電気料金はどう変わるのか？</h1>

<p>目的は経費削減ではないのですが、一応見積もってみたところ、数千円/年程度は安くなりそうです。</p>

<p>大抵の電力小売業者さんは、簡単な見積もりWebフォームを用意しているので、特に面倒な手続きなしに見積もることができます。</p>

<p>ミツウロコグリーンエネルギーの見積もりフォームは<a href="http://mitsuurokogreenenergy.jp/teaser/">こちら</a>から。</p>

<h1 id="">過去のログデータを参照可能か？</h1>

<p>可能。</p>

<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">オフグリッドシステムの作り方</a>でも紹介した電気家計簿ですが、電力消費状況のフィードバックを得る何らかの手段は欲しい。</p>

<p>ミツウロコグリーンエネルギーに問い合わせたところ、似たようなサービスを提供してくれるとのことで、安心しました。</p>

<h1 id="">「脱原発」にはなるのか？</h1>

<p>完全に「脱原発」とは言えない。</p>

<p>そもそも送電網は東電の所有物。</p>

<p>またもし、需要が供給を超えた場合には、ミツウロコグリーンエネルギーが東電にペナルティ料を支払い、東電が不足電力分を供給することになる。</p>

<p>その不足電力分は、原発（現在は停止中とはいえ）を含む非再生可能エネルギー由来となる。</p>

<p>…って、何だかなぁって感じですが、まぁ…　タイトルの通り、まずは脱東電しちゃおうと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5959829696]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577290]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>274</wp:comment_id>
			<wp:comment_author><![CDATA[^Inregistrare pe www.binance.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[64008401@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ro/join?ref=JHQQKNKN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.207]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-28 19:08:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-28 10:08:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>実践 Python データサイエンス@Udemy: Section3 numpyを知ろう: 12.アレイを使ったデータ処理</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy/</link>
		<pubDate>Wed, 30 Mar 2016 05:42:26 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy/</guid>
		<description></description>
		<content:encoded><![CDATA[子供が二人とも風邪っぴきで、家族そろって引きこもりの週末。
ただ引きこもって子供の相手をしているのも勿体無い気がして、勉強しながら娘の遊び相手をするなんて無謀なことしてました。
実際できたのは、<a href="https://www.udemy.com/python-jp/learn/v4/t/lecture/3829916?start=15">実践 Python データサイエンス 12.アレイを使ったデータ処理</a>で教わった内容を、手を動かして確認する程度でした…。
Udemy動画でも突然出てくるmeshgrid関数。
<pre><code class="python">In [20]: a, b = np.meshgrid([0,1,2,3,4], [5,6,7])
In [21]: a
Out[21]:
array([[0, 1, 2, 3, 4],
       [0, 1, 2, 3, 4],
       [0, 1, 2, 3, 4]])
In [22]: b
Out[22]:
array([[5, 5, 5, 5, 5],
       [6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7]])
</code></pre>
返る結果を見れば内部処理もだいたい分かるでしょと言われればそれまでですが、<a href="http://kaisk.hatenadiary.com/entry/2014/11/05/041011">【Python】ふたつの配列からすべての組み合わせを評価</a>を参考にtile関数で同じことをやってみると更に納得感が得られます。
meshgrid関数のヘルプを見ても何のことやらよくわからんのですが、
<pre><code class="python">Signature: np.meshgrid(*xi, **kwargs)
Docstring:
Return coordinate matrices from coordinate vectors.
Make N-D coordinate arrays for vectorized evaluations of
N-D scalar/vector fields over N-D grids, given
one-dimensional coordinate arrays x1, x2,..., xn.
...
</code></pre>
meshgrid関数同等のことをtile関数で試してみるとよく分かります。
<pre><code class="python">In [30]: np.tile([0,1,2,3,4], (len([5,6,7]), 1))
Out[30]:
array([[0, 1, 2, 3, 4],
       [0, 1, 2, 3, 4],
       [0, 1, 2, 3, 4]])
In [31]: np.tile([5,6,7], (len([0,1,2,3,4]), 1))
Out[31]:
array([[5, 6, 7],
       [5, 6, 7],
       [5, 6, 7],
       [5, 6, 7],
       [5, 6, 7]])
In [34]: np.tile([5,6,7], (len([0,1,2,3,4]), 1)).transpose()
Out[34]:
array([[5, 5, 5, 5, 5],
       [6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7]])
</code></pre>
このmeshgrid関数を使って、以下のように適当なデータを用意して可視化するのが、Udemy動画のSection3 numpyを知ろう: 12.アレイを使ったデータ処理です。
<pre><code class="python">In [1]: import numpy as np
In [3]: import matplotlib.pyplot as plt
In [4]: plt.show()
In [6]: points = np.arange(-10,10,0.01)
In [7]: dx, dy = np.meshgrid(points, points)
In [8]: dx
Out[8]:
array([[-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       ...,
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99]])
In [9]: dy
Out[9]:
array([[-10.  , -10.  , -10.  , ..., -10.  , -10.  , -10.  ],
       [ -9.99,  -9.99,  -9.99, ...,  -9.99,  -9.99,  -9.99],
       [ -9.98,  -9.98,  -9.98, ...,  -9.98,  -9.98,  -9.98],
       ...,
       [  9.97,   9.97,   9.97, ...,   9.97,   9.97,   9.97],
       [  9.98,   9.98,   9.98, ...,   9.98,   9.98,   9.98],
       [  9.99,   9.99,   9.99, ...,   9.99,   9.99,   9.99]])
</code></pre>
Udemy動画では、これらのデータをいきなり三角関数かまして可視化していくんですが、試しにこれらをそのまま可視化してみると、面白みに欠けるからそうしたんだな、ということが分かります。
<pre><code class="python">In [60]: dx + dy
Out[60]:
array([[ -2.00000000e+01,  -1.99900000e+01,  -1.99800000e+01, ...,
         -3.00000000e-02,  -2.00000000e-02,  -1.00000000e-02],
       [ -1.99900000e+01,  -1.99800000e+01,  -1.99700000e+01, ...,
         -2.00000000e-02,  -1.00000000e-02,  -4.24549285e-13],
       [ -1.99800000e+01,  -1.99700000e+01,  -1.99600000e+01, ...,
         -1.00000000e-02,  -4.26325641e-13,   1.00000000e-02],
       ...,
       [ -3.00000000e-02,  -2.00000000e-02,  -1.00000000e-02, ...,
          1.99400000e+01,   1.99500000e+01,   1.99600000e+01],
       [ -2.00000000e-02,  -1.00000000e-02,  -4.26325641e-13, ...,
          1.99500000e+01,   1.99600000e+01,   1.99700000e+01],
       [ -1.00000000e-02,  -4.24549285e-13,   1.00000000e-02, ...,
          1.99600000e+01,   1.99700000e+01,   1.99800000e+01]])
In [61]: plt.imshow(dx+dy)
Out[61]: &lt;matplotlib.image.AxesImage at 0x1484a9be0&gt;
In [62]: plt.colorbar()
Out[62]: &lt;matplotlib.colorbar.Colorbar at 0x1484fa400&gt;
In [63]: plt.savefig("dx+dy.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1527/25987055852_258dcc7e94_z_d.jpg" alt="" />
<pre><code class="python">In [64]: dx * dy
Out[64]:
array([[ 100.    ,   99.9   ,   99.8   , ...,  -99.7   ,  -99.8   ,  -99.9   ],
       [  99.9   ,   99.8001,   99.7002, ...,  -99.6003,  -99.7002,
         -99.8001],
       [  99.8   ,   99.7002,   99.6004, ...,  -99.5006,  -99.6004,
         -99.7002],
       ...,
       [ -99.7   ,  -99.6003,  -99.5006, ...,   99.4009,   99.5006,
          99.6003],
       [ -99.8   ,  -99.7002,  -99.6004, ...,   99.5006,   99.6004,
          99.7002],
       [ -99.9   ,  -99.8001,  -99.7002, ...,   99.6003,   99.7002,
          99.8001]])
In [67]: plt.imshow(dx*dy)
Out[67]: &lt;matplotlib.image.AxesImage at 0x1500a8550&gt;
In [68]: plt.colorbar()
Out[68]: &lt;matplotlib.colorbar.Colorbar at 0x1500f1e10&gt;
In [69]: plt.savefig("dxbydy.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1639/26013247921_80762fe250_z_d.jpg" alt="" />
そこで、Udemy動画のようにdx, dyに三角関数かますと、以下のように-1.0〜1.0間での周期的な変化となって…
<pre><code class="python">In [71]: plt.imshow(np.sin(dx))
Out[71]: &lt;matplotlib.image.AxesImage at 0x11217bf28&gt;
In [72]: plt.colorbar()
Out[72]: &lt;matplotlib.colorbar.Colorbar at 0x11259d780&gt;
In [73]: plt.savefig("sin_dx.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1615/25987337882_885a9ee34e_z_d.jpg" alt="" />
<pre><code class="python">In [75]: plt.imshow(np.sin(dy))
Out[75]: &lt;matplotlib.image.AxesImage at 0x1127f5f60&gt;
In [76]: plt.colorbar()
Out[76]: &lt;matplotlib.colorbar.Colorbar at 0x112846780&gt;
In [77]: plt.savefig("sin_dy.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1518/25475106574_d67ccde26d_z_d.jpg" alt="" />
二次元平面上を周期的に変化するようになるので、それらの和や積を可視化してみると、Udemy動画の通り~~気持ち悪い~~面白い画になります。
<pre><code class="python">In [15]: plt.imshow(np.sin(dx) + np.sin(dy))
Out[15]: &lt;matplotlib.image.AxesImage at 0x129137c88&gt;
In [16]: plt.savefig("sin+sin.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1497/25987055982_73110001d5_z_d.jpg" alt="" />
<pre><code class="python">In [10]: plt.imshow(np.sin(dx) * np.sin(dy))
Out[10]: &lt;matplotlib.image.AxesImage at 0x112148b38&gt;
In [11]: plt.savefig("sinxsin.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1502/25476994193_4782a50c04_z_d.jpg" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1499</wp:post_id>
		<wp:post_date><![CDATA[2016-03-30 14:42:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-30 05:42:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1527/25987055852_258dcc7e94_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>子供が二人とも風邪っぴきで、家族そろって引きこもりの週末。</p>

<p>ただ引きこもって子供の相手をしているのも勿体無い気がして、勉強しながら娘の遊び相手をするなんて無謀なことしてました。</p>

<p>実際できたのは、<a href="https://www.udemy.com/python-jp/learn/v4/t/lecture/3829916?start=15">実践 Python データサイエンス 12.アレイを使ったデータ処理</a>で教わった内容を、手を動かして確認する程度でした…。</p>

<p>Udemy動画でも突然出てくるmeshgrid関数。</p>

<pre><code class="language-python">In [20]: a, b = np.meshgrid([0,1,2,3,4], [5,6,7])

In [21]: a  
Out[21]:  
array([[0, 1, 2, 3, 4],  
       [0, 1, 2, 3, 4],
       [0, 1, 2, 3, 4]])

In [22]: b  
Out[22]:  
array([[5, 5, 5, 5, 5],  
       [6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7]])
</code></pre>

<p>返る結果を見れば内部処理もだいたい分かるでしょと言われればそれまでですが、<a href="http://kaisk.hatenadiary.com/entry/2014/11/05/041011">【Python】ふたつの配列からすべての組み合わせを評価</a>を参考にtile関数で同じことをやってみると更に納得感が得られます。</p>

<p>meshgrid関数のヘルプを見ても何のことやらよくわからんのですが、</p>

<pre><code class="language-python">Signature: np.meshgrid(*xi, **kwargs)  
Docstring:  
Return coordinate matrices from coordinate vectors.

Make N-D coordinate arrays for vectorized evaluations of  
N-D scalar/vector fields over N-D grids, given  
one-dimensional coordinate arrays x1, x2,..., xn.  
...
</code></pre>

<p>meshgrid関数同等のことをtile関数で試してみるとよく分かります。</p>

<pre><code class="language-python">In [30]: np.tile([0,1,2,3,4], (len([5,6,7]), 1))  
Out[30]:  
array([[0, 1, 2, 3, 4],  
       [0, 1, 2, 3, 4],
       [0, 1, 2, 3, 4]])

In [31]: np.tile([5,6,7], (len([0,1,2,3,4]), 1))  
Out[31]:  
array([[5, 6, 7],  
       [5, 6, 7],
       [5, 6, 7],
       [5, 6, 7],
       [5, 6, 7]])

In [34]: np.tile([5,6,7], (len([0,1,2,3,4]), 1)).transpose()  
Out[34]:  
array([[5, 5, 5, 5, 5],  
       [6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7]])
</code></pre>

<p>このmeshgrid関数を使って、以下のように適当なデータを用意して可視化するのが、Udemy動画のSection3 numpyを知ろう: 12.アレイを使ったデータ処理です。</p>

<pre><code class="language-python">In [1]: import numpy as np

In [3]: import matplotlib.pyplot as plt

In [4]: plt.show()

In [6]: points = np.arange(-10,10,0.01)

In [7]: dx, dy = np.meshgrid(points, points)

In [8]: dx  
Out[8]:  
array([[-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],  
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       ...,
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99],
       [-10.  ,  -9.99,  -9.98, ...,   9.97,   9.98,   9.99]])

In [9]: dy  
Out[9]:  
array([[-10.  , -10.  , -10.  , ..., -10.  , -10.  , -10.  ],  
       [ -9.99,  -9.99,  -9.99, ...,  -9.99,  -9.99,  -9.99],
       [ -9.98,  -9.98,  -9.98, ...,  -9.98,  -9.98,  -9.98],
       ...,
       [  9.97,   9.97,   9.97, ...,   9.97,   9.97,   9.97],
       [  9.98,   9.98,   9.98, ...,   9.98,   9.98,   9.98],
       [  9.99,   9.99,   9.99, ...,   9.99,   9.99,   9.99]])
</code></pre>

<p>Udemy動画では、これらのデータをいきなり三角関数かまして可視化していくんですが、試しにこれらをそのまま可視化してみると、面白みに欠けるからそうしたんだな、ということが分かります。</p>

<pre><code class="language-python">In [60]: dx + dy  
Out[60]:  
array([[ -2.00000000e+01,  -1.99900000e+01,  -1.99800000e+01, ...,  
         -3.00000000e-02,  -2.00000000e-02,  -1.00000000e-02],
       [ -1.99900000e+01,  -1.99800000e+01,  -1.99700000e+01, ...,
         -2.00000000e-02,  -1.00000000e-02,  -4.24549285e-13],
       [ -1.99800000e+01,  -1.99700000e+01,  -1.99600000e+01, ...,
         -1.00000000e-02,  -4.26325641e-13,   1.00000000e-02],
       ...,
       [ -3.00000000e-02,  -2.00000000e-02,  -1.00000000e-02, ...,
          1.99400000e+01,   1.99500000e+01,   1.99600000e+01],
       [ -2.00000000e-02,  -1.00000000e-02,  -4.26325641e-13, ...,
          1.99500000e+01,   1.99600000e+01,   1.99700000e+01],
       [ -1.00000000e-02,  -4.24549285e-13,   1.00000000e-02, ...,
          1.99600000e+01,   1.99700000e+01,   1.99800000e+01]])

In [61]: plt.imshow(dx+dy)  
Out[61]: &lt;matplotlib.image.AxesImage at 0x1484a9be0&gt;

In [62]: plt.colorbar()  
Out[62]: &lt;matplotlib.colorbar.Colorbar at 0x1484fa400&gt;

In [63]: plt.savefig("dx+dy.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1527/25987055852_258dcc7e94_z_d.jpg" alt="" /></p>

<pre><code class="language-python">In [64]: dx * dy  
Out[64]:  
array([[ 100.    ,   99.9   ,   99.8   , ...,  -99.7   ,  -99.8   ,  -99.9   ],  
       [  99.9   ,   99.8001,   99.7002, ...,  -99.6003,  -99.7002,
         -99.8001],
       [  99.8   ,   99.7002,   99.6004, ...,  -99.5006,  -99.6004,
         -99.7002],
       ...,
       [ -99.7   ,  -99.6003,  -99.5006, ...,   99.4009,   99.5006,
          99.6003],
       [ -99.8   ,  -99.7002,  -99.6004, ...,   99.5006,   99.6004,
          99.7002],
       [ -99.9   ,  -99.8001,  -99.7002, ...,   99.6003,   99.7002,
          99.8001]])

In [67]: plt.imshow(dx*dy)  
Out[67]: &lt;matplotlib.image.AxesImage at 0x1500a8550&gt;

In [68]: plt.colorbar()  
Out[68]: &lt;matplotlib.colorbar.Colorbar at 0x1500f1e10&gt;

In [69]: plt.savefig("dxbydy.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1639/26013247921_80762fe250_z_d.jpg" alt="" /></p>

<p>そこで、Udemy動画のようにdx, dyに三角関数かますと、以下のように-1.0〜1.0間での周期的な変化となって…</p>

<pre><code class="language-python">In [71]: plt.imshow(np.sin(dx))  
Out[71]: &lt;matplotlib.image.AxesImage at 0x11217bf28&gt;

In [72]: plt.colorbar()  
Out[72]: &lt;matplotlib.colorbar.Colorbar at 0x11259d780&gt;

In [73]: plt.savefig("sin_dx.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1615/25987337882_885a9ee34e_z_d.jpg" alt="" /></p>

<pre><code class="language-python">In [75]: plt.imshow(np.sin(dy))  
Out[75]: &lt;matplotlib.image.AxesImage at 0x1127f5f60&gt;

In [76]: plt.colorbar()  
Out[76]: &lt;matplotlib.colorbar.Colorbar at 0x112846780&gt;

In [77]: plt.savefig("sin_dy.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1518/25475106574_d67ccde26d_z_d.jpg" alt="" /></p>

<p>二次元平面上を周期的に変化するようになるので、それらの和や積を可視化してみると、Udemy動画の通り<del>気持ち悪い</del>面白い画になります。</p>

<pre><code class="language-python">In [15]: plt.imshow(np.sin(dx) + np.sin(dy))  
Out[15]: &lt;matplotlib.image.AxesImage at 0x129137c88&gt;

In [16]: plt.savefig("sin+sin.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1497/25987055982_73110001d5_z_d.jpg" alt="" /></p>

<pre><code class="language-python">In [10]: plt.imshow(np.sin(dx) * np.sin(dy))  
Out[10]: &lt;matplotlib.image.AxesImage at 0x112148b38&gt;

In [11]: plt.savefig("sinxsin.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1502/25476994193_4782a50c04_z_d.jpg" alt="" /></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947994819]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562648]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>169</wp:comment_id>
			<wp:comment_author><![CDATA[Зарегистрироваться в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[92983599@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ru-UA/register-person?ref=RQUR4BEO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-15 14:33:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-15 05:33:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>283</wp:comment_id>
			<wp:comment_author><![CDATA[100]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[5275240@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/ur/join?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.49]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-20 08:15:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-19 23:15:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>意外と知らない地元情報@昭島 「美味しくて多摩卵」</title>
		<link>https://tech.blog.uribou.me/mei-wei-sikuteduo-mo-luan/</link>
		<pubDate>Mon, 02 May 2016 12:52:09 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/mei-wei-sikuteduo-mo-luan/</guid>
		<description></description>
		<content:encoded><![CDATA[いつの日か鶏を飼って、卵を有り難く頂き、糞は畑の肥料に、くたびれてきたらお肉を有り難く頂くプランを練っているので、鶏には興味津々。
で、たまたま入ったレストランのオムライスに使用されていた卵が、シャレの効いたブランドで、気になって調べてしまった。
<strong><a href="http://tachikawa.attakana.com/archives/6143">美味しくて多摩卵</a></strong>
これが意外と安い。いや、スーパーで最安の卵と比べたら高いけど…　それなりの卵と比較してってことで。
<table border="1">
<tr>
<td bgcolor="#f5deb3">卵</td>
<td bgcolor="#f5deb3">価格</td>
</tr>
<tr>
<td>1kg 赤玉</td>
<td>450円</td>
</tr>
<tr>
<td>1kg 白玉</td>
<td>430円</td>
</tr>
<tr>
<td>東京烏骨鶏 1個</td>
<td>120円</td>
</tr>
</table>
全国にリピーター多数とのこと。
<blockquote>
  卵自体は少し小ぶりだけど、大きな黄身が詰まっていて、とっても濃厚。
  昭和25年創業の鶏園。扱っているのは昭島のブランド卵「美味くて多摩卵(うまくてたまらん)」の赤・白と、「東京烏骨鶏」の3種類。昭島のおいしい地下水を使った活性水と、だしがらやカキガラを混ぜた配合飼料でニワトリを育てることでコクのある卵に仕上がるそう。近所はもちろん、宅配でのリピーターも全国に。一度食べたら他の卵は食べられなくなっちゃうんだって！
</blockquote>
これは買いに行かねば。場所はこちら…って、毎朝通る道からすぐの場所にあるのね…。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1459</wp:post_id>
		<wp:post_date><![CDATA[2016-05-02 21:52:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-02 12:52:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mei-wei-sikuteduo-mo-luan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="di-chan-di-xiao"><![CDATA[地産地消]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>いつの日か鶏を飼って、卵を有り難く頂き、糞は畑の肥料に、くたびれてきたらお肉を有り難く頂くプランを練っているので、鶏には興味津々。</p>

<p>で、たまたま入ったレストランのオムライスに使用されていた卵が、シャレの効いたブランドで、気になって調べてしまった。</p>

<p><strong><a href="http://tachikawa.attakana.com/archives/6143">美味しくて多摩卵</a></strong></p>

<p>これが意外と安い。いや、スーパーで最安の卵と比べたら高いけど…　それなりの卵と比較してってことで。</p>

<table border="1" bordercolor="#333333">  
<tr>  
<td bgcolor="#f5deb3">卵</td>  
<td bgcolor="#f5deb3">価格</td>  
</tr>  
<tr>  
<td>1kg 赤玉</td>  
<td>450円</td>  
</tr>  
<tr>  
<td>1kg 白玉</td>  
<td>430円</td>  
</tr>  
<tr>  
<td>東京烏骨鶏 1個</td>  
<td>120円</td>  
</tr>  
</table>

<p>全国にリピーター多数とのこと。</p>

<blockquote>
  <p>卵自体は少し小ぶりだけど、大きな黄身が詰まっていて、とっても濃厚。
  昭和25年創業の鶏園。扱っているのは昭島のブランド卵「美味くて多摩卵(うまくてたまらん)」の赤・白と、「東京烏骨鶏」の3種類。昭島のおいしい地下水を使った活性水と、だしがらやカキガラを混ぜた配合飼料でニワトリを育てることでコクのある卵に仕上がるそう。近所はもちろん、宅配でのリピーターも全国に。一度食べたら他の卵は食べられなくなっちゃうんだって！</p>
</blockquote>

<p>これは買いに行かねば。場所はこちら…って、毎朝通る道からすぐの場所にあるのね…。</p>

<iframe width="100%" height="300" src="http://maps.google.co.jp/maps?q=昭島市上川原町1-15-14&output=embed&t=m"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5977479847]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462170]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>194</wp:comment_id>
			<wp:comment_author><![CDATA[откриване на профил в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[48893569@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/bg/join?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.70]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-28 19:01:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-28 10:01:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Amazon Cloud Driveをコマンド操作するには</title>
		<link>https://tech.blog.uribou.me/amazonkuraudodoraibunikomandodeakusesusurufang-fa/</link>
		<pubDate>Sun, 03 Apr 2016 04:08:14 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/amazonkuraudodoraibunikomandodeakusesusurufang-fa/</guid>
		<description></description>
		<content:encoded><![CDATA[大量の写真データバックアップ用ストレージとして、<a href="http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/">ACD(Amazon Cloud Drive)</a>が最強です。
ACDに写真をアップするのにWebアプリや専用ネイティブアプリケーションが用意されていますが、コマンドライン版アプリケーションacdcliを使えば、Jenkinsなどと組み合わせた自動化が簡単にできます。
<h1>acdcliのインストール</h1>
Pythonで書かれたアプリケーションなのでpipを使いますが、python3.2以降が必須なので注意してください。
proxy環境下であれば、sudo時のhttp_proxy, https_proxy環境変数設定を忘れずに。
<pre class="lang:sh decode:true ">$ sudo pip3 install acdcli</pre>
<h1>初期設定</h1>
まずはOAuth認証などの初期化が必要です。`acdcli init`を実行してください。
<pre class="lang:sh decode:true ">$ acdcli init
For the one-time authentication a browser (tab) will be opened at https://tensile-runway-92512.appspot.com/.
Please accept the request and save the plaintext response data into a file called ""oauth_data"" in the directory ""/Users/xxxx/Library/Caches/acd_cli"".
Press a key to open a browser.</pre>
Enterキーを入力するとブラウザが起動し、Amazonアカウントでのログインを迫ってきます。
OSXのターミナルで作業したので普通にブラウザが起動しますが、headlessなLinuxサーバ上で作業している場合はw3cが立ち上がると思うので、Prime会員のAmazonアカウントでログインし、oauth_dataファイルを取得してください。サインインボタンを押すとoauth_dataファイルがダウンロードされます。
<img class="alignnone size-full" src="https://farm2.staticflickr.com/1696/25764484790_d0cbf7ca48_z_d.jpg" width="640" height="419" />
oauth_dataファイルが取得できたら、acdcliのキャッシュディレクトリに配置します。
Linux（Ubuntu）のacdcliキャッシュディレクトリは以下で、
<pre class="lang:sh decode:true ">$ mv ~/Downloads/oauth_data .cache/acd_cli/.</pre>
OSX（EI Capitan）の場合は以下です。
<pre class="lang:sh decode:true ">$ mv ~/Downloads/oauth_data ~/Library/Caches/acd_cli/.</pre>
これで初期設定は完了です。
<h1>コマンドの使い方</h1>
acdcli syncして、使用状況を閲覧したり、lsしたりしてみてください。
<h2>sync</h2>
<pre class="lang:sh decode:true ">$ acdcli sync -h | grep sync
sync (s) [+] refresh node list cache; fetches complete node listif cache is empty or incremental changes if cache is non-empty
$ acdcli sync
Syncing...
Done.</pre>
<h2>usage</h2>
$ acdcli usage
Documents: 15276, 162.1 MiB
Other: 213, 42.6 MiB
Photos: 79067, 273.1 GiB
Videos: 0, 0.0 B
Total: 94556, 273.3 GiB
<h2>ls</h2>
$ acdcli ls /
[tmFoJO-RTEaZ-KWpTnoAqg] [A] ドキュメント/
[E_QJy_j6RgCa7g9D2OzAOg] [A] ビデオ/
[ss6Bjft-RXyJjgWW1L_5qw] [A] 写真/
<h2>mount</h2>
FUSE(Filesystem in Userspace)がインストール済みであれば、ACDをファイルシステムとしてマウントすることもできます。
$ acdcli mount /mnt/media
ただ、Ubuntuだとうまくいったんですが、OSXではうまくいきませんでした。[OSXFUSE](https://osxfuse.github.io/)をインストールしたんですが…　未だ解決方法がわかりません。
$ acdcli mount ./temp
~ $ 16-04-03 22:01:42.961 [ERROR] [acd_cli] - Traceback (most recent call last):
File ""/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/sqlalchemy/engine/base.py"", line 1139, in _execute_context
context)
File ""/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/sqlalchemy/engine/default.py"", line 450, in do_execute
cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: metadata
<h2>upload</h2>
ACDにファイルをアップロードするには`acdcli ul`コマンドを使います。
$ acdcli ul -h
usage: acd_cli upload [-h] [--max-connections MAX_CONNECTIONS]
path [path ...] parent
...
--overwrite, -o overwrite if local modification time is higher or
local ctime is higher than remote modification time
and local/remote file sizes do not match.
--deduplicate, -d exclude duplicate files from upload
我が家の場合は年ごとにディレクトリを分けているので、以下のようにしてアップロードしてみます。ローカル側で更新があったファイルは、ACD上のファイルを上書きするように、-oオプションをつけます。
$ acdcli upload -o /pictures/???? /写真/
かなり時間がかかりましたが、以下のようにアップロードできました。
$ acdcli ls /写真
[a3ShzU9rQImK4IUJogtCYA] [A] 1940/
[TRCOKEClSvO0Vn8mR49M7g] [A] 1950/
[z-5K-rIvTcK6LhE95ttmVQ] [A] 1970/
[FjUOR6sIR0-HRfj-Kue0fQ] [A] 1980/
[fNM3D46wTK2ZH-Qs0kqJyA] [A] 1999/
[3VGG1_R8SPSDSagKmwb_rA] [A] 2000/
[T5rDJjBoR8-jma2frjwleQ] [A] 2001/
[qLfe8wjoSca_PkGAV8rt_Q] [A] 2002/
[yajl1HN9ShChVpc61acIIQ] [A] 2003/
[nCZBDL-kSyWK4Jselhg3XA] [A] 2004/
[f9I2UYKeTJ6btt9qoPmPEg] [A] 2005/
[sTKEX8E4Qry8cr8RCg2V5w] [A] 2006/
[_9epoPv7Tbu1ZCkH91UNAQ] [A] 2007/
[2JL9gJUES5OIm3aHOyROLg] [A] 2008/
[Lk6ZZlM9SBKjJmaThvj4Jg] [A] 2009/
[IwhZVxNPQg2yf7MGXHcG1A] [A] 2010/
[UzhetmcbRg6fNMtIZ3uiZg] [A] 2011/
[6yYeb13ARhqlx8xjzNJFwA] [A] 2012/
[cE2d8gPMTwGc6gy0Hs0FZg] [A] 2013/
アップロードした写真は、[ブラウザ](http://www.amazon.co.jp/gp/feature.html?docId=3077664656)やiPhoneアプリ（Amazon Photo）から閲覧できます。Fire TV Stickを接続したTVからも閲覧可能です。
<img class="alignnone size-full" src="https://farm2.staticflickr.com/1585/26170368746_5557cb0043_z_d.jpg" width="361" height="640" />
我が家では写真と動画の日付別整理をJenkinsにやってもらっているので、最後にACDへのアップロード操作を追加しておきました。
これで写真データが完全に二重化されて安心♪]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1497</wp:post_id>
		<wp:post_date><![CDATA[2016-04-03 13:08:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-03 04:08:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[amazonkuraudodoraibunikomandodeakusesusurufang-fa]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/">大量の写真データバックアップ用ストレージとして、ACD(Amazon Cloud Drive)が最強です</a>。</p>
<p>ACDに写真をアップするのにWebアプリや専用ネイティブアプリケーションが用意されていますが、コマンドライン版アプリケーションacdcliを使えば、Jenkinsなどと組み合わせた自動化が簡単にできます。</p>
<h1 id="acdcli">acdcliのインストール手順</h1>
<p>Pythonで書かれたアプリケーションなのでpipを使いますが、python3.2以降が必須なので注意してください。</p>
<p>proxy環境下であれば、sudo時のhttp<em>proxy, https</em>proxy環境変数設定を忘れずに。</p>
<pre><code class="language-shell">$ sudo pip3 install acdcli
</code></pre>
<h1 id="">初期設定</h1>
<p>まずはOAuth認証などの初期化が必要です。<code>acdcli init</code>を実行してください。</p>
<pre><code class="language-shell">$ acdcli init
For the one-time authentication a browser (tab) will be opened at https://tensile-runway-92512.appspot.com/.
Please accept the request and save the plaintext response data into a file called "oauth_data" in the directory "/Users/xxxx/Library/Caches/acd_cli".
Press a key to open a browser.
</code></pre>
<p>Enterキーを入力するとブラウザが起動し、Amazonアカウントでのログインを迫ってきます。</p>
<p>OSXのターミナルで作業したので普通にブラウザが起動しますが、headlessなLinuxサーバ上で作業している場合はw3cが立ち上がると思うので、Prime会員のAmazonアカウントでログインし、oauth<em>dataファイルを取得してください。サインインボタンを押すとoauth</em>dataファイルがダウンロードされます。</p>
<p><img src="https://farm2.staticflickr.com/1696/25764484790_d0cbf7ca48_z_d.jpg" alt="" /></p>
<p>oauth_dataファイルが取得できたら、acdcliのキャッシュディレクトリに配置します。</p>
<p>Linux（Ubuntu）のacdcliキャッシュディレクトリは以下で、</p>
<pre><code class="language-shell">$ mv ~/Downloads/oauth_data .cache/acd_cli/.
</code></pre>
<p>OSX（EI Capitan）の場合は以下です。</p>
<pre><code class="language-shell">$ mv ~/Downloads/oauth_data ~/Library/Caches/acd_cli/.
</code></pre>
<p>これで初期設定は完了です。</p>
<h1 id="">コマンドの使い方</h1>
<p><code>acdcli sync</code>して、使用状況を閲覧したり、lsしたりしてみてください。syncは時々実行するのが良さげです。</p>
<h2 id="sync">sync</h2>
<pre><code class="language-shell">$ acdcli sync -h | grep sync
sync (s)            [+] refresh node list cache; fetches complete node listif cache is empty or incremental changes if cache is non-empty
$ acdcli sync
Syncing...
Done.
</code></pre>
<h2 id="usage">usage</h2>
<pre><code class="language-shell">$ acdcli usage
Documents:   15276,  162.1 MiB
Other:         213,   42.6 MiB
Photos:      79067,  273.1 GiB
Videos:          0,    0.0 B
Total:       94556,  273.3 GiB
</code></pre>
<h2 id="ls">ls</h2>
<pre><code class="language-shell">$ acdcli ls /
[tmFoJO-RTEaZ-KWpTnoAqg] [A] ドキュメント/
[E_QJy_j6RgCa7g9D2OzAOg] [A] ビデオ/
[ss6Bjft-RXyJjgWW1L_5qw] [A] 写真/
</code></pre>
<h2 id="mount">mount</h2>
<p>FUSE(Filesystem  in  Userspace)がインストール済みであれば、ACDをファイルシステムとしてマウントすることもできます。</p>
<pre><code class="language-shell">$ acdcli mount /mnt/media
</code></pre>
<p>ただ、Ubuntuだとうまくいったんですが、OSXではうまくいきませんでした。<a href="https://osxfuse.github.io/">OSXFUSE</a>をインストールしたんですが…　未だ解決方法がわかりません。</p>
<pre><code class="language-shell">$ acdcli mount ./temp
~ $ 16-04-03 22:01:42.961 [ERROR] [acd_cli] - Traceback (most recent call last):
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1139, in _execute_context
    context)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 450, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: metadata
</code></pre>
<h2 id="upload">upload</h2>
<p>ACDにファイルをアップロードするには<code>acdcli ul</code>コマンドを使います。</p>
<pre><code class="language-bash">$ acdcli ul -h
usage: acd_cli upload [-h] [--max-connections MAX_CONNECTIONS]
                      path [path ...] parent
  ...
  --overwrite, -o       overwrite if local modification time is higher or
                        local ctime is higher than remote modification time
                        and local/remote file sizes do not match.
  --deduplicate, -d     exclude duplicate files from upload
</code></pre>
<p>我が家の場合は年ごとにディレクトリを分けているので、以下のようにしてアップロードしてみます。ローカル側で更新があったファイルは、ACD上のファイルを上書きするように、-oオプションをつけます。</p>
<pre><code class="language-bash">$ acdcli upload -o /pictures/???? /写真/
</code></pre>
<p>かなり時間がかかりましたが、以下のようにアップロードできました。</p>
<pre><code class="language-bash">$ acdcli ls /写真
[a3ShzU9rQImK4IUJogtCYA] [A] 1940/
[TRCOKEClSvO0Vn8mR49M7g] [A] 1950/
[z-5K-rIvTcK6LhE95ttmVQ] [A] 1970/
[FjUOR6sIR0-HRfj-Kue0fQ] [A] 1980/
[fNM3D46wTK2ZH-Qs0kqJyA] [A] 1999/
[3VGG1_R8SPSDSagKmwb_rA] [A] 2000/
[T5rDJjBoR8-jma2frjwleQ] [A] 2001/
[qLfe8wjoSca_PkGAV8rt_Q] [A] 2002/
[yajl1HN9ShChVpc61acIIQ] [A] 2003/
[nCZBDL-kSyWK4Jselhg3XA] [A] 2004/
[f9I2UYKeTJ6btt9qoPmPEg] [A] 2005/
[sTKEX8E4Qry8cr8RCg2V5w] [A] 2006/
[_9epoPv7Tbu1ZCkH91UNAQ] [A] 2007/
[2JL9gJUES5OIm3aHOyROLg] [A] 2008/
[Lk6ZZlM9SBKjJmaThvj4Jg] [A] 2009/
[IwhZVxNPQg2yf7MGXHcG1A] [A] 2010/
[UzhetmcbRg6fNMtIZ3uiZg] [A] 2011/
[6yYeb13ARhqlx8xjzNJFwA] [A] 2012/
[cE2d8gPMTwGc6gy0Hs0FZg] [A] 2013/
</code></pre>
<p>アップロードした写真は、<a href="http://www.amazon.co.jp/gp/feature.html?docId=3077664656">ブラウザ</a>やiPhoneアプリ（Amazon Photo）から閲覧できます。Fire TV Stickを接続したTVからも閲覧可能です。</p>
<p><img src="https://farm2.staticflickr.com/1585/26170368746_5557cb0043_z_d.jpg" alt="" /></p>
<p>我が家では写真と動画の日付別整理をJenkinsにやってもらっているので、最後にACDへのアップロード操作を追加しておきました。</p>
<p>これで写真データが完全に二重化されて安心♪</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942321038]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1574]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2addec6522f2a9d907252943e0f96ffc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_731366f9571cb780d3f7c42688371ad8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505215]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>220</wp:comment_id>
			<wp:comment_author><![CDATA[Λογαριασμ Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[20325822@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/el/register?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.116]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-16 03:46:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-15 18:46:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>写真データバックアップにAmazon Cloud Driveを使うことのメリット</title>
		<link>https://tech.blog.uribou.me/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/</link>
		<pubDate>Wed, 30 Mar 2016 15:40:16 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/</guid>
		<description></description>
		<content:encoded><![CDATA[AWS(Amazon Web Service)ではなく、　<a href="http://www.amazon.co.jp/gp/feature.html?docId=3077664656">ACD(Amazon Cloud Drive)</a>を使うことにしました。Amazon Prime会員になるだけで、<strong>Rawデータを含む写真等の画像ファイルを無制限にアップロードできてしまうのです</strong>。
必要な経費はPrime会員費のみなので、月あたり300円程度というコストパフォーマンス。
日々増えていく写真データのバックアップ用途に最適ですね。
バックエンドはAWSだろうから、信頼性も高いでしょう。…最安のオプションでしょうけど。
以下はAmazonの触れ込み抜粋です。
<pre><code>容量無制限のフォトストレージ
Amazon プライム会員なら追加料金なしで写真を好きなだけ保存できます。
カメラ・携帯にて撮った写真を何枚でも Cloud Drive に保存して、いつでもどこからでも見ることができます。
RAWファイルについて
RAWファイルは、カメラ―メーカーが独自に定めたファイル形式で、拡張子はカメラの機種によって異なります。
Cloud Driveでは、特定のRAWファイルを写真として認識します。
プライム会員であれば、写真ファイルはストレージスペースには影響しません。
</code></pre>
類似サービスにGoogle Photosがありますが、それとの違いは大きく３つあります。
<ul>
<li>Rawデータファイルを写真として認識し、無制限アップロード対象として扱う
<ul>
<li>Google Photosでも可能だが制限有り</li>
</ul></li>
<li>ホスト側の都合で勝手に写真を使うことがない
<ul>
<li>Google Photosに写真をアップすると、<a href="https://www.google.com/intl/ja/policies/terms/">Googleが全世界に配布を行うためのライセンスを付与する</a>ことになる</li>
</ul></li>
<li>個人的な利用に限られ、商用利用は不可
<ul>
<li>Google Photosには制限なし</li>
</ul></li>
</ul>
基本的にはAmazon提供のGUIアプリやアップロード用Webアプリを使うことになりますが、<a href="https://github.com/yadayada/acd_cli">CUIでAmazon Cloud Drive操作を可能にするPythonライブラリ</a>があるので、ファイルサーバ上で自動バックアップスクリプトを走らせたり、Jenkinsで自動バックアップさせることも可能です。
<pre><code class="shell">~ $ acdcli usage
Documents:       0,    0.0 B
Other:           0,    0.0 B
Photos:       2469,   12.8 GiB
Videos:          0,    0.0 B
Total:        2469,   12.8 GiB
</code></pre>
素晴らしい。
気になる通信速度は？
<pre><code class="shell">$ acdcli ul 2015 /写真/
16-03-26 13:00:29.073 [WARNING] [acd_cli] - Timeout while uploading "DSC_5779.NEF".
16-03-26 13:40:20.479 [ERROR] [acd_cli] - Uploading "DSC_5977.NEF" failed. RequestError: 500, {"message":"Internal failure"}.
16-03-26 13:44:03.712 [WARNING] [acd_cli] - Timeout while uploading "DSC_6013.JPG".
...
16-03-26 14:37:58.453 [WARNING] [acd_cli] - Timeout while uploading "IMG_7569.JPG".
16-03-26 15:58:32.602 [WARNING] [acd_cli] - Timeout while uploading "DSC_7007.NEF".
16-03-26 16:08:18.497 [WARNING] [acd_cli] - Timeout while uploading "IMG_7941.JPG".
16-03-26 16:31:46.576 [WARNING] [acd_cli] - Timeout while uploading "DSC_7232.NEF".
[######################## ] 100.0% of   28GiB  6483/6484  319.0KB/s      09s
22 file(s) failed.
</code></pre>
計測サイトで20〜30mbps程度の速度が出るネット環境であるにも関わらず、これは遅い。
が、バックアップ用途なら基本的に放置で良いので、あまり気になりません。
とはいえ、Timeoutエラーは気にしないとな…。そのうち解決を図ります。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1498</wp:post_id>
		<wp:post_date><![CDATA[2016-03-31 00:40:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-30 15:40:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="xie-zhen"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="zi-dong-hua"><![CDATA[自動化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>AWS(Amazon Web Service)ではなく、　<a href="http://www.amazon.co.jp/gp/feature.html?docId=3077664656">ACD(Amazon Cloud Drive)</a>を使うことにしました。Amazon Prime会員になるだけで、<strong>Rawデータを含む写真等の画像ファイルを無制限にアップロードできてしまうのです</strong>。</p>

<p>必要な経費はPrime会員費のみなので、月あたり300円程度というコストパフォーマンス。</p>

<p>日々増えていく写真データのバックアップ用途に最適ですね。</p>

<p>バックエンドはAWSだろうから、信頼性も高いでしょう。…最安のオプションでしょうけど。</p>

<p>以下はAmazonの触れ込み抜粋です。</p>

<pre><code>容量無制限のフォトストレージ

Amazon プライム会員なら追加料金なしで写真を好きなだけ保存できます。  
カメラ・携帯にて撮った写真を何枚でも Cloud Drive に保存して、いつでもどこからでも見ることができます。

RAWファイルについて

RAWファイルは、カメラ―メーカーが独自に定めたファイル形式で、拡張子はカメラの機種によって異なります。  
Cloud Driveでは、特定のRAWファイルを写真として認識します。  
プライム会員であれば、写真ファイルはストレージスペースには影響しません。
</code></pre>

<p>類似サービスにGoogle Photosがありますが、それとの違いは大きく３つあります。</p>

<ul>
<li>Rawデータファイルを写真として認識し、無制限アップロード対象として扱う
<ul><li>Google Photosでも可能だが制限有り</li></ul></li>
<li>ホスト側の都合で勝手に写真を使うことがない
<ul><li>Google Photosに写真をアップすると、<a href="https://www.google.com/intl/ja/policies/terms/">Googleが全世界に配布を行うためのライセンスを付与する</a>ことになる</li></ul></li>
<li>個人的な利用に限られ、商用利用は不可
<ul><li>Google Photosには制限なし</li></ul></li>
</ul>

<p>基本的にはAmazon提供のGUIアプリやアップロード用Webアプリを使うことになりますが、<a href="https://github.com/yadayada/acd_cli">CUIでAmazon Cloud Drive操作を可能にするPythonライブラリ</a>があるので、ファイルサーバ上で自動バックアップスクリプトを走らせたり、Jenkinsで自動バックアップさせることも可能です。</p>

<pre><code class="language-shell">~ $ acdcli usage
Documents:       0,    0.0 B  
Other:           0,    0.0 B  
Photos:       2469,   12.8 GiB  
Videos:          0,    0.0 B  
Total:        2469,   12.8 GiB  
</code></pre>

<p>素晴らしい。</p>

<p>気になる通信速度は？</p>

<pre><code class="language-shell">$ acdcli ul 2015 /写真/
16-03-26 13:00:29.073 [WARNING] [acd_cli] - Timeout while uploading "DSC_5779.NEF".  
16-03-26 13:40:20.479 [ERROR] [acd_cli] - Uploading "DSC_5977.NEF" failed. RequestError: 500, {"message":"Internal failure"}.  
16-03-26 13:44:03.712 [WARNING] [acd_cli] - Timeout while uploading "DSC_6013.JPG".  
...
16-03-26 14:37:58.453 [WARNING] [acd_cli] - Timeout while uploading "IMG_7569.JPG".  
16-03-26 15:58:32.602 [WARNING] [acd_cli] - Timeout while uploading "DSC_7007.NEF".  
16-03-26 16:08:18.497 [WARNING] [acd_cli] - Timeout while uploading "IMG_7941.JPG".  
16-03-26 16:31:46.576 [WARNING] [acd_cli] - Timeout while uploading "DSC_7232.NEF".  
[######################## ] 100.0% of   28GiB  6483/6484  319.0KB/s      09s
22 file(s) failed.  
</code></pre>

<p>計測サイトで20〜30mbps程度の速度が出るネット環境であるにも関わらず、これは遅い。</p>

<p>が、バックアップ用途なら基本的に放置で良いので、あまり気になりません。</p>

<p>とはいえ、Timeoutエラーは気にしないとな…。そのうち解決を図ります。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942068796]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447166]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>304</wp:comment_id>
			<wp:comment_author><![CDATA[binance Konta Izveidosana]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[4917708@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/lv/register-person?ref=JHQQKNKN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.116]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-08-01 12:31:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-08-01 03:31:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>さよなら東電。</title>
		<link>https://tech.blog.uribou.me/sayonaradong-dian/</link>
		<pubDate>Wed, 30 Mar 2016 06:22:05 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/sayonaradong-dian/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.mitsuurokogreenenergy.com/company/vision.html">ミツウロコグリーンエネルギー株式会社(MGE)</a>さんとの本契約完了、４月中に電力供給元が東電からMGEに切り替わります。
…送電網は東電所有ですが…　そこはもうしょうがない。
そのMGEの経営理念を一部抜粋します。素晴らしい理念だなぁ。
<pre><code>私たちには夢があります。
地域とともに、再生可能エネルギーの供給基地を開発し、それらをもとにして、より豊かな暮らしを築き上げていくこと。
企業も住宅も、商業施設や工業施設も、さまざまな移動手段も、すべてが細かくはりめぐらされたエネルギーの絆によってつながった社会。
そのためには、風力や太陽光をはじめとした再生可能エネルギーの安定的で割安な供給が不可欠です。
現在、私たちミツウロコグリーンエネルギー株式会社では、現在国内6ヶ所の風力発電所、1ヶ所の木質バイオマス発電所を拠点に各地域と連携した発電および電力供給体制を整えています。
地球環境改善への貢献。地域ごとのエネルギー自給率の向上。
いつかきっと、すべての人々の暮らしを、私たちがつくり出すグリーンエネルギーで包みたい。
その夢は、いまはじまったばかりです。
</code></pre>
これまで約１０年間働いてきた職場を退職し、４月よりまた一から出直す自分にも、これくらい芯の通った理念が欲しいと思いました。…朧げにあるんですけどね。言語化できてないだけで。
とにかく、３１１以降感じていた重い足枷を一つ外すことができると思うと、晴れ晴れとした気分です。
足枷はまだまだ沢山あるので、今後も計画的に外していこうと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1500</wp:post_id>
		<wp:post_date><![CDATA[2016-03-30 15:22:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-30 06:22:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sayonaradong-dian]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://www.mitsuurokogreenenergy.com/company/vision.html">ミツウロコグリーンエネルギー株式会社(MGE)</a>さんとの本契約完了、４月中に電力供給元が東電からMGEに切り替わります。</p>

<p>…送電網は東電所有ですが…　そこはもうしょうがない。</p>

<p>そのMGEの経営理念を一部抜粋します。素晴らしい理念だなぁ。</p>

<pre><code>私たちには夢があります。

地域とともに、再生可能エネルギーの供給基地を開発し、それらをもとにして、より豊かな暮らしを築き上げていくこと。

企業も住宅も、商業施設や工業施設も、さまざまな移動手段も、すべてが細かくはりめぐらされたエネルギーの絆によってつながった社会。
そのためには、風力や太陽光をはじめとした再生可能エネルギーの安定的で割安な供給が不可欠です。

現在、私たちミツウロコグリーンエネルギー株式会社では、現在国内6ヶ所の風力発電所、1ヶ所の木質バイオマス発電所を拠点に各地域と連携した発電および電力供給体制を整えています。

地球環境改善への貢献。地域ごとのエネルギー自給率の向上。

いつかきっと、すべての人々の暮らしを、私たちがつくり出すグリーンエネルギーで包みたい。
その夢は、いまはじまったばかりです。
</code></pre>

<p>これまで約１０年間働いてきた職場を退職し、４月よりまた一から出直す自分にも、これくらい芯の通った理念が欲しいと思いました。…朧げにあるんですけどね。言語化できてないだけで。</p>

<p>とにかく、３１１以降感じていた重い足枷を一つ外すことができると思うと、晴れ晴れとした気分です。</p>

<p>足枷はまだまだ沢山あるので、今後も計画的に外していこうと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1501]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6031973713]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677713]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[creazione dell'account binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[83400646@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/it/register-person?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-13 09:20:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-13 00:20:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>実践 Python データサイエンス@Udemy の理解度を試すために、使用電力量と電気代推移データを使って実践してみる</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy-wotiyotutodakeshi-jian-sitemita/</link>
		<pubDate>Wed, 04 May 2016 12:44:21 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy-wotiyotutodakeshi-jian-sitemita/</guid>
		<description></description>
		<content:encoded><![CDATA[現在、<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス</a>講習を３分の１程度消化したところ。
初学者でも分りやすい構成で、とても良いです。
ただ、言われた通りに練習しているだけだと身についた感じがしないので、これまでの「numpyを知ろう」「pandas入門」辺りの内容を組み合わせて、自前のデータを可視化してみます。
使うのは以下のデータです。東電の電気家計簿から取得した、我が家の月ごとの消費電力量と電気代。

これをexcelファイルとしてダウンロードしてDataFrame化した後、単純にbarplotしてみると、こうなります。
<pre><code class="python">import pandas as pd
import seaborn as sns
data = pd.read_excel("Downloads/evaluation of solar power plant.xlsx",
    sheetname="(log) tepco")
sns.barplot(x="年月", y="使用量総計(kWh/月)", data=data)
sns.plt.savefig("temp.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1712/26203872212_9fd0183f6b_z_d.jpg" alt="" />
だからどうしたって感じのグラフが出来上がりました。
月ごとのデータを年ごとに並べて表示した方が、比較検討しやすいですよね。要するに東電の電気家計簿のグラフ表示形式なんですが…。
そんな形でプロットしやすくするため、元データをちょっと加工します。
まずは元データの中身を把握。
<pre><code class="python">import pandas as pd
import seaborn as sns
from pandas import Series, DataFrame
data = pd.read_excel("Downloads/evaluation of solar power plant.xlsx",
    sheetname="(log) tepco")
data.head(3)
    契約種別  事業所コード      年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
0  従量電灯B     603  Oct-13        30     8084           291            10
1  従量電灯B     603  Nov-13        33     8648           312             9
2  従量電灯B     603  Dec-13        29     9275           334            12
data.tail(3)
     契約種別  事業所コード         年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
27  従量電灯B     603     Jan-16        33     6970           279             8
28  従量電灯B     603     Feb-16        29     7560           304            10
29  従量電灯B     603  3/16/2016        30     6836           280             9
</code></pre>
「年月」カラムを、「年」カラムと「月」カラムに分離します。
<pre><code class="python">years = Series([date[-2:] for date in data["年月"]])
months = Series([date[:3] for date in data["年月"]])
</code></pre>
でもここで問題が。
data[29]の年月カラムだけ、文字列フォーマットが異なります。「3/1」になってるのは何故だ…。
とりあえず他と揃えます。
<pre><code class="python">months[29] = "Mar"
months.tail(3)
27    Jan
28    Feb
29    Mar
dtype: object
</code></pre>
元のデータフレームに新しいカラムとして追加します。
<pre><code class="python">data["年"] = years
data["月"] = months
data.tail(3)
     契約種別  事業所コード         年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
27  従量電灯B     603     Jan-16        33     6970           279             8
28  従量電灯B     603     Feb-16        29     7560           304            10
29  従量電灯B     603  3/16/2016        30     6836           280             9
    単価(円/kWh)   備考   年    月
27         25  NaN  16  Jan
28         25  NaN  16  Feb
29         24  NaN  16  Mar
</code></pre>
いい感じです。
このデータを、hueオプションに年カラムを指定しつつ、barplotで描画します。
<pre><code class="python">sns.barplot(x="月", y="使用量総計(kWh/月)", hue="年", data=data)
sns.plt.savefig("temp2.png")
</code></pre>
<img src="https://farm2.staticflickr.com/1618/26296595915_4435771b72_z_d.jpg" alt="" />
これでほぼ目的は達成できたんですが、2013年のデータが10月から始まっているせいで、スタート地点が中途半端です。
思い切って2013年のデータは削除し、ついでに請求金額も描画してみます。
<pre><code class="python">data2 = data.drop([0,1,2])
data2.head(5)
    契約種別  事業所コード      年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
3  従量電灯B     603  Jan-14        33    13183           462            14
4  従量電灯B     603  Feb-14        28    10432           372            13
5  従量電灯B     603  Mar-14        29    12773           443            15
6  従量電灯B     603  Apr-14        30    10227           356            12
7  従量電灯B     603  May-14        29     8478           286            10
sns.barplot(x="月", y="使用量総計(kWh/月)", hue="年", data=data2)
sns.plt.savefig("temp3.png")
sns.plt.close()
sns.barplot(x="月", y="請求金額(円)", hue="年", data=data2)
sns.plt.savefig("temp4.png")
</code></pre>
こうして出来上がったのが、以下の使用量総計推移グラフ。
<img src="https://farm2.staticflickr.com/1678/26230420161_4f276e3d5e_z_d.jpg" alt="" />
こちらは請求金額推移グラフ。
<img src="https://farm2.staticflickr.com/1451/25693914683_d75959a858_z_d.jpg" alt="" />
こうしてみると、2014年と比較して、2015,2016年は電力使用量がかなり減っているのがわかりますね。
これまでに<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス@Udemy</a>講習で学んだことの１割程度しか活用できてませんが、この講習を受けると、こんなことがPythonで出来るようになりますよ、という宣伝でした。
講師の方の回し者ではございませんが、とても分りやすい講習内容だと思うので、興味のある方は是非どうぞ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1502</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 21:44:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 12:44:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy-wotiyotutodakeshi-jian-sitemita]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1712/26203872212_9fd0183f6b_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>現在、<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス</a>講習を３分の１程度消化したところ。</p>

<p>初学者でも分りやすい構成で、とても良いです。</p>

<p>ただ、言われた通りに練習しているだけだと身についた感じがしないので、これまでの「numpyを知ろう」「pandas入門」辺りの内容を組み合わせて、自前のデータを可視化してみます。</p>

<p>使うのは以下のデータです。東電の電気家計簿から取得した、我が家の月ごとの消費電力量と電気代。</p>

<iframe src="https://docs.google.com/spreadsheets/d/1j-a-eZra982_TnLE04xUpUaMg5EQGjxsTRICRdtFSv8/pubhtml?gid=244896833&amp;single=true&amp;widget=true&amp;headers=false" style="width:100%;height:240px;" ></iframe>

<p>これをexcelファイルとしてダウンロードしてDataFrame化した後、単純にbarplotしてみると、こうなります。</p>

<pre><code class="language-python">import pandas as pd  
import seaborn as sns

data = pd.read_excel("Downloads/evaluation of solar power plant.xlsx",  
    sheetname="(log) tepco")

sns.barplot(x="年月", y="使用量総計(kWh/月)", data=data)  
sns.plt.savefig("temp.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1712/26203872212_9fd0183f6b_z_d.jpg" alt="" /></p>

<p>だからどうしたって感じのグラフが出来上がりました。</p>

<p>月ごとのデータを年ごとに並べて表示した方が、比較検討しやすいですよね。要するに東電の電気家計簿のグラフ表示形式なんですが…。</p>

<p>そんな形でプロットしやすくするため、元データをちょっと加工します。</p>

<p>まずは元データの中身を把握。</p>

<pre><code class="language-python">import pandas as pd  
import seaborn as sns  
from pandas import Series, DataFrame

data = pd.read_excel("Downloads/evaluation of solar power plant.xlsx",  
    sheetname="(log) tepco")

data.head(3)

    契約種別  事業所コード      年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
0  従量電灯B     603  Oct-13        30     8084           291            10  
1  従量電灯B     603  Nov-13        33     8648           312             9  
2  従量電灯B     603  Dec-13        29     9275           334            12

data.tail(3)

     契約種別  事業所コード         年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
27  従量電灯B     603     Jan-16        33     6970           279             8  
28  従量電灯B     603     Feb-16        29     7560           304            10  
29  従量電灯B     603  3/16/2016        30     6836           280             9  
</code></pre>

<p>「年月」カラムを、「年」カラムと「月」カラムに分離します。</p>

<pre><code class="language-python">years = Series([date[-2:] for date in data["年月"]])  
months = Series([date[:3] for date in data["年月"]])  
</code></pre>

<p>でもここで問題が。</p>

<p>data[29]の年月カラムだけ、文字列フォーマットが異なります。「3/1」になってるのは何故だ…。</p>

<p>とりあえず他と揃えます。</p>

<pre><code class="language-python">months[29] = "Mar"

months.tail(3)

27    Jan  
28    Feb  
29    Mar  
dtype: object  
</code></pre>

<p>元のデータフレームに新しいカラムとして追加します。</p>

<pre><code class="language-python">data["年"] = years  
data["月"] = months

data.tail(3)

     契約種別  事業所コード         年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
27  従量電灯B     603     Jan-16        33     6970           279             8  
28  従量電灯B     603     Feb-16        29     7560           304            10  
29  従量電灯B     603  3/16/2016        30     6836           280             9

    単価(円/kWh)   備考   年    月
27         25  NaN  16  Jan  
28         25  NaN  16  Feb  
29         24  NaN  16  Mar  
</code></pre>

<p>いい感じです。</p>

<p>このデータを、hueオプションに年カラムを指定しつつ、barplotで描画します。</p>

<pre><code class="language-python">sns.barplot(x="月", y="使用量総計(kWh/月)", hue="年", data=data)  
sns.plt.savefig("temp2.png")  
</code></pre>

<p><img src="https://farm2.staticflickr.com/1618/26296595915_4435771b72_z_d.jpg" alt="" /></p>

<p>これでほぼ目的は達成できたんですが、2013年のデータが10月から始まっているせいで、スタート地点が中途半端です。</p>

<p>思い切って2013年のデータは削除し、ついでに請求金額も描画してみます。</p>

<pre><code class="language-python">data2 = data.drop([0,1,2])

data2.head(5)

    契約種別  事業所コード      年月  使用日数(日間)  請求金額(円)  使用量総計(kWh/月)  使用量総計(kWh/日)  ?
3  従量電灯B     603  Jan-14        33    13183           462            14  
4  従量電灯B     603  Feb-14        28    10432           372            13  
5  従量電灯B     603  Mar-14        29    12773           443            15  
6  従量電灯B     603  Apr-14        30    10227           356            12  
7  従量電灯B     603  May-14        29     8478           286            10

sns.barplot(x="月", y="使用量総計(kWh/月)", hue="年", data=data2)  
sns.plt.savefig("temp3.png")

sns.plt.close()

sns.barplot(x="月", y="請求金額(円)", hue="年", data=data2)  
sns.plt.savefig("temp4.png")  
</code></pre>

<p>こうして出来上がったのが、以下の使用量総計推移グラフ。
<img src="https://farm2.staticflickr.com/1678/26230420161_4f276e3d5e_z_d.jpg" alt="" /></p>

<p>こちらは請求金額推移グラフ。
<img src="https://farm2.staticflickr.com/1451/25693914683_d75959a858_z_d.jpg" alt="" /></p>

<p>こうしてみると、2014年と比較して、2015,2016年は電力使用量がかなり減っているのがわかりますね。</p>

<p>これまでに<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス@Udemy</a>講習で学んだことの１割程度しか活用できてませんが、この講習を受けると、こんなことがPythonで出来るようになりますよ、という宣伝でした。</p>

<p>講師の方の回し者ではございませんが、とても分りやすい講習内容だと思うので、興味のある方は是非どうぞ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1503]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5940948222]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462171]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>実践 Python データサイエンス@Udemy 進捗状況</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang/</link>
		<pubDate>Tue, 12 Apr 2016 04:48:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy-wotiyotutodakeshi-jian-sitemita/">自前のデータを可視化してみたり</a>、<a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy/">meshgridの使い方を再確認してみたり</a>と時間がかかっております、Udemyの実践Pythonデータサイエンス。
Paypalの履歴を見ると、このコースを受講し始めたのが３月１８日。約１ヶ月かけて31 of 104 items completeという状況は、だいぶペース遅いですね。
修了証を受け取れるのは６月半ばってこと…？
セクションでいうと、今いるのはセクション６のデータ解析基礎その２の真ん中。
なんとか来月半ばまでに修了したいなぁ。何があるわけでもないんですが、３ヶ月はちょっとかけ過ぎかなぁと。
<ul>
<li>セクション1　このコースの内容とPythonについて</li>
<li>セクション2　準備</li>
<li>セクション3　numpyを知ろう</li>
<li>セクション4　pandas入門</li>
<li>セクション5　データ解析の基礎 その1</li>
<li><strong>セクション6　データ解析の基礎 その2</strong></li>
<li>セクション7　データ解析の基礎 その3</li>
<li>セクション8　データの可視化</li>
<li>セクション9　実践データ解析</li>
<li>セクション10　機械学習</li>
<li>セクション11　付録A：Pythonの基礎</li>
<li>セクション12　付録B：統計入門</li>
<li>セクション13　付録C：SQLとPython</li>
<li>セクション14　付録D：Webスクレイピング</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1504</wp:post_id>
		<wp:post_date><![CDATA[2016-04-12 13:48:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-12 04:48:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy-wotiyotutodakeshi-jian-sitemita/">自前のデータを可視化してみたり</a>、<a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy/">meshgridの使い方を再確認してみたり</a>と時間がかかっております、Udemyの実践Pythonデータサイエンス。</p>

<p>Paypalの履歴を見ると、このコースを受講し始めたのが３月１８日。約１ヶ月かけて31 of 104 items completeという状況は、だいぶペース遅いですね。</p>

<p>修了証を受け取れるのは６月半ばってこと…？</p>

<p>セクションでいうと、今いるのはセクション６のデータ解析基礎その２の真ん中。</p>

<p>なんとか来月半ばまでに修了したいなぁ。何があるわけでもないんですが、３ヶ月はちょっとかけ過ぎかなぁと。</p>

<ul>
<li>セクション1　このコースの内容とPythonについて</li>
<li>セクション2　準備</li>
<li>セクション3　numpyを知ろう</li>
<li>セクション4　pandas入門</li>
<li>セクション5　データ解析の基礎 その1</li>
<li><strong>セクション6　データ解析の基礎 その2</strong></li>
<li>セクション7　データ解析の基礎 その3</li>
<li>セクション8　データの可視化</li>
<li>セクション9　実践データ解析</li>
<li>セクション10　機械学習</li>
<li>セクション11　付録A：Pythonの基礎</li>
<li>セクション12　付録B：統計入門</li>
<li>セクション13　付録C：SQLとPython</li>
<li>セクション14　付録D：Webスクレイピング</li>
</ul>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6009147778]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447166]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>テクノフロンティア2016をWeb事前予約すると、テクノロジーを感じない件。</title>
		<link>https://tech.blog.uribou.me/tekunohuronteia2016wowebshi-qian-yu-yue-sitemitara/</link>
		<pubDate>Wed, 20 Apr 2016 13:17:18 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tekunohuronteia2016wowebshi-qian-yu-yue-sitemitara/</guid>
		<description></description>
		<content:encoded><![CDATA[会社を移籍（ほぼ転職）して間も無いにも関わらず、現場のリーダーが行って来いと言ってくれて、<a href="http://www.jma.or.jp/tf/ja/">テクノフロンティア2016</a>に来ております。
で、Web事前予約を済ませ、登録証をメール受信していたので安心していたら…
電車の中で下記注意書きに気づく。
<blockquote>
  【ご注意事項】
  展示会来場事前登録証（本メール文面）を送付いたします。
  本文面をプリントアウトのうえ名刺とともに、展示会場入り口の登録所にてご提示ください。
  ＊展示会当日、【展示会来場事前登録証】をお忘れになると、来場事前登録をいただいても当日入場（￥3,000）が必要となりますのでご注意ください。
</blockquote>
Σ(ﾟДﾟ)
テクノロジー感じない！
何このアナログ手続き！
二次元バーコードをスマホに表示してスキャンして手続き完了とかしないの？
なんて言っても始まらない上、3000円支払うのも癪なので（見落としていたのが悪いとはいえ…）、初めて<a href="https://www.printing.ne.jp/index.html">ネットプリントサービス</a>なるものを利用してみました。
プリンタが手元になくても、手続きを全て電車の中で済ませることができて、紙に印刷できるなんて… テクノロジーは進歩しているのに、なんでしょうこの虚しさ…
以下はその手順概要です。
<ol>
<li>ネットプリントサービスのアカウント作成し、スマホアプリをインストールしておく。</li>
<li>登録証メールをGmailアプリからGoogle driveへPDF印刷する</li>
<li>そのPDFをGoogle driveアプリからひらき、ネットプリントアプリで開くを選択</li>
<li>ネットプリントアプリからネットプリントサーバにPDFを転送し、予約番号を取得</li>
</ol>
あとはセブンイレブンの印刷機で予約番号を入力すれば、40円で登録証ゲット！(このサービスを使うと、付加価値分10円割増な上2枚必要でした)
本題でないところで、やたらと疲れました…。
テクノフロンティアにWeb事前予約する人は、メールの注意書きを見落とさないよう、ご注意を。（普通見落とさない？）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1505</wp:post_id>
		<wp:post_date><![CDATA[2016-04-20 22:17:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-20 13:17:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tekunohuronteia2016wowebshi-qian-yu-yue-sitemitara]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>会社を移籍（ほぼ転職）して間も無いにも関わらず、現場のリーダーが行って来いと言ってくれて、<a href="http://www.jma.or.jp/tf/ja/">テクノフロンティア2016</a>に来ております。</p>

<p>で、Web事前予約を済ませ、登録証をメール受信していたので安心していたら…</p>

<p>電車の中で下記注意書きに気づく。</p>

<blockquote>
  <p>【ご注意事項】
  展示会来場事前登録証（本メール文面）を送付いたします。
  本文面をプリントアウトのうえ名刺とともに、展示会場入り口の登録所にてご提示ください。
  ＊展示会当日、【展示会来場事前登録証】をお忘れになると、来場事前登録をいただいても当日入場（￥3,000）が必要となりますのでご注意ください。</p>
</blockquote>

<p>Σ(ﾟДﾟ)</p>

<p>テクノロジー感じない！</p>

<p>何このアナログ手続き！</p>

<p>二次元バーコードをスマホに表示してスキャンして手続き完了とかしないの？</p>

<p>なんて言っても始まらない上、3000円支払うのも癪なので（見落としていたのが悪いとはいえ…）、初めて<a href="https://www.printing.ne.jp/index.html">ネットプリントサービス</a>なるものを利用してみました。</p>

<p>プリンタが手元になくても、手続きを全て電車の中で済ませることができて、紙に印刷できるなんて… テクノロジーは進歩しているのに、なんでしょうこの虚しさ…</p>

<p>以下はその手順概要です。</p>

<ol>
<li>ネットプリントサービスのアカウント作成し、スマホアプリをインストールしておく。  </li>
<li>登録証メールをGmailアプリからGoogle driveへPDF印刷する  </li>
<li>そのPDFをGoogle driveアプリからひらき、ネットプリントアプリで開くを選択  </li>
<li>ネットプリントアプリからネットプリントサーバにPDFを転送し、予約番号を取得</li>
</ol>

<p>あとはセブンイレブンの印刷機で予約番号を入力すれば、40円で登録証ゲット！(このサービスを使うと、付加価値分10円割増な上2枚必要でした)</p>

<p>本題でないところで、やたらと疲れました…。</p>

<p>テクノフロンティアにWeb事前予約する人は、メールの注意書きを見落とさないよう、ご注意を。（普通見落とさない？）</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6004537398]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447169]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>テクノフロンティア2016の注目ポイント。</title>
		<link>https://tech.blog.uribou.me/tekunohuronteia2016nozhu-mu-pointo/</link>
		<pubDate>Wed, 20 Apr 2016 20:29:51 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tekunohuronteia2016nozhu-mu-pointo/</guid>
		<description></description>
		<content:encoded><![CDATA[ざっくり２つに分かれた広大な会場で、回るのがとても大変な<a href="http://www.jma.or.jp/tf/ja/">テクノフロンティア2016</a>に行ってきました。
<a href="http://blog.rinka-blossom.com/tekunohuronteia2016wowebshi-qian-yu-yue-sitemitara/">Web予約のシステムは残念でしたが</a>、中で展示している企業様は多種多様で、CEATECとはまるで違うイベントでした。
会場はメカトロニクスとエレクトロニクスの二つに分かれており、メカトロニクスの方はドローン展示が大盛況なこともあってか、全体的にドローン関連の要素技術（モーター制御等）の展示が占めています。
エレクトロニクスの方は展示内容が多岐に渡るので紹介しきれないんですが、環境発電（エナジーハーベスト）の展示が意外と多く、印象に残ってます。
<h1>メカトロニクス会場</h1>
<h2>リゴルジャパン合同会社</h2>
個人的にも購入したくなるほどの小型且つ低価格なオシロスコープ、MSO/DS1000Zシリーズを展示。
周波数帯域50-100MHz, 4chで、お値段は51800円〜。
シリアルバス（RS232/I2C/SPI）のトリガに特定のデータを指定することができる。
これらの機種で面白いと感じたのは、上記シリアルバスデータトリガ機能はオプションであり、製品購入時点では機能が使えない、という点。
本体とは別にライセンスを購入して、シリアル番号をオシロに入力することにより、上記機能が有効になるという、PC用ソフトウェアパッケージではごく一般的な仕組みを採用している。
オシロには予め上記オプション機能を含めたソフトウェアが書き込まれており、入力されたライセンス番号に応じてオプション機能を有効化するだけ。
UPDATE/ADDする機能が予め決まっている（メーカ側が決められる）のであれば、採用しやすいのかな。
オシロのような計測機器でも、今時は当たり前の機能なんでしょか。
<h2>EISOL（+NATIONAL INSTRUMENTS）</h2>
RTOS Linux（NI独自）を採用した組み込みコントローラ向け制御監視アプリケーションを、NI製LabVIEW開発環境にて仮想化されたコンポーネント同士を接続する形で設計、開発できる。
EISOL社がサンプルとして音源リアルタイム可視化装置を展示しており、これは上記LabVIEW環境で開発したもの。
もう少し詳細を聞きたかったが、説明員が常に誰かに捕まるほど大盛況で、何度か足を運ぶも結局聞けず終い…。
LabVIEWについては<a href="http://www.quatsys.com/labview/whatslabview.html">こちら</a>で詳しく解説されています。
<h2>参考展示：IoTが拓く次世代ものづくりの世界</h2>
工場内の設備情報（I/O、各種センサ、位置、トルク等）を収集・加工し、可視化して、設備の稼働率や故障率等の管理を効率化するという提案。
HMIにはWebブラウザを使用しており、設備情報等の各種データ収集・加工は専用のPCサーバをイントラネット内に用意し、管理者はPCサーバが提供するWebインタフェースを介して監視、操作するというもの。
データ加工に機械学習（Deep Learning）等の記載があるため、より複雑な要求に応えるためには専用サーバを介するのが現実解になる模様。
<h2>enRoute</h2>
ドローンを用いたクラウド型監視システムの展示。
「IoTが拓く次世代ものづくりの世界」展示と同様、ドローン（組み込み機器）はデータ収集に徹し、データロギングや加工、HMIは専用PCサーバが担っている、というのが共通していたかな。
<h1>エレクトロニクス会場</h1>
<h2>STM</h2>
STM32マイコン開発ボードNucleo（ARM Cortex-Mシリーズ）と、その機能拡張ボード（各種センサ、WiFi、BLE、NFC、モータ制御等）の紹介。
拡張ボードをNucleoに簡単にプラグインできるようになっており、そのソフトウェアコンポーネントもオープンソースで提供されているので、比較的簡単にアイディアを形にすることができる。
各ボードは1000円程度で、Welcome-Kitと呼ばれるスターターガイド付きのキットも提供している。
会場では開発環境の体験コーナーがあり、体験者にはその場で動かしたボードを無料プレゼントという太っ腹対応。
欲しかったけど、大盛況で近寄れず…。無念。
<h2>LINEAR</h2>
一旦販売し始めたら材料が調達できる限り生産を続けます、というポシリーを貫いているデバイスメーカなんだそう。
各デバイスの紹介に「とんがりPOINT」が記載されており、どれも面白い。
中でも面白かったのは以下二つ。
<h3>LTPoE++</h3>
PoE（Power Over Ethernet）を独自拡張したLTPoE++対応チップが展示されており、最大90W（20V強 x 4A強）の電力を、10Gbpsデータと同時に、CAT5e Ethernetケーブル１本で供給できるという。
<h3>エナジーハーベスト</h3>
環境発電（エナジーハーベスト）バッテリジチャージャを内蔵した昇降圧DC/DCコンバータも展示されており、太陽光パネルや圧電素子を入力とした微弱なエネルギーを収穫（ハーベスト）するのをウリとしていた。
他にもLINEAR社が無料で提供しているという電子回路シミュレータLTspiceの紹介もあり、興味が尽きない。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1506</wp:post_id>
		<wp:post_date><![CDATA[2016-04-21 05:29:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-20 20:29:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tekunohuronteia2016nozhu-mu-pointo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ざっくり２つに分かれた広大な会場で、回るのがとても大変な<a href="http://www.jma.or.jp/tf/ja/">テクノフロンティア2016</a>に行ってきました。</p>

<p><a href="http://blog.rinka-blossom.com/tekunohuronteia2016wowebshi-qian-yu-yue-sitemitara/">Web予約のシステムは残念でしたが</a>、中で展示している企業様は多種多様で、CEATECとはまるで違うイベントでした。</p>

<p>会場はメカトロニクスとエレクトロニクスの二つに分かれており、メカトロニクスの方はドローン展示が大盛況なこともあってか、全体的にドローン関連の要素技術（モーター制御等）の展示が占めています。</p>

<p>エレクトロニクスの方は展示内容が多岐に渡るので紹介しきれないんですが、環境発電（エナジーハーベスト）の展示が意外と多く、印象に残ってます。</p>

<h1 id="">メカトロニクス会場</h1>

<h2 id="">リゴルジャパン合同会社</h2>

<p>個人的にも購入したくなるほどの小型且つ低価格なオシロスコープ、MSO/DS1000Zシリーズを展示。</p>

<p>周波数帯域50-100MHz, 4chで、お値段は51800円〜。</p>

<p>シリアルバス（RS232/I2C/SPI）のトリガに特定のデータを指定することができる。</p>

<p>これらの機種で面白いと感じたのは、上記シリアルバスデータトリガ機能はオプションであり、製品購入時点では機能が使えない、という点。</p>

<p>本体とは別にライセンスを購入して、シリアル番号をオシロに入力することにより、上記機能が有効になるという、PC用ソフトウェアパッケージではごく一般的な仕組みを採用している。</p>

<p>オシロには予め上記オプション機能を含めたソフトウェアが書き込まれており、入力されたライセンス番号に応じてオプション機能を有効化するだけ。</p>

<p>UPDATE/ADDする機能が予め決まっている（メーカ側が決められる）のであれば、採用しやすいのかな。</p>

<p>オシロのような計測機器でも、今時は当たり前の機能なんでしょか。</p>

<h2 id="eisolnationalinstruments">EISOL（+NATIONAL INSTRUMENTS）</h2>

<p>RTOS Linux（NI独自）を採用した組み込みコントローラ向け制御監視アプリケーションを、NI製LabVIEW開発環境にて仮想化されたコンポーネント同士を接続する形で設計、開発できる。</p>

<p>EISOL社がサンプルとして音源リアルタイム可視化装置を展示しており、これは上記LabVIEW環境で開発したもの。</p>

<p>もう少し詳細を聞きたかったが、説明員が常に誰かに捕まるほど大盛況で、何度か足を運ぶも結局聞けず終い…。</p>

<p>LabVIEWについては<a href="http://www.quatsys.com/labview/whatslabview.html">こちら</a>で詳しく解説されています。</p>

<h2 id="iot">参考展示：IoTが拓く次世代ものづくりの世界</h2>

<p>工場内の設備情報（I/O、各種センサ、位置、トルク等）を収集・加工し、可視化して、設備の稼働率や故障率等の管理を効率化するという提案。</p>

<p>HMIにはWebブラウザを使用しており、設備情報等の各種データ収集・加工は専用のPCサーバをイントラネット内に用意し、管理者はPCサーバが提供するWebインタフェースを介して監視、操作するというもの。</p>

<p>データ加工に機械学習（Deep Learning）等の記載があるため、より複雑な要求に応えるためには専用サーバを介するのが現実解になる模様。</p>

<h2 id="enroute">enRoute</h2>

<p>ドローンを用いたクラウド型監視システムの展示。</p>

<p>「IoTが拓く次世代ものづくりの世界」展示と同様、ドローン（組み込み機器）はデータ収集に徹し、データロギングや加工、HMIは専用PCサーバが担っている、というのが共通していたかな。</p>

<h1 id="">エレクトロニクス会場</h1>

<h2 id="stm">STM</h2>

<p>STM32マイコン開発ボードNucleo（ARM Cortex-Mシリーズ）と、その機能拡張ボード（各種センサ、WiFi、BLE、NFC、モータ制御等）の紹介。</p>

<p>拡張ボードをNucleoに簡単にプラグインできるようになっており、そのソフトウェアコンポーネントもオープンソースで提供されているので、比較的簡単にアイディアを形にすることができる。</p>

<p>各ボードは1000円程度で、Welcome-Kitと呼ばれるスターターガイド付きのキットも提供している。</p>

<p>会場では開発環境の体験コーナーがあり、体験者にはその場で動かしたボードを無料プレゼントという太っ腹対応。</p>

<p>欲しかったけど、大盛況で近寄れず…。無念。</p>

<h2 id="linear">LINEAR</h2>

<p>一旦販売し始めたら材料が調達できる限り生産を続けます、というポシリーを貫いているデバイスメーカなんだそう。</p>

<p>各デバイスの紹介に「とんがりPOINT」が記載されており、どれも面白い。</p>

<p>中でも面白かったのは以下二つ。</p>

<h3 id="ltpoe">LTPoE++</h3>

<p>PoE（Power Over Ethernet）を独自拡張したLTPoE++対応チップが展示されており、最大90W（20V強 x 4A強）の電力を、10Gbpsデータと同時に、CAT5e Ethernetケーブル１本で供給できるという。</p>

<h3 id="">エナジーハーベスト</h3>

<p>環境発電（エナジーハーベスト）バッテリジチャージャを内蔵した昇降圧DC/DCコンバータも展示されており、太陽光パネルや圧電素子を入力とした微弱なエネルギーを収穫（ハーベスト）するのをウリとしていた。</p>

<p>他にもLINEAR社が無料で提供しているという電子回路シミュレータLTspiceの紹介もあり、興味が尽きない。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6211711832]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620245]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>301</wp:comment_id>
			<wp:comment_author><![CDATA[бнанс рестраця]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[46659808@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/uk-UA/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.229]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-30 23:02:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-30 14:02:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>車載予備電源で震災に備える。</title>
		<link>https://tech.blog.uribou.me/zhen-zai-nibei-etedian-yuan-woque-bao-siteoku/</link>
		<pubDate>Fri, 20 May 2016 17:35:06 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/zhen-zai-nibei-etedian-yuan-woque-bao-siteoku/</guid>
		<description></description>
		<content:encoded><![CDATA[連日の九州震災ニュースに、東日本大震災同等の不安を覚えた妻とも相談して、車にも太陽光予備電源を設置することになりました。いつの間にか嫁自ら調べていて、こんなのあったよと教えてくれるという。
自宅に自作太陽光電源が２つ（<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">中規模</a>と<a href="http://blog.rinka-blossom.com/ren-dai-diynowei-fang-dear-wall/">小規模</a>）あるおかげか、考え方が同じベクトルを向いてきたようで…。
そんなわけで、車載用太陽光パネルをどれにするかで数日悩んだ末に決めました。
<strong><a href="http://store.shopping.yahoo.co.jp/noble-solar/001-017.html">単結晶太陽光パネル エクセレント 20W ソーラーパネル セミフレキシブル ブラック</a></strong>
<img src="https://farm2.staticflickr.com/1512/26619138992_f2d16e6d71_z_d.jpg" alt="" />
<del>エクセレントなんて自分で言っちゃうところが怪しい気もしますが、</del>発電効率の良い単結晶なおかげで面積小さめ、1.9mmの薄さでセミフレキシブル、防水加工済み、さらに普通の太陽光パネルと違って縁まで真っ黒なので、車のダッシュボードに設置してもフロントガラスへの映り込みが気にならないという、至れり尽くせりの設計が有難い。
<a href="http://store.shopping.yahoo.co.jp/noble-solar/001-018.html?ccode=ofv&amp;pos=1&amp;model=">同じセミフレキシブルで50Wタイプ</a>もありましたが、幅広すぎてダッシュボードに収まらないんですよね。20Wタイプが2枚なら、どうにか収まるかな…。
車の屋根に設置するなら、<a href="http://www.shachu-haku.com/solar/folding.html">エムソーラーさんのバックコンタクトで高効率なフレキシブルタイプ</a>なんでしょうけど…　今回はダッシュボード活用ということもあり、全面しっかり黒を優先しました。
蓄電池は余ってたバイク用ディープサイクルバッテリーを流用するので、追加コスト無し。
チャージコントローラは格安MPPT方式のを導入しようと思ったんですが、機器そのものの消費電力が高いことがわかって却下。せっかく効率よく蓄電した電力を自分で消費しちゃうんじゃ、世話ない…。
結局電陵製のPWM方式を採用。消費電力まで考慮すると、格安MPPT方式と大して変わらない効率性が良い。

取り急ぎ車のダッシュボードには載せてみたんですが、あまりに美しくないので、その全貌はまた次回。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1507</wp:post_id>
		<wp:post_date><![CDATA[2016-05-21 02:35:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-20 17:35:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[zhen-zai-nibei-etedian-yuan-woque-bao-siteoku]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>連日の九州震災ニュースに、東日本大震災同等の不安を覚えた嫁とも相談して、車にも太陽光予備電源を設置することになりました。</p>
<p>いつの間にか嫁自ら調べていて、こんなのあったよと教えてくれるという。</p>
<p>自宅に自作太陽光電源が２つ（<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">中規模</a>と<a href="http://blog.rinka-blossom.com/ren-dai-diynowei-fang-dear-wall/">小規模</a>）あるおかげか、考え方が同じベクトルを向いてきたようで…。</p>
<p>というわけで、さっそく車載用太陽光パネルをどれにするかで数日悩んだ末、これに決めました。</p>
<p><strong><a href="http://store.shopping.yahoo.co.jp/noble-solar/001-017.html">単結晶太陽光パネル エクセレント 20W ソーラーパネル セミフレキシブル ブラック</a></strong>
<img src="https://farm2.staticflickr.com/1512/26619138992_f2d16e6d71_z_d.jpg" alt="" /></p>
<p><del>エクセレントなんて自分で言っちゃうところが怪しい気もしますが、</del>発電効率の良い単結晶なおかげで面積小さめ、1.9mmの薄さでセミフレキシブル、その上防水加工済みと至れり尽くせり。</p>
<p>普通の太陽光パネルと違い、縁まで真っ黒なので、車のダッシュボードに設置してもフロントガラスへの映り込みが気にならなそうですね。</p>
<p>さすが最初から車載を想定したパネル。</p>
<p><a href="http://store.shopping.yahoo.co.jp/noble-solar/001-018.html?ccode=ofv&amp;pos=1&amp;model=">同じセミフレキシブルで50Wタイプ</a>もありましたが、このサイズだと愛車のダッシュボードに収まらないんですよね。20Wタイプが2枚なら、どうにか収まるかな…。</p>
<p>車の屋根に設置するなら、<a href="http://www.shachu-haku.com/solar/folding.html">エムソーラーさんのバックコンタクトで高効率なフレキシブルタイプ</a>なんでしょうけど…　今回はダッシュボード活用ということもあり、全面しっかり黒を優先しました。</p>
<p>蓄電池は余ってたバイク用ディープサイクルバッテリーを流用するので、追加コスト無し。</p>
<p>チャージコントローラは格安MPPT方式のを導入しようと思ったんですが、機器そのものの消費電力が高いことがわかって却下。せっかく効率よく蓄電した電力を自分で消費しちゃうんじゃ、世話ない…。</p>
<p>結局電陵製のPWM方式を採用。消費電力まで考慮すると、格安MPPT方式と大して変わらない効率性が良い。</p>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00C74LVAU&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
<p>取り急ぎ車のダッシュボードには載せてみたんですが、あまりに美しくないので、その全貌はまた今度…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955757207]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490506]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>167</wp:comment_id>
			<wp:comment_author><![CDATA[M tài khon binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[23199741@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/vi/register?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-14 17:20:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-14 08:20:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>224</wp:comment_id>
			<wp:comment_author><![CDATA[Dang k'y binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[45348943@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/vi/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.186]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-17 21:57:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-17 12:57:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>実践 Python データサイエンス@Udemy 進捗状況 その２</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang-sono2/</link>
		<pubDate>Fri, 29 Apr 2016 13:21:57 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang-sono2/</guid>
		<description></description>
		<content:encoded><![CDATA[Udemyの実践Pythonデータサイエンス、やっと実践データ解析の章に辿り着きました。
<ul>
<li>セクション1　このコースの内容とPythonについて</li>
<li>セクション2　準備</li>
<li>セクション3　numpyを知ろう</li>
<li>セクション4　pandas入門</li>
<li>セクション5　データ解析の基礎 その1</li>
<li>セクション6　データ解析の基礎 その2</li>
<li>セクション7　データ解析の基礎 その3</li>
<li>セクション8　データの可視化</li>
<li><strong>セクション9　実践データ解析</strong></li>
<li>セクション10　機械学習</li>
<li>セクション11　付録A：Pythonの基礎</li>
<li>セクション12　付録B：統計入門</li>
<li>セクション13　付録C：SQLとPython</li>
<li>セクション14　付録D：Webスクレイピング</li>
</ul>
今更気づきましたが、よく見るとセクション１１以降は「付録」となってますね。
ここから先は自分で経験を積みなさいということか…。まだ終えてませんが。
経験を積むにはどうするか？ と探していたら、こんな本を見つけたので購入しておきました。

これまた濃ゆい内容で面白そうなんですが、濃すぎる内容なので紹介はいつかそのうち別の機会に…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1509</wp:post_id>
		<wp:post_date><![CDATA[2016-04-29 22:21:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-29 13:21:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang-sono2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>Udemyの実践Pythonデータサイエンス、やっと実践データ解析の章に辿り着きました。</p>

<ul>
<li>セクション1　このコースの内容とPythonについて</li>
<li>セクション2　準備</li>
<li>セクション3　numpyを知ろう</li>
<li>セクション4　pandas入門</li>
<li>セクション5　データ解析の基礎 その1</li>
<li>セクション6　データ解析の基礎 その2</li>
<li>セクション7　データ解析の基礎 その3</li>
<li>セクション8　データの可視化</li>
<li><strong>セクション9　実践データ解析</strong></li>
<li>セクション10　機械学習</li>
<li>セクション11　付録A：Pythonの基礎</li>
<li>セクション12　付録B：統計入門</li>
<li>セクション13　付録C：SQLとPython</li>
<li>セクション14　付録D：Webスクレイピング</li>
</ul>

<p>今更気づきましたが、よく見るとセクション１１以降は「付録」となってますね。</p>

<p>ここから先は自分で経験を積みなさいということか…。まだ終えてませんが。</p>

<p>経験を積むにはどうするか？ と探していたら、こんな本を見つけたので購入しておきました。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117488&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>これまた濃ゆい内容で面白そうなんですが、濃すぎる内容なので紹介はいつかそのうち別の機会に…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5943044342]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634490]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>210</wp:comment_id>
			<wp:comment_author><![CDATA[създаване на профил в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[50635925@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/bg/register?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.21]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-05 10:47:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-05 01:47:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>実践 Python データサイエンス@Udemy 実践データ解析準備でkaggleに「オマエbotじゃねーの？」と疑われる。</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy-shi-jian-detajie-xi-zhun-bei-dekaggleniomaebotziyaneno-toyi-wareru/</link>
		<pubDate>Fri, 29 Apr 2016 13:45:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy-shi-jian-detajie-xi-zhun-bei-dekaggleniomaebotziyaneno-toyi-wareru/</guid>
		<description></description>
		<content:encoded><![CDATA[タイタニック号のデータセットを使うために、The world's largest community of data scientists compete to solve your most valuable problems.と謳う<a href="https://www.kaggle.com">kaggle</a>のアカウントを作っておくように勧められます。
Facebookアカウントに関連付けて簡単にアカウントを作れるんですが…
ブラウザで戻ったり進んだりしていたら、いつの間にかkaggleにログインを拒否られ、
<strong>「オマエbotじゃねーの？」</strong>
<strong>「この問題を解いて、オマエがデータサイエンティストであることを証明しろ」</strong>
と、いきなり英語でケンカを売られました。
その問題がこちら。毎回変わるのかな？
<blockquote>
  生徒は全部で62人います。<br />
  33人の生徒は数学を、３７人の生徒は統計学を、32人の生徒は財政学を受講しています。<br />
  18人の生徒は数学と統計学の両方を、24人の生徒は統計学と財政学の両方を、11人の生徒は財政学と数学の両方を受講しています。<br />
  9人の生徒は、３つ全てを受講しています。<br />
  3つの授業、何も受講していない生徒は何人いますか？
</blockquote>
<a href="https://www.google.co.jp/search?q=%E5%8C%85%E5%90%AB%E5%9B%B3&amp;client=ubuntu&amp;hs=wiy&amp;channel=fs&amp;hl=ja&amp;biw=951&amp;bih=646&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;sa=X&amp;sqi=2&amp;ved=0ahUKEwjp0-Tx9bTMAhWIFpQKHVjkARUQsAQIGg">包含図</a>を書いて整理すれば、簡単ですね。
見事bot容疑は晴れて、「疑ってごめんなさい」と謝罪されました。
さて、データセットをダウンロードするか…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1510</wp:post_id>
		<wp:post_date><![CDATA[2016-04-29 22:45:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-29 13:45:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy-shi-jian-detajie-xi-zhun-bei-dekaggleniomaebotziyaneno-toyi-wareru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>タイタニック号のデータセットを使うために、The world's largest community of data scientists compete to solve your most valuable problems.と謳う<a href="https://www.kaggle.com">kaggle</a>のアカウントを作っておくように勧められます。</p>

<p>Facebookアカウントに関連付けて簡単にアカウントを作れるんですが…</p>

<p>ブラウザで戻ったり進んだりしていたら、いつの間にかkaggleにログインを拒否られ、</p>

<p><strong>「オマエbotじゃねーの？」</strong></p>

<p><strong>「この問題を解いて、オマエがデータサイエンティストであることを証明しろ」</strong></p>

<p>と、いきなり英語でケンカを売られました。</p>

<p>その問題がこちら。毎回変わるのかな？</p>

<blockquote>
  <p>生徒は全部で62人います。 <br />
  33人の生徒は数学を、３７人の生徒は統計学を、32人の生徒は財政学を受講しています。 <br />
  18人の生徒は数学と統計学の両方を、24人の生徒は統計学と財政学の両方を、11人の生徒は財政学と数学の両方を受講しています。 <br />
  9人の生徒は、３つ全てを受講しています。 <br />
  3つの授業、何も受講していない生徒は何人いますか？</p>
</blockquote>

<p><a href="https://www.google.co.jp/search?q=%E5%8C%85%E5%90%AB%E5%9B%B3&amp;client=ubuntu&amp;hs=wiy&amp;channel=fs&amp;hl=ja&amp;biw=951&amp;bih=646&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;sa=X&amp;sqi=2&amp;ved=0ahUKEwjp0-Tx9bTMAhWIFpQKHVjkARUQsAQIGg">包含図</a>を書いて整理すれば、簡単ですね。</p>

<p>見事bot容疑は晴れて、「疑ってごめんなさい」と謝罪されました。</p>

<p>さて、データセットをダウンロードするか…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941898509]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677714]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>さよなら東電。再エネ切り替え完了しました。</title>
		<link>https://tech.blog.uribou.me/zai-eneqie-riti-ewan-liao/</link>
		<pubDate>Mon, 02 May 2016 13:27:17 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/zai-eneqie-riti-ewan-liao/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.mitsuurokogreenenergy.com/company/vision.html">ミツウロコグリーンエネルギー株式会社(MGE)</a>さんとの本契約を完了し、供給開始予定日の連絡が来ました。
<blockquote>
  現在ご契約の電力会社への廃止取次が完了いたしました。<br />
  弊社からの供給開始日は2016/05/02を予定しています。<br />
  （なお、電力会社の都合により変更になる場合がございます）
</blockquote>
んで5/2、予定通り切り替え完了したそうです。
<blockquote>
  供給地点特定番号：xxxx<br />
  弊社からの供給は2016/05/02より開始いたしました。<br />
  このたびは、数ある電力会社からミツウロコグリーンエネルギーを<br />
  選んでいただき、誠にありがとうございました。<br />
  今後ともよろしくお願い申しあげます。
</blockquote>
…電気やガスの開通時に立会いが必要だったりするので、今回の電力会社切り替え時も必要なのかな？と想像していたんですが、必要な作業は全て電力供給側持ちのようで、需給側はWeb経由の手続き以外に必要な作業は皆無のようです。
これは良い。けど、その分供給側の作業量、煩雑さが増しているのではないかと想像してしまって、詳細を知りたいような知りたくないような…。
今、このブログを書くのに使っている電力は<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">自家発電したもの</a>ですが、ミツウロコさんでも使用電力量をWeb経由で参照できるそうなので、そのうちレポートしようと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1511</wp:post_id>
		<wp:post_date><![CDATA[2016-05-02 22:27:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-02 13:27:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[zai-eneqie-riti-ewan-liao]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://www.mitsuurokogreenenergy.com/company/vision.html">ミツウロコグリーンエネルギー株式会社(MGE)</a>さんとの本契約を完了し、供給開始予定日の連絡が来ました。</p>

<blockquote>
  <p>現在ご契約の電力会社への廃止取次が完了いたしました。 <br />
  弊社からの供給開始日は2016/05/02を予定しています。 <br />
  （なお、電力会社の都合により変更になる場合がございます）</p>
</blockquote>

<p>んで5/2、予定通り切り替え完了したそうです。</p>

<blockquote>
  <p>供給地点特定番号：xxxx <br />
  弊社からの供給は2016/05/02より開始いたしました。 <br />
  このたびは、数ある電力会社からミツウロコグリーンエネルギーを <br />
  選んでいただき、誠にありがとうございました。 <br />
  今後ともよろしくお願い申しあげます。</p>
</blockquote>

<p>…電気やガスの開通時に立会いが必要だったりするので、今回の電力会社切り替え時も必要なのかな？と想像していたんですが、必要な作業は全て電力供給側持ちのようで、需給側はWeb経由の手続き以外に必要な作業は皆無のようです。</p>

<p>これは良い。けど、その分供給側の作業量、煩雑さが増しているのではないかと想像してしまって、詳細を知りたいような知りたくないような…。</p>

<p>今、このブログを書くのに使っている電力は<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">自家発電したもの</a>ですが、ミツウロコさんでも使用電力量をWeb経由で参照できるそうなので、そのうちレポートしようと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955557764]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462171]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>今年度の作付け計画をざっくりと。</title>
		<link>https://tech.blog.uribou.me/jia-ting-cai-yuan-nozuo-fu-keji-hua-hazui-chu-gada-shi/</link>
		<pubDate>Thu, 05 May 2016 04:59:09 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/jia-ting-cai-yuan-nozuo-fu-keji-hua-hazui-chu-gada-shi/</guid>
		<description></description>
		<content:encoded><![CDATA[１年通して家庭菜園で野菜を作ってみて…　作付けに限らず、計画は最初にしっかり考えて立てないといけませんね。ほんと今更ですが。
畝をいくつ作って、次の季節に何を植えるか考慮しつつ各畝に植える野菜を考えつつ、連作障害も考慮に入れてローテーション考えて…　って、なかなか難しい。
とりあえず、作付けする野菜は家族（主に子供）が好きな品目で固めました。
<img src="https://farm2.staticflickr.com/1660/26691334511_1daf988b5b_z_d.jpg" alt="" />
まずはミニトマト。
彼らの繁殖力を舐めてかかった去年の反省を活かして、植える苗は２株と少なめに。
どうせ脇芽を取ってるうちに、どんどん株が増えていくので。
<img src="https://farm2.staticflickr.com/1479/26732931326_4db3129299_z_d.jpg" alt="" />
ナスは去年と同じく２株。
夫婦揃ってナス好きですが、これくらいが良いペースで消費できるみたい。
<img src="https://farm2.staticflickr.com/1669/26732930836_1bc2c577d4_z_d.jpg" alt="" />
絹さやは適当に植えてしまったので、どれだけ収穫できるかは不明。
コトモファーム代表 小島さんの話だと、もう嫌ってくらいに採れるとか…　いやー、楽しみだ。
<img src="https://farm2.staticflickr.com/1664/26691333031_907f937264_z_d.jpg" alt="" />
そんなわけで、冬に植えたのと合わせて上のような感じになりました。
すでにかなり暑くなってますが、夏に向けての収穫が今から楽しみです。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1512</wp:post_id>
		<wp:post_date><![CDATA[2016-05-05 13:59:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-05 04:59:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jia-ting-cai-yuan-nozuo-fu-keji-hua-hazui-chu-gada-shi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1660/26691334511_1daf988b5b_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>１年通して家庭菜園で野菜を作ってみて…　作付けに限らず、計画は最初にしっかり考えて立てないといけませんね。ほんと今更ですが。</p>

<p>畝をいくつ作って、次の季節に何を植えるか考慮しつつ各畝に植える野菜を考えつつ、連作障害も考慮に入れてローテーション考えて…　って、なかなか難しい。</p>

<p>とりあえず、作付けする野菜は家族（主に子供）が好きな品目で固めました。</p>

<p><img src="https://farm2.staticflickr.com/1660/26691334511_1daf988b5b_z_d.jpg" alt="" /></p>

<p>まずはミニトマト。</p>

<p>彼らの繁殖力を舐めてかかった去年の反省を活かして、植える苗は２株と少なめに。</p>

<p>どうせ脇芽を取ってるうちに、どんどん株が増えていくので。</p>

<p><img src="https://farm2.staticflickr.com/1479/26732931326_4db3129299_z_d.jpg" alt="" /></p>

<p>ナスは去年と同じく２株。</p>

<p>夫婦揃ってナス好きですが、これくらいが良いペースで消費できるみたい。</p>

<p><img src="https://farm2.staticflickr.com/1669/26732930836_1bc2c577d4_z_d.jpg" alt="" /></p>

<p>絹さやは適当に植えてしまったので、どれだけ収穫できるかは不明。</p>

<p>コトモファーム代表 小島さんの話だと、もう嫌ってくらいに採れるとか…　いやー、楽しみだ。</p>

<p><img src="https://farm2.staticflickr.com/1664/26691333031_907f937264_z_d.jpg" alt="" /></p>

<p>そんなわけで、冬に植えたのと合わせて上のような感じになりました。</p>

<p>すでにかなり暑くなってますが、夏に向けての収穫が今から楽しみです。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1513]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5956313152]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462172]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>292</wp:comment_id>
			<wp:comment_author><![CDATA[b^onus de registro na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[61753955@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/pt-PT/join?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.32]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-25 15:06:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-25 06:06:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>以外と知らない地元情報@昭島「美味くて多摩卵」が本当に美味しい。</title>
		<link>https://tech.blog.uribou.me/yi-wai-tozhi-ranaidi-yuan-qing-bao-zhao-dao-mei-wei-kuteduo-mo-luan-woshi-su/</link>
		<pubDate>Mon, 02 May 2016 12:54:20 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/yi-wai-tozhi-ranaidi-yuan-qing-bao-zhao-dao-mei-wei-kuteduo-mo-luan-woshi-su/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/mei-wei-sikuteduo-mo-luan/">先延ばし</a>になってたけど、ついに美味くて多摩卵を入手。
<img src="https://farm2.staticflickr.com/1469/26685923112_1fabd2fac8_z_d.jpg" alt="" />
場所はここ。かなり狭い路地なので、車で直接行くのは厳しいかも。自転車か徒歩がお勧めです。

というのも、何となく読んだこの本で触れているフードマイレージ（食料の =food 輸送距離 =mileage）。

要するに地産地消が食糧の輸送に伴う二酸化炭素排出量を最小化できるよねという考えに同意したこともあって、なるべく地元食材を買おうと、嫁と共に取り組み中なこともあり、~~そういえば行くの忘れてたけど前から気になっていた昭島産の卵があったよねと~~昨日行って参りました。
実際行ってみると分かりますが、個人向けに卵を売ってもらえるのか、正直ちょっと不安になっちゃいました…。
けど、そんな心配はいりませんでした。
とっても気さくな生産者の方が、直接その場で鶏小屋から、まだほんのり温かい（気がする）卵を1kg分持ってきてくれました。「採れたてを食べることなんてそうそうないでしょう。どうぞどうぞ。」と。
殻が固くて頑丈な上、黄身も白身も立つ卵を、その日の夜に卵かけご飯と卵焼きで頂きました。嫁も子供も大満足の味わい。
<img src="https://farm2.staticflickr.com/1481/26174260374_3818e40ee1_z_d.jpg" alt="" />
お値段は以下の通りです（2016年5月現在）。
<table border="1">
<tr>
<td bgcolor="#f5deb3">卵</td>
<td bgcolor="#f5deb3">価格</td>
</tr>
<tr>
<td>1kg 赤玉</td>
<td>450円</td>
</tr>
<tr>
<td>1kg 白玉</td>
<td>430円</td>
</tr>
<tr>
<td>東京烏骨鶏 1個</td>
<td>120円</td>
</tr>
</table>
これで生産者の方とも顔見知りになったので、次からは保育園帰りに堂々と立ち寄って買うことができそうです。（小心者なので）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1514</wp:post_id>
		<wp:post_date><![CDATA[2016-05-02 21:54:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-02 12:54:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[yi-wai-tozhi-ranaidi-yuan-qing-bao-zhao-dao-mei-wei-kuteduo-mo-luan-woshi-su]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e5%9c%b0%e7%94%a3%e5%b8%ab%e5%8c%a0"><![CDATA[地産師匠]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1469/26685923112_1fabd2fac8_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/mei-wei-sikuteduo-mo-luan/">先延ばし</a>になってたけど、ついに美味くて多摩卵を入手。</p>

<p><img src="https://farm2.staticflickr.com/1469/26685923112_1fabd2fac8_z_d.jpg" alt="" /></p>

<p>場所はここ。かなり狭い路地なので、車で直接行くのは厳しいかも。自転車か徒歩がお勧めです。</p>

<iframe width="100%" height="300" src="http://maps.google.co.jp/maps?q=昭島市上川原町1-15-14&output=embed&t=m"></iframe>

<p>というのも、何となく読んだこの本で触れているフードマイレージ（食料の =food 輸送距離 =mileage）。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4314010878&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>要するに地産地消が食糧の輸送に伴う二酸化炭素排出量を最小化できるよねという考えに同意したこともあって、なるべく地元食材を買おうと、嫁と共に取り組み中なこともあり、<del>そういえば行くの忘れてたけど前から気になっていた昭島産の卵があったよねと</del>昨日行って参りました。</p>

<p>実際行ってみると分かりますが、個人向けに卵を売ってもらえるのか、正直ちょっと不安になっちゃいました…。</p>

<p>けど、そんな心配はいりませんでした。</p>

<p>とっても気さくな生産者の方が、直接その場で鶏小屋から、まだほんのり温かい（気がする）卵を1kg分持ってきてくれました。「採れたてを食べることなんてそうそうないでしょう。どうぞどうぞ。」と。</p>

<p>殻が固くて頑丈な上、黄身も白身も立つ卵を、その日の夜に卵かけご飯と卵焼きで頂きました。嫁も子供も大満足の味わい。</p>

<p><img src="https://farm2.staticflickr.com/1481/26174260374_3818e40ee1_z_d.jpg" alt="" /></p>

<p>お値段は以下の通りです（2016年5月現在）。</p>

<table border="1" bordercolor="#333333">  
<tr>  
<td bgcolor="#f5deb3">卵</td>  
<td bgcolor="#f5deb3">価格</td>  
</tr>  
<tr>  
<td>1kg 赤玉</td>  
<td>450円</td>  
</tr>  
<tr>  
<td>1kg 白玉</td>  
<td>430円</td>  
</tr>  
<tr>  
<td>東京烏骨鶏 1個</td>  
<td>120円</td>  
</tr>  
</table>

<p>これで生産者の方とも顔見知りになったので、次からは保育園帰りに堂々と立ち寄って買うことができそうです。（小心者なので）</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1515]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6047055064]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462170]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Keen IOに蓄積した自家発電量データをPythonで可視化する: ピボットテーブルの生成</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy-noli-jie-du-woshi-sutameni-zi-jia-fa-dian-detawoshi-tuteshi-jian-sitemiru/</link>
		<pubDate>Mon, 09 May 2016 05:11:43 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy-noli-jie-du-woshi-sutameni-zi-jia-fa-dian-detawoshi-tuteshi-jian-sitemiru/</guid>
		<description></description>
		<content:encoded><![CDATA[Udemyの<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス</a>復習を兼ねて、自家発電量データからピボットテーブルを生成します。
ピボットテーブルとは？
<ul>
<li><a href="http://allabout.co.jp/gm/gc/297727/">ピボットテーブルの使い方</a></li>
</ul>
<pre><code>ピボットテーブルは、Excelで「クロス集計」を行う機能です。
クロス集計は、2つ以上の項目についてデータの集計を行う集計方法です。
</code></pre>
<ul>
<li><a href="http://hamachan.info/excel/piboto.html">初心者のためのExcel講座</a></li>
</ul>
<pre><code>一つのデータをいろいろな視点から統計をとったり、分析したりする場合に使います。
元になる表は、領収書の項目をただ横並びに入力したようなものが分かりやすいと思います。
</code></pre>
横並びに入力したような、それなりの量のデータを自前で用意するには、<a href="http://blog.rinka-blossom.com/hems-like-system/">Keen IOに蓄積した１年分の自家発電量データ</a>しかないので、これを使います。なぜ<strong>横並びに入力したような</strong>データが必要なのかは後で触れます。
また、Keen IOとは以下のようなサービスです。
<ul>
<li>REST API経由でデータを送信することができ、オンラインのデータベースに蓄積が可能</li>
<li>データを可視化してWeb経由で参照するためのダッシュボードサンプルコードを無料公開しており、カスタマイズ可能</li>
<li>月当たりのデータ送信量が少なければ全て無料で使用可能、有料の<a href="https://keen.io/plans/keen-pro/">Pro版</a>ならデータ解析もしてくれるらしい</li>
</ul>
<img src="https://farm8.staticflickr.com/7054/26820779775_57baefce60_z_d.jpg" alt="keenio home" />
まずはKeen IOからデータをロードするための下準備。project_id、read_key、master_keyには、Keen IOにログイン後、プロジェクトのホーム画面で「Show API Keys」ボタンを押して表示されるキー値を入れます。
<pre><code class="python">from keen import KeenClient
from pandas import DataFrame, Series
import pandas as pd
import seaborn as sns
client = KeenClient(
    project_id="5548xxxx",
    read_key="8c33yyyy",
    master_key="3855zzzz")
</code></pre>
Keen IOに溜めた生データを３日分取得します。this_n_daysオプションで任意の日数を指定できます。他にもprevious_n_weeksとか色々あるんですが、詳細はKeen IOのヘルプを参照ください。
<pre><code class="python">In [25]: data = client.extraction(
    event_collection="offgrid", timeframe="this_3_days")
In [26]: data[:2]
Out[26]:
[{'group': 'Array',
  'keen': {'created_at': '2016-05-03T00:01:40.470Z',
   'id': '5727ea6436bca46681f102da',
   'timestamp': '2016-05-03T00:01:38.983Z'},
  'label': 'Array Current',
  'source': 'solar',
  'unit': 'A',
  'value': 1.923828125},
 {'group': 'Array',
  'keen': {'created_at': '2016-05-03T00:01:40.471Z',
   'id': '5727ea6436bca46681f102db',
   'timestamp': '2016-05-03T00:01:38.983Z'},
  'label': 'Array Voltage',
  'source': 'solar',
  'unit': 'V',
  'value': 53.81103515625}]
In [27]: type(data)
Out[27]: list
</code></pre>
扱いやすいように、listをDataFrameにします。
<pre><code class="python">In [28]: data = DataFrame(data)
In [13]: data.head(2)
Out[13]:
   group                                               keen          label  ?
0  Array  {'timestamp': '2016-05-06T00:03:06.020Z', 'id'...  Array Current
1  Array  {'timestamp': '2016-05-06T00:03:06.020Z', 'id'...  Array Voltage
  source unit      value
0  solar    A   1.994629
1  solar    V  54.019775
In [14]: data.info()
&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 3192 entries, 0 to 3191
Data columns (total 6 columns):
group     3192 non-null object
keen      3192 non-null object
label     3192 non-null object
source    3192 non-null object
unit      3192 non-null object
value     3192 non-null float64
dtypes: float64(1), object(5)
memory usage: 174.6+ KB
</code></pre>
timestampが辞書メンバの入れ子になっていて扱いづらいので、取り出します。
<pre><code class="python">In [19]: data["timestamp"] = Series([k["timestamp"] for k in data.keen])
In [20]: data = data.drop("keen", axis=1)
In [21]: data.head(2)
Out[21]:
   group          label source unit      value                 timestamp
0  Array  Array Current  solar    A   1.994629  2016-05-06T00:03:06.020Z
1  Array  Array Voltage  solar    V  54.019775  2016-05-06T00:03:06.020Z
</code></pre>
下準備が終わったので、これからピボットテーブルを生成しますが、その前に…。
ピボットテーブルを生成するpivot関数の仕様は以下のようになっています。
<pre><code class="python">Signature: data.pivot(index=None, columns=None, values=None)
Docstring:
Reshape data (produce a "pivot" table) based on column values. Uses
unique values from index / columns to form axes and return either
DataFrame or Panel, depending on whether you request a single value
column (DataFrame) or all columns (Panel)
Parameters
----------
index : string or object, optional
    Column name to use to make new frame's index. If None, uses
    existing index.
columns : string or object
    Column name to use to make new frame's columns
values : string or object, optional
    Column name to use for populating new frame's values
</code></pre>
データのどの列をindex、columns、valuesとして割り振るかをこのpivot関数の引数に指定してテーブルを生成するので、冒頭で触れた<strong>横並びに入力したような</strong>データの方が都合が良い（というより、そうでないデータは横並びに整形し直す必要がある）んですね。
ということで、keenioから取得したデータのtimestamp列をindex（グラフ描画するときのX軸）、label列をcolumns（hueに相当する）、value列をvaluesとして指定し、ピボットテーブルを生成します。
<pre><code class="python">In [23]: data_p = data.pivot("timestamp", "label", "value")
</code></pre>
data.info()とdata_p.info()の結果を見比べてみると…
dataの方は3192 entriesのindexがあったのに対し、data_pは399 entriesになっています。
<pre><code class="python">In [25]: data_p.info()
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 399 entries, 2016-05-06T00:03:06.020Z to 2016-05-08T21:24:28.943Z
Data columns (total 8 columns):
Amp Hours                399 non-null float64
Array Current            399 non-null float64
Array Voltage            399 non-null float64
Battery Voltage          399 non-null float64
Charge Current           399 non-null float64
Heat Sink Temperature    399 non-null float64
Kilowatt Hours           399 non-null float64
Target Voltage           399 non-null float64
dtypes: float64(8)
memory usage: 28.1+ KB
</code></pre>
(total 8 columns)とある通り、data.labelは以下の８種類あり、これをcolumnsとしてピボットテーブルを生成したので、3192/8=399ということですね。
<pre><code class="python">In [28]: data.label.unique()
Out[28]:
array(['Array Current', 'Array Voltage', 'Heat Sink Temperature',
       'Charge Current', 'Amp Hours', 'Kilowatt Hours', 'Target Voltage',
       'Battery Voltage'], dtype=object)
</code></pre>
data_pをダンプすると、こんな感じ。
<pre><code class="python">In [24]: data_p.head(3)
Out[24]:
label                     Amp Hours  Array Current  Array Voltage  ?
timestamp
2016-05-06T00:03:06.020Z    23811.1       1.994629      54.019775
2016-05-06T00:13:06.221Z    23811.8       1.735840      53.349609
2016-05-06T00:23:06.417Z    23812.6       2.321777      53.986816
label                     Battery Voltage  Charge Current  ?
timestamp
2016-05-06T00:03:06.020Z        24.691772        4.606934
2016-05-06T00:13:06.221Z        24.697266        4.064941
2016-05-06T00:23:06.417Z        24.686279        5.280762
label                     Heat Sink Temperature  Kilowatt Hours  ?
timestamp
2016-05-06T00:03:06.020Z                     29             382
2016-05-06T00:13:06.221Z                     30             382
2016-05-06T00:23:06.417Z                     30             382
label                     Target Voltage
timestamp
2016-05-06T00:03:06.020Z       28.597412
2016-05-06T00:13:06.221Z       28.597412
2016-05-06T00:23:06.417Z       28.597412
</code></pre>
データをグラフにプロットすると…　次回に続く。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1516</wp:post_id>
		<wp:post_date><![CDATA[2016-05-09 14:11:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-09 05:11:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy-noli-jie-du-woshi-sutameni-zi-jia-fa-dian-detawoshi-tuteshi-jian-sitemiru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="keenio"><![CDATA[keenio]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7054/26820779775_57baefce60_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>Udemyの<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス</a>復習を兼ねて、自家発電量データからピボットテーブルを生成します。</p>

<p>ピボットテーブルとは？</p>

<ul>
<li><a href="http://allabout.co.jp/gm/gc/297727/">ピボットテーブルの使い方</a></li>
</ul>

<pre><code>ピボットテーブルは、Excelで「クロス集計」を行う機能です。
クロス集計は、2つ以上の項目についてデータの集計を行う集計方法です。
</code></pre>

<ul>
<li><a href="http://hamachan.info/excel/piboto.html">初心者のためのExcel講座</a></li>
</ul>

<pre><code>一つのデータをいろいろな視点から統計をとったり、分析したりする場合に使います。
元になる表は、領収書の項目をただ横並びに入力したようなものが分かりやすいと思います。
</code></pre>

<p>横並びに入力したような、それなりの量のデータを自前で用意するには、<a href="http://blog.rinka-blossom.com/hems-like-system/">Keen IOに蓄積した１年分の自家発電量データ</a>しかないので、これを使います。なぜ<strong>横並びに入力したような</strong>データが必要なのかは後で触れます。</p>

<p>また、Keen IOとは以下のようなサービスです。</p>

<ul>
<li>REST API経由でデータを送信することができ、オンラインのデータベースに蓄積が可能</li>
<li>データを可視化してWeb経由で参照するためのダッシュボードサンプルコードを無料公開しており、カスタマイズ可能</li>
<li>月当たりのデータ送信量が少なければ全て無料で使用可能、有料の<a href="https://keen.io/plans/keen-pro/">Pro版</a>ならデータ解析もしてくれるらしい</li>
</ul>

<p><img src="https://farm8.staticflickr.com/7054/26820779775_57baefce60_z_d.jpg" alt="keenio home" /></p>

<p>まずはKeen IOからデータをロードするための下準備。project<em>id、read</em>key、master_keyには、Keen IOにログイン後、プロジェクトのホーム画面で「Show API Keys」ボタンを押して表示されるキー値を入れます。</p>

<pre><code class="language-python">from keen import KeenClient  
from pandas import DataFrame, Series  
import pandas as pd  
import seaborn as sns

client = KeenClient(  
    project_id="5548xxxx",
    read_key="8c33yyyy",
    master_key="3855zzzz")
</code></pre>

<p>Keen IOに溜めた生データを３日分取得します。this<em>n</em>daysオプションで任意の日数を指定できます。他にもprevious<em>n</em>weeksとか色々あるんですが、詳細はKeen IOのヘルプを参照ください。</p>

<pre><code class="language-python">In [25]: data = client.extraction(  
    event_collection="offgrid", timeframe="this_3_days")

In [26]: data[:2]  
Out[26]:  
[{'group': 'Array',
  'keen': {'created_at': '2016-05-03T00:01:40.470Z',
   'id': '5727ea6436bca46681f102da',
   'timestamp': '2016-05-03T00:01:38.983Z'},
  'label': 'Array Current',
  'source': 'solar',
  'unit': 'A',
  'value': 1.923828125},
 {'group': 'Array',
  'keen': {'created_at': '2016-05-03T00:01:40.471Z',
   'id': '5727ea6436bca46681f102db',
   'timestamp': '2016-05-03T00:01:38.983Z'},
  'label': 'Array Voltage',
  'source': 'solar',
  'unit': 'V',
  'value': 53.81103515625}]

In [27]: type(data)  
Out[27]: list  
</code></pre>

<p>扱いやすいように、listをDataFrameにします。</p>

<pre><code class="language-python">In [28]: data = DataFrame(data)

In [13]: data.head(2)  
Out[13]:  
   group                                               keen          label  ?
0  Array  {'timestamp': '2016-05-06T00:03:06.020Z', 'id'...  Array Current  
1  Array  {'timestamp': '2016-05-06T00:03:06.020Z', 'id'...  Array Voltage

  source unit      value
0  solar    A   1.994629  
1  solar    V  54.019775

In [14]: data.info()  
&lt;class 'pandas.core.frame.DataFrame'&gt;  
Int64Index: 3192 entries, 0 to 3191  
Data columns (total 6 columns):  
group     3192 non-null object  
keen      3192 non-null object  
label     3192 non-null object  
source    3192 non-null object  
unit      3192 non-null object  
value     3192 non-null float64  
dtypes: float64(1), object(5)  
memory usage: 174.6+ KB  
</code></pre>

<p>timestampが辞書メンバの入れ子になっていて扱いづらいので、取り出します。</p>

<pre><code class="language-python">In [19]: data["timestamp"] = Series([k["timestamp"] for k in data.keen])  
In [20]: data = data.drop("keen", axis=1)

In [21]: data.head(2)  
Out[21]:  
   group          label source unit      value                 timestamp
0  Array  Array Current  solar    A   1.994629  2016-05-06T00:03:06.020Z  
1  Array  Array Voltage  solar    V  54.019775  2016-05-06T00:03:06.020Z  
</code></pre>

<p>下準備が終わったので、これからピボットテーブルを生成しますが、その前に…。</p>

<p>ピボットテーブルを生成するpivot関数の仕様は以下のようになっています。</p>

<pre><code class="language-python">Signature: data.pivot(index=None, columns=None, values=None)  
Docstring:  
Reshape data (produce a "pivot" table) based on column values. Uses  
unique values from index / columns to form axes and return either  
DataFrame or Panel, depending on whether you request a single value  
column (DataFrame) or all columns (Panel)

Parameters  
----------
index : string or object, optional  
    Column name to use to make new frame's index. If None, uses
    existing index.
columns : string or object  
    Column name to use to make new frame's columns
values : string or object, optional  
    Column name to use for populating new frame's values
</code></pre>

<p>データのどの列をindex、columns、valuesとして割り振るかをこのpivot関数の引数に指定してテーブルを生成するので、冒頭で触れた<strong>横並びに入力したような</strong>データの方が都合が良い（というより、そうでないデータは横並びに整形し直す必要がある）んですね。</p>

<p>ということで、keenioから取得したデータのtimestamp列をindex（グラフ描画するときのX軸）、label列をcolumns（hueに相当する）、value列をvaluesとして指定し、ピボットテーブルを生成します。</p>

<pre><code class="language-python">In [23]: data_p = data.pivot("timestamp", "label", "value")  
</code></pre>

<p>data.info()とdata_p.info()の結果を見比べてみると…</p>

<p>dataの方は3192 entriesのindexがあったのに対し、data_pは399 entriesになっています。</p>

<pre><code class="language-python">In [25]: data_p.info()  
&lt;class 'pandas.core.frame.DataFrame'&gt;  
Index: 399 entries, 2016-05-06T00:03:06.020Z to 2016-05-08T21:24:28.943Z  
Data columns (total 8 columns):  
Amp Hours                399 non-null float64  
Array Current            399 non-null float64  
Array Voltage            399 non-null float64  
Battery Voltage          399 non-null float64  
Charge Current           399 non-null float64  
Heat Sink Temperature    399 non-null float64  
Kilowatt Hours           399 non-null float64  
Target Voltage           399 non-null float64  
dtypes: float64(8)  
memory usage: 28.1+ KB  
</code></pre>

<p>(total 8 columns)とある通り、data.labelは以下の８種類あり、これをcolumnsとしてピボットテーブルを生成したので、3192/8=399ということですね。</p>

<pre><code class="language-python">In [28]: data.label.unique()  
Out[28]:  
array(['Array Current', 'Array Voltage', 'Heat Sink Temperature',  
       'Charge Current', 'Amp Hours', 'Kilowatt Hours', 'Target Voltage',
       'Battery Voltage'], dtype=object)
</code></pre>

<p>data_pをダンプすると、こんな感じ。</p>

<pre><code class="language-python">In [24]: data_p.head(3)  
Out[24]:  
label                     Amp Hours  Array Current  Array Voltage  ?  
timestamp  
2016-05-06T00:03:06
.020Z    23811.1       1.994629      54.019775  
2016-05-06T00:13:06.221Z    23811.8       1.735840      53.349609  
2016-05-06T00:23:06.417Z    23812.6       2.321777      53.986816

label                     Battery Voltage  Charge Current  ?  
timestamp  
2016-05-06T00:03:06.020Z        24.691772        4.606934  
2016-05-06T00:13:06.221Z        24.697266        4.064941  
2016-05-06T00:23:06.417Z        24.686279        5.280762

label                     Heat Sink Temperature  Kilowatt Hours  ?  
timestamp  
2016-05-06T00:03:06.020Z                     29             382  
2016-05-06T00:13:06.221Z                     30             382  
2016-05-06T00:23:06.417Z                     30             382

label                     Target Voltage  
timestamp  
2016-05-06T00:03:06.020Z       28.597412  
2016-05-06T00:13:06.221Z       28.597412  
2016-05-06T00:23:06.417Z       28.597412  
</code></pre>

<p>データをグラフにプロットすると…　次回に続く。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5944476534]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462172]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Keen IOに蓄積した自家発電量データをPythonで可視化する: ピボットテーブルのプロット</title>
		<link>https://tech.blog.uribou.me/keen-ionixu-ji-sitazi-jia-fa-dian-liang-detawopythondeke-shi-hua-suru-pibotutoteburunopurotuto/</link>
		<pubDate>Mon, 09 May 2016 06:04:32 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/keen-ionixu-ji-sitazi-jia-fa-dian-liang-detawopythondeke-shi-hua-suru-pibotutoteburunopurotuto/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy-noli-jie-du-woshi-sutameni-zi-jia-fa-dian-detawoshi-tuteshi-jian-sitemiru/">前回</a>の続き。
Keen IOから取得した自家発電量データでピボットテーブルを生成すると、以下のようになりました。
<pre><code class="python">In [24]: data_p.head(3)
Out[24]:
label                     Amp Hours  Array Current  Array Voltage  ?
timestamp
2016-05-06T00:03:06.020Z    23811.1       1.994629      54.019775
2016-05-06T00:13:06.221Z    23811.8       1.735840      53.349609
2016-05-06T00:23:06.417Z    23812.6       2.321777      53.986816
label                     Battery Voltage  Charge Current  ?
timestamp
2016-05-06T00:03:06.020Z        24.691772        4.606934
2016-05-06T00:13:06.221Z        24.697266        4.064941
2016-05-06T00:23:06.417Z        24.686279        5.280762
label                     Heat Sink Temperature  Kilowatt Hours  ?
timestamp
2016-05-06T00:03:06.020Z                     29             382
2016-05-06T00:13:06.221Z                     30             382
2016-05-06T00:23:06.417Z                     30             382
label                     Target Voltage
timestamp
2016-05-06T00:03:06.020Z       28.597412
2016-05-06T00:13:06.221Z       28.597412
2016-05-06T00:23:06.417Z       28.597412
</code></pre>
これを単純にグラフ化すると、以下のようになります。
<pre><code class="python">In [36]: data_p.plot()
In [37]: sns.plt.savefig("data_p_all.png")
</code></pre>
<img src="https://farm8.staticflickr.com/7554/26865669886_9e5bd4760e_z_d.jpg" alt="" />
各データの単位が異なる上、indexにしたtimestampが単純なstringなので、見苦しい…。その上、もしindex間の時間の間隔が一定でない場合にも、時間軸を一定間隔としてプロットしてしまうので、ちょっとよろしくないです。
ということで、まずはtimestampを何とかします。
pandasにはDatetimeIndexという、datetimeのサブクラスが用意されています。
<pre><code class="python">Init signature: pd.DatetimeIndex(self, /, *args, **kwargs)
Docstring:
Immutable ndarray of datetime64 data, represented internally as int64, and
which can be boxed to Timestamp objects that are subclasses of datetime and
carry metadata such as frequency information.
</code></pre>
DataFrameのindexオブジェクトに用意されているto_datetime()メソッドを呼んで、DatetimeIndex型データに変換します。
<pre><code class="python">In [57]: data_p.index
Out[57]:
Index(['2016-05-06T00:03:06.020Z', '2016-05-06T00:13:06.221Z',
       '2016-05-06T00:23:06.417Z', '2016-05-06T00:33:06.611Z',
       '2016-05-06T00:43:06.838Z', '2016-05-06T00:53:07.010Z',
       '2016-05-06T01:03:07.203Z', '2016-05-06T01:13:07.407Z',
       '2016-05-06T01:23:10.778Z', '2016-05-06T01:33:07.798Z',
       ...
       '2016-05-08T19:44:26.963Z', '2016-05-08T19:54:27.169Z',
       '2016-05-08T20:04:27.361Z', '2016-05-08T20:14:27.547Z',
       '2016-05-08T20:24:27.748Z', '2016-05-08T20:34:27.958Z',
       '2016-05-08T20:44:28.142Z', '2016-05-08T20:54:28.567Z',
       '2016-05-08T21:14:28.744Z', '2016-05-08T21:24:28.943Z'],
      dtype='object', name='timestamp', length=399)
In [58]: data_p.index.to_datetime()
Out[58]:
DatetimeIndex(['2016-05-06 00:03:06.020000+00:00',
               '2016-05-06 00:13:06.221000+00:00',
               '2016-05-06 00:23:06.417000+00:00',
               '2016-05-06 00:33:06.611000+00:00',
               '2016-05-06 00:43:06.838000+00:00',
               '2016-05-06 00:53:07.010000+00:00',
               '2016-05-06 01:03:07.203000+00:00',
               '2016-05-06 01:13:07.407000+00:00',
               '2016-05-06 01:23:10.778000+00:00',
               '2016-05-06 01:33:07.798000+00:00',
               ...
               '2016-05-08 19:44:26.963000+00:00',
               '2016-05-08 19:54:27.169000+00:00',
               '2016-05-08 20:04:27.361000+00:00',
               '2016-05-08 20:14:27.547000+00:00',
               '2016-05-08 20:24:27.748000+00:00',
               '2016-05-08 20:34:27.958000+00:00',
               '2016-05-08 20:44:28.142000+00:00',
               '2016-05-08 20:54:28.567000+00:00',
               '2016-05-08 21:14:28.744000+00:00',
               '2016-05-08 21:24:28.943000+00:00'],
              dtype='datetime64[ns, UTC]', length=399, freq=None)
In [59]: data_p.index = data_p.index.to_datetime()
In [60]: data_p.head(3)
Out[60]:
label                             Amp Hours  Array Current  Array Voltage  ?
2016-05-06 00:03:06.020000+00:00    23811.1       1.994629      54.019775
2016-05-06 00:13:06.221000+00:00    23811.8       1.735840      53.349609
2016-05-06 00:23:06.417000+00:00    23812.6       2.321777      53.986816
label                             Battery Voltage  Charge Current  ?
2016-05-06 00:03:06.020000+00:00        24.691772        4.606934
2016-05-06 00:13:06.221000+00:00        24.697266        4.064941
2016-05-06 00:23:06.417000+00:00        24.686279        5.280762
label                             Heat Sink Temperature  Kilowatt Hours  ?
2016-05-06 00:03:06.020000+00:00                     29             382
2016-05-06 00:13:06.221000+00:00                     30             382
2016-05-06 00:23:06.417000+00:00                     30             382
label                             Target Voltage
2016-05-06 00:03:06.020000+00:00       28.597412
2016-05-06 00:13:06.221000+00:00       28.597412
2016-05-06 00:23:06.417000+00:00       28.597412
</code></pre>
これをプロットすると…
<img src="https://farm8.staticflickr.com/7595/26308163564_ac6b8693a0_z_d.jpg" alt="" />
横軸はいい感じになりましたが、相変わらずデータ毎の単位が違いすぎて、グラフから何も読み取れません。
単位毎にデータを取り出してプロットします。まずは電圧値。
<pre><code class="python">In [67]: data_p_v = data_p[[col for col in data_p.columns if "Voltage" in col]]
In [68]: data_p_v.plot()
In [69]: sns.plt.savefig("voltages.png")
</code></pre>
これをプロットすると…
<img src="https://farm8.staticflickr.com/7374/26640926670_59868ee144_z_d.jpg" alt="" />
ようやく見えてきました。Array Voltageは太陽光パネルの電圧、Battery Voltageは蓄電池の電圧、Target Voltageは蓄電池の電圧の目標値です。
次に電流値。
<pre><code class="python">In [70]: data_p_a = data_p[[col for col in data_p.columns if "Current" in col]]
In [71]: data_p_a.plot()
In [72]: sns.plt.savefig("currents.png")
</code></pre>
これをプロットすると…
<img src="https://farm8.staticflickr.com/7294/26846182301_da694b85e1_z_d.jpg" alt="" />
Array Currentは太陽光パネルがチャージコントローラに供給する電流量、Charge Currentはチャージコントローラが{Arrary Voltage}-{Battery Voltage}の電圧差分をMPPT方式で変換した分の電流を加算した値です。
グラフにプロットするだけで<strong>解析</strong>していないので、今度は季節毎や年毎の傾向を見てみたりしたいですね。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1517</wp:post_id>
		<wp:post_date><![CDATA[2016-05-09 15:04:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-09 06:04:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[keen-ionixu-ji-sitazi-jia-fa-dian-liang-detawopythondeke-shi-hua-suru-pibotutoteburunopurotuto]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="keenio"><![CDATA[keenio]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7554/26865669886_9e5bd4760e_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy-noli-jie-du-woshi-sutameni-zi-jia-fa-dian-detawoshi-tuteshi-jian-sitemiru/">前回</a>の続き。</p>

<p>Keen IOから取得した自家発電量データでピボットテーブルを生成すると、以下のようになりました。</p>

<pre><code class="language-python">In [24]: data_p.head(3)  
Out[24]:  
label                     Amp Hours  Array Current  Array Voltage  ?  
timestamp  
2016-05-06T00:03:06.020Z    23811.1       1.994629      54.019775  
2016-05-06T00:13:06.221Z    23811.8       1.735840      53.349609  
2016-05-06T00:23:06.417Z    23812.6       2.321777      53.986816

label                     Battery Voltage  Charge Current  ?  
timestamp  
2016-05-06T00:03:06.020Z        24.691772        4.606934  
2016-05-06T00:13:06.221Z        24.697266        4.064941  
2016-05-06T00:23:06.417Z        24.686279        5.280762

label                     Heat Sink Temperature  Kilowatt Hours  ?  
timestamp  
2016-05-06T00:03:06.020Z                     29             382  
2016-05-06T00:13:06.221Z                     30             382  
2016-05-06T00:23:06.417Z                     30             382

label                     Target Voltage  
timestamp  
2016-05-06T00:03:06.020Z       28.597412  
2016-05-06T00:13:06.221Z       28.597412  
2016-05-06T00:23:06.417Z       28.597412  
</code></pre>

<p>これを単純にグラフ化すると、以下のようになります。</p>

<pre><code class="language-python">In [36]: data_p.plot()  
In [37]: sns.plt.savefig("data_p_all.png")  
</code></pre>

<p><img src="https://farm8.staticflickr.com/7554/26865669886_9e5bd4760e_z_d.jpg" alt="" /></p>

<p>各データの単位が異なる上、indexにしたtimestampが単純なstringなので、見苦しい…。その上、もしindex間の時間の間隔が一定でない場合にも、時間軸を一定間隔としてプロットしてしまうので、ちょっとよろしくないです。</p>

<p>ということで、まずはtimestampを何とかします。</p>

<p>pandasにはDatetimeIndexという、datetimeのサブクラスが用意されています。</p>

<pre><code class="language-python">Init signature: pd.DatetimeIndex(self, /, *args, **kwargs)  
Docstring:  
Immutable ndarray of datetime64 data, represented internally as int64, and  
which can be boxed to Timestamp objects that are subclasses of datetime and  
carry metadata such as frequency information.  
</code></pre>

<p>DataFrameのindexオブジェクトに用意されているto_datetime()メソッドを呼んで、DatetimeIndex型データに変換します。</p>

<pre><code class="language-python">In [57]: data_p.index  
Out[57]:  
Index(['2016-05-06T00:03:06.020Z', '2016-05-06T00:13:06.221Z',  
       '2016-05-06T00:23:06.417Z', '2016-05-06T00:33:06.611Z',
       '2016-05-06T00:43:06.838Z', '2016-05-06T00:53:07.010Z',
       '2016-05-06T01:03:07.203Z', '2016-05-06T01:13:07.407Z',
       '2016-05-06T01:23:10.778Z', '2016-05-06T01:33:07.798Z',
       ...
       '2016-05-08T19:44:26.963Z', '2016-05-08T19:54:27.169Z',
       '2016-05-08T20:04:27.361Z', '2016-05-08T20:14:27.547Z',
       '2016-05-08T20:24:27.748Z', '2016-05-08T20:34:27.958Z',
       '2016-05-08T20:44:28.142Z', '2016-05-08T20:54:28.567Z',
       '2016-05-08T21:14:28.744Z', '2016-05-08T21:24:28.943Z'],
      dtype='object', name='timestamp', length=399)

In [58]: data_p.index.to_datetime()  
Out[58]:  
DatetimeIndex(['2016-05-06 00:03:06.020000+00:00',  
               '2016-05-06 00:13:06.221000+00:00',
               '2016-05-06 00:23:06.417000+00:00',
               '2016-05-06 00:33:06.611000+00:00',
               '2016-05-06 00:43:06.838000+00:00',
               '2016-05-06 00:53:07.010000+00:00',
               '2016-05-06 01:03:07.203000+00:00',
               '2016-05-06 01:13:07.407000+00:00',
               '2016-05-06 01:23:10.778000+00:00',
               '2016-05-06 01:33:07.798000+00:00',
               ...
               '2016-05-08 19:44:26.963000+00:00',
               '2016-05-08 19:54:27.169000+00:00',
               '2016-05-08 20:04:27.361000+00:00',
               '2016-05-08 20:14:27.547000+00:00',
               '2016-05-08 20:24:27.748000+00:00',
               '2016-05-08 20:34:27.958000+00:00',
               '2016-05-08 20:44:28.142000+00:00',
               '2016-05-08 20:54:28.567000+00:00',
               '2016-05-08 21:14:28.744000+00:00',
               '2016-05-08 21:24:28.943000+00:00'],
              dtype='datetime64[ns, UTC]', length=399, freq=None)

In [59]: data_p.index = data_p.index.to_datetime()

In [60]: data_p.head(3)  
Out[60]:  
label                             Amp Hours  Array Current  Array Voltage  ?  
2016-05-06 00:03:06.020000+00:00    23811.1       1.994629      54.019775  
2016-05-06 00:13:06.221000+00:00    23811.8       1.735840      53.349609  
2016-05-06 00:23:06.417000+00:00    23812.6       2.321777      53.986816

label                             Battery Voltage  Charge Current  ?  
2016-05-06 00:03:06.020000+00:00        24.691772        4.606934  
2016-05-06 00:13:06.221000+00:00        24.697266        4.064941  
2016-05-06 00:23:06.417000+00:00        24.686279        5.280762

label                             Heat Sink Temperature  Kilowatt Hours  ?  
2016-05-06 00:03:06.020000+00:00                     29             382  
2016-05-06 00:13:06.221000+00:00                     30             382  
2016-05-06 00:23:06.417000+00:00                     30             382

label                             Target Voltage  
2016-05-06 00:03:06.020000+00:00       28.597412  
2016-05-06 00:13:06.221000+00:00       28.597412  
2016-05-06 00:23:06.417000+00:00       28.597412  
</code></pre>

<p>これをプロットすると…</p>

<p><img src="https://farm8.staticflickr.com/7595/26308163564_ac6b8693a0_z_d.jpg" alt="" /></p>

<p>横軸はいい感じになりましたが、相変わらずデータ毎の単位が違いすぎて、グラフから何も読み取れません。</p>

<p>単位毎にデータを取り出してプロットします。まずは電圧値。</p>

<pre><code class="language-python">In [67]: data_p_v = data_p[[col for col in data_p.columns if "Voltage" in col]]  
In [68]: data_p_v.plot()  
In [69]: sns.plt.savefig("voltages.png")  
</code></pre>

<p>これをプロットすると…</p>

<p><img src="https://farm8.staticflickr.com/7374/26640926670_59868ee144_z_d.jpg" alt="" /></p>

<p>ようやく見えてきました。Array Voltageは太陽光パネルの電圧、Battery Voltageは蓄電池の電圧、Target Voltageは蓄電池の電圧の目標値です。</p>

<p>次に電流値。</p>

<pre><code class="language-python">In [70]: data_p_a = data_p[[col for col in data_p.columns if "Current" in col]]  
In [71]: data_p_a.plot()  
In [72]: sns.plt.savefig("currents.png")  
</code></pre>

<p>これをプロットすると…</p>

<p><img src="https://farm8.staticflickr.com/7294/26846182301_da694b85e1_z_d.jpg" alt="" /></p>

<p>Array Currentは太陽光パネルがチャージコントローラに供給する電流量、Charge Currentはチャージコントローラが{Arrary Voltage}-{Battery Voltage}の電圧差分をMPPT方式で変換した分の電流を加算した値です。</p>

<p>グラフにプロットするだけで<strong>解析</strong>していないので、今度は季節毎や年毎の傾向を見てみたりしたいですね。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1518]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5982415524]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477017]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>使えば使うほど嫌いになっていくOS、それはWindows。</title>
		<link>https://tech.blog.uribou.me/shi-iip-muhodonixian-ininatuteikuos-windows/</link>
		<pubDate>Thu, 12 May 2016 06:55:26 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-iip-muhodonixian-ininatuteikuos-windows/</guid>
		<description></description>
		<content:encoded><![CDATA[先月会社都合の異動（というよりほぼ転職）を果たしたんですが、以前の職場のUbuntu Linux:Windows=50:50環境と違って、今の職場はLinux:Windows=99:1。
超少数を除いて、OSSのオの字も通じない人多数の、ほぼアウェー状態。
Ubuntu用に物理マシン１台欲しいなんて夢のまた夢です。
そうなると当然、WindowsホストにLinuxゲストのVM環境なっちゃうんですが…
使うほどに、Windows OSに憎悪すら感じるようになってきました。
<hr />
<h1>とにかく遅いWindows</h1>
TortoiseSVN、git bash、Office、ターミナル…
<strong>ことごとく重い！</strong>
TortoiseはGUIの処理が重いんでしょう。
んで、CUIで使おうとターミナル（コマンドプロンプト）を開くと、あの貧弱なシェルと付き合わされるので、git bashみたいなWindows版bashを使うと、これまた輪をかけて重い。
Core部分をUnix系と共通化するためにPOSIXをWrapしているせい？
同じマシンにインストールしたVM上のLinuxでCUIのsvn/gitを使う方が速いんだから、救いようがない。
<h1>bashが使えない</h1>
git bashみたいな外部ツールをインストールすればbash自体は使えるけど、ほんっとーに基本的なコマンドしか入っていない上、追加したくてもaptやyumのようなパッケージ管理システムはもちろん、無い。
お陰さまで、ちょっと複雑なテキスト処理を自動化してソフト開発環境に繋げたくても、そう簡単にはできない。
そもそもgit bashも重い。
<a href="http://www.atmarkit.co.jp/ait/articles/1604/11/news031.html">近い将来、標準でbashが動く上、ELF実行バイナリがそのまま動いたり、aptが使えるそうですが</a>、正直期待しておりません。エミュレーションしてる時点で重いんでしょ？どーせ。
<h1>pythonが使えない</h1>
いや、使えるんですけど。
<a href="http://qiita.com/HirofumiYashima/items/f5f72f3006f8af03ddad">pip(パッケージ管理システム)が使えないのです。</a>
<hr />
要するにWindowsではおとなしくVisualホゲホゲを使ってGUIアプリ作れってことですかね。
萎えてきた。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1519</wp:post_id>
		<wp:post_date><![CDATA[2016-05-12 15:55:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-12 06:55:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-iip-muhodonixian-ininatuteikuos-windows]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="windows"><![CDATA[Windows]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>先月会社都合の異動（というよりほぼ転職）を果たしたんですが、以前の職場のUbuntu Linux:Windows=50:50環境と違って、今の職場はLinux:Windows=99:1。</p>

<p>超少数を除いて、OSSのオの字も通じない人多数の、ほぼアウェー状態。</p>

<p>Ubuntu用に物理マシン１台欲しいなんて夢のまた夢です。</p>

<p>そうなると当然、WindowsホストにLinuxゲストのVM環境なっちゃうんですが…</p>

<p>使うほどに、Windows OSに憎悪すら感じるようになってきました。</p>

<hr />

<h1 id="windows">とにかく遅いWindows</h1>

<p>TortoiseSVN、git bash、Office、ターミナル…</p>

<p><strong>ことごとく重い！</strong></p>

<p>TortoiseはGUIの処理が重いんでしょう。</p>

<p>んで、CUIで使おうとターミナル（コマンドプロンプト）を開くと、あの貧弱なシェルと付き合わされるので、git bashみたいなWindows版bashを使うと、これまた輪をかけて重い。</p>

<p>Core部分をUnix系と共通化するためにPOSIXをWrapしているせい？</p>

<p>同じマシンにインストールしたVM上のLinuxでCUIのsvn/gitを使う方が速いんだから、救いようがない。</p>

<h1 id="bash">bashが使えない</h1>

<p>git bashみたいな外部ツールをインストールすればbash自体は使えるけど、ほんっとーに基本的なコマンドしか入っていない上、追加したくてもaptやyumのようなパッケージ管理システムはもちろん、無い。</p>

<p>お陰さまで、ちょっと複雑なテキスト処理を自動化してソフト開発環境に繋げたくても、そう簡単にはできない。</p>

<p>そもそもgit bashも重い。</p>

<p><a href="http://www.atmarkit.co.jp/ait/articles/1604/11/news031.html">近い将来、標準でbashが動く上、ELF実行バイナリがそのまま動いたり、aptが使えるそうですが</a>、正直期待しておりません。エミュレーションしてる時点で重いんでしょ？どーせ。</p>

<h1 id="python">pythonが使えない</h1>

<p>いや、使えるんですけど。</p>

<p><a href="http://qiita.com/HirofumiYashima/items/f5f72f3006f8af03ddad">pip(パッケージ管理システム)が使えないのです。</a></p>

<hr />

<p>要するにWindowsではおとなしくVisualホゲホゲを使ってGUIアプリ作れってことですかね。</p>

<p>萎えてきた。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941072792]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490506]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>254</wp:comment_id>
			<wp:comment_author><![CDATA[Binance推荐代码]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[79745963@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/join?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.187]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-10 18:34:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-10 09:34:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>OpenCV3 on Python3 on OSX 環境整備に思いのほか手間取った上、結局うまくいかない件。</title>
		<link>https://tech.blog.uribou.me/opencv3-on-python3-on-osx-huan-jing-zheng-bei-nisi-inowai-shou-jian-qu-tutajian/</link>
		<pubDate>Fri, 20 May 2016 18:30:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/opencv3-on-python3-on-osx-huan-jing-zheng-bei-nisi-inowai-shou-jian-qu-tutajian/</guid>
		<description></description>
		<content:encoded><![CDATA[Udemyのデータサイエンス講習がもうすぐ終わりそうなので、次の教材を探しました。

パラパラ見ていると、前から気になっていたOpenCVを使った画像処理レシピ発見。
画像認識で機械学習を使った解説が盛り込まれている模様。
ということで、まずはOpenCVをOSXにインストールしておこう…　今更Python2に戻りたくないからPython3で…　なんて腰を上げたのが運の尽き。ハマるハマる。
<h1>OpenCVインストール手順</h1>
基本的に、こちらのブログで紹介されている手順でOKなはず。
<ul>
<li><a href="https://blog.ymyzk.com/2015/07/os-x-opencv-3-python-2-3/">Mac OS X で OpenCV 3 + Python 2/3 の開発環境を整備する方法</a></li>
</ul>
だったのに、自分の場合、<a href="http://blog.rinka-blossom.com/anyenvhuan-jing-gou-zhu-de%08hamatuta/">Python環境にanyenvを使っているからか</a>、こんなスマートにいきませんでした…。
<h1>OpenCVインストール手順（ハマり過程）</h1>
まずはシステムにインストール済みのnumpyをアンインストール。
<pre><code class="bash">$ brew unlink numpy
$ brew uninstall numpy
</code></pre>
python3で使うことを明示しつつ、numpyを再インストールして、ツール類を/usr/local下にリンクする。
<pre><code class="bash">$ pyenv global 3.5.1
$ brew install numpy --with-python3
$ brew link numpy
</code></pre>
と、ゴミが残っていたのか、既存ファイルを上書きするオプションつけなさいと怒られるので言うとおりにする。
<pre><code class="bash">$ rm '/usr/local/bin/f2py'
$ brew link --overwite numpy
</code></pre>
いよいよOpenCVのインストール。ここでもpython3で使うことを明示しておく。
<pre><code class="bash">$ brew install opencv3 --with-python3
</code></pre>
と、<strong>setuptoolsをimportできませんエラー</strong>により、早々にコケる。なぜに…？
この辺りはanyenv環境のせいな気がする。
取り急ぎ、Python2系でインストールしてみる。
<pre><code class="bash">$ pyenv global 2.7.11
$ brew install numpy --with-python3
$ brew link --overwrite numpy
$ brew install opencv3 --with-python3
</code></pre>
今度はうまくビルドできた。
以下のように、anyenv下のpyenv下に、cv2.soのシンボリックリンクを作成して、python2/3両方からimport cv2できるようにする。
<pre><code class="bash">~ $ ln -fs /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so ~/.anyenv/envs/pyenv/versions/２．７．１１/lib/python２．７/site-packages/
~ $ ls -al ~/.anyenv/envs/pyenv/versions/2.7.11/lib/python2.7/site-packages/cv2.so
lrwxr-xr-x  1 takashi  staff  68  5 15 10:16 /Users/takashi/.anyenv/envs/pyenv/versions/2.7.11/lib/python2.7/site-packages/cv2.so -&gt; /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so
~ $ ln -fs /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so ~/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/
~ $ ls -al ~/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so
lrwxr-xr-x  1 takashi  staff  68  5 15 11:04 /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so -&gt; /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so
</code></pre>
python2では無事cv2をインポートできて、顔認識できた！これは感動。
ところが、結局python3でのimport エラーは解決できず。なんでだー。
<pre><code class="python">In [1]: import cv2
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
&lt;ipython-input-1-72fbbcfe2587&gt; in &lt;module&gt;()
----&gt; 1 import cv2
ImportError: dlopen(/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so, 2): Symbol not found: _PyCObject_Type
  Referenced from: /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so
  Expected in: flat namespace
 in /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so
</code></pre>
とりあえず、IPythonデータサイエンスクックブックが言うとおり、python2でOpenCVの勉強を始めようと思います…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1521</wp:post_id>
		<wp:post_date><![CDATA[2016-05-21 03:30:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-20 18:30:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[opencv3-on-python3-on-osx-huan-jing-zheng-bei-nisi-inowai-shou-jian-qu-tutajian]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="opencv"><![CDATA[OpenCV]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>Udemyのデータサイエンス講習がもうすぐ終わりそうなので、次の教材を探しました。</p>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117488&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
<p>パラパラ見ていると、前から気になっていたOpenCVを使った画像処理レシピ発見。</p>
<p>画像認識で機械学習を使った解説が盛り込まれている模様。</p>
<p>ということで、まずはOpenCVをOSXにインストールしておこう…　今更Python2に戻りたくないからPython3で…　なんて腰を上げたのが運の尽き。ハマるハマる。</p>
<h1 id="opencv">OpenCVインストール手順</h1>
<p>基本的に、こちらのブログで紹介されている手順でOKなはず。</p>
<ul>
<li><a href="https://blog.ymyzk.com/2015/07/os-x-opencv-3-python-2-3/">Mac OS X で OpenCV 3 + Python 2/3 の開発環境を整備する方法</a></li>
</ul>
<p>だったのに、自分の場合、<a href="http://blog.rinka-blossom.com/anyenvhuan-jing-gou-zhu-de%08hamatuta/">Python環境にanyenvを使っているからか</a>、こんなスマートにいきませんでした…。</p>
<h1 id="opencv">OpenCVインストール手順（ハマり過程）</h1>
<p>まずはシステムにインストール済みのnumpyをアンインストール。</p>
<pre><code class="language-bash">$ brew unlink numpy
$ brew uninstall numpy
</code></pre>
<p>python3で使うことを明示しつつ、numpyを再インストールして、ツール類を/usr/local下にリンクする。</p>
<pre><code class="language-bash">$ pyenv global 3.5.1
$ brew install numpy --with-python3
$ brew link numpy
</code></pre>
<p>と、ゴミが残っていたのか、既存ファイルを上書きするオプションつけなさいと怒られるので言うとおりにする。</p>
<pre><code class="language-bash">$ rm '/usr/local/bin/f2py'
$ brew link --overwite numpy
</code></pre>
<p>いよいよOpenCVのインストール。ここでもpython3で使うことを明示しておく。</p>
<pre><code class="language-bash">$ brew install opencv3 --with-python3
</code></pre>
<p>と、<strong>setuptoolsをimportできませんエラー</strong>により、早々にコケる。なぜに…？</p>
<p>この辺りはanyenv環境のせいな気がする。</p>
<p>取り急ぎ、Python2系でインストールしてみる。</p>
<pre><code class="language-bash">$ pyenv global 2.7.11
$ brew install numpy --with-python3
$ brew link --overwrite numpy
$ brew install opencv3 --with-python3
</code></pre>
<p>今度はうまくビルドできた。</p>
<p>以下のように、anyenv下のpyenv下に、cv2.soのシンボリックリンクを作成して、python2/3両方からimport cv2できるようにする。</p>
<pre><code class="language-bash">~ $ ln -fs /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so ~/.anyenv/envs/pyenv/versions/２．７．１１/lib/python２．７/site-packages/
~ $ ls -al ~/.anyenv/envs/pyenv/versions/2.7.11/lib/python2.7/site-packages/cv2.so
lrwxr-xr-x  1 takashi  staff  68  5 15 10:16 /Users/takashi/.anyenv/envs/pyenv/versions/2.7.11/lib/python2.7/site-packages/cv2.so -&gt; /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so
~ $ ln -fs /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so ~/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/
~ $ ls -al ~/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so
lrwxr-xr-x  1 takashi  staff  68  5 15 11:04 /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so -&gt; /usr/local/Cellar/opencv3/3.1.0_3/lib/python2.7/site-packages/cv2.so
</code></pre>
<p>python2では無事cv2をインポートできて、顔認識できた！これは感動。</p>
<p>ところが、結局python3でのimport エラーは解決できず。なんでだー。</p>
<pre><code class="language-python">In [1]: import cv2
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
&lt;ipython-input-1-72fbbcfe2587&gt; in &lt;module&gt;()
----&gt; 1 import cv2
ImportError: dlopen(/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so, 2): Symbol not found: _PyCObject_Type
  Referenced from: /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so
  Expected in: flat namespace
 in /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/cv2.so
</code></pre>
<p>とりあえず、IPythonデータサイエンスクックブックが言うとおり、python2でOpenCVの勉強を始めようと思います…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5940961765]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490508]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[Criar conta pessoal]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[60993352@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/pt-BR/join?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.78]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-01 08:28:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-31 23:28:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>実践 Python データサイエンス@Udemy 進捗状況 その３</title>
		<link>https://tech.blog.uribou.me/shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang-sono3/</link>
		<pubDate>Fri, 27 May 2016 04:15:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang-sono3/</guid>
		<description></description>
		<content:encoded><![CDATA[聞かれてないのに、勝手に<a href="http://blog.rinka-blossom.com/keen-ionixu-ji-sitazi-jia-fa-dian-liang-detawopythondeke-shi-hua-suru-pibotutoteburunopurotuto/">Udemyの実践Pythonデータサイエンス</a>の進捗報告。
やっと本題の機械学習にたどり着いたことで気づいたこと。
ここからいきなり難しくなって進まない。いや進むんだけど、ちゃんと理解しようと自分で色々試したり、関数ヘルプ読んだりしてると、なかなかね…。
<ul>
<li>セクション1　このコースの内容とPythonについて</li>
<li>セクション2　準備</li>
<li>セクション3　numpyを知ろう</li>
<li>セクション4　pandas入門</li>
<li>セクション5　データ解析の基礎 その1</li>
<li>セクション6　データ解析の基礎 その2</li>
<li>セクション7　データ解析の基礎 その3</li>
<li>セクション8　データの可視化</li>
<li>セクション9　実践データ解析</li>
<li><strong>セクション10　機械学習</strong></li>
<li>セクション11　付録A：Pythonの基礎</li>
<li>セクション12　付録B：統計入門</li>
<li>セクション13　付録C：SQLとPython</li>
<li>セクション14　付録D：Webスクレイピング</li>
</ul>
そして以下の本もまた難しくて、なかなか進まず。
でもOpenCVを使った画像処理＋機械学習やデータビジュアライゼーションにとどまらず、Pythonでパフォーマンス考慮したコードを書くには？プロファイリングして最適化するには？などなど、非常に幅広く深く網羅しているので、Pythonの深淵に触れたい方にもオススメの一冊。
詳細はいつかそのうち紹介したい。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1526</wp:post_id>
		<wp:post_date><![CDATA[2016-05-27 13:15:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-27 04:15:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-jian-python-detasaiensuudemy-jin-bu-zhuang-kuang-sono3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>聞かれてないのに、勝手に<a href="http://blog.rinka-blossom.com/keen-ionixu-ji-sitazi-jia-fa-dian-liang-detawopythondeke-shi-hua-suru-pibotutoteburunopurotuto/">Udemyの実践Pythonデータサイエンス</a>の進捗報告。</p>

<p>やっと本題の機械学習にたどり着いたことで気づいたこと。</p>

<p>ここからいきなり難しくなって進まない。いや進むんだけど、ちゃんと理解しようと自分で色々試したり、関数ヘルプ読んだりしてると、なかなかね…。</p>

<ul>
<li>セクション1　このコースの内容とPythonについて</li>
<li>セクション2　準備</li>
<li>セクション3　numpyを知ろう</li>
<li>セクション4　pandas入門</li>
<li>セクション5　データ解析の基礎 その1</li>
<li>セクション6　データ解析の基礎 その2</li>
<li>セクション7　データ解析の基礎 その3</li>
<li>セクション8　データの可視化</li>
<li>セクション9　実践データ解析</li>
<li><strong>セクション10　機械学習</strong></li>
<li>セクション11　付録A：Pythonの基礎</li>
<li>セクション12　付録B：統計入門</li>
<li>セクション13　付録C：SQLとPython</li>
<li>セクション14　付録D：Webスクレイピング</li>
</ul>

<p>そして以下の本もまた難しくて、なかなか進まず。</p>

<p>でもOpenCVを使った画像処理＋機械学習やデータビジュアライゼーションにとどまらず、Pythonでパフォーマンス考慮したコードを書くには？プロファイリングして最適化するには？などなど、非常に幅広く深く網羅しているので、Pythonの深淵に触れたい方にもオススメの一冊。</p>

<p>詳細はいつかそのうち紹介したい。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117488&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941033291]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505216]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>281</wp:comment_id>
			<wp:comment_author><![CDATA[Binance 註冊]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[8848953@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/zh-TC/register?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.188]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-19 11:06:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-19 02:06:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>半農的暮らしを実践できる土地を手に入れるには？</title>
		<link>https://tech.blog.uribou.me/nong-di-zhai-di-he/</link>
		<pubDate>Mon, 30 May 2016 03:41:52 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/nong-di-zhai-di-he/</guid>
		<description></description>
		<content:encoded><![CDATA[と言いながら、まだ土地も手に入れていないし、やったことと言えば下記の本を読んで影響受けたのと、<a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a>で多少家庭菜園をさせてもらっている程度・・。


小規模とはいえ、菜園で食料自給を嗜んでいる効果からか、嫁が
「家の近くのxx寺隣の畑が宅地開発されちゃってたよ」
と教えてくれました。
マジで？！と見に行ってみると…　本当だった。
朝の通勤途中、よく目にしていたお婆ちゃんの畑作業。
二度と見れないと思うと、ちょっと寂しい。
~~諸悪の根源の~~（嘘ですゴメンナサイ）宅地開発した会社の方がその場にいたので、いい機会なので色々聞いてみました。
いや、それはとてもいい人で、この土地を売ると決断したのは土地の持ち主（多分お婆ちゃん or 相続した人）なので、諸悪の…　なんて思ってませんよ。本当に。
この家買いたいオーラを全く出さない我々夫婦に対して、興味本位で質問しているにも関わらず、何を聞きたいか汲み取ってくれた上で柔らかく適切な回答をくださいました。
<h2>土地だけ買えないの？</h2>
<strong>自分</strong>： 元が畑なので、半農半家（正確に言うと駐車場も「家」に入るけど）にしたい。この宅地はできるのか？
<strong>業者さん</strong>： 可能だけど、少なくともこの土地は無理。土地＋家とした上で利益が十分出るように計算しているので…。
<h2>土地だけ欲しい場合はどうすればいい？</h2>
<strong>自分</strong>： 土地だけ欲しい場合はどうすればいい？ そもそもそういうニーズがない？
<strong>業者さん</strong>： そういう物件も扱っている。お気に入りの建設業者があるから土地だけ欲しい、という人もいるにはいるが、かなり少数派。売る方も土地だけだと付加価値的に弱くて、利益を出しにくい上、買い手もつきにくい。家付きの土地の方が業者としても売り手としてもベターな、一般的な選択となっている。
<h2>最近、昭島の農地が開発される光景をよく目にするが…</h2>
<strong>自分</strong>： やっぱり農地より、駐車場や宅地として開発する方が持ち主に取っても利益が出やすいってことですかね…？
<strong>業者さん</strong>： そうですね。農地としてなら固定資産税が優遇されるとはいえ、全く０ではないので、持ち主に取っては負担であることに変わりありませんし。農地として認めるには何かしら生産しないといけないし、管理コスト（お金だけでなく時間）もかかるので。
<h2>土地を売る人は何をきっかけに売ろうとするのか？</h2>
<strong>自分</strong>： 畑を管理するのが金銭的にも体力的にも厳しくなってきて、売ってしまおうと決断する人が多いんですかね？
<strong>業者さん</strong>： それもありますが、その土地を相続した子が売りに出す場合が多いですね。畑をやりたがる若い人は少数ですし、会社勤めなど本業をしながら畑はちょっと厳しいでしょうし。
<hr />
東京都内では昭島もかなり田舎な部類に入りますが…　俗に言う地方は、これが加速度的に進んでいるんですよね…。
そして老朽化した家は潰すのもお金がかかるので放置。そして畑を潰して新しい家を建てて…。
このままだと、いつか本当に食料を自給する能力を失ってしまうんでないの？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1529</wp:post_id>
		<wp:post_date><![CDATA[2016-05-30 12:41:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-30 03:41:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nong-di-zhai-di-he]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ban-nong-ban-x"><![CDATA[半農半X]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>と言いながら、まだ土地も手に入れていないし、やったことと言えば下記の本を読んで影響受けたのと、<a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a>で多少家庭菜園をさせてもらっている程度・・。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4789727289&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>  

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4480431233&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>小規模とはいえ、菜園で食料自給を嗜んでいる効果からか、嫁が</p>

<p>「家の近くのxx寺隣の畑が宅地開発されちゃってたよ」</p>

<p>と教えてくれました。</p>

<p>マジで？！と見に行ってみると…　本当だった。</p>

<p>朝の通勤途中、よく目にしていたお婆ちゃんの畑作業。</p>

<p>二度と見れないと思うと、ちょっと寂しい。</p>

<p><del>諸悪の根源の</del>（嘘ですゴメンナサイ）宅地開発した会社の方がその場にいたので、いい機会なので色々聞いてみました。</p>

<p>いや、それはとてもいい人で、この土地を売ると決断したのは土地の持ち主（多分お婆ちゃん or 相続した人）なので、諸悪の…　なんて思ってませんよ。本当に。</p>

<p>この家買いたいオーラを全く出さない我々夫婦に対して、興味本位で質問しているにも関わらず、何を聞きたいか汲み取ってくれた上で柔らかく適切な回答をくださいました。</p>

<h2 id="">土地だけ買えないの？</h2>

<p><strong>自分</strong>： 元が畑なので、半農半家（正確に言うと駐車場も「家」に入るけど）にしたい。この宅地はできるのか？</p>

<p><strong>業者さん</strong>： 可能だけど、少なくともこの土地は無理。土地＋家とした上で利益が十分出るように計算しているので…。</p>

<h2 id="">土地だけ欲しい場合はどうすればいい？</h2>

<p><strong>自分</strong>： 土地だけ欲しい場合はどうすればいい？ そもそもそういうニーズがない？</p>

<p><strong>業者さん</strong>： そういう物件も扱っている。お気に入りの建設業者があるから土地だけ欲しい、という人もいるにはいるが、かなり少数派。売る方も土地だけだと付加価値的に弱くて、利益を出しにくい上、買い手もつきにくい。家付きの土地の方が業者としても売り手としてもベターな、一般的な選択となっている。</p>

<h2 id="">最近、昭島の農地が開発される光景をよく目にするが…</h2>

<p><strong>自分</strong>： やっぱり農地より、駐車場や宅地として開発する方が持ち主に取っても利益が出やすいってことですかね…？</p>

<p><strong>業者さん</strong>： そうですね。農地としてなら固定資産税が優遇されるとはいえ、全く０ではないので、持ち主に取っては負担であることに変わりありませんし。農地として認めるには何かしら生産しないといけないし、管理コスト（お金だけでなく時間）もかかるので。</p>

<h2 id="">土地を売る人は何をきっかけに売ろうとするのか？</h2>

<p><strong>自分</strong>： 畑を管理するのが金銭的にも体力的にも厳しくなってきて、売ってしまおうと決断する人が多いんですかね？</p>

<p><strong>業者さん</strong>： それもありますが、その土地を相続した子が売りに出す場合が多いですね。畑をやりたがる若い人は少数ですし、会社勤めなど本業をしながら畑はちょっと厳しいでしょうし。</p>

<hr />

<p>東京都内では昭島もかなり田舎な部類に入りますが…　俗に言う地方は、これが加速度的に進んでいるんですよね…。</p>

<p>そして老朽化した家は潰すのもお金がかかるので放置。そして畑を潰して新しい家を建てて…。</p>

<p>このままだと、いつか本当に食料を自給する能力を失ってしまうんでないの？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1530]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6062653273]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505216]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>オフグリッド電源を勧める理由。</title>
		<link>https://tech.blog.uribou.me/solar_system_part07/</link>
		<pubDate>Sun, 19 Jun 2016 05:38:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/solar_system_part07/</guid>
		<description></description>
		<content:encoded><![CDATA[オフグリッドと聞くと、やたらと大掛かりな仕掛けが必要そうに感じますが、スマホやタブレット、ノートPCを充電する程度なら意外と簡単なんです。
お金もそんなにかからないし、有事（停電）のときは非常用電源になるし、平時は多少とはいえ電気代節約にもなるし。
最初は妻も えっ（;￣O￣） て雰囲気で見守っていましたが、さすがに例の原発や、各地で起きる地震の被害を見ていると…　備えておいた方がいいよねと、最近はむしろ推進派。
んで、オフグリッドシステムに必要な機材は本当に少なくて、たった３つなんです。
<h1>オフグリッド電源最小構成は？</h1>
<ul>
<li>チャージコントローラ</li>
<li>太陽光パネル</li>
<li>蓄電池</li>
</ul>
安く抑えれば、全部込みで１万円ちょいでいけます。
<h2>チャージコントローラ</h2>
自己消費電力が小さく、小型軽量な上、日本製で品質も問題無しの電菱製がオススメです。
こちらは12Vの蓄電池用。10Aまでいけます（12Vx10A=120W）。予算に余裕があれば、24V用でもいいと思います。大して値段変わらないし。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51-N2MakSwL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" rel="noopener">電菱　太陽電池充放電コントローラ　Solar Amp B　10A/12V　SA-BA10</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSA-BA10%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSA-BA10%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
こちも12V蓄電池用ですが、最大電流がSA-BA10の倍まで耐えられます(12Vx20A=240W)。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00EU7ZZD6%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51-N2MakSwL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00EU7ZZD6%2Fref%3Dnosim" target="_blank" rel="noopener">電菱　太陽電池充放電コントローラ　Solar Amp B　20A/12V　SA-BA20</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2593d%2595H%2581%2540%2591%25BE%2597z%2593d%2592r%258F%255B%2595%25FA%2593d%2583R%2583%2593%2583g%2583%258D%2581%255B%2583%2589%2581%2540Solar%2520Amp%2520B%2581%254020A%252F12V%2581%2540SA-BA20%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258020A%252F12V%25E3%2580%2580SA-BA20%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
こちらは24V蓄電池用です。最大電流は10Aですが、24VなのでSA-BA20と同じく、240Wまでとなります。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00ITLI2SO%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51VPvPppGxL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00ITLI2SO%2Fref%3Dnosim" target="_blank" rel="noopener">電菱　太陽電池充放電コントローラ　Solar Amp B　10A/24V　SA-BB10</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2593d%2595H%2581%2540%2591%25BE%2597z%2593d%2592r%258F%255B%2595%25FA%2593d%2583R%2583%2593%2583g%2583%258D%2581%255B%2583%2589%2581%2540Solar%2520Amp%2520B%2581%254010A%252F24V%2581%2540SA-BB10%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258010A%252F24V%25E3%2580%2580SA-BB10%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
家電も使える規模の、ある程度容量大きめな蓄電池と太陽光パネルを採用するなら、迷わずMPPT方式のチャージコントローラにすべきですが…　値段も跳ね上がるのでこれについてはまた今度。
<h2>太陽光パネル</h2>
安さ重視なら20Wなんてのもあるんですが、あまり発電容量小さいと蓄電池の充電にやたらと時間がかかるので…　スマホタブレット用途とはいえ、最低でもこれくらいは必要かなと。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009RJNXW2%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/61Yyi6qMkgL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009RJNXW2%2Fref%3Dnosim" target="_blank" rel="noopener">30W多結晶シリコンソーラーパネル 太陽光パネル　SP030</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Beamtec     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D30W%2591%25BD%258C%258B%258F%25BB%2583V%2583%258A%2583R%2583%2593%2583%255C%2581%255B%2583%2589%2581%255B%2583p%2583l%2583%258B%2520%2591%25BE%2597z%258C%25F5%2583p%2583l%2583%258B%2581%2540SP030%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F30W%25E5%25A4%259A%25E7%25B5%2590%25E6%2599%25B6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%2520%25E5%25A4%25AA%25E9%2599%25BD%25E5%2585%2589%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E3%2580%2580SP030%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div><div class="shoplinkyahoo"><a href="http://ck.jp.ap.valuecommerce.com/servlet/referral?sid=3302958&amp;pid=884172546&amp;vc_url=http%3A%2F%2Fsearch.shopping.yahoo.co.jp%2Fsearch%3Fp%3D30W%25E5%25A4%259A%25E7%25B5%2590%25E6%2599%25B6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%2520%25E5%25A4%25AA%25E9%2599%25BD%25E5%2585%2589%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E3%2580%2580SP030" target="_blank" rel="noopener">Yahooショッピングで購入<img src="http://ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3302958&amp;pid=884172546" height="1" width="1" border="0"></a></div><div class="shoplinkyahooAuc"><a href="http://ck.jp.ap.valuecommerce.com/servlet/referral?sid=3302958&amp;pid=884172546&amp;vc_url=http%3A%2F%2Fauctions.search.yahoo.co.jp%2Fsearch%3Fvo%3D%26ve%3D%26auccat%3D0%26aucminprice%3D%26aucmaxprice%3D%26aucmin_bidorbuy_price%3D%26aucmax_bidorbuy_price%3D%26loc_cd%3D0%26abatch%3D0%26istatus%3D0%26filtered%3D1%26ei%3DUTF-8%26tab_ex%3Dcommerce%26va%3D30W%25E5%25A4%259A%25E7%25B5%2590%25E6%2599%25B6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%2520%25E5%25A4%25AA%25E9%2599%25BD%25E5%2585%2589%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E3%2580%2580SP030" target="_blank" rel="noopener">ヤフオク!で購入<img src="http://ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3302958&amp;pid=884172546" height="1" width="1" border="0"></a></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h2>蓄電池</h2>
スマホやタブレット程度とはいえ、ある程度容量のある蓄電池で、かつ値段もそこそこ安いものといえば…　以下のLongシリーズなんてどうでしょう。
私も<a href="http://blog.rinka-blossom.com/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/">車のダッシュボード発電</a>で使っていて、品質的にも全く問題無い品です。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41SbQRaU2AL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" rel="noopener">高性能シールドバッテリー 12V20Ah Long WP20-12</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バイクパーツセンター     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%258D%2582%2590%25AB%2594%255C%2583V%2581%255B%2583%258B%2583h%2583o%2583b%2583e%2583%258A%2581%255B%252012V20Ah%2520Long%2520WP20-12%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%25AB%2598%25E6%2580%25A7%25E8%2583%25BD%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2583%2590%25E3%2583%2583%25E3%2583%2586%25E3%2583%25AA%25E3%2583%25BC%252012V20Ah%2520Long%2520WP20-12%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h1>上記システムでどの程度使い物になるのか？</h1>
チャージコントローラSA-BA10が3180円、太陽光パネルSP030が4980円、蓄電池WP20-12が4620円なので、計12780円。
太陽光パネルの最大出力動作電が1.65Aなので、チャージコントローラの効率が70%と過程して、20Ahの蓄電池を満充電(蓄電池の容量を使い切ることは基本ないので、50%まで使うと過程)するのにかかる時間は、約8時間。
iPhone6sのバッテリ容量は1715mAhなので、蓄電池満充電状態で5.8回充電可能、蓄電池を使い切っても晴れていれば丸1日かければ回復しそうですね。
といった感じで、意外と簡単だってことが実感していただけると思います。実感しましたよね？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1411</wp:post_id>
		<wp:post_date><![CDATA[2016-06-19 14:38:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-19 05:38:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[solar_system_part07]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/51-N2MakSwL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>オフグリッドと聞くと、やたらと大掛かりな仕掛けが必要そうに感じますが、スマホやタブレット、ノートPCを充電する程度なら意外と簡単なんです。</p>

<p>お金もそんなにかからないし、有事（停電）のときは非常用電源になるし、平時は多少とはいえ電気代節約にもなるし。</p>

<p>最初は妻も えっ（;￣O￣） て雰囲気で見守っていましたが、さすがに例の原発や、各地で起きる地震の被害を見ていると…　備えておいた方がいいよねと、最近はむしろ推進派。</p>

<p>んで、オフグリッドシステムに必要な機材は本当に少なくて、たった３つなんです。</p>

<h1 id="">オフグリッド電源最小構成は？</h1>

<ul>
<li>チャージコントローラ</li>
<li>太陽光パネル</li>
<li>蓄電池</li>
</ul>

<p>安く抑えれば、全部込みで１万円ちょいでいけます。</p>

<h2 id="">チャージコントローラ</h2>

<p>自己消費電力が小さく、小型軽量な上、日本製で品質も問題無しの電菱製がオススメです。</p>

<p>こちらは12Vの蓄電池用。10Aまでいけます（12Vx10A=120W）。予算に余裕があれば、24V用でもいいと思います。大して値段変わらないし。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51-N2MakSwL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" >電菱　太陽電池充放電コントローラ　Solar Amp B　10A/12V　SA-BA10</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSA-BA10%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSA-BA10%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>こちも12V蓄電池用ですが、最大電流がSA-BA10の倍まで耐えられます(12Vx20A=240W)。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00EU7ZZD6%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51-N2MakSwL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00EU7ZZD6%2Fref%3Dnosim" target="_blank" >電菱　太陽電池充放電コントローラ　Solar Amp B　20A/12V　SA-BA20</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2593d%2595H%2581%2540%2591%25BE%2597z%2593d%2592r%258F%255B%2595%25FA%2593d%2583R%2583%2593%2583g%2583%258D%2581%255B%2583%2589%2581%2540Solar%2520Amp%2520B%2581%254020A%252F12V%2581%2540SA-BA20%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258020A%252F12V%25E3%2580%2580SA-BA20%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>こちらは24V蓄電池用です。最大電流は10Aですが、24VなのでSA-BA20と同じく、240Wまでとなります。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00ITLI2SO%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51VPvPppGxL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00ITLI2SO%2Fref%3Dnosim" target="_blank" >電菱　太陽電池充放電コントローラ　Solar Amp B　10A/24V　SA-BB10</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2593d%2595H%2581%2540%2591%25BE%2597z%2593d%2592r%258F%255B%2595%25FA%2593d%2583R%2583%2593%2583g%2583%258D%2581%255B%2583%2589%2581%2540Solar%2520Amp%2520B%2581%254010A%252F24V%2581%2540SA-BB10%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>
<div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258010A%252F24V%25E3%2580%2580SA-BB10%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>家電も使える規模の、ある程度容量大きめな蓄電池と太陽光パネルを採用するなら、迷わずMPPT方式のチャージコントローラにすべきですが…　値段も跳ね上がるのでこれについてはまた今度。</p>

<h2 id="">太陽光パネル</h2>

<p>安さ重視なら20Wなんてのもあるんですが、あまり発電容量小さいと蓄電池の充電にやたらと時間がかかるので…　スマホタブレット用途とはいえ、最低でもこれくらいは必要かなと。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009RJNXW2%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/61Yyi6qMkgL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009RJNXW2%2Fref%3Dnosim" target="_blank" >30W多結晶シリコンソーラーパネル 太陽光パネル　SP030</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Beamtec     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D30W%2591%25BD%258C%258B%258F%25BB%2583V%2583%258A%2583R%2583%2593%2583%255C%2581%255B%2583%2589%2581%255B%2583p%2583l%2583%258B%2520%2591%25BE%2597z%258C%25F5%2583p%2583l%2583%258B%2581%2540SP030%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F30W%25E5%25A4%259A%25E7%25B5%2590%25E6%2599%25B6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%2520%25E5%25A4%25AA%25E9%2599%25BD%25E5%2585%2589%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E3%2580%2580SP030%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div><div class="shoplinkyahoo"><a href="http://ck.jp.ap.valuecommerce.com/servlet/referral?sid=3302958&pid=884172546&vc_url=http%3A%2F%2Fsearch.shopping.yahoo.co.jp%2Fsearch%3Fp%3D30W%25E5%25A4%259A%25E7%25B5%2590%25E6%2599%25B6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%2520%25E5%25A4%25AA%25E9%2599%25BD%25E5%2585%2589%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E3%2580%2580SP030" target="_blank" >Yahooショッピングで購入<img src="http://ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3302958&pid=884172546" height="1" width="1" border="0"></a></div><div class="shoplinkyahooAuc"><a href="http://ck.jp.ap.valuecommerce.com/servlet/referral?sid=3302958&pid=884172546&vc_url=http%3A%2F%2Fauctions.search.yahoo.co.jp%2Fsearch%3Fvo%3D%26ve%3D%26auccat%3D0%26aucminprice%3D%26aucmaxprice%3D%26aucmin_bidorbuy_price%3D%26aucmax_bidorbuy_price%3D%26loc_cd%3D0%26abatch%3D0%26istatus%3D0%26filtered%3D1%26ei%3DUTF-8%26tab_ex%3Dcommerce%26va%3D30W%25E5%25A4%259A%25E7%25B5%2590%25E6%2599%25B6%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%2520%25E5%25A4%25AA%25E9%2599%25BD%25E5%2585%2589%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E3%2580%2580SP030" target="_blank" >ヤフオク!で購入<img src="http://ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3302958&pid=884172546" height="1" width="1" border="0"></a></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<h2 id="">蓄電池</h2>

<p>スマホやタブレット程度とはいえ、ある程度容量のある蓄電池で、かつ値段もそこそこ安いものといえば…　以下のLongシリーズなんてどうでしょう。</p>

<p>私も<a href="http://blog.rinka-blossom.com/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/">車のダッシュボード発電</a>で使っていて、品質的にも全く問題無い品です。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41SbQRaU2AL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" >高性能シールドバッテリー 12V20Ah Long WP20-12</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バイクパーツセンター     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%258D%2582%2590%25AB%2594%255C%2583V%2581%255B%2583%258B%2583h%2583o%2583b%2583e%2583%258A%2581%255B%252012V20Ah%2520Long%2520WP20-12%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%25AB%2598%25E6%2580%25A7%25E8%2583%25BD%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2583%2590%25E3%2583%2583%25E3%2583%2586%25E3%2583%25AA%25E3%2583%25BC%252012V20Ah%2520Long%2520WP20-12%2F-%2Ff.1-p.1-s.1-sf.0-st.A
-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<h1 id="">上記システムでどの程度使い物になるのか？</h1>

<p>チャージコントローラSA-BA10が3180円、太陽光パネルSP030が4980円、蓄電池WP20-12が4620円なので、計12780円。</p>

<p>太陽光パネルの最大出力動作電が1.65Aなので、チャージコントローラの効率が70%と過程して、20Ahの蓄電池を満充電(蓄電池の容量を使い切ることは基本ないので、50%まで使うと過程)するのにかかる時間は、約8時間。</p>

<p>iPhone6sのバッテリ容量は1715mAhなので、蓄電池満充電状態で5.8回充電可能、蓄電池を使い切っても晴れていれば丸1日かければ回復しそうですね。</p>

<p>といった感じで、意外と簡単だってことが実感していただけると思います。実感しましたよね？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1412]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949615821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605563]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Udemyデータサイエンス講座のロジスティック回帰テーマは「不倫」。</title>
		<link>https://tech.blog.uribou.me/udemydetasaiensujiang-zuo-norozisuteitukuhui-gui-notemagamian-bai-i/</link>
		<pubDate>Sat, 04 Jun 2016 06:41:08 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/udemydetasaiensujiang-zuo-norozisuteitukuhui-gui-notemagamian-bai-i/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス</a>、最後の方でscikit-learnを使って機械学習の基礎が学べます。これは面白い。
今やっとロジスティック回帰なんですが、ここに至るまでにこなしたのは株価解析や（これも面白かったけど）、アメリカ大統領選得票数の解析など、ちょっと堅いテーマが多かったのです。
それがロジスティック回帰にきて、テーマはなんと、「不倫」。
以下のようなデータセットを使ってLogisticRegressionモデルに食わせるわけですが、要するに以下のパラメータを与えれば、その人が不倫するかしないかの２値で予測結果が返っってくるというわけです。あくまで機械学習の学習用のテーマに過ぎないんですが…。
<pre><code class="python">print(sm.datasets.fair.NOTE)
::
    Number of observations: 6366
    Number of variables: 9
    Variable name definitions:
        rate_marriage   : How rate marriage, 1 = very poor, 2 = poor, 3 = fair,
                        4 = good, 5 = very good
        age             : Age
        yrs_married     : No. years married. Interval approximations. See
                        original paper for detailed explanation.
        children        : No. children
        religious       : How relgious, 1 = not, 2 = mildly, 3 = fairly,
                        4 = strongly
        educ            : Level of education, 9 = grade school, 12 = high
                        school, 14 = some college, 16 = college graduate,
                        17 = some graduate school, 20 = advanced degree
        occupation      : 1 = student, 2 = farming, agriculture; semi-skilled,
                        or unskilled worker; 3 = white-colloar; 4 = teacher
                        counselor social worker, nurse; artist, writers;
                        technician, skilled worker, 5 = managerial,
                        administrative, business, 6 = professional with
                        advanced degree
        occupation_husb : Husband's occupation. Same as occupation.
        affairs         : measure of time spent in extramarital affairs
    See the original paper for more details.
</code></pre>
テスト用データで72%の信頼性ある予測が可能だって。本当かな。
<pre><code class="python">metrics.accuracy_score(Y_test, pred)
0.7129396984924623
</code></pre>
実際に嫁のデータを与えて試してみよう。
その結果は次回。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1531</wp:post_id>
		<wp:post_date><![CDATA[2016-06-04 15:41:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-04 06:41:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[udemydetasaiensujiang-zuo-norozisuteitukuhui-gui-notemagamian-bai-i]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="https://www.udemy.com/python-jp/learn/v4/overview">実践 Python データサイエンス</a>、最後の方でscikit-learnを使って機械学習の基礎が学べます。これは面白い。</p>

<p>今やっとロジスティック回帰なんですが、ここに至るまでにこなしたのは株価解析や（これも面白かったけど）、アメリカ大統領選得票数の解析など、ちょっと堅いテーマが多かったのです。</p>

<p>それがロジスティック回帰にきて、テーマはなんと、「不倫」。</p>

<p>以下のようなデータセットを使ってLogisticRegressionモデルに食わせるわけですが、要するに以下のパラメータを与えれば、その人が不倫するかしないかの２値で予測結果が返っってくるというわけです。あくまで機械学習の学習用のテーマに過ぎないんですが…。</p>

<pre><code class="language-python">print(sm.datasets.fair.NOTE)

::

    Number of observations: 6366
    Number of variables: 9
    Variable name definitions:

        rate_marriage   : How rate marriage, 1 = very poor, 2 = poor, 3 = fair,
                        4 = good, 5 = very good
        age             : Age
        yrs_married     : No. years married. Interval approximations. See
                        original paper for detailed explanation.
        children        : No. children
        religious       : How relgious, 1 = not, 2 = mildly, 3 = fairly,
                        4 = strongly
        educ            : Level of education, 9 = grade school, 12 = high
                        school, 14 = some college, 16 = college graduate,
                        17 = some graduate school, 20 = advanced degree
        occupation      : 1 = student, 2 = farming, agriculture; semi-skilled,
                        or unskilled worker; 3 = white-colloar; 4 = teacher
                        counselor social worker, nurse; artist, writers;
                        technician, skilled worker, 5 = managerial,
                        administrative, business, 6 = professional with
                        advanced degree
        occupation_husb : Husband's occupation. Same as occupation.
        affairs         : measure of time spent in extramarital affairs

    See the original paper for more details.
</code></pre>

<p>テスト用データで72%の信頼性ある予測が可能だって。本当かな。</p>

<pre><code class="language-python">metrics.accuracy_score(Y_test, pred)  
0.7129396984924623  
</code></pre>

<p>実際に嫁のデータを与えて試してみよう。</p>

<p>その結果は次回。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989696174]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519254]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[binance акаунтын ашу]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[50152202@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/kz/join?ref=WTOZ531Y</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.39]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-20 16:28:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-20 07:28:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>280</wp:comment_id>
			<wp:comment_author><![CDATA[Skapa personligt konto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[30729274@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/sv/join?ref=V3MG69RO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.188]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-19 03:23:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-18 18:23:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>「不倫」データセットを機械学習して妻の説明変数パラメータを与えたところ、結果は…</title>
		<link>https://tech.blog.uribou.me/bu-lun-detasetutowoji-jie-xue-xi-siteqi-nishi-yong-sitatokoro-sonojie-guo-ha/</link>
		<pubDate>Mon, 06 Jun 2016 03:05:39 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/bu-lun-detasetutowoji-jie-xue-xi-siteqi-nishi-yong-sitatokoro-sonojie-guo-ha/</guid>
		<description></description>
		<content:encoded><![CDATA[結果はシロでした！ 不倫しないそうです。（本人に結果報告したら「わかんないよ」と言われましたが…）
まずは学習データをロードします。
<pre><code class="python">import pandas as pd
import numpy as np
from pandas import DataFrame, Series
import statsmodels.api as sm
X = sm.datasets.fair.load_pandas().data
</code></pre>
学習データに対する正解を作ります。
未知のデータ（妻パラメータ）に対する不倫するか（1）しないか(0)の結果を知りたいんですよね。
<pre><code class="python">def is_affairs(affairs):
    return 1 if affairs &gt; 0 else 0
Y = X.affairs.apply(is_affairs)
</code></pre>
affairsは「不倫情事に費やした時間」です。生々しい表現だなぁ・・・。
<pre><code class="python">print(sm.datasets.fair.NOTE)
::
    Number of observations: 6366
    Number of variables: 9
    Variable name definitions:
        rate_marriage   : How rate marriage, 1 = very poor, 2 = poor, 3 = fair,
                        4 = good, 5 = very good
        age             : Age
        yrs_married     : No. years married. Interval approximations. See
                        original paper for detailed explanation.
        children        : No. children
        religious       : How relgious, 1 = not, 2 = mildly, 3 = fairly,
                        4 = strongly
        educ            : Level of education, 9 = grade school, 12 = high
                        school, 14 = some college, 16 = college graduate,
                        17 = some graduate school, 20 = advanced degree
        occupation      : 1 = student, 2 = farming, agriculture; semi-skilled,
                        or unskilled worker; 3 = white-colloar; 4 = teacher
                        counselor social worker, nurse; artist, writers;
                        technician, skilled worker, 5 = managerial,
                        administrative, business, 6 = professional with
                        advanced degree
        occupation_husb : Husband's occupation. Same as occupation.
        affairs         : measure of time spent in extramarital affairs
    See the original paper for more details.
</code></pre>
正解をYに入れてあるので、その目的変数に強く相関する値affairsを説明変数から除きます。
<pre><code class="python">X.drop("affairs", inplace=True, axis=1)
</code></pre>
ちょっとめんどくさいんですが、数字の大小に意味がない変数、職業をダミー変数に変換しつつ、多重共線性を排除して、説明変数に連結します。
<pre><code class="python">occs = pd.get_dummies(X.occupation)
occs.columns = Series(["occ" + str(num) for num in range(1,7)])
occs.drop("occ1", axis=1, inplace=True)
occs_husb = pd.get_dummies(X.occupation_husb)
occs_husb.columns = Series(["occ_husb" + str(num) for num in range(1,7)])
occs_husb.drop("occ_husb1", axis=1, inplace=True)
X = pd.concat([X, occs, occs_husb], axis=1)
</code></pre>
occ, occ_husbの元となったデータを削除します。強く相関してますしね。
<pre><code class="python">X.drop(["occupation", "occupation_husb"], inplace=True, axis=1)
</code></pre>
学習用データと、答えあわせ用データに分けてモデルを作ります。9割を学習用データとして使います。より正確さを追求したいので。
<pre><code class="python">from sklearn.linear_model import LogisticRegression
from sklearn.cross_validation import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.9)
model = LogisticRegression()
model.fit(X_train, Y_train)
</code></pre>
答えあわせをしてみます。
<pre><code class="python">from sklearn.metrics import accuracy_score
predicted = model.predict(X_test)
print(accuracy_score(Y_test, predicted))
0.70800627943485084
</code></pre>
正答率70%。
愛妻の説明変数を与えて、不倫するかしないかを予測してみると・・・
<pre><code class="python">my_wife = Series([2, 31, 6, 2, 3, 16, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0])
model.predict(my_wife)
</code></pre>
結果は array([0]) ＝ 不倫しない となりました。
こういう一見アホらしいことを全力でやるのは、やっぱり楽しいですね。
今度は別のモデルを使って予測してみよう。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1533</wp:post_id>
		<wp:post_date><![CDATA[2016-06-06 12:05:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-06 03:05:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bu-lun-detasetutowoji-jie-xue-xi-siteqi-nishi-yong-sitatokoro-sonojie-guo-ha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>結果はシロでした！ 不倫しないそうです。（本人に結果報告したら「わかんないよ」と言われましたが…）</p>

<p>まずは学習データをロードします。</p>

<pre><code class="language-python">import pandas as pd  
import numpy as np  
from pandas import DataFrame, Series  
import statsmodels.api as sm

X = sm.datasets.fair.load_pandas().data  
</code></pre>

<p>学習データに対する正解を作ります。</p>

<p>未知のデータ（妻パラメータ）に対する不倫するか（1）しないか(0)の結果を知りたいんですよね。</p>

<pre><code class="language-python">def is_affairs(affairs):  
    return 1 if affairs &gt; 0 else 0

Y = X.affairs.apply(is_affairs)  
</code></pre>

<p>affairsは「不倫情事に費やした時間」です。生々しい表現だなぁ・・・。</p>

<pre><code class="language-python">print(sm.datasets.fair.NOTE)

::

    Number of observations: 6366
    Number of variables: 9
    Variable name definitions:

        rate_marriage   : How rate marriage, 1 = very poor, 2 = poor, 3 = fair,
                        4 = good, 5 = very good
        age             : Age
        yrs_married     : No. years married. Interval approximations. See
                        original paper for detailed explanation.
        children        : No. children
        religious       : How relgious, 1 = not, 2 = mildly, 3 = fairly,
                        4 = strongly
        educ            : Level of education, 9 = grade school, 12 = high
                        school, 14 = some college, 16 = college graduate,
                        17 = some graduate school, 20 = advanced degree
        occupation      : 1 = student, 2 = farming, agriculture; semi-skilled,
                        or unskilled worker; 3 = white-colloar; 4 = teacher
                        counselor social worker, nurse; artist, writers;
                        technician, skilled worker, 5 = managerial,
                        administrative, business, 6 = professional with
                        advanced degree
        occupation_husb : Husband's occupation. Same as occupation.
        affairs         : measure of time spent in extramarital affairs

    See the original paper for more details.
</code></pre>

<p>正解をYに入れてあるので、その目的変数に強く相関する値affairsを説明変数から除きます。</p>

<pre><code class="language-python">X.drop("affairs", inplace=True, axis=1)  
</code></pre>

<p>ちょっとめんどくさいんですが、数字の大小に意味がない変数、職業をダミー変数に変換しつつ、多重共線性を排除して、説明変数に連結します。</p>

<pre><code class="language-python">occs = pd.get_dummies(X.occupation)  
occs.columns = Series(["occ" + str(num) for num in range(1,7)])  
occs.drop("occ1", axis=1, inplace=True)

occs_husb = pd.get_dummies(X.occupation_husb)  
occs_husb.columns = Series(["occ_husb" + str(num) for num in range(1,7)])  
occs_husb.drop("occ_husb1", axis=1, inplace=True)

X = pd.concat([X, occs, occs_husb], axis=1)  
</code></pre>

<p>occ, occ_husbの元となったデータを削除します。強く相関してますしね。</p>

<pre><code class="language-python">X.drop(["occupation", "occupation_husb"], inplace=True, axis=1)  
</code></pre>

<p>学習用データと、答えあわせ用データに分けてモデルを作ります。9割を学習用データとして使います。より正確さを追求したいので。</p>

<pre><code class="language-python">from sklearn.linear_model import LogisticRegression  
from sklearn.cross_validation import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.9)

model = LogisticRegression()  
model.fit(X_train, Y_train)  
</code></pre>

<p>答えあわせをしてみます。</p>

<pre><code class="language-python">from sklearn.metrics import accuracy_score

predicted = model.predict(X_test)  
print(accuracy_score(Y_test, predicted))

0.70800627943485084  
</code></pre>

<p>正答率70%。</p>

<p>愛妻の説明変数を与えて、不倫するかしないかを予測してみると・・・</p>

<pre><code class="language-python">my_wife = Series([2, 31, 6, 2, 3, 16, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0])  
model.predict(my_wife)  
</code></pre>

<p>結果は array([0]) ＝ 不倫しない となりました。</p>

<p>こういう一見アホらしいことを全力でやるのは、やっぱり楽しいですね。</p>

<p>今度は別のモデルを使って予測してみよう。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5943433145]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519255]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>機械学習用データから分かる、不倫への明暗を分ける５つの要因。</title>
		<link>https://tech.blog.uribou.me/bu-lun-detasetutonozhong-dezui-mowei-naiparameta3tu/</link>
		<pubDate>Mon, 06 Jun 2016 13:16:19 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/bu-lun-detasetutonozhong-dezui-mowei-naiparameta3tu/</guid>
		<description></description>
		<content:encoded><![CDATA[興味本位で始めた、機械学習用不倫データセットと、Pythonの機械学習ライブラリscikit-learnを使って、愛妻の不倫を予測した<a href="http://blog.rinka-blossom.com/bu-lun-detasetutowoji-jie-xue-xi-siteqi-nishi-yong-sitatokoro-sonojie-guo-ha/">前回</a>の続き。（疑っているわけじゃないです）
結局、どのパラメータが不倫の大きな要因なのか？ 不倫を避けるにはどうすればいいのか？
と疑問に感じた人が調べるのは、係数（coefficient）です。
詳しい話は<a href="https://www.udemy.com/python-jp/learn/v4/overview">Udemyの実践 Python データサイエンス</a>の講習やWikipediaを参照するとして、ざっくり言うと、「旦那の職業」「妻本人の職業」「子供の人数」・・・などの係数のうち、どれが目的変数（妻が不倫するかしないか）を決定するのに最も影響力を持つか、と解釈しました。
係数は、前回作ったロジスティック回帰modelに格納されているので、一目でわかるように可視化します。
<pre><code class="python">from sklearn.linear_model import LogisticRegression
from sklearn.cross_validation import train_test_split
# トレーニング用データと確認用データを分離
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.9)
# モデルを作成
model = LogisticRegression()
model.fit(X_train, Y_train)
# 係数を可視化するためにDataFrame化
coef = DataFrame(model.coef_[0])
coef.columns = ["value"]
# X軸のラベルと合わせてグラフ描画、画像ファイルに保存
plt.plot("value", data=coef)
plt.xticks(coef.index, X.columns, rotation=90)
plt.savefig("coef.png")
</code></pre>
その結果がこれ。
<img src="https://farm8.staticflickr.com/7601/27496647135_f8df872757_z_d.jpg" alt="" />
見てみると、以下の５つが不倫させる係数上位５つ。
<ol>
<li>妻本人の職業: managerial, administrative, business (経営管理者)</li>
<li>妻本人の職業: professional with advanced degree (上位学位を持った専門職)</li>
<li>妻本人の職業: white-colloar (ホワイトカラー労働者のこと？)</li>
<li>旦那の職業: white-colloar (ホワイトカラー労働者のこと？)</li>
<li>妻本人の職業: teacher counselor social worker? 看護師、アーティスト、ライター・・・って幅広すぎ</li>
</ol>
逆に、不倫させない係数は以下の５つ。
<ol>
<li>rate marriage: ~~結婚式の値段？~~ 結婚に対する満足度</li>
<li>religious: 信心深さ</li>
<li>age: 年齢</li>
<li>children: 子供の人数</li>
<li>yrs_married: 結婚生活の年数</li>
</ol>
~~Rate marriageの訳は、これで合ってるのかな・・・？~~ @dgakane さんに訂正いただきました。あざっす！
不倫させない係数はともかく、不倫させる係数は全て職業絡みってのが興味深いですね。No.5に含まれる職業の幅が広過ぎるのが若干気になりますが・・・。
ただ、これが職業のせいなのか、職業による仕事への拘束時間のせいなのか、ちょっと判断しづらい気もします。
職業からくるパラメータをもっと細分化して、労働時間とか帰宅時間とか、旦那が子育てに費やす時間とかのパラメータがあると、さらに面白いかもですね。
==※：念のため注意。この記事に書いてある不倫の要因とか、ただのネタなので信用しないでくださいね。==]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1534</wp:post_id>
		<wp:post_date><![CDATA[2016-06-06 22:16:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-06 13:16:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bu-lun-detasetutonozhong-dezui-mowei-naiparameta3tu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7601/27496647135_f8df872757_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>興味本位で始めた、機械学習用不倫データセットと、Pythonの機械学習ライブラリscikit-learnを使って、愛妻の不倫を予測した<a href="http://blog.rinka-blossom.com/bu-lun-detasetutowoji-jie-xue-xi-siteqi-nishi-yong-sitatokoro-sonojie-guo-ha/">前回</a>の続き。（疑っているわけじゃないです）</p>

<p>結局、どのパラメータが不倫の大きな要因なのか？ 不倫を避けるにはどうすればいいのか？</p>

<p>と疑問に感じた人が調べるのは、係数（coefficient）です。</p>

<p>詳しい話は<a href="https://www.udemy.com/python-jp/learn/v4/overview">Udemyの実践 Python データサイエンス</a>の講習やWikipediaを参照するとして、ざっくり言うと、「旦那の職業」「妻本人の職業」「子供の人数」・・・などの係数のうち、どれが目的変数（妻が不倫するかしないか）を決定するのに最も影響力を持つか、と解釈しました。</p>

<p>係数は、前回作ったロジスティック回帰modelに格納されているので、一目でわかるように可視化します。</p>

<pre><code class="language-python">from sklearn.linear_model import LogisticRegression  
from sklearn.cross_validation import train_test_split

# トレーニング用データと確認用データを分離
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.9)

# モデルを作成
model = LogisticRegression()  
model.fit(X_train, Y_train)

# 係数を可視化するためにDataFrame化
coef = DataFrame(model.coef_[0])  
coef.columns = ["value"]

# X軸のラベルと合わせてグラフ描画、画像ファイルに保存
plt.plot("value", data=coef)  
plt.xticks(coef.index, X.columns, rotation=90)  
plt.savefig("coef.png")  
</code></pre>

<p>その結果がこれ。</p>

<p><img src="https://farm8.staticflickr.com/7601/27496647135_f8df872757_z_d.jpg" alt="" /></p>

<p>見てみると、以下の５つが不倫させる係数上位５つ。</p>

<ol>
<li>妻本人の職業: managerial, administrative, business (経営管理者)  </li>
<li>妻本人の職業: professional with advanced degree (上位学位を持った専門職)  </li>
<li>妻本人の職業: white-colloar (ホワイトカラー労働者のこと？)  </li>
<li>旦那の職業: white-colloar (ホワイトカラー労働者のこと？)  </li>
<li>妻本人の職業: teacher counselor social worker? 看護師、アーティスト、ライター・・・って幅広すぎ</li>
</ol>

<p>逆に、不倫させない係数は以下の５つ。</p>

<ol>
<li>rate marriage: <del>結婚式の値段？</del> 結婚に対する満足度  </li>
<li>religious: 信心深さ  </li>
<li>age: 年齢  </li>
<li>children: 子供の人数  </li>
<li>yrs_married: 結婚生活の年数</li>
</ol>

<p><del>Rate marriageの訳は、これで合ってるのかな・・・？</del> @dgakane さんに訂正いただきました。あざっす！</p>

<p>不倫させない係数はともかく、不倫させる係数は全て職業絡みってのが興味深いですね。No.5に含まれる職業の幅が広過ぎるのが若干気になりますが・・・。</p>

<p>ただ、これが職業のせいなのか、職業による仕事への拘束時間のせいなのか、ちょっと判断しづらい気もします。</p>

<p>職業からくるパラメータをもっと細分化して、労働時間とか帰宅時間とか、旦那が子育てに費やす時間とかのパラメータがあると、さらに面白いかもですね。</p>

<p><mark>※：念のため注意。この記事に書いてある不倫の要因とか、ただのネタなので信用しないでくださいね。</mark></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1535]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941024192]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519257]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>207</wp:comment_id>
			<wp:comment_author><![CDATA[Vytvorení úctu na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[74963314@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/cs/register?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.252]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-04 16:50:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-04 07:50:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>格安ウッドデッキの作り方。</title>
		<link>https://tech.blog.uribou.me/ge-an-utudodetukinozuo-rifang/</link>
		<pubDate>Mon, 06 Jun 2016 04:30:40 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ge-an-utudodetukinozuo-rifang/</guid>
		<description></description>
		<content:encoded><![CDATA[嫁：「ウッドデッキがあるといいなぁ。子供を遊ばせやすいし。庭に尖った砂利が敷き詰められてるから、裸足では降りれないし。」
とはいえ、我が家は賃貸アパート。
ウッドデッキ設置工事なんてできないし、できたとしても高すぎるし、さらに設置後のメンテナンスも結構大変っぽい。
日が当たりにくいから雑草なんて生えないだろうと思ってると、痛い目を見るようです。
<ul>
<li>引用元： <a href="http://www.wooddeck-mitsumori.com/blog/?p=745">うざい雑草にさようなら！ウッドデッキの下に草を生やさない方法</a></li>
</ul>
<blockquote>
  まずひとつは、ウッドデッキの下に防草シートを敷くこと。
  最近、お客様からもご要望が多くあるのがこの方法です。中にはご自分でホームセンターなどで購入された防草シートを先に敷いていらっしゃるお客様もいらっしゃいます。
  もう一つの方法は、コンクリート打ちすることです。
  お庭全体にコンクリート打ちするのは見た目も良くないですし、日光の照り返しがまぶしくて落ち着いたお庭になりません。コンクリート打ちするのはウッドデッキの下だけでいいです。
  コンクリート打ちをすれば、まず99.9％雑草が生えることはありません。防草シートを敷くよりも費用的には高めになりますが、イニシャルコスト・初期費用がかかるだけでメンテナンスは全く不要です。何年後にシートを張り替えるか考える必要もありません。
</blockquote>
なら自分で取り外しやすいように設計して作るしかないのか・・・　と思っていたら、IKEAでいいものを見つけちゃいました。
<a href="http://www.ikea.com/jp/ja/catalog/products/00213445/"><em>PPLAR</em></a>です。
<img src="https://farm8.staticflickr.com/7437/27442562346_d5b1cda670_z_d.jpg" alt="" />
組み立て例を見るとソファ用っぽいんですが、長さ: 63 cm x 幅: 63 cm x 高さ: 28 cmのサイズが庭にぴったりだったので、背もたれ等のパーツは一切買わずにウッドデッキとして並べてみました。
<img src="https://farm8.staticflickr.com/7546/27200225600_34c1726512_z_d.jpg" alt="" />
基礎は簡素に済ませちゃいまいた。
<img src="https://farm8.staticflickr.com/7445/27315019855_756aed0844_z_d.jpg" alt="" />
３歳の娘が歩き回っても、大人が寝転がっても全く問題なく使えてます。
かなり安く、その上お手軽に出来て、家族揃って大満足です。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1537</wp:post_id>
		<wp:post_date><![CDATA[2016-06-06 13:30:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-06 04:30:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ge-an-utudodetukinozuo-rifang]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7437/27442562346_d5b1cda670_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>嫁：「ウッドデッキがあるといいなぁ。子供を遊ばせやすいし。庭に尖った砂利が敷き詰められてるから、裸足では降りれないし。」</p>

<p>とはいえ、我が家は賃貸アパート。</p>

<p>ウッドデッキ設置工事なんてできないし、できたとしても高すぎるし、さらに設置後のメンテナンスも結構大変っぽい。</p>

<p>日が当たりにくいから雑草なんて生えないだろうと思ってると、痛い目を見るようです。</p>

<ul>
<li>引用元： <a href="http://www.wooddeck-mitsumori.com/blog/?p=745">うざい雑草にさようなら！ウッドデッキの下に草を生やさない方法</a></li>
</ul>

<blockquote>
  <p>まずひとつは、ウッドデッキの下に防草シートを敷くこと。</p>
  
  <p>最近、お客様からもご要望が多くあるのがこの方法です。中にはご自分でホームセンターなどで購入された防草シートを先に敷いていらっしゃるお客様もいらっしゃいます。</p>
  
  <p>もう一つの方法は、コンクリート打ちすることです。</p>
  
  <p>お庭全体にコンクリート打ちするのは見た目も良くないですし、日光の照り返しがまぶしくて落ち着いたお庭になりません。コンクリート打ちするのはウッドデッキの下だけでいいです。</p>
  
  <p>コンクリート打ちをすれば、まず99.9％雑草が生えることはありません。防草シートを敷くよりも費用的には高めになりますが、イニシャルコスト・初期費用がかかるだけでメンテナンスは全く不要です。何年後にシートを張り替えるか考える必要もありません。</p>
</blockquote>

<p>なら自分で取り外しやすいように設計して作るしかないのか・・・　と思っていたら、IKEAでいいものを見つけちゃいました。</p>

<p><a href="http://www.ikea.com/jp/ja/catalog/products/00213445/">_PPLAR_</a>です。</p>

<p><img src="https://farm8.staticflickr.com/7437/27442562346_d5b1cda670_z_d.jpg" alt="" /></p>

<p>組み立て例を見るとソファ用っぽいんですが、長さ: 63 cm x 幅: 63 cm x 高さ: 28 cmのサイズが庭にぴったりだったので、背もたれ等のパーツは一切買わずにウッドデッキとして並べてみました。</p>

<p><img src="https://farm8.staticflickr.com/7546/27200225600_34c1726512_z_d.jpg" alt="" /></p>

<p>基礎は簡素に済ませちゃいまいた。</p>

<p><img src="https://farm8.staticflickr.com/7445/27315019855_756aed0844_z_d.jpg" alt="" /></p>

<p>３歳の娘が歩き回っても、大人が寝転がっても全く問題なく使えてます。</p>

<p>かなり安く、その上お手軽に出来て、家族揃って大満足です。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1538]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5943373993]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519256]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>164</wp:comment_id>
			<wp:comment_author><![CDATA[Registrera]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[92057238@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/sv/join?ref=WTOZ531Y</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.140]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-12 16:46:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-12 07:46:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>247</wp:comment_id>
			<wp:comment_author><![CDATA[Регистрирайте се, за да получите 100 USDT]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[89659699@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/bg/register?ref=VDVEQ78S</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-07 06:32:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-06 21:32:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>代表的な機械学習アルゴリズム４つの精度を不倫データで比較する。</title>
		<link>https://tech.blog.uribou.me/dai-biao-de-naji-jie-xue-xi-arugorizumu4tuwobi-jiao-suru/</link>
		<pubDate>Wed, 08 Jun 2016 13:00:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/dai-biao-de-naji-jie-xue-xi-arugorizumu4tuwobi-jiao-suru/</guid>
		<description></description>
		<content:encoded><![CDATA[変なタイトル…。
またも<a href="http://blog.rinka-blossom.com/bu-lun-detasetutonozhong-dezui-mowei-naiparameta3tu/">前回</a>の続きですが、udemyで紹介される機械学習アルゴリズムは以下の４つ。
というより、多すぎて試しきれず、以下の４つに絞ったというか。
<ul>
<li>ロジスティック回帰</li>
<li>k近傍法</li>
<li>サポートベクトルマシン</li>
<li>ナイーブベイズ分類</li>
</ul>
これらをデフォルトのまま使って予測精度を比較してみようかなと。
まずは不倫データを整えます。前回までの記事にコードのコピペです。
<pre><code class="python">import pandas as pd
import numpy as np
from pandas import DataFrame, Series
import statsmodels.api as sm
def is_affairs(affairs):
        return 1 if affairs &gt; 0 else 0
X = sm.datasets.fair.load_pandas().data
Y = X.affairs.apply(is_affairs)
X.drop("affairs", inplace=True, axis=1)
occs = pd.get_dummies(X.occupation)
occs.columns = Series(["occ" + str(num) for num in range(1,7)])
occs.drop("occ1", axis=1, inplace=True)
occs_husb = pd.get_dummies(X.occupation_husb)
occs_husb.columns = Series(["occ_husb" + str(num) for num in range(1,7)])
occs_husb.drop("occ_husb1", axis=1, inplace=True)
X = pd.concat([X, occs, occs_husb], axis=1)
X.drop(["occupation", "occupation_husb"], inplace=True, axis=1)
</code></pre>
ここからが本番。４つのアルゴリズムそれぞれに不倫データを適用してモデルを作り、予測、精度（スコア）を算出。
<pre><code class="python">from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB
from sklearn.cross_validation import train_test_split
classes = (LogisticRegression, KNeighborsClassifier, SVC, GaussianNB)
results = DataFrame([[cls.__name__ for cls in classes], [.0 for _ in range(len(classes))]]).T
results.columns = ["class", "score"]
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.9)
scores = Series([.0 for _ in range(len(classes))])
for n, cls in enumerate(classes):
    obj = cls()
    obj.fit(X_train, Y_train)
    pred = obj.predict(X_test)
    scores[n] = accuracy_score(Y_test, pred)
results.score = scores
</code></pre>
その結果が以下。
<pre><code class="python">                  class     score
0    LogisticRegression  0.729984
1  KNeighborsClassifier  0.682889
2                   SVC  0.729984
3            GaussianNB  0.690738
</code></pre>
うーん、アルゴリズムやデータによって多少変わるようです、としか言えない…。
例えばSVCなら、コンストラクタに渡すパラメータkernelを他のアルゴリズムに変えるだけでも、精度に差が出てくるかもしれません。
<pre><code class="python">kernel : string, optional (default='rbf')
     Specifies the kernel type to be used in the algorithm.
     It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or
     a callable.
     If none is given, 'rbf' will be used. If a callable is given it is
     used to pre-compute the kernel matrix from data matrices; that matrix
     should be an array of shape ``(n_samples, n_samples)``.
</code></pre>
udemyのpython機械学習講座もそろそろお終いなので、寂しい限り。
とはいえ、まだ入り口に小指が入った程度だと自覚しているので、ここから更に薬指程度まで踏み込むにはどうしたものか、と次の題材を探しているところです。
これ ↓ もいいんですけど、いきなり難しいんですよね…。それでも少しずつ進めてはいるんですが。

そのうち紹介したいと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1539</wp:post_id>
		<wp:post_date><![CDATA[2016-06-08 22:00:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-08 13:00:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dai-biao-de-naji-jie-xue-xi-arugorizumu4tuwobi-jiao-suru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="udemy"><![CDATA[udemy]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>変なタイトル…。</p>

<p>またも<a href="http://blog.rinka-blossom.com/bu-lun-detasetutonozhong-dezui-mowei-naiparameta3tu/">前回</a>の続きですが、udemyで紹介される機械学習アルゴリズムは以下の４つ。</p>

<p>というより、多すぎて試しきれず、以下の４つに絞ったというか。</p>

<ul>
<li>ロジスティック回帰</li>
<li>k近傍法</li>
<li>サポートベクトルマシン</li>
<li>ナイーブベイズ分類</li>
</ul>

<p>これらをデフォルトのまま使って予測精度を比較してみようかなと。</p>

<p>まずは不倫データを整えます。前回までの記事にコードのコピペです。</p>

<pre><code class="language-python">import pandas as pd  
import numpy as np  
from pandas import DataFrame, Series  
import statsmodels.api as sm

def is_affairs(affairs):  
        return 1 if affairs &gt; 0 else 0

X = sm.datasets.fair.load_pandas().data  
Y = X.affairs.apply(is_affairs)

X.drop("affairs", inplace=True, axis=1)

occs = pd.get_dummies(X.occupation)  
occs.columns = Series(["occ" + str(num) for num in range(1,7)])  
occs.drop("occ1", axis=1, inplace=True)  
occs_husb = pd.get_dummies(X.occupation_husb)  
occs_husb.columns = Series(["occ_husb" + str(num) for num in range(1,7)])  
occs_husb.drop("occ_husb1", axis=1, inplace=True)

X = pd.concat([X, occs, occs_husb], axis=1)  
X.drop(["occupation", "occupation_husb"], inplace=True, axis=1)  
</code></pre>

<p>ここからが本番。４つのアルゴリズムそれぞれに不倫データを適用してモデルを作り、予測、精度（スコア）を算出。</p>

<pre><code class="language-python">from sklearn.linear_model import LogisticRegression  
from sklearn.neighbors import KNeighborsClassifier  
from sklearn.svm import SVC  
from sklearn.naive_bayes import GaussianNB  
from sklearn.cross_validation import train_test_split

classes = (LogisticRegression, KNeighborsClassifier, SVC, GaussianNB)  
results = DataFrame([[cls.__name__ for cls in classes], [.0 for _ in range(len(classes))]]).T  
results.columns = ["class", "score"]

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.9)

scores = Series([.0 for _ in range(len(classes))])  
for n, cls in enumerate(classes):  
    obj = cls()
    obj.fit(X_train, Y_train)
    pred = obj.predict(X_test)
    scores[n] = accuracy_score(Y_test, pred)

results.score = scores  
</code></pre>

<p>その結果が以下。</p>

<pre><code class="language-python">                  class     score
0    LogisticRegression  0.729984  
1  KNeighborsClassifier  0.682889  
2                   SVC  0.729984  
3            GaussianNB  0.690738  
</code></pre>

<p>うーん、アルゴリズムやデータによって多少変わるようです、としか言えない…。</p>

<p>例えばSVCなら、コンストラクタに渡すパラメータkernelを他のアルゴリズムに変えるだけでも、精度に差が出てくるかもしれません。</p>

<pre><code class="language-python">kernel : string, optional (default='rbf')  
     Specifies the kernel type to be used in the algorithm.
     It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or
     a callable.
     If none is given, 'rbf' will be used. If a callable is given it is
     used to pre-compute the kernel matrix from data matrices; that matrix
     should be an array of shape ``(n_samples, n_samples)``.
</code></pre>

<p>udemyのpython機械学習講座もそろそろお終いなので、寂しい限り。</p>

<p>とはいえ、まだ入り口に小指が入った程度だと自覚しているので、ここから更に薬指程度まで踏み込むにはどうしたものか、と次の題材を探しているところです。</p>

<p>これ ↓ もいいんですけど、いきなり難しいんですよね…。それでも少しずつ進めてはいるんですが。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=4873117488&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>そのうち紹介したいと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5964434264]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577288]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>わざわざ自分で珈琲豆を焙煎する３つの理由。</title>
		<link>https://tech.blog.uribou.me/jia-bei-wobei-jian-sitemiyou/</link>
		<pubDate>Sat, 11 Jun 2016 06:28:05 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/jia-bei-wobei-jian-sitemiyou/</guid>
		<description></description>
		<content:encoded><![CDATA[何を血迷ったか、珈琲豆を自分で焙煎して、豆挽いて、湯は太陽光の電源で沸かして楽しむようになってしまいました。
豆のローストも太陽光で完結したいところだけど、電動式ローストは色々あって断念していたところ、近々昭島市パパ会代表の提案で解決するかも！？　そのうちレポート予定。
んで、<strong>なぜわざわざ自宅で珈琲豆をローストする必要があるのか？</strong>
理由は主に３つ。
<ol>
<li>豆が日持ちする</li>
<li>焙煎したての豆で淹れた珈琲は美味しい</li>
<li>焙煎は楽しい</li>
</ol>
<h1>豆が日持ちする</h1>
自分で焙煎したいなーと考え始めたキッカケはこれです。
焙煎後の豆は、１〜２週間で飲みきる必要があるのです。
焙煎前の豆は生豆（きまめ、なままめ）といって、見た目はこんな感じ。
<img src="https://farm1.staticflickr.com/576/23241075659_26660011d4_z_d.jpg" alt="" />
生豆なら、日陰で風通しの良い場所で保存すれば、数年は保ちます。
我が家は床下収納に放り込んで保存しております。
<h1>焙煎したての豆で淹れた珈琲は美味しい</h1>
本当に美味しいです。妻も絶賛。
以前は酸っぱいと評価されることが多々ありました。
キリマンジャロ系はあまり好きじゃなく、マンデリンやモカマタリを好んで淹れてたんですが、賞味期限を過ぎると酸化していくんですよね。
で、酸っぱくなると。
だったら自分でやっちゃえば、飲む分だけその場で焙煎するので酸化する暇がないですよね。
<h1>焙煎は楽しい</h1>
焙煎直後の珈琲豆は炭酸ガスを多く含んでいるので、それを挽いて淹れると豆がブワッと膨らんで、見た目にも楽しめます。
その分、エキスを抽出しきれず味が落ちてしまうらしいんですが、もうすぐ４歳になる娘や、<a href="http://shufulab.jugem.jp/?eid=122">ぱぱとこひろば</a>に集まる子供達も、ブワっと膨らむのを不思議そうな顔で見てくれるので、その様を見るのも楽しい。
<h1>ただし、デメリットも</h1>
いいことばかりではありません。
珈琲豆の焙煎を披露しようもんなら、親兄弟や会社の同僚からは奇異の目で見られること必至です。
実際見られましたw
まぁ、<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">蓄電システムを自作した</a>時点で、奇異の目で見られるのを気にしてらんないんですが。
あとは、そこそこ焙煎に時間がかかることですね。
使ってる焙煎機はこれなんですが、

焙煎に15分程度、チャフ飛ばしに3分程度、湯沸かしながら豆挽いて淹れるのに10分程度で計30分程度ですかね。
ある程度自動で焙煎したい人向けにこんなものもありましたが、個人的にはあまりお勧めしません。ちょっと高価すぎるので。


でも、珈琲豆の自家焙煎は本当にお勧めです。
楽しいですよ。
…多分。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1541</wp:post_id>
		<wp:post_date><![CDATA[2016-06-11 15:28:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-11 06:28:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jia-bei-wobei-jian-sitemiyou]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="post_tag" nicename="jia-bei"><![CDATA[珈琲]]></category>
		<category domain="category" nicename="%e7%8f%88%e7%90%b2"><![CDATA[珈琲]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:65:"https://farm1.staticflickr.com/576/23241075659_26660011d4_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>何を血迷ったか、珈琲豆を自分で焙煎して、豆挽いて、湯は太陽光の電源で沸かして楽しむようになってしまいました。</p>

<p>豆のローストも太陽光で完結したいところだけど、電動式ローストは色々あって断念していたところ、近々昭島市パパ会代表の提案で解決するかも！？　そのうちレポート予定。</p>

<p>んで、<strong>なぜわざわざ自宅で珈琲豆をローストする必要があるのか？</strong></p>

<p>理由は主に３つ。</p>

<ol>
<li>豆が日持ちする  </li>
<li>焙煎したての豆で淹れた珈琲は美味しい  </li>
<li>焙煎は楽しい</li>
</ol>

<h1 id="">豆が日持ちする</h1>

<p>自分で焙煎したいなーと考え始めたキッカケはこれです。</p>

<p>焙煎後の豆は、１〜２週間で飲みきる必要があるのです。</p>

<p>焙煎前の豆は生豆（きまめ、なままめ）といって、見た目はこんな感じ。</p>

<p><img src="https://farm1.staticflickr.com/576/23241075659_26660011d4_z_d.jpg" alt="" /></p>

<p>生豆なら、日陰で風通しの良い場所で保存すれば、数年は保ちます。</p>

<p>我が家は床下収納に放り込んで保存しております。</p>

<h1 id="">焙煎したての豆で淹れた珈琲は美味しい</h1>

<p>本当に美味しいです。妻も絶賛。</p>

<p>以前は酸っぱいと評価されることが多々ありました。</p>

<p>キリマンジャロ系はあまり好きじゃなく、マンデリンやモカマタリを好んで淹れてたんですが、賞味期限を過ぎると酸化していくんですよね。</p>

<p>で、酸っぱくなると。</p>

<p>だったら自分でやっちゃえば、飲む分だけその場で焙煎するので酸化する暇がないですよね。</p>

<h1 id="">焙煎は楽しい</h1>

<p>焙煎直後の珈琲豆は炭酸ガスを多く含んでいるので、それを挽いて淹れると豆がブワッと膨らんで、見た目にも楽しめます。</p>

<p>その分、エキスを抽出しきれず味が落ちてしまうらしいんですが、もうすぐ４歳になる娘や、<a href="http://shufulab.jugem.jp/?eid=122">ぱぱとこひろば</a>に集まる子供達も、ブワっと膨らむのを不思議そうな顔で見てくれるので、その様を見るのも楽しい。</p>

<h1 id="">ただし、デメリットも</h1>

<p>いいことばかりではありません。</p>

<p>珈琲豆の焙煎を披露しようもんなら、親兄弟や会社の同僚からは奇異の目で見られること必至です。</p>

<p>実際見られましたw</p>

<p>まぁ、<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">蓄電システムを自作した</a>時点で、奇異の目で見られるのを気にしてらんないんですが。</p>

<p>あとは、そこそこ焙煎に時間がかかることですね。</p>

<p>使ってる焙煎機はこれなんですが、</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B0091G8YQ6&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>焙煎に15分程度、チャフ飛ばしに3分程度、湯沸かしながら豆挽いて淹れるのに10分程度で計30分程度ですかね。</p>

<p>ある程度自動で焙煎したい人向けにこんなものもありましたが、個人的にはあまりお勧めしません。ちょっと高価すぎるので。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B00PTVNDOA&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=dodo5522-22&o=9&p=8&l=as1&asins=B009EOOG9O&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>でも、珈琲豆の自家焙煎は本当にお勧めです。</p>

<p>楽しいですよ。</p>

<p>…多分。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1542]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5957855771]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591163]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>163</wp:comment_id>
			<wp:comment_author><![CDATA[Mendaftar di Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[86330149@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/id/join?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.140]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-12 04:02:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-11 19:02:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>270</wp:comment_id>
			<wp:comment_author><![CDATA[отваряне на профил в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[50840998@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/bg/register?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.244]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-14 08:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-13 23:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>珈琲焙煎作業を楽にする道具の紹介。</title>
		<link>https://tech.blog.uribou.me/jia-bei-dou-tiyahufei-basiji-wodiysuru/</link>
		<pubDate>Mon, 20 Jun 2016 05:59:11 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/jia-bei-dou-tiyahufei-basiji-wodiysuru/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/jia-bei-wobei-jian-sitemiyou/">珈琲豆を自宅で焙煎すること</a>を推奨しちゃってますが、どうしてもメンドくさいと感じてしまう作業。
チャフ飛ばしです。
チャフとは？
<blockquote>
  【チャフ】(ちゃふ) Chaff（欺瞞紙）
  ECMのひとつで、敵方のレーダーを欺瞞するための妨害片。
  from <a href="http://www.weblio.jp/content/%E3%83%81%E3%83%A3%E3%83%95">Weblio</a>
</blockquote>
昔、フルメタルパニックというアニメに出てきたな、そういえば…。
珈琲豆を焙煎すると、パチパチと音を立てて（ハゼると言います）、周りの薄皮が剥がれてきます。
この薄皮をチャフと言います。
これが残っていると、とっても渋くて苦い珈琲が飲めますが…　ちょっとお勧めできないできないくらいの苦味があります。健康にいいのかな、これ…。
このチャフ、普通は取り除きます。
が、これが意外とめんどくさい。
かつては焙煎した豆をチャフごとザルに入れ、冷ましてから下からウチワで仰いでチャフを飛ばして取り除いていたんですが、腕や顔や首筋や服にチャフがまとわり付いてきて、鬱陶しいんですよね…。
これを解決する、<strong>チャフ飛ばし器</strong>を作りました！
<h2>材料</h2>
<ol>
<li>ザル２つ（100円ショップ製）</li>
<li>回転数2500rpmのPC用ファン（ノーブランド）</li>
<li>ネジなど</li>
</ol>
<h2>作り方</h2>
写真のように適当にネジ止めします。
<img src="https://farm8.staticflickr.com/7410/27377570052_b801c42ffc_z_d.jpg" alt="" />
ケーブルをザルに這わせて邪魔にならないようにします。
<img src="https://farm8.staticflickr.com/7670/26867547064_ff4dc539bb_z_d.jpg" alt="" />
あとは焙煎した豆を入れたザルを上に重ねて12Vバッテリーを繋いで庭に放置すれば、勝手にチャフが取り除ける！便利！
<h2>結果</h2>
軽く失敗でした。
ファンの回転数が2500rpmでは風量が足りず、そのままではチャフが飛んでってくれません。
結局人手で豆をかき回しながらでないと飛んでくれないので、腕や服にまとわり付く問題を回避できず。
豆ごと飛ばしてしまうのを恐れて回転数を低めにしたのが失敗だったか…。
次は4000rpmにしよう。
続く。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1543</wp:post_id>
		<wp:post_date><![CDATA[2016-06-20 14:59:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-20 05:59:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jia-bei-dou-tiyahufei-basiji-wodiysuru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="post_tag" nicename="jia-bei"><![CDATA[珈琲]]></category>
		<category domain="category" nicename="%e7%8f%88%e7%90%b2"><![CDATA[珈琲]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7410/27377570052_b801c42ffc_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/jia-bei-wobei-jian-sitemiyou/">珈琲豆を自宅で焙煎すること</a>を推奨しちゃってますが、どうしてもメンドくさいと感じてしまう作業。</p>

<p>チャフ飛ばしです。</p>

<p>チャフとは？</p>

<blockquote>
  <p>【チャフ】(ちゃふ) Chaff（欺瞞紙） 
  ECMのひとつで、敵方のレーダーを欺瞞するための妨害片。
  from <a href="http://www.weblio.jp/content/%E3%83%81%E3%83%A3%E3%83%95">Weblio</a></p>
</blockquote>

<p>昔、フルメタルパニックというアニメに出てきたな、そういえば…。</p>

<p>珈琲豆を焙煎すると、パチパチと音を立てて（ハゼると言います）、周りの薄皮が剥がれてきます。</p>

<p>この薄皮をチャフと言います。</p>

<p>これが残っていると、とっても渋くて苦い珈琲が飲めますが…　ちょっとお勧めできないできないくらいの苦味があります。健康にいいのかな、これ…。</p>

<p>このチャフ、普通は取り除きます。</p>

<p>が、これが意外とめんどくさい。</p>

<p>かつては焙煎した豆をチャフごとザルに入れ、冷ましてから下からウチワで仰いでチャフを飛ばして取り除いていたんですが、腕や顔や首筋や服にチャフがまとわり付いてきて、鬱陶しいんですよね…。</p>

<p>これを解決する、<strong>チャフ飛ばし器</strong>を作りました！</p>

<h2 id="">材料</h2>

<ol>
<li>ザル２つ（100円ショップ製）  </li>
<li>回転数2500rpmのPC用ファン（ノーブランド）  </li>
<li>ネジなど</li>
</ol>

<h2 id="">作り方</h2>

<p>写真のように適当にネジ止めします。</p>

<p><img src="https://farm8.staticflickr.com/7410/27377570052_b801c42ffc_z_d.jpg" alt="" /></p>

<p>ケーブルをザルに這わせて邪魔にならないようにします。</p>

<p><img src="https://farm8.staticflickr.com/7670/26867547064_ff4dc539bb_z_d.jpg" alt="" /></p>

<p>あとは焙煎した豆を入れたザルを上に重ねて12Vバッテリーを繋いで庭に放置すれば、勝手にチャフが取り除ける！便利！</p>

<h2 id="">結果</h2>

<p>軽く失敗でした。</p>

<p>ファンの回転数が2500rpmでは風量が足りず、そのままではチャフが飛んでってくれません。</p>

<p>結局人手で豆をかき回しながらでないと飛んでくれないので、腕や服にまとわり付く問題を回避できず。</p>

<p>豆ごと飛ばしてしまうのを恐れて回転数を低めにしたのが失敗だったか…。</p>

<p>次は4000rpmにしよう。</p>

<p>続く。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5962622034]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634491]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>272</wp:comment_id>
			<wp:comment_author><![CDATA[binance bonus za napotitev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[71381613@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/sl/join?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.164]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-19 16:56:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-19 07:56:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>時代を先取りした太陽光発電車を、手軽に、安くお求めになれます。</title>
		<link>https://tech.blog.uribou.me/shi-dai-woxian-qu-risitatai-yang-guang-fa-dian-che-wo-shou-qing-ni-an-kuoqiu-meninaremasu/</link>
		<pubDate>Wed, 15 Jun 2016 05:28:57 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/shi-dai-woxian-qu-risitatai-yang-guang-fa-dian-che-wo-shou-qing-ni-an-kuoqiu-meninaremasu/</guid>
		<description></description>
		<content:encoded><![CDATA[太陽光パネル付きPHV車が、トヨタから2016年秋に発売されるみたいですね。
あらゆる角度から撮影した１１６枚の写真が公開されてます。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">新型プリウスの真打ち登場！「プリウスPHV」ソーラー発電も備えた日本仕様を初公開！【写真116枚】 <a href="https://t.co/ELqFyuyONq">https://t.co/ELqFyuyONq</a> <a href="https://twitter.com/hashtag/ac1mita?src=hash">#ac1mita</a> <a href="https://twitter.com/autocONE">@autocONE</a>より</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/743015998794539008">2016年6月15日</a></blockquote>

ガラス製の屋根？ の下に太陽光パネルが埋め込まれるようなので、耐久性も高そう。
気になるその容量は…　見た感じ、いいとこ100〜200Wかなぁ。
その程度のパネルで車を駆動できるほどの電力を発電できるのか…？　と疑っちゃいますが、<a href="http://blog.rinka-blossom.com/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/">トヨタより時代を先取りした我が家のDIY太陽光発電車</a>（笑）の経験からは意外といけるんじゃないかと思います。
さすがに１日で満充電するのは無理かもしれないけど、屋根なし駐車場に置いとくだけで、かなり効率よく太陽の光が当たりますからね。
我が家の車のバッテリーは常に満充電状態で、使いきれていません。
トヨタは、燃料電池車などを含むエコカー開発を加速させるとのことですが、大概消費者の懐にはエコじゃない値段しますので、そんな型にはDIY太陽光発電システムを既存の車に組み込むことをお勧めします。
ほんと、かなり簡単なので。駆動系に接続は無理ですが。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1544</wp:post_id>
		<wp:post_date><![CDATA[2016-06-15 14:28:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-15 05:28:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shi-dai-woxian-qu-risitatai-yang-guang-fa-dian-che-wo-shou-qing-ni-an-kuoqiu-meninaremasu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>太陽光パネル付きPHV車が、トヨタから2016年秋に発売されるみたいですね。</p>

<p>あらゆる角度から撮影した１１６枚の写真が公開されてます。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">新型プリウスの真打ち登場！「プリウスPHV」ソーラー発電も備えた日本仕様を初公開！【写真116枚】 <a href="https://t.co/ELqFyuyONq">https://t.co/ELqFyuyONq</a> <a href="https://twitter.com/hashtag/ac1mita?src=hash">#ac1mita</a> <a href="https://twitter.com/autocONE">@autocONE</a>より</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/743015998794539008">2016年6月15日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>ガラス製の屋根？ の下に太陽光パネルが埋め込まれるようなので、耐久性も高そう。</p>

<p>気になるその容量は…　見た感じ、いいとこ100〜200Wかなぁ。</p>

<p>その程度のパネルで車を駆動できるほどの電力を発電できるのか…？　と疑っちゃいますが、<a href="http://blog.rinka-blossom.com/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/">トヨタより時代を先取りした我が家のDIY太陽光発電車</a>（笑）の経験からは意外といけるんじゃないかと思います。</p>

<p>さすがに１日で満充電するのは無理かもしれないけど、屋根なし駐車場に置いとくだけで、かなり効率よく太陽の光が当たりますからね。</p>

<p>我が家の車のバッテリーは常に満充電状態で、使いきれていません。</p>

<p>トヨタは、燃料電池車などを含むエコカー開発を加速させるとのことですが、大概消費者の懐にはエコじゃない値段しますので、そんな型にはDIY太陽光発電システムを既存の車に組み込むことをお勧めします。</p>

<p>ほんと、かなり簡単なので。駆動系に接続は無理ですが。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6025233982]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591163]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>278</wp:comment_id>
			<wp:comment_author><![CDATA[binance-]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[11361886@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ka-GE/register?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.159]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-11 23:22:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-11 14:22:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>電車内で寝ている皆さん、もう少し警戒心を持ちましょう。</title>
		<link>https://tech.blog.uribou.me/ri-ben-tohaie-shao-sihajing-jie-xin-wochi-tou/</link>
		<pubDate>Thu, 16 Jun 2016 16:02:22 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ri-ben-tohaie-shao-sihajing-jie-xin-wochi-tou/</guid>
		<description></description>
		<content:encoded><![CDATA[本日は所用で朝から都内へお出かけ。
朝の通勤時間に都心方向へ電車で向かうことは長らくなかったので、油断していた…。
テーマは違えど、まさにこんな感じ↓。
<a href="http://kasakoblog.exblog.jp/10601073/">kasakoblog: ストレス解消に時差通勤！</a>
<blockquote>
  都内に9時頃までに着くように出かける時は、
  すごく混雑していて、もうそれだけでうんざりしてしまう。
  こんな電車に毎日乗っていたら、そりゃ、気も狂うだろうと。
</blockquote>
そんな身動き取れない車内で、気になる人が。
座席に座っている若い女性。
バッグの口全開で、スマホと財布が丸見え状態のまま、自らの口も全開で爆睡…。
揺れる電車で隣のおっさんに思いっきりもたれかかってしまい、半ギレしたおっさん、肘で女性の横顔を持ち上げて、窓に打ち付けるという行動に出たもんだから、周りにいた人もビックリ！(◎_◎;)
…が、余程疲弊しているのか、そこまでされても女性は全く起きず。すごい。
爆睡していた割に、目的地らしき駅に着くと同時に起き上がり、バッグの中身も確認して人をかき分けて降りて行きました。
スリに遭わずに済んだことについては、ここが日本で良かったというべきか。
でもそこまで疲弊してしまうのは、ここが日本だからなのか。
何れにしても、いくら平和ボケ日本とはいえ、もう少しだけ警戒心持った方がいいと思う朝の出来事でした。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1545</wp:post_id>
		<wp:post_date><![CDATA[2016-06-17 01:02:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-16 16:02:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ri-ben-tohaie-shao-sihajing-jie-xin-wochi-tou]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>本日は所用で朝から都内へお出かけ。</p>

<p>朝の通勤時間に都心方向へ電車で向かうことは長らくなかったので、油断していた…。</p>

<p>テーマは違えど、まさにこんな感じ↓。</p>

<p><a href="http://kasakoblog.exblog.jp/10601073/">kasakoblog: ストレス解消に時差通勤！</a></p>

<blockquote>
  <p>都内に9時頃までに着くように出かける時は、 
  すごく混雑していて、もうそれだけでうんざりしてしまう。 
  こんな電車に毎日乗っていたら、そりゃ、気も狂うだろうと。</p>
</blockquote>

<p>そんな身動き取れない車内で、気になる人が。</p>

<p>座席に座っている若い女性。</p>

<p>バッグの口全開で、スマホと財布が丸見え状態のまま、自らの口も全開で爆睡…。</p>

<p>揺れる電車で隣のおっさんに思いっきりもたれかかってしまい、半ギレしたおっさん、肘で女性の横顔を持ち上げて、窓に打ち付けるという行動に出たもんだから、周りにいた人もビックリ！(◎_◎;)</p>

<p>…が、余程疲弊しているのか、そこまでされても女性は全く起きず。すごい。</p>

<p>爆睡していた割に、目的地らしき駅に着くと同時に起き上がり、バッグの中身も確認して人をかき分けて降りて行きました。</p>

<p>スリに遭わずに済んだことについては、ここが日本で良かったというべきか。</p>

<p>でもそこまで疲弊してしまうのは、ここが日本だからなのか。</p>

<p>何れにしても、いくら平和ボケ日本とはいえ、もう少しだけ警戒心持った方がいいと思う朝の出来事でした。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5957392296]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605562]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>菜園体験をするべき３つの理由。</title>
		<link>https://tech.blog.uribou.me/3_things_can_be_got_from_farm/</link>
		<pubDate>Sun, 19 Jun 2016 03:13:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/3_things_can_be_got_from_farm/</guid>
		<description></description>
		<content:encoded><![CDATA[今日は記録的な猛暑の中、毎度お世話になっている<strong><a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a></strong>さんで草刈りや収穫等、農作業してきました。
昭島市って、住宅の隙間を縫うように畑があるのに、菜園として貸してくれるとこはものすごく少ない（というより無い）んですよね。
地元の農家さんと直接繋がれば借してもらえる余地があるみたいなので、最近見つけたこの↓サービスと提携すると面白そう。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">株式会社FARMFES - THE BRIDGE 会社ページ <a href="https://t.co/iwo7f42Lne">https://t.co/iwo7f42Lne</a></p>&mdash; FARMFES (@FARMFES) <a href="https://twitter.com/FARMFES/status/742232556771237888">2016年6月13日</a></blockquote>

何より、菜園体験したくてもできない人への橋渡しになるのは、すごく有難い。
あー暑い。畑の状態や野菜の育ち具合をリモート監視したり、スタンドアロンでセンサー情報をロギングするなりして溜めたデータを機械学習に応用してその年の収穫量とか予想できないかなー。
とか、炎天下で雑草を刈りながら悶々と考えていると…　ふと、農園体験から得られることって色々あるよなー　でもちゃんと列挙してみたこと無いなー　ベスト３を挙げるとしたら何だろう？　と思って挙げてみました。
ということで、
<h1>菜園体験をするべき３つの理由</h1>
です。
<h2>食料を入手できる</h2>
なんだかんだ言って、これですよね。
畑仕事しながら、その場で美味しい採れたて野菜が食べられます。
<img src="https://farm8.staticflickr.com/7627/27469632950_4196494f38_z_d.jpg" alt="" />
ただ、<strong>食料を得ることだけ</strong>が目的だと、投資した時間や手間と比べて、得られる野菜の量（リターン）が少ないと感じるかも。
って、結構採れますけどね。ミニトマトも毎週鈴なり。
<img src="https://farm8.staticflickr.com/7556/27672990731_6bf9d0306e_z_d.jpg" alt="" />
それでも、近くのスーパーや八百屋さんで買った方が、大量生産による恩恵で圧倒的に安い上、楽チンです。
実際のところ、自分の中では以降の理由の方が大きいです。
<h2>食べ物を作る過程を知る</h2>
人から聞いた話ですが、野菜が土の中で育つことを知らない大人もいるんだそうな。
土が付いた野菜が家に届いて、汚れた野菜を届けるなんてどういうこと？ とクレームする人。
その話を聞いた時は「んなばかな」と思いましたが、、、　実際、普通のスーパーに並ぶ野菜を見ると、全部機械で徹底的に洗浄されているので、とても綺麗ですよね。土なんて1mmもついていない。
<img src="https://farm8.staticflickr.com/7319/27469663540_8702147191_z_d.jpg" alt="" />
極端な話（実際はそうそうないけど）、もし、自分の子供が「食べ物はスーパーで買うもの」と思い込み、綺麗に洗浄された野菜しか見たことがなく、食べたこともない。
といった環境で育つと、先ほどのクレーマーさんがここにも一人誕生することになるのか…？　これはまずい！ってことで、ガンガン土を触らせてます。
最初はワーキャー叫んで触れなかった虫にも触れるようになってきました。
よしよし。
<img src="https://farm8.staticflickr.com/7692/27469665840_87eebb2cb3_z_d.jpg" alt="" />
<h2>食べ物にまつわる知識を得ようとするモチベーションが手に入る</h2>
コトモファームでは毎週日曜、野菜の育て方講習を開いてくれるので、交配種（F1）、固定種、連作障害、苗作り、雑草との戦い、農薬について、…などなど、本当にたくさんのことを教えてくれます。
特に「F1」とか「固定種」とか、最初聞いた時は何のことやら意味が分かりませんでした。
ちょっと話変わりますが、普通はそこの畑で採れた野菜から種を採り、次の年までとっといて撒くんだろうな、とか思いません？　思いますよね？　私はそう思ってました。
ところが。
普通にスーパーで売られている野菜の大部分はF1という一代限りのもので、農家さん達はその野菜から採れる種は使えず、次の年にはまた種を別のところから買わないといけない。
なんて事実を、それまで全く知りませんでした。
F1の恩恵ももちろんあるので良い悪い言うつもりは全くありませんが（固定種にもメリットデメリットあるみたいですし）、、、　開発費用がかかる上、特許も絡んでくるみたいですね。
種の特許といえば、遺伝子組換え大豆の話題の方が熱いですが、わざわざ遺伝子を組み換える目的って何だろうとか調べ始めると、農薬やそれに関係する企業や政治的な話に繋がって…　正直キリがありません。
が、自分や子供が口にする食料について、知らずに無関心でいたのは恐ろしいことだな、と正直思いました。
詳しいことはググって、怪しい情報はフィルタして、信用できる情報を取り入れて、身を守るための基礎知識として蓄積していかないといかんのですよね。
<h1>結論</h1>
要するに、目に見えるものとしては収穫物が得られます。
しかしそれ以上に、目に見えないものが得られます。
そして、目に見えないものの方が、得るものは大きいです。
そんなようなことを感じた、炎天下での農作業でした。
しかし、この暑さ、どうにかならないものか…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1546</wp:post_id>
		<wp:post_date><![CDATA[2016-06-19 12:13:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-19 03:13:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[3_things_can_be_got_from_farm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7627/27469632950_4196494f38_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今日は記録的な猛暑の中、毎度お世話になっている<strong><a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a></strong>さんで草刈りや収穫等、農作業してきました。</p>

<p>昭島市って、住宅の隙間を縫うように畑があるのに、菜園として貸してくれるとこはものすごく少ない（というより無い）んですよね。</p>

<p>地元の農家さんと直接繋がれば借してもらえる余地があるみたいなので、最近見つけたこの↓サービスと提携すると面白そう。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">株式会社FARMFES - THE BRIDGE 会社ページ <a href="https://t.co/iwo7f42Lne">https://t.co/iwo7f42Lne</a></p>&mdash; FARMFES (@FARMFES) <a href="https://twitter.com/FARMFES/status/742232556771237888">2016年6月13日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>何より、菜園体験したくてもできない人への橋渡しになるのは、すごく有難い。</p>

<p>あー暑い。畑の状態や野菜の育ち具合をリモート監視したり、スタンドアロンでセンサー情報をロギングするなりして溜めたデータを機械学習に応用してその年の収穫量とか予想できないかなー。</p>

<p>とか、炎天下で雑草を刈りながら悶々と考えていると…　ふと、農園体験から得られることって色々あるよなー　でもちゃんと列挙してみたこと無いなー　ベスト３を挙げるとしたら何だろう？　と思って挙げてみました。</p>

<p>ということで、</p>

<h1 id="">菜園体験をするべき３つの理由</h1>

<p>です。</p>

<h2 id="">食料を入手できる</h2>

<p>なんだかんだ言って、これですよね。</p>

<p>畑仕事しながら、その場で美味しい採れたて野菜が食べられます。</p>

<p><img src="https://farm8.staticflickr.com/7627/27469632950_4196494f38_z_d.jpg" alt="" /></p>

<p>ただ、<strong>食料を得ることだけ</strong>が目的だと、投資した時間や手間と比べて、得られる野菜の量（リターン）が少ないと感じるかも。</p>

<p>って、結構採れますけどね。ミニトマトも毎週鈴なり。</p>

<p><img src="https://farm8.staticflickr.com/7556/27672990731_6bf9d0306e_z_d.jpg" alt="" /></p>

<p>それでも、近くのスーパーや八百屋さんで買った方が、大量生産による恩恵で圧倒的に安い上、楽チンです。</p>

<p>実際のところ、自分の中では以降の理由の方が大きいです。</p>

<h2 id="">食べ物を作る過程を知る</h2>

<p>人から聞いた話ですが、野菜が土の中で育つことを知らない大人もいるんだそうな。</p>

<p>土が付いた野菜が家に届いて、汚れた野菜を届けるなんてどういうこと？ とクレームする人。</p>

<p>その話を聞いた時は「んなばかな」と思いましたが、、、　実際、普通のスーパーに並ぶ野菜を見ると、全部機械で徹底的に洗浄されているので、とても綺麗ですよね。土なんて1mmもついていない。</p>

<p><img src="https://farm8.staticflickr.com/7319/27469663540_8702147191_z_d.jpg" alt="" /></p>

<p>極端な話（実際はそうそうないけど）、もし、自分の子供が「食べ物はスーパーで買うもの」と思い込み、綺麗に洗浄された野菜しか見たことがなく、食べたこともない。</p>

<p>といった環境で育つと、先ほどのクレーマーさんがここにも一人誕生することになるのか…？　これはまずい！ってことで、ガンガン土を触らせてます。</p>

<p>最初はワーキャー叫んで触れなかった虫にも触れるようになってきました。</p>

<p>よしよし。</p>

<p><img src="https://farm8.staticflickr.com/7692/27469665840_87eebb2cb3_z_d.jpg" alt="" /></p>

<h2 id="">食べ物にまつわる知識を得ようとするモチベーションが手に入る</h2>

<p>コトモファームでは毎週日曜、野菜の育て方講習を開いてくれるので、交配種（F1）、固定種、連作障害、苗作り、雑草との戦い、農薬について、…などなど、本当にたくさんのことを教えてくれます。</p>

<p>特に「F1」とか「固定種」とか、最初聞いた時は何のことやら意味が分かりませんでした。</p>

<p>ちょっと話変わりますが、普通はそこの畑で採れた野菜から種を採り、次の年までとっといて撒くんだろうな、とか思いません？　思いますよね？　私はそう思ってました。</p>

<p>ところが。</p>

<p>普通にスーパーで売られている野菜の大部分はF1という一代限りのもので、農家さん達はその野菜から採れる種は使えず、次の年にはまた種を別のところから買わないといけない。</p>

<p>なんて事実を、それまで全く知りませんでした。</p>

<p>F1の恩恵ももちろんあるので良い悪い言うつもりは全くありませんが（固定種にもメリットデメリットあるみたいですし）、、、　開発費用がかかる上、特許も絡んでくるみたいですね。</p>

<p>種の特許といえば、遺伝子組換え大豆の話題の方が熱いですが、わざわざ遺伝子を組み換える目的って何だろうとか調べ始めると、農薬やそれに関係する企業や政治的な話に繋がって…　正直キリがありません。</p>

<p>が、自分や子供が口にする食料について、知らずに無関心でいたのは恐ろしいことだな、と正直思いました。</p>

<p>詳しいことはググって、怪しい情報はフィルタして、信用できる情報を取り入れて、身を守るための基礎知識として蓄積していかないといかんのですよね。</p>

<h1 id="">結論</h1>

<p>要するに、目に見えるものとしては収穫物が得られます。</p>

<p>しかしそれ以上に、目に見えないものが得られます。</p>

<p>そして、目に見えないものの方が、得るものは大きいです。</p>

<p>そんなようなことを感じた、炎天下での農作業でした。</p>

<p>しかし、この暑さ、どうにかならないものか…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1547]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5981874984]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605563]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>242</wp:comment_id>
			<wp:comment_author><![CDATA[Skapa personligt konto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[98304654@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/sv/join?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.28]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-05 01:05:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-04 16:05:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Web上で簡単にデータを可視化できるサービス、Keen IO。</title>
		<link>https://tech.blog.uribou.me/keen-ionioshou-qing-dashboardzuo-cheng-ji-neng-gazhui-jia-sarete-saranibian-li-ninarimasita/</link>
		<pubDate>Tue, 21 Jun 2016 16:23:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/keen-ionioshou-qing-dashboardzuo-cheng-ji-neng-gazhui-jia-sarete-saranibian-li-ninarimasita/</guid>
		<description></description>
		<content:encoded><![CDATA[突然Keen IOからテンション高めのメールが届きました。
<blockquote>
  Hi Takashi, we have some big news!
  We’re excited to announce Keen Dashboards Beta release, a brand new tool that will enable anyone at your company to create custom dashboards with just a few clicks (or taps!)
</blockquote>
Keen IOは、クラウド上のデータベースを提供してくれる上、溜め込んだデータを簡単（？）に可視化してくれるサービス。
REST API経由で指定期間の平均値や最大最小値を取得できたりと結構高機能で、使いきれないほど。
主にWebサイトのアクセス解析を自分流にカスタムしたい人向けっぽい感じです。
更に、<a href="https://github.com/keen/dashboards">Keen IO提供のサンプルdashboard HTML5ソースコード</a>をちょっと弄ってHerokuなどのPaasにpushすれば…　こんな感じのdashboardの完成です。
<img src="https://farm2.staticflickr.com/1577/25056091411_6d9ebc0c5a_z_d.jpg" alt="" />
ちなみにこれは、家の発電状況監視用dashboard。
自分流にカスタムできるのはいいんですが、設置するまでのハードルはちょい高め。
ユーザから要望があったんですかね？ just a few clicks (or taps!)でdashboardを設置できるようになったようです。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">サンプルを自分でカスタムして適当なPaaSにpushしないと出来なかったdashbaordが、数ステップ画面をクリックするだけで簡単に出来上がる！らしい。<br />Announcing: Keen Dashboards <a href="https://t.co/hkf7YV78gA">https://t.co/hkf7YV78gA</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/745274963079233536">2016年6月21日</a></blockquote>

今はBetaで無料っぽいけど、正式版では有料オプションになるのかな…？
使えるうちに使っとこ。
<h1>新dashboardの作り方</h1>
まずはログイン。アカウント持ってない人はこれを機に作ってくださいね。
<img src="https://farm8.staticflickr.com/7746/27540427550_3e5767c0a9_z_d.jpg" alt="" />
作成済みのプロジェクトを選びます。offgrid home projectしかないんで、迷うことなくクリック。
<img src="https://farm8.staticflickr.com/7271/27784132296_89b2abb248_z_d.jpg" alt="" />
おお、以前はなかった（はずの）Dashboardタブが右上に追加されてる。クリック。
<img src="https://farm8.staticflickr.com/7404/27207195933_fce6658698_z_d.jpg" alt="" />
これはすごい。サンプルを自分でカスタムするときは一生懸命CSSいじくったのが、本当にマウスクリックだけでdashboardが作れちゃう。
レイアウトもプルダウンから選択すればいい。感激。
<img src="https://farm8.staticflickr.com/7583/27540427630_8806780941_z_d.jpg" alt="" />
あるデータ列を別のグラフとして追加もできる。
<img src="https://farm8.staticflickr.com/7638/27784132396_b8835c116b_z_d.jpg" alt="" />
で、何も問題なく完成するかと思ったら、そううまくはいかなかった。トラブル発生。
あるはずのデータ列が空で選択できないという致命的なトラブルが。
<img src="https://farm8.staticflickr.com/7698/27207196013_ba2a8ea30d_z_d.jpg" alt="" />
どうやってもデータ列選択プルダウンメニューが空なので、どうしようもなく、テンション高めな通知くれたDustinに「どうすりゃええの？」と画像付きで質問投げました。回答待ちです。
<h1>まとめ</h1>
従来は自分でgithubからコード落としてカスタマイズしてPaaSにアップしないと使えなかったdashboardが、マウスクリック数回でできるようになりました。
以前とは比較にならないほどハードル下がりましたね。
ただ、結局新dashboardの完成品を目にすることはできてませんが… Dustinの回答に期待です。
続く。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1548</wp:post_id>
		<wp:post_date><![CDATA[2016-06-22 01:23:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-21 16:23:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[keen-ionioshou-qing-dashboardzuo-cheng-ji-neng-gazhui-jia-sarete-saranibian-li-ninarimasita]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="keenio"><![CDATA[keenio]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm2.staticflickr.com/1577/25056091411_6d9ebc0c5a_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>突然Keen IOからテンション高めのメールが届きました。</p>

<blockquote>
  <p>Hi Takashi, we have some big news!</p>
  
  <p>We’re excited to announce Keen Dashboards Beta release, a brand new tool that will enable anyone at your company to create custom dashboards with just a few clicks (or taps!)</p>
</blockquote>

<p>Keen IOは、クラウド上のデータベースを提供してくれる上、溜め込んだデータを簡単（？）に可視化してくれるサービス。</p>

<p>REST API経由で指定期間の平均値や最大最小値を取得できたりと結構高機能で、使いきれないほど。</p>

<p>主にWebサイトのアクセス解析を自分流にカスタムしたい人向けっぽい感じです。</p>

<p>更に、<a href="https://github.com/keen/dashboards">Keen IO提供のサンプルdashboard HTML5ソースコード</a>をちょっと弄ってHerokuなどのPaasにpushすれば…　こんな感じのdashboardの完成です。</p>

<p><img src="https://farm2.staticflickr.com/1577/25056091411_6d9ebc0c5a_z_d.jpg" alt="" /></p>

<p>ちなみにこれは、家の発電状況監視用dashboard。</p>

<p>自分流にカスタムできるのはいいんですが、設置するまでのハードルはちょい高め。</p>

<p>ユーザから要望があったんですかね？ just a few clicks (or taps!)でdashboardを設置できるようになったようです。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">サンプルを自分でカスタムして適当なPaaSにpushしないと出来なかったdashbaordが、数ステップ画面をクリックするだけで簡単に出来上がる！らしい。<br>Announcing: Keen Dashboards <a href="https://t.co/hkf7YV78gA">https://t.co/hkf7YV78gA</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/745274963079233536">2016年6月21日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>今はBetaで無料っぽいけど、正式版では有料オプションになるのかな…？</p>

<p>使えるうちに使っとこ。</p>

<h1 id="dashboard">新dashboardの作り方</h1>

<p>まずはログイン。アカウント持ってない人はこれを機に作ってくださいね。</p>

<p><img src="https://farm8.staticflickr.com/7746/27540427550_3e5767c0a9_z_d.jpg" alt="" /></p>

<p>作成済みのプロジェクトを選びます。offgrid home projectしかないんで、迷うことなくクリック。</p>

<p><img src="https://farm8.staticflickr.com/7271/27784132296_89b2abb248_z_d.jpg" alt="" /></p>

<p>おお、以前はなかった（はずの）Dashboardタブが右上に追加されてる。クリック。</p>

<p><img src="https://farm8.staticflickr.com/7404/27207195933_fce6658698_z_d.jpg" alt="" /></p>

<p>これはすごい。サンプルを自分でカスタムするときは一生懸命CSSいじくったのが、本当にマウスクリックだけでdashboardが作れちゃう。</p>

<p>レイアウトもプルダウンから選択すればいい。感激。</p>

<p><img src="https://farm8.staticflickr.com/7583/27540427630_8806780941_z_d.jpg" alt="" /></p>

<p>あるデータ列を別のグラフとして追加もできる。</p>

<p><img src="https://farm8.staticflickr.com/7638/27784132396_b8835c116b_z_d.jpg" alt="" /></p>

<p>で、何も問題なく完成するかと思ったら、そううまくはいかなかった。トラブル発生。</p>

<p>あるはずのデータ列が空で選択できないという致命的なトラブルが。</p>

<p><img src="https://farm8.staticflickr.com/7698/27207196013_ba2a8ea30d_z_d.jpg" alt="" /></p>

<p>どうやってもデータ列選択プルダウンメニューが空なので、どうしようもなく、テンション高めな通知くれたDustinに「どうすりゃええの？」と画像付きで質問投げました。回答待ちです。</p>

<h1 id="">まとめ</h1>

<p>従来は自分でgithubからコード落としてカスタマイズしてPaaSにアップしないと使えなかったdashboardが、マウスクリック数回でできるようになりました。</p>

<p>以前とは比較にならないほどハードル下がりましたね。</p>

<p>ただ、結局新dashboardの完成品を目にすることはできてませんが… Dustinの回答に期待です。</p>

<p>続く。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947869334]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634491]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>298</wp:comment_id>
			<wp:comment_author><![CDATA[създаване на профил в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[47364713@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/bg/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.200]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-29 06:12:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-28 21:12:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>「手の内に取り戻したい何か」を感じたいなら、発電所見学へ。</title>
		<link>https://tech.blog.uribou.me/sonnazhen-nzhong-ji-tutenaide-fen-san-guan-li-siyou/</link>
		<pubDate>Sat, 25 Jun 2016 02:37:18 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/sonnazhen-nzhong-ji-tutenaide-fen-san-guan-li-siyou/</guid>
		<description></description>
		<content:encoded><![CDATA[とある事情で行くことになった、火力発電所見学。
あまり詳しくは書けないけれど、これほどの巨大なタービンと発電機、これまた巨大な建屋内に８本も並ぶ姿は、圧巻の一言でした。
そしてその設備に圧倒されながら、熱くはならずに冷めてしまうモチベーション。
なぜ冷めるかというと…
自分たちの生活基盤を支えるために、こんな途方もなく巨大な設備や技術が必要なのかと思うと…　何だかやりきれない。
とてもじゃないけど、自分の手には負えない。そんなスケール感。
火力でこれなんだから、原子力なんて更に想像もつかない世界なんでしょうね。
そんな設備が必要になってしまうのも、中央集権型であるが故。
中央で大量に作ったエネルギーを、上から下へ分け与えて、下で受ける方は上に頼り切ることになるこの構図。
エネルギーシステムだけじゃないよなぁ。
政治、教育、労働、食糧生産…　何にでも当てはまりそう。
こういうのを見てしまうと、もう限界なんてとうに過ぎてんじゃないの？と感じる中央集権型構造。
ソフトウェア開発の世界でさえ、中央集権型のVCSは既に時代遅れ。まだSubversionなんて使ってるの？今や分散型のGitが主流ですよ。
分散型のメリットは、負荷分散だけじゃない。何かあった時のリスクヘッジにもなる。
できる限り分散型を意識して、少しずつでもあらゆるコトを自分の手の内に取り戻していこう。
なーんて、とりとめもないことを考えてしまった発電所見学でした。
飛躍しすぎ？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1549</wp:post_id>
		<wp:post_date><![CDATA[2016-06-25 11:37:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-25 02:37:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sonnazhen-nzhong-ji-tutenaide-fen-san-guan-li-siyou]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>とある事情で行くことになった、火力発電所見学。</p>

<p>あまり詳しくは書けないけれど、これほどの巨大なタービンと発電機、これまた巨大な建屋内に８本も並ぶ姿は、圧巻の一言でした。</p>

<p>そしてその設備に圧倒されながら、熱くはならずに冷めてしまうモチベーション。</p>

<p>なぜ冷めるかというと…</p>

<p>自分たちの生活基盤を支えるために、こんな途方もなく巨大な設備や技術が必要なのかと思うと…　何だかやりきれない。</p>

<p>とてもじゃないけど、自分の手には負えない。そんなスケール感。</p>

<p>火力でこれなんだから、原子力なんて更に想像もつかない世界なんでしょうね。</p>

<p>そんな設備が必要になってしまうのも、中央集権型であるが故。</p>

<p>中央で大量に作ったエネルギーを、上から下へ分け与えて、下で受ける方は上に頼り切ることになるこの構図。</p>

<p>エネルギーシステムだけじゃないよなぁ。</p>

<p>政治、教育、労働、食糧生産…　何にでも当てはまりそう。</p>

<p>こういうのを見てしまうと、もう限界なんてとうに過ぎてんじゃないの？と感じる中央集権型構造。</p>

<p>ソフトウェア開発の世界でさえ、中央集権型のVCSは既に時代遅れ。まだSubversionなんて使ってるの？今や分散型のGitが主流ですよ。</p>

<p>分散型のメリットは、負荷分散だけじゃない。何かあった時のリスクヘッジにもなる。</p>

<p>できる限り分散型を意識して、少しずつでもあらゆるコトを自分の手の内に取り戻していこう。</p>

<p>なーんて、とりとめもないことを考えてしまった発電所見学でした。</p>

<p>飛躍しすぎ？</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6008985294]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634492]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>282</wp:comment_id>
			<wp:comment_author><![CDATA[Crea un account binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[35501769@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/it/register?ref=WTOZ531Y</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.188]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-19 19:28:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-19 10:28:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>291</wp:comment_id>
			<wp:comment_author><![CDATA[binance kods]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[7574367@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/lv/join?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.32]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-25 07:26:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-24 22:26:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>デジカメ写真をスマホに飛ばすEye-Fiカードのおすすめポイントと比較まとめ。</title>
		<link>https://tech.blog.uribou.me/eye-fi-to-smartphone/</link>
		<pubDate>Sat, 25 Jun 2016 14:11:43 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/eye-fi-to-smartphone/</guid>
		<description></description>
		<content:encoded><![CDATA[Eye-Fi Pro X2 8GB を使い続けて早４年。
新型のMobiが発売されている今、旧型のX2を使っている人は稀かもしれませんが・・・　買い換えの必要性を感じないくらい必要十分な機能を備えていたので、多分中身のNANDが逝くか、転送用のiPhoneアプリが廃盤になるまで使い続けると思います。それくらい便利。
<h1>そもそもEye-Fiとは？</h1>
Wikipediaとかで調べればいくらでも情報出てくるので、~~手を抜いて~~簡単に。
無線LANアクセスポイント機能を備えたSDカードのことです。
Pro X2は、今や中古でしか入手できないのかも。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00A2DEPQK%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/31RRLUHwKcL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00A2DEPQK%2Fref%3Dnosim" target="_blank" rel="noopener">Eye-Fi</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Eye-Fi Japan 2012-11-14    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DEye-Fi%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FEye-Fi%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
Mobiは使ったことないんですが、大体似たようなもんです。
Eye-Fi専用のクラウドに写真を自動同期する機能があるそうですが、どうせ無料枠のクラウドストレージ容量は大したコトないと思うので、あまり興味なし。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00D41F9TO%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41SVj-5GG9L._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00D41F9TO%2Fref%3Dnosim" target="_blank" rel="noopener">Eye-Fi Mobi</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Eye-Fi Japan 2013-06-14    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DEye-Fi%2520Mobi%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FEye-Fi%2520Mobi%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
ちなみに、後発のFlash Airとは似て非なる製品です。詳細は後ほど。
<h1>Eye-Fiで何ができるの？</h1>
できることは、とてもシンプルです。
<strong>無線LAN経由で、写真や動画をスマホやパソコンに転送することができる。</strong>
それだけ。でもこれが結構重要。
スマホのカメラにも、光学ズーム機能や手振れ補正機能まで備わって、一昔前では考えられないくらい綺麗な写真が撮れますよね。
でも、専用のカメラ、特にデジタル一眼には、画質やズーム倍率などで敵うはずがない　というより、<strong>役割分担すべき</strong>と思っています。
ちゃんと撮りたい写真はデジタル一眼で撮影した後、スマホで軽く加工してSNSでシェアする、といった具合に。
この、カメラとスマホの間を繋いでくれるのがEye-Fiなのです。
<h2>Eye-Fiの接続方法</h2>
Eye-Fiカード自らが無線LANアクセスポイントとなるので、スマホからアクセスポイントに接続した上で、スマホにインストールした専用アプリを起動すると、自動的に無線経由でSDカードから写真が転送される、といった流れになります。転送する写真は事前にカメラ側で選んで、写真をロックする必要があります。
とはいえ、デジカメで撮った写真は大概その場で確認するので、お気に入りの写真にロックボタン押しとけばいいだけです。
接続してアプリ起動で勝手にスマホに転送される、この手軽さがとてもいいんですよね。
転送された後は、スマホ標準の写真閲覧アプリでの簡易編集も、Instagramによる加工も、その他画像編集アプリ
で、その専用アプリはこちらです。Eye-Fi mobi用アプリは別アプリになるのでご注意。

<h2>Flash Airの接続方法</h2>
間を繋ぐという意味では、Eye-FiもFlash Airも同じなんですが、その繋ぎ方と使い勝手はかなり異なります。
Flash Airカード自らが無線LANアクセスポイントとなる点では同じですが、Eye-Fiとは違って専用アプリは必要なし。
スマホのブラウザを開き、Flash Air側にアクセスすることで、Flash Air内の写真サムネイル表示ができて、そこから写真をダウンロードできます。
と聞くと、Eye-FiよりもFlash Airの方が手軽そうでいいと思いますよね？
私もそう思ってFlash Airに浮気した口なんですが…　この<strong>「スマホのブラウザを開いてサムネイル表示から写真をダウンロード」という手間が、想像してたよりはるかに面倒くさいんです</strong>。
Eye-Fiなら、接続してアプリ起動すれば勝手に写真が転送されてきたのが、Flash Airだとブラウザ開いてちまちまとサムネイルを長押しタップして「写真を保存しますか？はい or いいえ」を選択して…　って、<strong>やってられん！</strong>
何より、Flash Airはイマイチ安定性に欠けていて、ブラウザ経由でサムネイル表示できずにいきなり切断されてしまうこともしばしば。
あまり真面目に原因を追ってませんが…　多分、SDカードに無線アクセスした際のFlash Air側の消費電力が大きすぎて不安定なのかな？と想像しています。
スマホからFlash Airにブラウザ経由でアクセスできるってことは、Flash Air内部ではWebサーバ（Apacheよりは軽いヤツだろうけど…）が稼働してるってことだもんなぁ…。
<h1>まとめ</h1>
結局、Flash Airをディスる感じになってしまいましたが、<a href="https://flashair-developers.com/ja/documents/api/">APIを公開していたり、それを使ったハッカソンを開催したりと</a>、Makers寄りな利点盛りだくさんなので、そういうのに興味ある人は使ってみると面白いかも。
普段使いには断然Eye-Fiをお勧めします。やっぱ自動転送は捨てがたい機能　というより、既に離れられません。
試しにおひとつどうぞ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1550</wp:post_id>
		<wp:post_date><![CDATA[2016-06-25 23:11:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-25 14:11:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[eye-fi-to-smartphone]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e3%82%ac%e3%82%b8%e3%82%a7%e3%83%83%e3%83%88"><![CDATA[ガジェット]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="xie-zhen"><![CDATA[写真]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/31RRLUHwKcL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>Eye-Fi Pro X2 8GB を使い続けて早４年。</p>

<p>新型のMobiが発売されている今、旧型のX2を使っている人は稀かもしれませんが・・・　買い換えの必要性を感じないくらい必要十分な機能を備えていたので、多分中身のNANDが逝くか、転送用のiPhoneアプリが廃盤になるまで使い続けると思います。それくらい便利。</p>

<h1 id="eyefi">そもそもEye-Fiとは？</h1>

<p>Wikipediaとかで調べればいくらでも情報出てくるので、<del>手を抜いて</del>簡単に。</p>

<p>無線LANアクセスポイント機能を備えたSDカードのことです。</p>

<p>Pro X2は、今や中古でしか入手できないのかも。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00A2DEPQK%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/31RRLUHwKcL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00A2DEPQK%2Fref%3Dnosim" target="_blank" >Eye-Fi</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Eye-Fi Japan 2012-11-14    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DEye-Fi%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FEye-Fi%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>Mobiは使ったことないんですが、大体似たようなもんです。</p>

<p>Eye-Fi専用のクラウドに写真を自動同期する機能があるそうですが、どうせ無料枠のクラウドストレージ容量は大したコトないと思うので、あまり興味なし。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00D41F9TO%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41SVj-5GG9L._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00D41F9TO%2Fref%3Dnosim" target="_blank" >Eye-Fi Mobi</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Eye-Fi Japan 2013-06-14    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DEye-Fi%2520Mobi%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FEye-Fi%2520Mobi%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>ちなみに、後発のFlash Airとは似て非なる製品です。詳細は後ほど。</p>

<h1 id="eyefi">Eye-Fiで何ができるの？</h1>

<p>できることは、とてもシンプルです。</p>

<p><strong>無線LAN経由で、写真や動画をスマホやパソコンに転送することができる。</strong></p>

<p>それだけ。でもこれが結構重要。</p>

<p>スマホのカメラにも、光学ズーム機能や手振れ補正機能まで備わって、一昔前では考えられないくらい綺麗な写真が撮れますよね。</p>

<p>でも、専用のカメラ、特にデジタル一眼には、画質やズーム倍率などで敵うはずがない　というより、<strong>役割分担すべき</strong>と思っています。</p>

<p>ちゃんと撮りたい写真はデジタル一眼で撮影した後、スマホで軽く加工してSNSでシェアする、といった具合に。</p>

<p>この、カメラとスマホの間を繋いでくれるのがEye-Fiなのです。</p>

<h2 id="eyefi">Eye-Fiの接続方法</h2>

<p>Eye-Fiカード自らが無線LANアクセスポイントとなるので、スマホからアクセスポイントに接続した上で、スマホにインストールした専用アプリを起動すると、自動的に無線経由でSDカードから写真が転送される、といった流れになります。転送する写真は事前にカメラ側で選んで、写真をロックする必要があります。</p>

<p>とはいえ、デジカメで撮った写真は大概その場で確認するので、お気に入りの写真にロックボタン押しとけばいいだけです。</p>

<p>接続してアプリ起動で勝手にスマホに転送される、この手軽さがとてもいいんですよね。</p>

<p>転送された後は、スマホ標準の写真閲覧アプリでの簡易編集も、Instagramによる加工も、その他画像編集アプリ</p>

<p>で、その専用アプリはこちらです。Eye-Fi mobi用アプリは別アプリになるのでご注意。</p>

<iframe src="http://widgets.itunes.apple.com/widget.html?c=jp&brc=FFFFFF&blc=FFFFFF&trc=FFFFFF&tlc=FFFFFF&d=&t=&m=software&e=software&w=250&h=300&ids=306011124&wt=discovery&partnerId=&affiliate_id=&at=&ct=" frameborder=0 style="overflow-x:hidden;overflow-y:hidden;width:250px;height: 300px;border:0px"></iframe>

<h2 id="flashair">Flash Airの接続方法</h2>

<p>間を繋ぐという意味では、Eye-FiもFlash Airも同じなんですが、その繋ぎ方と使い勝手はかなり異なります。</p>

<p>Flash Airカード自らが無線LANアクセスポイントとなる点では同じですが、Eye-Fiとは違って専用アプリは必要なし。</p>

<p>スマホのブラウザを開き、Flash Air側にアクセスすることで、Flash Air内の写真サムネイル表示ができて、そこから写真をダウンロードできます。<
/p>

<p>と聞くと、Eye-FiよりもFlash Airの方が手軽そうでいいと思いますよね？</p>

<p>私もそう思ってFlash Airに浮気した口なんですが…　この<strong>「スマホのブラウザを開いてサムネイル表示から写真をダウンロード」という手間が、想像してたよりはるかに面倒くさいんです</strong>。</p>

<p>Eye-Fiなら、接続してアプリ起動すれば勝手に写真が転送されてきたのが、Flash Airだとブラウザ開いてちまちまとサムネイルを長押しタップして「写真を保存しますか？はい or いいえ」を選択して…　って、<strong>やってられん！</strong></p>

<p>何より、Flash Airはイマイチ安定性に欠けていて、ブラウザ経由でサムネイル表示できずにいきなり切断されてしまうこともしばしば。</p>

<p>あまり真面目に原因を追ってませんが…　多分、SDカードに無線アクセスした際のFlash Air側の消費電力が大きすぎて不安定なのかな？と想像しています。</p>

<p>スマホからFlash Airにブラウザ経由でアクセスできるってことは、Flash Air内部ではWebサーバ（Apacheよりは軽いヤツだろうけど…）が稼働してるってことだもんなぁ…。</p>

<h1 id="">まとめ</h1>

<p>結局、Flash Airをディスる感じになってしまいましたが、<a href="https://flashair-developers.com/ja/documents/api/">APIを公開していたり、それを使ったハッカソンを開催したりと</a>、Makers寄りな利点盛りだくさんなので、そういうのに興味ある人は使ってみると面白いかも。</p>

<p>普段使いには断然Eye-Fiをお勧めします。やっぱ自動転送は捨てがたい機能　というより、既に離れられません。</p>

<p>試しにおひとつどうぞ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1551]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6106006809]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533643]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>今週も頑張って、元気に実をつけてくれた野菜たち。</title>
		<link>https://tech.blog.uribou.me/jin-zhou-mowan-zhang-tute-yuan-qi-nishi-wotuketekuretaye-cai-tati/</link>
		<pubDate>Sun, 26 Jun 2016 02:20:28 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/jin-zhou-mowan-zhang-tute-yuan-qi-nishi-wotuketekuretaye-cai-tati/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
毎度お世話になっております、<strong><a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a></strong>で収穫祭です。
梅雨に入りながらも、１〜２日おきに晴れてくれるものだから、１週間で雑草も生い茂り、野菜たちも実が熟してしまい、嬉しい悲鳴があがります。ひー。
「今日、畑いく？」と問いかけると、迷わず「うん！」と答える３歳児。いい傾向です。
今年２本目のナス。美しくて食べるのがもったいないくらい。
<img src="https://farm8.staticflickr.com/7363/27302931913_fcc3cfe563_z_d.jpg" alt="きれいなナス" />
３歳児は食べてくれませんが、収穫するのは好きなようで。
<img src="https://farm8.staticflickr.com/7228/27302939113_91a8dc90f7_z_d.jpg" alt="自ら収穫。食べないけど。" />
一生懸命引き抜いたジャガイモが、ちっこいやつ１個だけだったという悲しみの図。
<img src="https://farm8.staticflickr.com/7360/27302947503_aae70f266b_z_d.jpg" alt="一生懸命引き抜いたジャガイモ…" />
土を掘り起こして、隠れていた大粒を発見！
<img src="https://farm8.staticflickr.com/7233/27881535806_f5ba4636ea_z_d.jpg" alt="土に隠れてたのを発見！" />
ご満悦の表情がたまらないw
<img src="https://farm8.staticflickr.com/7387/27916047985_186fd94146_z_d.jpg" alt="誇らしげ" />
本日の成果は以下のとおり。
<table border="3">
<tr>
<th bgcolor="#F5A9E1">品種</th>
<th bgcolor="#F5A9E1">大きさ</th>
<th bgcolor="#F5A9E1">個数</th>
</tr>
<tr>
<td>ジャガイモ</td>
<td>大きめ</td>
<td>７個</td>
</tr>
<tr>
<td>ジャガイモ</td>
<td>小ぶり</td>
<td>３個</td>
</tr>
<tr>
<td>ナス</td>
<td>ほどほど</td>
<td>２本</td>
</tr>
<tr>
<td>ミニトマト</td>
<td>ほどほど</td>
<td>１２個</td>
</tr>
</table>
<br />
さらに、ざっと見ただけでも小さなナスの実と花が１０個程度と、緑色のミニトマトが２０〜３０個。来週末も楽しみだ…。
以上、収穫報告日記でした。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1552</wp:post_id>
		<wp:post_date><![CDATA[2016-06-26 11:20:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-26 02:20:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jin-zhou-mowan-zhang-tute-yuan-qi-nishi-wotuketekuretaye-cai-tati]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7363/27302931913_fcc3cfe563_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
毎度お世話になっております、<strong><a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a></strong>で収穫祭です。</p>

<p>梅雨に入りながらも、１〜２日おきに晴れてくれるものだから、１週間で雑草も生い茂り、野菜たちも実が熟してしまい、嬉しい悲鳴があがります。ひー。</p>

<p>「今日、畑いく？」と問いかけると、迷わず「うん！」と答える３歳児。いい傾向です。</p>

<p>今年２本目のナス。美しくて食べるのがもったいないくらい。</p>

<p><img src="https://farm8.staticflickr.com/7363/27302931913_fcc3cfe563_z_d.jpg" alt="きれいなナス" /></p>

<p>３歳児は食べてくれませんが、収穫するのは好きなようで。</p>

<p><img src="https://farm8.staticflickr.com/7228/27302939113_91a8dc90f7_z_d.jpg" alt="自ら収穫。食べないけど。" /></p>

<p>一生懸命引き抜いたジャガイモが、ちっこいやつ１個だけだったという悲しみの図。</p>

<p><img src="https://farm8.staticflickr.com/7360/27302947503_aae70f266b_z_d.jpg" alt="一生懸命引き抜いたジャガイモ…" /></p>

<p>土を掘り起こして、隠れていた大粒を発見！</p>

<p><img src="https://farm8.staticflickr.com/7233/27881535806_f5ba4636ea_z_d.jpg" alt="土に隠れてたのを発見！" /></p>

<p>ご満悦の表情がたまらないw</p>

<p><img src="https://farm8.staticflickr.com/7387/27916047985_186fd94146_z_d.jpg" alt="誇らしげ" /></p>

<p>本日の成果は以下のとおり。</p>

<table border=3>  
<tr>  
<th bgcolor="#F5A9E1">品種</th>  
<th bgcolor="#F5A9E1">大きさ</th>  
<th bgcolor="#F5A9E1">個数</th>  
</tr>  
<tr>  
<td>ジャガイモ</td>  
<td>大きめ</td>  
<td>７個</td>  
</tr>  
<tr>  
<td>ジャガイモ</td>  
<td>小ぶり</td>  
<td>３個</td>  
</tr>  
<tr>  
<td>ナス</td>  
<td>ほどほど</td>  
<td>２本</td>  
</tr>  
<tr>  
<td>ミニトマト</td>  
<td>ほどほど</td>  
<td>１２個</td>  
</tr>  
</table>  

<p><br></p>

<p>さらに、ざっと見ただけでも小さなナスの実と花が１０個程度と、緑色のミニトマトが２０〜３０個。来週末も楽しみだ…。</p>

<p>以上、収穫報告日記でした。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1553]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6439779112]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634493]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>223</wp:comment_id>
			<wp:comment_author><![CDATA[binance us registrace]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[46922055@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/cs/register?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.186]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-17 06:03:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-16 21:03:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>機械学習って面白い。Pythonを使ってデータを分類、可視化してみた。</title>
		<link>https://tech.blog.uribou.me/interesting-machine-learning-with-python/</link>
		<pubDate>Fri, 01 Jul 2016 13:39:20 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/interesting-machine-learning-with-python/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
<a href="https://www.udemy.com/python-jp/learn/v4/t/lecture/4463550">実践Pythonデータサイエンスのレクチャー86 決定木とランダムフォレスト</a>、やっっっと最終章に辿り着きました。
まぁ、理解しきれてないけど… 長かった。
この最終章、visualize_tree()という独自関数を使ってランダムフォレスト分類器による分類結果を二次元マップとして描いて可視化するんですが、パッと見、よく分からないんです。
理解した気になった<a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy/">meshgrid()関数</a>のことを、実際は理解できていなかったことも要因かな…。
復習を兼ねてvisualize_tree()関数を紐解いてみたら、その過程がとても楽しかったので、簡単に紹介します。
<h1>やりたいこと</h1>
機械学習の教師用データを自分で作り、それを学習したモデルを作って、未知のデータを網羅的に与えた結果を図示して楽しむのが、ここでの目的です。
機械学習って、本来はもっと高尚な目的があって分析すると思うんですが、ここではその辺りは無視します。
<h1>可視化までの流れ概略</h1>
教師用データを単純に描画するとこうなって、
<img src="https://farm8.staticflickr.com/7589/27310110823_3bb7430206_o_d.png" alt="" />
教師用データの最大最小範囲に収まる領域を満遍なく予測するため、青い点で示した座標値を作り、
<img src="https://farm8.staticflickr.com/7675/27862345541_548c9dbeb9_o_d.png" alt="" />
それを分類モデルに与えて、結果を色付けして重ねてやると、こうなる。これは面白い。
<img src="https://farm8.staticflickr.com/7620/27862371171_39429ba13c_o_d.png" alt="" />
<h1>可視化までの流れ詳細</h1>
では、実際にコードを書いて備忘録を作っていきます。
<h2>教師となるデータを作る</h2>
まずはsklearn.datasets.make_blobs関数を使って、教師データを作ります。
<pre><code class="python">import numpy as np
import pandas as pd
from pandas import DataFrame, Series
from sklearn.datasets import make_blobs
import seaborn as sns
X, y = make_blobs(
    n_samples=1000,  # サンプル数
    n_features=2,    # 各サンプルの説明変数の数
    centers=4,       # 離散データのグループ数
    cluster_std=1.5, # 離散データのバラけ具合
    random_state=4)  # 呼ぶたびにseedを変えずに固定
</code></pre>
すると、各々のXに対する目的変数yが得られるようなデータが生成されます。
ちょっと中身を確認。
<pre><code class="python">In[242]:len(X), len(y)
Out[242]:1000, 1000
In[243]:X
Out[243]:array([[  8.34658867, -10.31879835],
       [  8.53921758,   5.79103131],
       [  9.28263663,   4.70668557],
       ...,
       [  9.98784011,  -8.66323273],
       [  9.7863086 ,  -0.49802022],
       [  8.5105375 ,   1.74524764]])
In[244]:y
Out[244]:array([3, 1, 1, 3, 1, 3, 1, 1, 0, 1, 1, 2, 1, 2, 0, 0, 1, 2, 3, 1, 1, 2, 3,
       1, 2, 1, 0, 1, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 2, 2, 0, 2, 3, 1, 2, 0,...
</code></pre>
X[:,0]を横軸、X[:,1]を縦軸にして、yで色分けしつつ散布図にプロットすると、データの傾向がわかります。
make_blobsに与える引数cluster_stdやcentersを変えてみて、散布図がどう変化するか試すのも面白いです。
<pre><code class="python">df = pd.concat(
    [
        DataFrame(X, columns=["X0","X1"]),
        DataFrame(y, columns=["target",])
    ], axis=1)
sns.lmplot("X0","X1",data=df,hue="target",fit_reg=False)
</code></pre>
<img src="https://farm8.staticflickr.com/7589/27310110823_3bb7430206_o_d.png" alt="" />
<h2>教師データの最大最小範囲を網羅したデータを作る</h2>
さっき作ったのは教師データなので、機械学習モデルが正解パターンとして使うものでした。
今度は実際に分類したいデータを作ります。
教師データの最大最小に収まる範囲内を満遍なく分類したいので、下図の青い点のような座標値を作ります。
もっと細かく分割してもいいんですけど、散布図が見やすいようにこれくらいで。
<img src="https://farm8.staticflickr.com/7675/27862345541_548c9dbeb9_o_d.png" alt="" />
まずは、教師用データのXの0番目要素全て（散布図の横軸）と1番目要素全て（散布図の縦軸）を取り出して、最大最小を割り出します。
要するに、上の図の青い点の四辺ですね。
<pre><code class="python">x0_lim = X[:,0].min(), X[:,0].max()
x1_lim = X[:,1].min(), X[:,1].max()
</code></pre>
縦横それぞれ20分割して、meshgrid関数に渡します。
<pre><code class="python">x0, x1 = np.meshgrid(
    np.linspace(*x0_lim, 20),
    np.linspace(*x1_lim, 20))
</code></pre>
meshgridの戻り値を見てみると分かりますが、
<pre><code class="python">In [79]: x0_lim
Out[79]: (0.45642813876023558, 13.585891473268598)
In[244]:x0.shape
Out[244]:(20, 20)
In[245]:x0
Out[245]:
array([[0.45642814, 1.14745252, ..., 13.58589147],
       [0.45642814, 1.14745252, ..., 13.58589147],
       ...,
       [0.45642814, 1.14745252, ..., 13.58589147]])
In [81]: x1_lim
Out[81]: (-13.62745125180961, 7.6188184836933468)
In[246]:x1.shape
Out[246]:(20, 20)
In[247]:x1
Out[247]:
array([[-13.62745125, -13.62745125, ..., -13.62745125],
       [-12.50922653, -12.50922653, ..., -12.50922653],
       ...,
       [7.61881848, 7.61881848, ..., 7.61881848]])
</code></pre>
x0の各成分を横軸座標、x1の各成分を縦軸座標とした配列、つまり以下のようなデータを作ってやれば、上の図の青い点の座標になります。
<pre><code class="python">array([[(0.45642814, -13.62745125), (1.14745252, -13.62745125), ..., (13.58589147, -13.62745125)],
       [(0.45642814, -12.50922653), (1.14745252, -12.50922653), ..., (13.58589147 -12.50922653),],
       ...,
       [(0.45642814, 7.61881848), (1.14745252, 7.61881848), ..., (13.58589147, 7.61881848)]])
</code></pre>
これを作るため、まずはnp.ndarrayのravelメソッドを使い、x0とx1それぞれの配列内の全要素をフラットに並べてしまいます。
<pre><code class="python">In[85]:x0_ = x0.ravel()
In[86]:x1_ = x1.ravel()
In [87]: len(x0_)
Out[87]: 400
In [88]: x0_
Out[88]:
array([ 0.45642814,  1.14745252,  1.83847691,  2.5295013 ,  3.22052568,  3.91155007,  4.60257445,  5.29359884,  5.98462323,  6.67564761, ... ,  13.58589147,  0.45642814, 1.14745252,  ...
</code></pre>
x0_を横軸成分、x1_を縦軸成分とした座標となるような配列にしてやれば、
<pre><code class="python">x01 = np.c_[x0_, x1_]
</code></pre>
散布図の縦横20分割、計400座標の配列が出来上がり。
<pre><code class="python">In[245]:x01.shape
Out[245]:(400, 2)
In[246]:x01
Out[246]:
array([[  0.45642814, -13.62745125],
       [  1.14745252, -13.62745125],
       [  1.83847691, -13.62745125],
       [  2.5295013 , -13.62745125],
       [  3.22052568, -13.62745125],
       [  3.91155007, -13.62745125],
       [  4.60257445, -13.62745125],
       [  5.29359884, -13.62745125],
       [  5.98462323, -13.62745125],
       [  6.67564761, -13.62745125],
       ...
       [  7.366672  ,   7.61881848],
       [  8.05769639,   7.61881848],
       [  8.74872077,   7.61881848],
       [  9.43974516,   7.61881848],
       [ 10.13076954,   7.61881848],
       [ 10.82179393,   7.61881848],
       [ 11.51281832,   7.61881848],
       [ 12.2038427 ,   7.61881848],
       [ 12.89486709,   7.61881848],
       [ 13.58589147,   7.61881848]])
</code></pre>
以下のようにすると、x0_lim, x1_lim, x01の関係性が分かりますね。
<pre><code class="python">In [53]: x01[:,0].min(), x01[:,0].max()
Out[53]: (0.45642813876023558, 13.585891473268598)
In [55]: x0_lim
Out[55]: (0.45642813876023558, 13.585891473268598)
In [60]: x0_lim == (x01[:,0].min(), x01[:,0].max())
Out[60]: True
In [54]: x01[:,1].min(), x01[:,1].max()
Out[54]: (-13.62745125180961, 7.6188184836933468)
In [56]: x1_lim
Out[56]: (-13.62745125180961, 7.6188184836933468)
In [61]: x1_lim == (x01[:,1].min(), x01[:,1].max())
Out[61]: True
</code></pre>
x01をプロットするとこうなります。
<pre><code class="python">sns.plt.scatter(x01[:,0], x01[:,1])
</code></pre>
<img src="https://farm8.staticflickr.com/7451/27984727166_b66a6b83ee_z_d.jpg" alt="" />
<h2>分類する</h2>
学習自体は、scikit-learn提供のクラスに教師となるデータを与えてオブジェクト生成するだけなので、とても簡単。
<pre><code class="python">from sklearn.cross_validation import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier
# 分類にはランダムフォレストを使ってみる
model = RandomForestClassifier(n_estimators=100, random_state=0)
# 学習する
model.fit(X, y)
# 予測する
Z = model.predict(x01).reshape(x0.shape)
</code></pre>
分類した結果を出力してみると…　make_blobsに与えたcentersパラメータが目的変数として、見事に0-3の間で分類されてますね。
<pre><code class="python">In[245]:Z
Out[245]:
array([[2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0],
       [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])
</code></pre>
make_blobsで作った教師データと予測結果を重ねて表示してみると、
<pre><code class="python">sns.lmplot("X0", "X1", data=df, hue="target", fit_reg=False)
sns.plt.pcolormesh(x0, x1, Z, alpha=0.1, cmap="jet")
sns.plt.show()
</code></pre>
こうなります。
<img src="https://farm8.staticflickr.com/7620/27862371171_39429ba13c_o_d.png" alt="" />
<h1>まとめ</h1>
端的に言うと、<strong>見た目も大事</strong>。
見る人の興味を引くような美しさが、可視化したデータには必要なんだなと。
データサイエンスやマイニングを仕事にする人って、統計学やプログラミングの知識（他にもあるけど）だけでなく、こういった美的センスというか、ある意味芸術に近い領域の知識も必要そうと感じた次第です。
とりあえず美的センスは置いといて、データサイエンス勉強会で紹介してもらった統計お勧め本は読んでおかねば。アマゾンレビューでも評価が高いので、まずはこの辺りを立ち読みしてから攻めよう。
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4774142700%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51IGp9WyDyL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4774142700%2Fref%3Dnosim" target="_blank" rel="noopener">統計解析がわかる (ファーストブック)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">涌井 貞美,涌井 良幸 技術評論社 2010-07-10    </div><div class="booklink-link2" style="margin-top:10px">                                                         </div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F481634957X%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51SBnoVntOL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F481634957X%2Fref%3Dnosim" target="_blank" rel="noopener">史上最強 図解　これならわかる!統計学</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">涌井 良幸,涌井 貞美 ナツメ社 2010-10-08    </div><div class="booklink-link2" style="margin-top:10px">                                                          </div></div><div class="booklink-footer" style="clear: left"></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1554</wp:post_id>
		<wp:post_date><![CDATA[2016-07-01 22:39:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-01 13:39:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[interesting-machine-learning-with-python]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7589/27310110823_3bb7430206_o_d.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
<a href="https://www.udemy.com/python-jp/learn/v4/t/lecture/4463550">実践Pythonデータサイエンスのレクチャー86 決定木とランダムフォレスト</a>、やっっっと最終章に辿り着きました。</p>

<p>まぁ、理解しきれてないけど… 長かった。</p>

<p>この最終章、visualize_tree()という独自関数を使ってランダムフォレスト分類器による分類結果を二次元マップとして描いて可視化するんですが、パッと見、よく分からないんです。</p>

<p>理解した気になった<a href="http://blog.rinka-blossom.com/shi-jian-python-detasaiensuudemy/">meshgrid()関数</a>のことを、実際は理解できていなかったことも要因かな…。</p>

<p>復習を兼ねてvisualize_tree()関数を紐解いてみたら、その過程がとても楽しかったので、簡単に紹介します。</p>

<h1 id="">やりたいこと</h1>

<p>機械学習の教師用データを自分で作り、それを学習したモデルを作って、未知のデータを網羅的に与えた結果を図示して楽しむのが、ここでの目的です。</p>

<p>機械学習って、本来はもっと高尚な目的があって分析すると思うんですが、ここではその辺りは無視します。</p>

<h1 id="">可視化までの流れ概略</h1>

<p>教師用データを単純に描画するとこうなって、</p>

<p><img src="https://farm8.staticflickr.com/7589/27310110823_3bb7430206_o_d.png" alt="" /></p>

<p>教師用データの最大最小範囲に収まる領域を満遍なく予測するため、青い点で示した座標値を作り、</p>

<p><img src="https://farm8.staticflickr.com/7675/27862345541_548c9dbeb9_o_d.png" alt="" /></p>

<p>それを分類モデルに与えて、結果を色付けして重ねてやると、こうなる。これは面白い。</p>

<p><img src="https://farm8.staticflickr.com/7620/27862371171_39429ba13c_o_d.png" alt="" /></p>

<h1 id="">可視化までの流れ詳細</h1>

<p>では、実際にコードを書いて備忘録を作っていきます。</p>

<h2 id="">教師となるデータを作る</h2>

<p>まずはsklearn.datasets.make_blobs関数を使って、教師データを作ります。</p>

<pre><code class="language-python">import numpy as np  
import pandas as pd  
from pandas import DataFrame, Series  
from sklearn.datasets import make_blobs  
import seaborn as sns

X, y = make_blobs(  
    n_samples=1000,  # サンプル数
    n_features=2,    # 各サンプルの説明変数の数
    centers=4,       # 離散データのグループ数
    cluster_std=1.5, # 離散データのバラけ具合
    random_state=4)  # 呼ぶたびにseedを変えずに固定
</code></pre>

<p>すると、各々のXに対する目的変数yが得られるようなデータが生成されます。</p>

<p>ちょっと中身を確認。</p>

<pre><code class="language-python">In[242]:len(X), len(y)  
Out[242]:1000, 1000

In[243]:X  
Out[243]:array([[  8.34658867, -10.31879835],  
       [  8.53921758,   5.79103131],
       [  9.28263663,   4.70668557],
       ..., 
       [  9.98784011,  -8.66323273],
       [  9.7863086 ,  -0.49802022],
       [  8.5105375 ,   1.74524764]])

In[244]:y  
Out[244]:array([3, 1, 1, 3, 1, 3, 1, 1, 0, 1, 1, 2, 1, 2, 0, 0, 1, 2, 3, 1, 1, 2, 3,  
       1, 2, 1, 0, 1, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 2, 2, 0, 2, 3, 1, 2, 0,...
</code></pre>

<p>X[:,0]を横軸、X[:,1]を縦軸にして、yで色分けしつつ散布図にプロットすると、データの傾向がわかります。</p>

<p>make<em>blobsに与える引数cluster</em>stdやcentersを変えてみて、散布図がどう変化するか試すのも面白いです。</p>

<pre><code class="language-python">df = pd.concat(  
    [
        DataFrame(X, columns=["X0","X1"]),
        DataFrame(y, columns=["target",])
    ], axis=1)

sns.lmplot("X0","X1",data=df,hue="target",fit_reg=False)  
</code></pre>

<p><img src="https://farm8.staticflickr.com/7589/27310110823_3bb7430206_o_d.png" alt="" /></p>

<h2 id="">教師データの最大最小範囲を網羅したデータを作る</h2>

<p>さっき作ったのは教師データなので、機械学習モデルが正解パターンとして使うものでした。</p>

<p>今度は実際に分類したいデータを作ります。</p>

<p>教師データの最大最小に収まる範囲内を満遍なく分類したいので、下図の青い点のような座標値を作ります。</p>

<p>もっと細かく分割してもいいんですけど、散布図が見やすいようにこれくらいで。</p>

<p><img src="https://farm8.staticflickr.com/7675/27862345541_548c9dbeb9_o_d.png" alt="" /></p>

<p>まずは、教師用データのXの0番目要素全て（散布図の横軸）と1番目要素全て（散布図の縦軸）を取り出して、最大最小を割り出します。</p>

<p>要するに、上の図の青い点の四辺ですね。</p>

<pre><code class="language-python">x0_lim = X[:,0].min(), X[:,0].max()  
x1_lim = X[:,1].min(), X[:,1].max()  
</code></pre>

<p>縦横それぞれ20分割して、meshgrid関数に渡します。</p>

<pre><code class="language-python">x0, x1 = np.meshgrid(  
    np.linspace(*x0_lim, 20),
    np.linspace(*x1_lim, 20))
</code></pre>

<p>meshgridの戻り値を見てみると分かりますが、</p>

<pre><code class="language-python">In [79]: x0_lim  
Out[79]: (0.45642813876023558, 13.585891473268598)

In[244]:x0.shape  
Out[244]:(20, 20)

In[245]:x0  
Out[245]:  
array([[0.45642814, 1.14745252, ..., 13.58589147],  
       [0.45642814, 1.14745252, ..., 13.58589147],
       ...,
       [0.45642814, 1.14745252, ..., 13.58589147]])

In [81]: x1_lim  
Out[81]: (-13.62745125180961, 7.6188184836933468)

In[246]:x1.shape  
Out[246]:(20, 20)

In[247]:x1  
Out[247]:  
array([[-13.62745125, -13.62745125, ..., -13.62745125],  
       [-12.50922653, -12.50922653, ..., -12.50922653],
       ...,
       [7.61881848, 7.61881848, ..., 7.61881848]])
</code></pre>

<p>x0の各成分を横軸座標、x1の各成分を縦軸座標とした配列、つまり以下のようなデータを作ってやれば、上の図の青い点の座標になります。</p>

<pre><code class="language-python">array([[(0.45642814, -13.62745125), (1.14745252, -13.62745125), ..., (13.58589147, -13.62745125)],  
       [(0.45642814, -12.50922653), (1.14745252, -12.50922653), ..., (13.58589147 -12.50922653),],
       ...,
       [(0.45642814, 7.61881848), (1.14745252, 7.61881848), ..., (13.58589147, 7.61881848)]])
</code></pre>

<p>これを作るため、まずはnp.ndarrayのravelメソッドを使い、x0とx1それぞれの配列内の全要素をフラットに並べてしまいます。</p>

<pre><code class="language-python">In[85]:x0_ = x0.ravel()  
In[86]:x1_ = x1.ravel()

In [87]: len(x0_)  
Out[87]: 400

In [88]: x0_  
Out[88]:  
array([ 0.45642814,  1.14745252,  1.83847691,  2.5295013 ,  3.22052568,  3.91155007,  4.60257445,  5.29359884,  5.98462323,  6.67564761, ... ,  13.58589147,  0.45642814, 1.14745252,  ...  
</code></pre>

<p>x0<em>を横軸成分、x1</em>を縦軸成分とした座標となるような配列にしてやれば、</p>

<pre><code class="language-python">x01 = np.c_[x0_, x1_]  
</code></pre>

<p>散布図の縦横20分割、計400座標の配列が出来上がり。</p>

<pre><code class="language-python">In[245]:x01.shape  
Out[245]:(400, 2)  
In[246]:x01  
Out[246]:  
array([[  0.45642814, -13.62745125],  
       [  1.14745252, -13.62745125],
       [  1.83847691, -13.62745125],
       [  2.5295013 , -13.62745125],
       [  3.22052568, -13.62745125],
       [  3.91155007, -13.62745125],
       [  4.60257445, -13.62745125],
       [  5.29359884, -13.62745125],
       [  5.98462323, -13.62745125],
       [  6.67564761, -13.62745125],
       ...
       [  7.366672  ,   7.61881848],
       [  8.05769639,   7.61881848],
       [  8.74872077,   7.61881848],
       [  9.43974516,   7.61881848],
       [ 10.13076954,   7.61881848],
       [ 10.82179393,   7.61881848],
       [ 11.51281832,   7.618
81848],
       [ 12.2038427 ,   7.61881848],
       [ 12.89486709,   7.61881848],
       [ 13.58589147,   7.61881848]])
</code></pre>

<p>以下のようにすると、x0<em>lim, x1</em>lim, x01の関係性が分かりますね。</p>

<pre><code class="language-python">In [53]: x01[:,0].min(), x01[:,0].max()  
Out[53]: (0.45642813876023558, 13.585891473268598)

In [55]: x0_lim  
Out[55]: (0.45642813876023558, 13.585891473268598)

In [60]: x0_lim == (x01[:,0].min(), x01[:,0].max())  
Out[60]: True

In [54]: x01[:,1].min(), x01[:,1].max()  
Out[54]: (-13.62745125180961, 7.6188184836933468)

In [56]: x1_lim  
Out[56]: (-13.62745125180961, 7.6188184836933468)

In [61]: x1_lim == (x01[:,1].min(), x01[:,1].max())  
Out[61]: True  
</code></pre>

<p>x01をプロットするとこうなります。</p>

<pre><code class="language-python">sns.plt.scatter(x01[:,0], x01[:,1])  
</code></pre>

<p><img src="https://farm8.staticflickr.com/7451/27984727166_b66a6b83ee_z_d.jpg" alt="" /></p>

<h2 id="">分類する</h2>

<p>学習自体は、scikit-learn提供のクラスに教師となるデータを与えてオブジェクト生成するだけなので、とても簡単。</p>

<pre><code class="language-python">from sklearn.cross_validation import train_test_split  
from sklearn.metrics import accuracy_score  
from sklearn.ensemble import RandomForestClassifier

# 分類にはランダムフォレストを使ってみる
model = RandomForestClassifier(n_estimators=100, random_state=0)

# 学習する
model.fit(X, y)

# 予測する
Z = model.predict(x01).reshape(x0.shape)  
</code></pre>

<p>分類した結果を出力してみると…　make_blobsに与えたcentersパラメータが目的変数として、見事に0-3の間で分類されてますね。</p>

<pre><code class="language-python">In[245]:Z  
Out[245]:  
array([[2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],  
       [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0],
       [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])
</code></pre>

<p>make_blobsで作った教師データと予測結果を重ねて表示してみると、</p>

<pre><code class="language-python">sns.lmplot("X0", "X1", data=df, hue="target", fit_reg=False)  
sns.plt.pcolormesh(x0, x1, Z, alpha=0.1, cmap="jet")  
sns.plt.show()  
</code></pre>

<p>こうなります。</p>

<p><img src="https://farm8.staticflickr.com/7620/27862371171_39429ba13c_o_d.png" alt="" /></p>

<h1 id="">まとめ</h1>

<p>端的に言うと、<strong>見た目も大事</strong>。</p>

<p>見る人の興味を引くような美しさが、可視化したデータには必要なんだなと。</p>

<p>データサイエンスやマイニングを仕事にする人って、統計学やプログラミングの知識（他にもあるけど）だけでなく、こういった美的センスというか、ある意味芸術に近い領域の知識も必要そうと感じた次第です。</p>

<p>とりあえず美的センスは置いといて、データサイエンス勉強会で紹介してもらった統計お勧め本は読んでおかねば。アマゾンレビューでも評価が高いので、まずはこの辺りを立ち読みしてから攻めよう。</p>

<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="booklink-image" style="float:left;margin:0 15px 10px 0;"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4774142700%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51IGp9WyDyL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4774142700%2Fref%3Dnosim" target="_blank" >統計解析がわかる (ファーストブック)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px;">涌井 貞美,涌井 良幸 技術評論社 2010-07-10    </div><div class="booklink-link2" style="margin-top:10px;">                                                          </div></div><div class="booklink-footer" style="clear: left"></div></div>

<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="booklink-image" style="float:left;margin:0 15px 10px 0;"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F481634957X%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51SBnoVntOL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F481634957X%2Fref%3Dnosim" target="_blank" >史上最強 図解　これならわかる!統計学</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px;">涌井 良幸,涌井 貞美 ナツメ社 2010-10-08    </div><div class="booklink-link2" style="margin-top:10px;">                                                          </div></div><div class="booklink-footer" style="clear: left"></div></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1555]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941049051]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648890]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>238</wp:comment_id>
			<wp:comment_author><![CDATA[b^onus de registro na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[29606518@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/pt-BR/register-person?ref=IQY5TET4</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.70]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-30 22:48:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-30 13:48:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>299</wp:comment_id>
			<wp:comment_author><![CDATA[Daftar di Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[40010797@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/id/register?ref=RQUR4BEO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-29 18:28:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-29 09:28:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>自治体に売り込もうとしている某社製携帯充電スタンドを見積もってみたら…驚きの結果に。</title>
		<link>https://tech.blog.uribou.me/post-post/</link>
		<pubDate>Mon, 27 Jun 2016 19:04:38 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/post-post/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
とっても高コストな携帯電話充電スタンドを自治体に売り込む某社…。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">粗利どんだけ…？自治体に売るらしいけど、まさか東京都が食いついたりしないよね…。<br /><br />シャープが太陽光で携帯を充電するスタンド発売　自治体に２７０万円で販売 <a href="https://t.co/kyj4B4qvNV">https://t.co/kyj4B4qvNV</a> <a href="https://twitter.com/Sankei_news">@Sankei_news</a>より</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/747601821175185408">2016年6月28日</a></blockquote>

スペックが気になるところだけど、イメージ画像を見た限りでは300W程度の太陽光パネルだろうか。
やはりと言うか… 数々の疑問の声。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">270万でスマホ4台は低スペックだねぇ。<br />シャープが太陽光で携帯を充電するスタンド発売　自治体に２７０万円で販売 - 産経ニュース <a href="https://t.co/GhiXHWfp0n">https://t.co/GhiXHWfp0n</a> <a href="https://twitter.com/Sankei_news">@Sankei_news</a>さんから</p>&mdash; 菜ノ河　唯子 (@YuikoNanokawa) <a href="https://twitter.com/YuikoNanokawa/status/747575551557132289">2016年6月27日</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">シャープ太陽光で携帯を充電するスタンド発売　自治体に２７０万円で販売<a href="https://t.co/PY0tRFSeCI">https://t.co/PY0tRFSeCI</a>昔からココの価格設定はおかしいｗオジサンが持ってるパネルは写真のヤツで6000円、つまりコレを購入する自治体はワイｒ・ <a href="https://t.co/Av44iNg1Jc">pic.twitter.com/Av44iNg1Jc</a></p>&mdash; ケリーキング@Eanna鯖西 (@kerry7018) <a href="https://twitter.com/kerry7018/status/747585510890045440">2016年6月28日</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">シャープ、太陽光で4台同時にスマホを充電するスタンド発売　価格は２７０万円:痛いニュース(ﾉ∀`) <a href="https://t.co/M7WMsI3o7q">https://t.co/M7WMsI3o7q</a> 論点ずれてる奴大杉だけど確かに270万は無いな。</p>&mdash; 雅趣@7.3横浜アリーナ (@gushnine) <a href="https://twitter.com/gushnine/status/747580750317248512">2016年6月28日</a></blockquote>

でも実際、いくらで作れるものなのか？
ざっくり見積もってみると、まあ予想通りの結果に。
<h2>発電量全て漏らさず蓄電すると仮定した場合</h2>
1日6時間フルに発電できたとして、2.4kWh/日。
それを全部ため込むなら、YUASA製のPWL12V38Ahを新品で揃えたとしても、2.4kWh / (12V x 38Ah) = 5個、放電深度50%としたら10個必要か。
楽天でみたら1個7万円なので10個で70万円、エムソーラーさんなら327W太陽光パネルが6万円、チャージコントローラをMPPTでそれなりの物を用意したら10万円。
計86万円。
これにスタンドや蓄電池を地中に埋設する諸費用入れたら、100万円程度かな。
<h2>最大使用量を想定する場合</h2>
売り文句としては「携帯４台を充電」としか記載していないので、何とも言えないなぁ…。
仮にiPhoneを4台、1時間を12回（計12時間）、ゼロからフル充電すると仮定する。
1500mAh x 5V x 4台 x 12 = 360Wh
放電深度を考慮しても、最もコスト高な蓄電池が、PWL12V38Ah二個で済んでしまう…。
24時間稼働を想定しても四個か…。
計44万円。
スタンド等諸費用を14万円と仮定したので、58万円程度ということに。
<h2>まとめ</h2>
270万円はボリすぎでしょう。
引っかからないことを祈ります…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1556</wp:post_id>
		<wp:post_date><![CDATA[2016-06-28 04:04:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-27 19:04:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-post]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
		<category domain="post_tag" nicename="%e9%9b%bb%e6%b0%97"><![CDATA[電気]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
とっても高コストな携帯電話充電スタンドを自治体に売り込む某社…。</p>

<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">粗利どんだけ…？自治体に売るらしいけど、まさか東京都が食いついたりしないよね…。<br><br>シャープが太陽光で携帯を充電するスタンド発売　自治体に２７０万円で販売 <a href="https://t.co/kyj4B4qvNV">https://t.co/kyj4B4qvNV</a> <a href="https://twitter.com/Sankei_news">@Sankei_news</a>より</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/747601821175185408">2016年6月28日</a></blockquote> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>スペックが気になるところだけど、イメージ画像を見た限りでは300W程度の太陽光パネルだろうか。</p>

<p>やはりと言うか… 数々の疑問の声。</p>

<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">270万でスマホ4台は低スペックだねぇ。<br>シャープが太陽光で携帯を充電するスタンド発売　自治体に２７０万円で販売 - 産経ニュース <a href="https://t.co/GhiXHWfp0n">https://t.co/GhiXHWfp0n</a> <a href="https://twitter.com/Sankei_news">@Sankei_news</a>さんから</p>&mdash; 菜ノ河　唯子 (@YuikoNanokawa) <a href="https://twitter.com/YuikoNanokawa/status/747575551557132289">2016年6月27日</a></blockquote> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">シャープ太陽光で携帯を充電するスタンド発売　自治体に２７０万円で販売<a href="https://t.co/PY0tRFSeCI">https://t.co/PY0tRFSeCI</a>昔からココの価格設定はおかしいｗオジサンが持ってるパネルは写真のヤツで6000円、つまりコレを購入する自治体はワイｒ・ <a href="https://t.co/Av44iNg1Jc">pic.twitter.com/Av44iNg1Jc</a></p>&mdash; ケリーキング@Eanna鯖西 (@kerry7018) <a href="https://twitter.com/kerry7018/status/747585510890045440">2016年6月28日</a></blockquote> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">シャープ、太陽光で4台同時にスマホを充電するスタンド発売　価格は２７０万円:痛いニュース(ﾉ∀`) <a href="https://t.co/M7WMsI3o7q">https://t.co/M7WMsI3o7q</a> 論点ずれてる奴大杉だけど確かに270万は無いな。</p>&mdash; 雅趣@7.3横浜アリーナ (@gushnine) <a href="https://twitter.com/gushnine/status/747580750317248512">2016年6月28日</a></blockquote> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>でも実際、いくらで作れるものなのか？</p>

<p>ざっくり見積もってみると、まあ予想通りの結果に。</p>

<h2 id="">発電量全て漏らさず蓄電すると仮定した場合</h2>

<p>1日6時間フルに発電できたとして、2.4kWh/日。</p>

<p>それを全部ため込むなら、YUASA製のPWL12V38Ahを新品で揃えたとしても、2.4kWh / (12V x 38Ah) = 5個、放電深度50%としたら10個必要か。</p>

<p>楽天でみたら1個7万円なので10個で70万円、エムソーラーさんなら327W太陽光パネルが6万円、チャージコントローラをMPPTでそれなりの物を用意したら10万円。</p>

<p>計86万円。</p>

<p>これにスタンドや蓄電池を地中に埋設する諸費用入れたら、100万円程度かな。</p>

<h2 id="">最大使用量を想定する場合</h2>

<p>売り文句としては「携帯４台を充電」としか記載していないので、何とも言えないなぁ…。</p>

<p>仮にiPhoneを4台、1時間を12回（計12時間）、ゼロからフル充電すると仮定する。</p>

<p>1500mAh x 5V x 4台 x 12 = 360Wh</p>

<p>放電深度を考慮しても、最もコスト高な蓄電池が、PWL12V38Ah二個で済んでしまう…。</p>

<p>24時間稼働を想定しても四個か…。</p>

<p>計44万円。</p>

<p>スタンド等諸費用を14万円と仮定したので、58万円程度ということに。</p>

<h2 id="">まとめ</h2>

<p>270万円はボリすぎでしょう。</p>

<p>引っかからないことを祈ります…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5992205575]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648888]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[Учетная запись в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[18117923@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ru-UA/register?ref=RQUR4BEO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.63]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-10 11:03:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-10 02:03:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>232</wp:comment_id>
			<wp:comment_author><![CDATA[Binance美国注册]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[92906164@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/register?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.232]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-20 23:55:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-20 14:55:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>306</wp:comment_id>
			<wp:comment_author><![CDATA[^Inregistrare pe www.binance.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[51316440@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ro/register?ref=S5H7X3LP</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.169]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-08-02 07:19:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-08-01 22:19:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>豊かな生活の裏に隠れた真実。ガーナのアグボグブロシー。</title>
		<link>https://tech.blog.uribou.me/truth_of_ghana_agbogbloshie/</link>
		<pubDate>Wed, 29 Jun 2016 15:58:41 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/truth_of_ghana_agbogbloshie/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
<a href="http://www.ntv.co.jp/gyoten/">ザ・世界仰天ニュース</a>で紹介された、アフリカ、ガーナのアグボグブロシーという町。
ガーナといえばチョコレートという単純なイメージでしたが…
今日この番組を見て、日本人として申し訳なく思います。
前職で家電製品を作っていましたが、半年毎のスパンで新製品を開発、生産、販売して、入れ替え後の製品のリサイクル処理は追いつくのだろうか？　と疑問に思ったことがありました。
<h1>何が起きているのか？</h1>
その疑問に見事に答えてくれた、世界仰天ニュース。
調べてみると、かなり以前から問題になっているんですね。
とてもショッキングな内容でした。
<h2>世界の電子廃棄物の60〜90%が不法に取引されている</h2>
<a href="https://commons.wikimedia.org/wiki/File:Agbogbloshie.JPG"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Agbogbloshie.JPG/640px-Agbogbloshie.JPG" alt="" /></a>
<em>(c)<a href="https://creativecommons.org/publicdomain/zero/1.0/deed.en">Creative Commons CC0 1.0 Universal Public Domain Dedication</a></em>
<em>Description:Ghanaians working in Agbogbloshie, a suburb of Accra, Ghana.</em>
<em>Date:23 March 2011</em>
<em>Author:Marlenenapoli</em>
こちらのレポート、「<a href="http://www.unep.org/newscentre/Default.aspx?DocumentID=26816&amp;ArticleID=35021&amp;l=en">Illegally Traded and Dumped E-Waste Worth up to $19 Billion Annually Poses Risks to Health, Deprives Countries of Resources, Says UNEP report</a>」に記載されている通り、世界の電子廃棄物のほとんどは、先進国から途上国へ違法に輸出されています。
表向きは中古品として。
ところが実際は、中古品として使い物になるのは1割程度で、9割はゴミ同然の状態なんだそうです。
その1割の中古品も、大半が1〜2年で壊れ、ゴミと化します。
そして、<strong>ゴミの輸出元である先進国に、日本も含まれています</strong>。
実際、日本製のテレビやDVDプレイヤー、レコーダ、炊飯器、そしてテレビ等が、ガーナの露店商で売られていました。
正規にリサイクル処理すると経費がかかるところを、途上国へ中古品として輸出することで、逆に利益を得るという構図。
その大量のゴミをガーナで処分しているわけなんですが、その処理方法が大問題。
<h2>ビニール製ケーブル皮膜やプラスチックを燃やして生計を立てる子供たち</h2>
<a href="https://commons.wikimedia.org/wiki/File:Agbogbloshie_q.jpg"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Agbogbloshie_q.jpg/600px-Agbogbloshie_q.jpg" alt="" /></a>
<em>(c)<a href="https://creativecommons.org/licenses/by/2.0/deed.en">Creative Commons Attribution 2.0</a> Generic license.</em>
<em>Description:Agbogbloshie near Accra, Ghana</em>
<em>Date:26. Sept. 2012</em>
<em>Author:Lantus</em>
壊れた電子機器内部やケーブルに含まれる金属を取り出し、集めると、現地のバイヤーが高値で買い取ってくれるそうです。
それによって得られる収入で生計を立てる子供や青年が多くいる。
そんな彼らが金属を得るための方法は、<strong>プラスチックやケーブル皮膜を火で燃やすこと</strong>。
写真を見ても分かると思いますが、ドス黒い煙を出しているのがそれです。
間近で作業する人の健康を損なう上、大気や雨を汚染し、熱した金属を冷やすために川の水も汚染し、更にその水はガーナ湾に流れ込むので、魚介類も汚染します。
現地のガーナ大学研究者がアグボグブロシー周辺の水を調査したところ、基準値の100倍を超える鉛が検出されているそうです。
水も空気も食べ物も汚染された環境で、現地の人々は健康を害しながら暮らしています。
<h2>そこまでして抽出した金属はどこへ行くか</h2>
ガーナの人々が健康を害してまで得た金属は、ガーナ国内で使われることはないそうです。
では、どこへ行くのか…　もう想像つきますよね。
<strong>日本などの先進国へ輸出されます</strong>。
低コストどころか利益を得ながら廃棄物を途上国へ輸出し、現地の若者の健康と自然環境を犠牲にして金属精製させ、おいしいところだけ輸入する。
<a href="http://www.nuketext.org/uranium.html">ウラン残土を弱者に押し付けている現実</a>と、よく似てる。
というより、この類の現実ばかりでウンザリする。
<h1>自分たちは何をすべきか？</h1>
<a href="http://www.unep.org/newscentre/Default.aspx?DocumentID=26816&amp;ArticleID=35021&amp;l=en">レポート</a>にもある通り、電子廃棄物は増え続け、2017年までに5,000万トンに達するとのこと。
そして日本はというと、残念ながら<strong>最大の廃棄物排出国</strong>なんだそうです。
そりゃそうですよね、半年に一回のペースで電化製品モデルチェンジして買い替えを促すんだから…。
我が家は元々新製品に飛びつきにくい体質ですが、更に意識が強まりました。
月並みですが、できる限り廃棄物を出さないよう、今ある物をできる限り長く使いましょう。
壊れたら捨てるのではなく、修理して使いましょう。
新品ではなく中古品を買いましょう。
リサイクルに出したからといって、それが自分の想像通りに適切に処理されるとは限らない、ということを意識しましょう。
ではまた。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1557</wp:post_id>
		<wp:post_date><![CDATA[2016-06-30 00:58:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-29 15:58:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[truth_of_ghana_agbogbloshie]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="gana"><![CDATA[ガーナ]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e3%81%8d%e6%96%b9"><![CDATA[生き方]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%b4%bb"><![CDATA[生活]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:97:"https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Agbogbloshie.JPG/640px-Agbogbloshie.JPG";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
<a href="http://www.ntv.co.jp/gyoten/">ザ・世界仰天ニュース</a>で紹介された、アフリカ、ガーナのアグボグブロシーという町。</p>

<p>ガーナといえばチョコレートという単純なイメージでしたが…</p>

<p>今日この番組を見て、日本人として申し訳なく思います。</p>

<p>前職で家電製品を作っていましたが、半年毎のスパンで新製品を開発、生産、販売して、入れ替え後の製品のリサイクル処理は追いつくのだろうか？　と疑問に思ったことがありました。</p>

<h1 id="">何が起きているのか？</h1>

<p>その疑問に見事に答えてくれた、世界仰天ニュース。</p>

<p>調べてみると、かなり以前から問題になっているんですね。</p>

<p>とてもショッキングな内容でした。</p>

<h2 id="6090">世界の電子廃棄物の60〜90%が不法に取引されている</h2>

<p><a href="https://commons.wikimedia.org/wiki/File:Agbogbloshie.JPG"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Agbogbloshie.JPG/640px-Agbogbloshie.JPG" alt="" title="" /></a>
<em>(c)<a href="https://creativecommons.org/publicdomain/zero/1.0/deed.en">Creative Commons CC0 1.0 Universal Public Domain Dedication</a></em>
<em>Description:Ghanaians working in Agbogbloshie, a suburb of Accra, Ghana.</em>
<em>Date:23 March 2011</em>
<em>Author:Marlenenapoli</em></p>

<p>こちらのレポート、「<a href="http://www.unep.org/newscentre/Default.aspx?DocumentID=26816&amp;ArticleID=35021&amp;l=en">Illegally Traded and Dumped E-Waste Worth up to $19 Billion Annually Poses Risks to Health, Deprives Countries of Resources, Says UNEP report</a>」に記載されている通り、世界の電子廃棄物のほとんどは、先進国から途上国へ違法に輸出されています。</p>

<p>表向きは中古品として。</p>

<p>ところが実際は、中古品として使い物になるのは1割程度で、9割はゴミ同然の状態なんだそうです。</p>

<p>その1割の中古品も、大半が1〜2年で壊れ、ゴミと化します。</p>

<p>そして、<strong>ゴミの輸出元である先進国に、日本も含まれています</strong>。</p>

<p>実際、日本製のテレビやDVDプレイヤー、レコーダ、炊飯器、そしてテレビ等が、ガーナの露店商で売られていました。</p>

<p>正規にリサイクル処理すると経費がかかるところを、途上国へ中古品として輸出することで、逆に利益を得るという構図。</p>

<p>その大量のゴミをガーナで処分しているわけなんですが、その処理方法が大問題。</p>

<h2 id="">ビニール製ケーブル皮膜やプラスチックを燃やして生計を立てる子供たち</h2>

<p><a href="https://commons.wikimedia.org/wiki/File:Agbogbloshie_q.jpg"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Agbogbloshie_q.jpg/600px-Agbogbloshie_q.jpg" alt="" title="" /></a>
<em>(c)<a href="https://creativecommons.org/licenses/by/2.0/deed.en">Creative Commons Attribution 2.0</a> Generic license.</em>
<em>Description:Agbogbloshie near Accra, Ghana</em>
<em>Date:26. Sept. 2012</em>
<em>Author:Lantus</em></p>

<p>壊れた電子機器内部やケーブルに含まれる金属を取り出し、集めると、現地のバイヤーが高値で買い取ってくれるそうです。</p>

<p>それによって得られる収入で生計を立てる子供や青年が多くいる。</p>

<p>そんな彼らが金属を得るための方法は、<strong>プラスチックやケーブル皮膜を火で燃やすこと</strong>。</p>

<p>写真を見ても分かると思いますが、ドス黒い煙を出しているのがそれです。</p>

<p>間近で作業する人の健康を損なう上、大気や雨を汚染し、熱した金属を冷やすために川の水も汚染し、更にその水はガーナ湾に流れ込むので、魚介類も汚染します。</p>

<p>現地のガーナ大学研究者がアグボグブロシー周辺の水を調査したところ、基準値の100倍を超える鉛が検出されているそうです。</p>

<p>水も空気も食べ物も汚染された環境で、現地の人々は健康を害しながら暮らしています。</p>

<h2 id="">そこまでして抽出した金属はどこへ行くか</h2>

<p>ガーナの人々が健康を害してまで得た金属は、ガーナ国内で使われることはないそうです。</p>

<p>では、どこへ行くのか…　もう想像つきますよね。</p>

<p><strong>日本などの先進国へ輸出されます</strong>。</p>

<p>低コストどころか利益を得ながら廃棄物を途上国へ輸出し、現地の若者の健康と自然環境を犠牲にして金属精製させ、おいしいところだけ輸入する。</p>

<p><a href="http://www.nuketext.org/uranium.html">ウラン残土を弱者に押し付けている現実</a>と、よく似てる。</p>

<p>というより、この類の現実ばかりでウンザリする。</p>

<h1 id="">自分たちは何をすべきか？</h1>

<p><a href="http://www.unep.org/newscentre/Default.aspx?DocumentID=26816&amp;ArticleID=35021&amp;l=en">レポート</a>にもある通り、電子廃棄物は増え続け、2017年までに5,000万トンに達するとのこと。</p>

<p>そして日本はというと、残念ながら<strong>最大の廃棄物排出国</strong>なんだそうです。</p>

<p>そりゃそうですよね、半年に一回のペースで電化製品モデルチェンジして買い替えを促すんだから…。</p>

<p>我が家は元々新製品に飛びつきにくい体質ですが、更に意識が強まりました。</p>

<p>月並みですが、できる限り廃棄物を出さないよう、今ある物をできる限り長く使いましょう。</p>

<p>壊れたら捨てるのではなく、修理して使いましょう。</p>

<p>新品ではなく中古品を買いましょう。</p>

<p>リサイクルに出したからといって、それが自分の想像通りに適切に処理されるとは限らない、ということを意識しましょう。</p>

<p>ではまた。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1558]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941047822]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648890]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>241</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[58161461@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ar-BH/register-person?ref=V3MG69RO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.28]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-04 09:34:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-04 00:34:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>244</wp:comment_id>
			<wp:comment_author><![CDATA[Iscriviti per ottenere 100 USDT]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[97791820@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/it/register?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.152]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-05 17:50:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-05 08:50:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>gmailのメールアドレスは、エイリアス（別名）が無制限に作れるって知ってた？</title>
		<link>https://tech.blog.uribou.me/infinite-pattern-of-gmail-alias/</link>
		<pubDate>Sat, 09 Jul 2016 11:44:43 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/infinite-pattern-of-gmail-alias/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
驚愕の小ネタ。
<strong>gmailのアカウント一つあれば、エイリアス（別名）を無制限に作れてしまう</strong>とは…。
<a href="https://support.google.com/mail/answer/12096?hl=ja">Googleのヘルプ</a>にも、以下の通りしっかり記載されています。
<blockquote>
  Gmail では、従来のエイリアスはご利用いただけませんが、your.username+any.alias@gmail.com 宛のメッセージを受け取ることができます。
  たとえば、jane.doe+notes@gmail.com 宛のメッセージは jane.doe@gmail.com に配信されます。
  フィルタを設定すると、これらのメッセージを [ごみ箱] に振り分ける、ラベルやスターを付ける、受信トレイ以外の場所に振り分ける、他のメール アカウントに転送するなどの操作を自動的に行うことができます。
</blockquote>
ちょうどいい機会なので調べてみると、これ以外にも様々なパターンでエイリアスが作れる…　というより、無視されるけとメールヘッダに情報が残るので、エイリアスとして使えるパターンがあることがわかりました。
詳細は<a href="http://gmail-tips.blogspot.jp/2014/07/not-my-email.html">E-mail addressed to me intended for someone else</a>に記載されていますが、実際に試してみると確かにその通りでした。
<h1>ドット "." は無視される</h1>
どういうことかというと、以下のメールアドレスは等価です。
でも受信したメールのヘッダには、上記の情報がそのまま残るので、例えば複数のサイトにユーザ登録する際に登録するメールアドレスを、上記３つのアドレスを別々に登録し、受信側でフィルタ設定に使うことができる、というわけです（gmailのヘルプそのまま）。
<ol>
<li>mymailaddress@gmail.com</li>
<li>my.mailaddress@gmail.com</li>
<li>my.mail.address@gmail.com</li>
</ol>
<h1>大文字は無視される</h1>
以下は等価ということですね。
これはメールヘッダに残ってくれなかったので、フィルタには使えなそう。
<ol>
<li>MyMailAddress@gmail.com</li>
<li>mymailaddress@gmail.com</li>
</ol>
<h1>@googlemail.comは@gmail.comと同じ</h1>
以下は等価です。
これもメールヘッダに情報が残ってくれたので、フィルタに使える。あまり使う意味なさそうではありますが。
<ol>
<li>mymailaddress@googlemail.com</li>
<li>mymailaddress@gmail.com</li>
</ol>
<h1>ドット "." とプラス "+" の組み合わせ</h1>
以下は等価な上、メールヘッダに情報が残るのでフィルタ設定に使えます。
<ol>
<li>mymailaddress@googlemail.com</li>
<li>my.mail.address+bot@gmail.com</li>
</ol>
<h1>まとめ</h1>
このエイリアスで、例えばbot用のTwitterアカウントをmy.mail.address+bot@gmail.comで取得し、<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">蓄電池が一定の電圧を下回ったら<strong>「消費量が大きいxxの電源を自動的に切りますね」</strong>とか、逆に満充電されたら<strong>「使わないと勿体ないよ」</strong>とかTwitterで呟く</a>こともできるということですね。
また一つ便利な機能を知ることができた、gmailでした。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1559</wp:post_id>
		<wp:post_date><![CDATA[2016-07-09 20:44:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-09 11:44:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[infinite-pattern-of-gmail-alias]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="gmail"><![CDATA[gmail]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
驚愕の小ネタ。</p>
<p><strong>gmailのアカウント一つあれば、エイリアス（別名）を無制限に作れてしまう</strong>とは…。</p>
<p><a href="https://support.google.com/mail/answer/12096?hl=ja">Googleのヘルプ</a>にも、以下の通りしっかり記載されています。</p>
<blockquote>
  <p>Gmail では、従来のエイリアスはご利用いただけませんが、your.username+any.alias@gmail.com 宛のメッセージを受け取ることができます。
  たとえば、jane.doe+notes@gmail.com 宛のメッセージは jane.doe@gmail.com に配信されます。
  フィルタを設定すると、これらのメッセージを [ごみ箱] に振り分ける、ラベルやスターを付ける、受信トレイ以外の場所に振り分ける、他のメール アカウントに転送するなどの操作を自動的に行うことができます。</p>
</blockquote>
<p>ちょうどいい機会なので調べてみると、これ以外にも様々なパターンでエイリアスが作れる…　というより、無視されるけとメールヘッダに情報が残るので、エイリアスとして使えるパターンがあることがわかりました。</p>
<p>詳細は<a href="http://gmail-tips.blogspot.jp/2014/07/not-my-email.html">E-mail addressed to me intended for someone else</a>に記載されていますが、実際に試してみると確かにその通りでした。</p>
<h1 id="">ドット "." は無視される</h1>
<p>どういうことかというと、以下のメールアドレスは等価です。</p>
<p>でも受信したメールのヘッダには、上記の情報がそのまま残るので、例えば複数のサイトにユーザ登録する際に登録するメールアドレスを、上記３つのアドレスを別々に登録し、受信側でフィルタ設定に使うことができる、というわけです（gmailのヘルプそのまま）。</p>
<ol>
<li>mymailaddress@gmail.com  </li>
<li>my.mailaddress@gmail.com  </li>
<li>my.mail.address@gmail.com</li>
</ol>
<h1 id="">大文字は無視される</h1>
<p>以下は等価ということですね。</p>
<p>これはメールヘッダに残ってくれなかったので、フィルタには使えなそう。</p>
<ol>
<li>MyMailAddress@gmail.com  </li>
<li>mymailaddress@gmail.com</li>
</ol>
<h1 id="googlemailcomgmailcom">@googlemail.comは@gmail.comと同じ</h1>
<p>以下は等価です。</p>
<p>これもメールヘッダに情報が残ってくれたので、フィルタに使える。あまり使う意味なさそうではありますが。</p>
<ol>
<li>mymailaddress@googlemail.com  </li>
<li>mymailaddress@gmail.com</li>
</ol>
<h1 id="">ドット "." とプラス "+" の組み合わせ</h1>
<p>以下は等価な上、メールヘッダに情報が残るのでフィルタ設定に使えます。</p>
<ol>
<li>mymailaddress@googlemail.com  </li>
<li>my.mail.address+bot@gmail.com</li>
</ol>
<h1 id="">まとめ</h1>
<p>このエイリアスで、例えばbot用のTwitterアカウントをmy.mail.address+bot@gmail.comで取得し、<a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">蓄電池が一定の電圧を下回ったら<strong>「消費量が大きいxxの電源を自動的に切りますね」</strong>とか、逆に満充電されたら<strong>「使わないと勿体ないよ」</strong>とかTwitterで呟く</a>こともできるということですね。</p>
<p>また一つ便利な機能を知ることができた、gmailでした。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955526641]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663163]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>215</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[80618442@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ar/register-person?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.46]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-08 01:34:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-07 16:34:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>lua有効版vimをOSXターミナルで使いたい。</title>
		<link>https://tech.blog.uribou.me/osxdevim/</link>
		<pubDate>Sat, 09 Jul 2016 13:21:05 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/osxdevim/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
vim使ってますか？
vimでコード書く人ならほぼ100%使っているであろう、コード補完プラグインneocompleteをOSXターミナル版vimでも使えるようにする方法の紹介です。
有名なので知っている人は多いと思いますが、neocomplete動作要件は<code>7.3.885+ compiled with if_lua.</code>です。
んで、OSXにデフォルトで入っているvimは7.3なのです。
<h1>luaなしvimでも使えるneocomplcacache</h1>
同じ作者様のコード補完プラグインに、neocomplcacacheがあります。
が、github README.mdに記載されている通り、neocomplcacacheは既にメンテされておらず、使っているとその旨の警告が出たりします。
<strong><a href="https://github.com/Shougo/neocomplcache.vim">Shougo/neocomplcache.vim@github</a></strong>
<pre><code class="markdown">**neocomplcache**
=================
Note:  It is not maintained well.  You should use neocomplete instead.
https://github.com/Shougo/neocomplete.vim
</code></pre>
<h1>neocompleteを使いましょう</h1>
neocompleteのREADMEには以下のように書かれていますが、誇張でもなんでもなく、ほんとに強力なキーワード補完をしてくれます。下手なIDEよりいいんじゃないでしょうか。vimの方が軽量で起動も早いですし。
<strong><a href="https://github.com/Shougo/neocomplete.vim">Shougo/neocomplete.vim</a></strong>
<pre><code class="markdown">neocomplete
===========
neocomplete is the abbreviation of "neo-completion with cache". It provides keyword completion system by maintaining a cache of keywords in the current buffer. neocomplete can be customized easily and has many more features than Vim's built-in completion.
</code></pre>
<h1>Mac OSXでneocompleteを使いましょう</h1>
使いたいところなんですが、何も考えずに使おうとすると、躓きます。
デフォルトで入っているvimのバージョンが7.3な上、brewで普通にインストールしても7.4 -lua版なんですよね・・。
lua有効版vimのインストール方法を調べるのが面倒くさくて、しばらくの間KaoriyaさんMacVimをエイリアスして使っていましたが、これだとvimの軽量・軽快さというメリットがなくなります。MacVim.appにエイリアスしていることからわかる通りGUI版なので、起動がとっても重い。
<pre><code class="diff">~ $ svn diff -r PREV:HEAD .bash_profile
Index: .bash_profile
===================================================================
--- .bash_profile   (revision 599)
+++ .bash_profile   (revision 600)
@@ -15,6 +15,4 @@
 if [ "$(uname)" = 'Darwin' ]; then
     alias markright="open -a /opt/homebrew-cask/Caskroom/markright/0.1.10/MarkRight.app"
-    alias vim="open -a /usr/local/Cellar/macvim-kaoriya/HEAD/MacVim.app"
-    alias vi="open -a /usr/local/Cellar/macvim-kaoriya/HEAD/MacVim.app"
 fi
</code></pre>
で、lua有効版vimのインストール方法を調べてみたら、思いの外簡単でした。
brew info vimコマンドを実行すればすぐわかることだった…　それ以前に、<a href="https://github.com/Shougo/neocomplete.vim#vim-for-mac-os-x">neocompleteのREADME.md</a>にガッツリ書いてあった…。
<pre><code class="bash">~ $ brew info -h
brew info formula:
    Display information about formula.
~ $ brew info vim
vim: stable 7.4.1830, HEAD
Vi "workalike" with many additional features
http://www.vim.org/
Conflicts with: ex-vi
/usr/local/Cellar/vim/7.4.1830 (1,688 files, 25.0M) *
  Built from source on 2016-07-10 at 05:30:49 with: --with-lua
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/vim.rb
==&gt; Dependencies
Optional: lua _, luajit _
==&gt; Options
--disable-nls
    Build vim without National Language Support (translated messages, keymaps)
--override-system-vi
    Override system vi
--with-client-server
    Enable client/server mode
--with-lua
    Build vim with lua support
--with-luajit
    Build with luajit support
...
</code></pre>
ということで、インストール手順です。
<h2>lua有効版vimのインストール手順</h2>
インストールコマンドを叩く。
<pre><code class="bash">~$ brew install vim --with-lua
</code></pre>
デフォルトのvi/vimより先にlua有効版vimにヒットするようにPATHを設定する。
<pre><code class="bash">export PATH="/usr/local/bin:$PATH"
</code></pre>
viコマンドでlua有効版vimに向くようにエイリアスを貼る。brew install後そのままだと、viコマンドでデフォルトの7.3が起動しちゃいました。
<pre><code class="bash">~ $ which vim
/usr/local/bin/vim
~ $ which vi
/usr/bin/vi
~ $ ls /usr/local/bin/vi
ls: /usr/local/bin/vi: No such file or directory
~ $ cd /usr/local/bin; ln -s vim vi
</code></pre>
<h2>おまけ</h2>
luaってそもそもなんなんだ？ と思った方は、引用元<a href="https://ja.wikipedia.org/wiki/Lua">Wikipedia</a>を参照ください。
<blockquote>
  Lua（ルア）は、...(略)...らによって設計開発されたスクリプト言語およびその処理系の実装である。
  手続き型言語として、また、プロトタイプベースのオブジェクト指向言語としても利用する事が出来、関数型言語、データ駆動型としての要素も併せ持っている。
  Luaという名前は、ポルトガル語の月に由来する。
</blockquote>
ちなみに、LuaJITはLuaのコンパイラだそうです。<code>brew install vim</code>のオプションに<code>--with-luajit</code>が出てきたので。
neocompleteの一部またはコア部分がLuaで書かれてるってことなんでしょうね。多分。
<h1>教訓</h1>
READMEは必ず読みましょう。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1561</wp:post_id>
		<wp:post_date><![CDATA[2016-07-09 22:21:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-09 13:21:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[osxdevim]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
vim使ってますか？</p>
<p>vimでコード書く人ならほぼ100%使っているであろう、コード補完プラグインneocompleteをOSXターミナル版vimでも使えるようにする方法の紹介です。</p>
<p>有名なので知っている人は多いと思いますが、neocomplete動作要件は<code>7.3.885+ compiled with if_lua.</code>です。</p>
<p>んで、OSXにデフォルトで入っているvimは7.3なのです。</p>
<h1 id="luavimneocomplcacache">luaなしvimでも使えるneocomplcacache</h1>
<p>同じ作者様のコード補完プラグインに、neocomplcacacheがあります。</p>
<p>が、github README.mdに記載されている通り、neocomplcacacheは既にメンテされておらず、使っているとその旨の警告が出たりします。</p>
<p><strong><a href="https://github.com/Shougo/neocomplcache.vim">Shougo/neocomplcache.vim@github</a></strong></p>
<pre><code class="language-markdown">**neocomplcache**
=================
Note:  It is not maintained well.  You should use neocomplete instead.
https://github.com/Shougo/neocomplete.vim
</code></pre>
<h1 id="neocomplete">neocompleteを使いましょう</h1>
<p>neocompleteのREADMEには以下のように書かれていますが、誇張でもなんでもなく、ほんとに強力なキーワード補完をしてくれます。下手なIDEよりいいんじゃないでしょうか。vimの方が軽量で起動も早いですし。</p>
<p><strong><a href="https://github.com/Shougo/neocomplete.vim">Shougo/neocomplete.vim</a></strong></p>
<pre><code class="language-markdown">neocomplete
===========
neocomplete is the abbreviation of "neo-completion with cache". It provides keyword completion system by maintaining a cache of keywords in the current buffer. neocomplete can be customized easily and has many more features than Vim's built-in completion.
</code></pre>
<h1 id="macosxneocomplete">Mac OSXでneocompleteを使いましょう</h1>
<p>使いたいところなんですが、何も考えずに使おうとすると、躓きます。</p>
<p>デフォルトで入っているvimのバージョンが7.3な上、brewで普通にインストールしても7.4 -lua版なんですよね・・。</p>
<p>lua有効版vimのインストール方法を調べるのが面倒くさくて、しばらくの間KaoriyaさんMacVimをエイリアスして使っていましたが、これだとvimの軽量・軽快さというメリットがなくなります。MacVim.appにエイリアスしていることからわかる通りGUI版なので、起動がとっても重い。</p>
<pre><code class="language-diff">~ $ svn diff -r PREV:HEAD .bash_profile
Index: .bash_profile
===================================================================
--- .bash_profile    (revision 599)
+++ .bash_profile    (revision 600)
@@ -15,6 +15,4 @@
 if [ "$(uname)" = 'Darwin' ]; then
     alias markright="open -a /opt/homebrew-cask/Caskroom/markright/0.1.10/MarkRight.app"
-    alias vim="open -a /usr/local/Cellar/macvim-kaoriya/HEAD/MacVim.app"
-    alias vi="open -a /usr/local/Cellar/macvim-kaoriya/HEAD/MacVim.app"
 fi
</code></pre>
<p>で、lua有効版vimのインストール方法を調べてみたら、思いの外簡単でした。</p>
<p>brew info vimコマンドを実行すればすぐわかることだった…　それ以前に、<a href="https://github.com/Shougo/neocomplete.vim#vim-for-mac-os-x">neocompleteのREADME.md</a>にガッツリ書いてあった…。</p>
<pre><code class="language-bash">~ $ brew info -h
brew info formula:
    Display information about formula.
~ $ brew info vim
vim: stable 7.4.1830, HEAD
Vi "workalike" with many additional features
http://www.vim.org/
Conflicts with: ex-vi
/usr/local/Cellar/vim/7.4.1830 (1,688 files, 25.0M) *
  Built from source on 2016-07-10 at 05:30:49 with: --with-lua
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/vim.rb
==&gt; Dependencies
Optional: lua _, luajit _
==&gt; Options
--disable-nls
    Build vim without National Language Support (translated messages, keymaps)
--override-system-vi
    Override system vi
--with-client-server
    Enable client/server mode
--with-lua
    Build vim with lua support
--with-luajit
    Build with luajit support
...
</code></pre>
<p>ということで、インストール手順です。</p>
<h2 id="luavim">lua有効版vimのインストール手順</h2>
<p>インストールコマンドを叩く。</p>
<pre><code class="language-bash">~$ brew install vim --with-lua
</code></pre>
<p>デフォルトのvi/vimより先にlua有効版vimにヒットするようにPATHを設定する。</p>
<pre><code class="language-bash">export PATH="/usr/local/bin:$PATH"
</code></pre>
<p>viコマンドでlua有効版vimに向くようにエイリアスを貼る。brew install後そのままだと、viコマンドでデフォルトの7.3が起動しちゃいました。  </p>
<pre><code class="language-bash">~ $ which vim
/usr/local/bin/vim
~ $ which vi
/usr/bin/vi
~ $ ls /usr/local/bin/vi
ls: /usr/local/bin/vi: No such file or directory
~ $ cd /usr/local/bin; ln -s vim vi
</code></pre>
<h2 id="">おまけ</h2>
<p>luaってそもそもなんなんだ？ と思った方は、引用元<a href="https://ja.wikipedia.org/wiki/Lua">Wikipedia</a>を参照ください。</p>
<blockquote>
  <p>Lua（ルア）は、...(略)...らによって設計開発されたスクリプト言語およびその処理系の実装である。
  手続き型言語として、また、プロトタイプベースのオブジェクト指向言語としても利用する事が出来、関数型言語、データ駆動型としての要素も併せ持っている。
  Luaという名前は、ポルトガル語の月に由来する。</p>
</blockquote>
<p>ちなみに、LuaJITはLuaのコンパイラだそうです。<code>brew install vim</code>のオプションに<code>--with-luajit</code>が出てきたので。</p>
<p>neocompleteの一部またはコア部分がLuaで書かれてるってことなんでしょうね。多分。</p>
<h1 id="">教訓</h1>
<p>READMEは必ず読みましょう。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2546135dd0c23008691c658ada08fac7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_47329bf02c2dd329fbb51e4db6ddf64a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942174678]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://d33wubrfki0l68.cloudfront.net/e23b8e4a3472ea6219092fc2be5eeeb2d83e3e9f/aea63/media/2014/04/superman.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663164]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>スマホから電源スイッチのリモート操作を可能にするシステムをDIYしよう。</title>
		<link>https://tech.blog.uribou.me/remote-power-on-off-with-xbee/</link>
		<pubDate>Thu, 21 Jul 2016 12:50:47 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/remote-power-on-off-with-xbee/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
サーバ管理経験者なら、これって意外と夢だったりしませんかね？
<strong>パソコンの電源スイッチをリモート（自宅の外）からON/OFF操作する。</strong>
これ、意外と簡単にできちゃいます。電子工作経験とRaspberry Piみたいな小型低消費電力サーバと、低消費電力無線機能付きマイコンXBeeが２つあれば。
<h1>XBeeを使ってできること</h1>
<a href="http://blog.rinka-blossom.com/recommend-xbee/">こちら</a>に概要を書いていますが、Arduinoほどの自由度はありません。
でもXBee自身が結構な数のI/Oを持つ上、ADCもあったりするので、ちょっとしたことならXBeeだけで出来てしまいます。今回のようなリレー操作なら超簡単。
とあるピンにリモートで0か1を指定して、それがそのままリレーのON/OFFに変換されるというだけでの仕組みです。
<a href="http://xbee-sdk-doc.readthedocs.io/en/1.5.7/doc/working_xbee_extensions/#332-layout-view"><img src="http://xbee-sdk-doc.readthedocs.io/en/1.5.7/doc/images/img006bm.jpg" alt="XBeeLayout" /></a>
<h1>そんなシステムの構成</h1>
それなりにシーケンス図を書いてみるとこうなります。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/25c88b94-f1a8-5dde-91b8-0ae88854692e.png" alt="sequence_web.png" />
PC電源をON/OFFするには、マザーボードの電源スイッチ端子をショートさせればいいので、リレーを使います。
リレー制御は3.3V highにできるGPIOがあれば十分なので、XBeeのdigital I/O操作APIを叩くだけというお手軽さ。
<h1>設定やら構築やらの手順</h1>
<h2>RaspberryPi + XBee Coordinatorの組み立てと設定</h2>
RaspberryPiがWebサーバとして動作して、ユーザはブラウザ経由でXBee Coordinatorを操作することになります。
家庭菜園リモート監視の記事の<a href="http://qiita.com/dodo5522/items/63d1efee3f70b3d5f2f6#3-2">Coordinatorの設定</a>と<a href="http://qiita.com/dodo5522/items/63d1efee3f70b3d5f2f6#2-3">Raspberry Pi側のサーバ環境構築</a>を参考にXBeeとRaspberryPiを設定してみてください。
この辺も整理しないと・・・。
<h2>小型リレーボードキットLK-RB1 + XBee Routerの組み立てと設定</h2>
お手軽にリレーを使えるようにしたキットがあります。小型リレーボードキットLK-RB1です。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00FF2TXMO%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41up%2Bchf6GL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00FF2TXMO%2Fref%3Dnosim" target="_blank" rel="noopener">エレキット 小型リレーボードキット (5V用) LK-RB1</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> イーケイジャパン 2013-10-04    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2583G%2583%258C%2583L%2583b%2583g%2520%258F%25AC%258C%255E%2583%258A%2583%258C%2581%255B%2583%257B%2581%255B%2583h%2583L%2583b%2583g%2520%25285V%2597p%2529%2520LK-RB1%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2582%25A8%25E3%2583%25AC%25E3%2582%25AD%25E3%2583%2583%25E3%2583%2588%2520%25E5%25B0%258F%25E5%259E%258B%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AD%25E3%2583%2583%25E3%2583%2588%2520%25285V%25E7%2594%25A8%2529%2520LK-RB1%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
これらを以下のように配線します。
リレーの初期状態をOFF（PC電源ボタン端子アンショート）にするため、DIO10 pin6はpull downしておき、J1はPCの電源ボタン端子に接続しています。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/5554d4fa-6f84-aa35-ae87-9203ed333ea5.png" alt="remote power controller_回路図.png" />
絵にするとこんな感じです。実際の電源は電池ではなく、太陽光だったりしますが。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/b64c93c0-acd6-dcd2-d5cd-363e648ca2ba.png" alt="remote power controller_フ_レット_ホ_ート_.png" />
XCTUツールを操作して、XBee Routerを以下のように設定します。
<ol>
<li>PAN ID, Scan Channels, Baud Rateは、RaspberryPiに接続したCoordinatorと同じ値を設定する。</li>
<li>Destination Address Low/Highには0を設定する。0は、通信相手がCoordinatorであることを示す。</li>
<li>API Enableを2に設定する。</li>
<li>D0〜D5, P1〜P2を全てDisabledに設定する。リレーの初期状態をOFF（PC電源ボタン端子アンショート）にするため、P0（DIO10 pin6）のみDigital Out Lowに設定する。</li>
</ol>
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/b4ab21f8-ae96-1081-ae7e-b0e30f9a8629.png" alt="スクリーンショット 2015-07-22 1.33.26.png" />
でもって、LK-RB1とAE-XBee-REG-DIPを回路図の通りに配線したボードを作ります。下記はあくまで一例なので、適当で構いません。動けばいいんです。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/8ba01204-9a36-978a-8c38-0ed1d87ebd55.jpeg" alt="IMG_7495.JPG" />
基盤を載せて、
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/a3b3a7ad-d2e9-4f6d-a629-7e5fd126d5a6.jpeg" alt="IMG_7494.JPG" />
本体電源スイッチとリモートスイッチの両方で操作可能にするため、どちらでもショートできるように配線し、
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/12f6d906-6e80-9175-465d-741a9d8b0670.jpeg" alt="IMG_7497.JPG" />
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/e7259d5e-82b0-2b55-93b5-8a79976fd1d3.jpeg" alt="IMG_7496.JPG" />
あとは基盤の電源を入れるだけ。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/c400687f-7107-2cfa-7431-479e98e43a0b.jpeg" alt="IMG_7498.JPG" />
あとはRaspberry Piでスイッチ操作ツールを実行すれば、リモートから電源ONすることができます。
<h2>リモート電源スイッチ操作ツール（コマンドライン版）インストール</h2>
Pythonで書きました。
Raspberry Piにログインして、以下のようにコマンド実行するとインストール出来ます。…初心者丸出しコードで恥ずかしい…　書き直そう。
<pre><code class="bash">$ git clone https://github.com/dodo5522/rpwc.git
$ cd rpwc
$ virtualenv .
$ . bin/activate
(rpwc)$ ./setup.sh
</code></pre>
以下のようにコマンドを実行すると、電源ボタンを押下して１秒後に離す、といった動作をします。
<pre><code class="bash">$ python3 -m rpwc -d 0x0013A20040AFBCCE -g P0 -i 1
{'status': b'?x00', 'source_addr': b'%Y', 'source_addr_long': b'?x00?x13?xa2?x00@?xaf?xbc?xce', 'frame_id': b'?x01', 'command': b'P0', 'id': 'remote_at_response'}
{'status': b'?x00', 'source_addr': b'%Y', 'source_addr_long': b'?x00?x13?xa2?x00@?xaf?xbc?xce', 'frame_id': b'?x02', 'command': b'P0', 'id': 'remote_at_response'}
</code></pre>
オプションの概要は以下の通り。
<pre><code class="bash">optional arguments:
  -h, --help            show this help message and exit
  -d L, --xbee-dest-addr L
                        destination address of xbee terminal as hexdecimal
  -g P, --xbee-gpio-power P
                        GPIO pin name which is assigned to power control on
                        xbee
  -p M, --serial-port M
                        serial port device file path to communicate with xbee
                        terminal
  -b N, --serial-baurate N
                        serial port baurate
  -i I, --interval I    interval time between press and release of power buton
</code></pre>
<h1>まとめ</h1>
PyPIにxbeeパッケージが公開されているので、同梱されるZigBeeクラスを使えば楽勝で実装できると踏んでたんですが、remote_at関数を見つけるのに手間取って、意外とハマりました。
<a href="https://code.google.com/p/python-xbee/source/browse/xbee/zigbee.py">zibee.py</a>のapi_commandsと<a href="https://code.google.com/p/python-xbee/source/browse/xbee/base.py">base.py</a>のgetattrの実装を覚えておくと、いつか役に立つ気がします。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1413</wp:post_id>
		<wp:post_date><![CDATA[2016-07-21 21:50:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-21 12:50:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[remote-power-on-off-with-xbee]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:67:"http://xbee-sdk-doc.readthedocs.io/en/1.5.7/doc/images/img006bm.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941010383]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562645]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>スマホ使用料75%減。大手キャリアiPhoneをSIMフリー化して格安SIMを使いましょう。</title>
		<link>https://tech.blog.uribou.me/make-sim-free-iphone/</link>
		<pubDate>Tue, 12 Jul 2016 05:08:03 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/make-sim-free-iphone/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
ソフトバンクiPhoneをファクトリーアンロックしてから早１年。何の問題もなく使えています。
ファクトリーアンロックとは何か？ 脱獄（Jail Break）とはどう違う？ 手順は？ 本当に大丈夫？ などの情報をまとめてみました。
<h1>そもそもSIMロックとは？</h1>
大手キャリアからiPhoneを買うと、囲い込みのためにSIMがロックされています。ソフトバンクで買ったiPhoneはソフトバンクSIMでしか使えないよう、アクティベーションサーバが情報を管理しています。
iPhoneを使い始めるのにインターネット環境が必要な理由は、このアクティベーションサーバに接続するためなんですよね。
<em>引用元:<a href="http://weekly.ascii.jp/elem/000/000/266/266110/">週刊アスキー</a></em>
<img src="http://weekly.ascii.jp/elem/000/000/266/266256/20141015_factoryunlock008a_cs1e1_480x.jpg" alt="" />
<h1>SIMロックによるデメリット</h1>
SIMロックによる制限のおかげで、用途に合わせてキャリアを替えたり、海外旅行でプリペイド型のSIMに差し替えたり、といったことができません。
そして、端末の実質０円キャンペーンとかでばらまいた端末代をキャリア側が回収するため、なんだかんだオプション付けられて、どう頑張って節約しても毎月6〜7千円スマホ代で消費します。夫婦合算で<strong>1万5〜6千円</strong>。年間だと<strong>19万円</strong>にもなるんですよね。
様々な自由を奪う憎きSIMロック…。
<h1>ファクトリーアンロックとは？</h1>
SIMロックされたスマホ端末、実はロック解除できるのです。
先ほど出てきたアクティベーションサーバの情報を業者さんに書き換えてもらいます。これをファクトリーアンロックと呼びます。脱獄みたいな非正規ルートではなく、一応正規の方法らしいです。
アクティベーションサーバの情報を書き換えるだけなので、<strong>スマホ端末を業者さんに送るといった面倒な手続きが一切ない</strong>のがいいですね。
詳しくは<a href="http://weekly.ascii.jp/elem/000/000/266/266110/">週アス記事</a>で図解されているので、詳細はそちらを参照ください。
<h1>ファクトリーアンロックの具体的な手順</h1>
私の場合はソフトバンクiPhone5s 16GBをファクトリーアンロックしてもらいましたが、申し込んでからおよそ２ヶ月くらいかかりました。
どうしてもSIMロックフリー版iPhoneが欲しかったので、Apple Storeで買い直すことも考えましたが、<a href="http://blog.rinka-blossom.com/truth_of_ghana_agbogbloshie/">アグボグブロシー</a>のようなこともあるので、すでに所有しているiPhoneを使い倒すと決心して、ひたすら待ちました。1ヶ月単位で待つのが嫌な人は、素直にApple StoreやオークションなどでSIMフリー版iPhoneを購入した方がいいかもしれません。
前置きが長くなりましたが、ファクトリアンロックの具体的な手順は以下になります。
<ol>
<li><a href="http://xiaolongchakan.com/archives/4031729.html">小龍茶館</a>のサイトの注意書きをよく読み、所有するiPhoneに対応しているか確認する（iPhone 6s Plusにも対応しているので、ほぼ網羅されていると思います）</li>
<li>所有するiPhoneのIMEIやシリアルナンバーを携え、サイトのフォームから申し込む（調べ方はサイトに記載されています）</li>
<li>小龍茶館から確認メールを受信したら、指示通りに代金を振り込み、しばし待つ（ソフトバンクiPhone 5s 16GBで、2014年12月時点で2,000HKD。日本円で2万円程度？ 機種や不揮発メモリサイズで値段が変動します）</li>
<li>待っている間に、動作確認用のSIMを入手する。5.の後でもいいかも。（b-mobileの基本料0円SIMがお勧め）</li>
<li>SIMロック解除完了メールを受信したら、指示通りにアクティベーション作業を行う（iPhone内部のデータは保持されるのでご安心を）</li>
</ol>
<strong>動作確認用SIM</strong>は、とても重要です。できる限り事前に用意しておきましょう。
もしロック解除出来たとして、本当に通信できるか試験せずに、キャリアとの契約解除なんてできませんよね。元の大手キャリアSIMでは、SIMロック解除の確認になりませんし。docomoと契約済みの知人からSIM借りて確認するなんて面倒ですし。
ということで、<strong><a href="http://www.bmobile.ne.jp/zsim/">b-mobileの月額基本料０円SIM</a></strong>がお勧めです。持っておくだけなら月学基本料はかからないし、動作確認で一瞬使ったらあとは半年放置すれば自動的に解約されます。
<h1>お勧めSIMカード</h1>
速度の安定性、速度制限のシステム、料金の面から、<strong>OCNモバイルONE</strong>がお勧めです。
私が契約しているのは、最大通信量が１日おきにリセットされるタイプで、１日110MBまで、月に直すとだいたい３GBの通信量です。月ごとにリセットするタイプの契約だと、<strong>3GBを一気に使い果たしてしまった時、次の月まで通信制限が解除されない</strong>のが痛い。ので、<strong>１日おきにリセットしてくれるOCNなら、その日使いすぎても次の日になれば通信速度が回復してくれる</strong>ので、安心ですよ。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PRVWMU8%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41rtkN2K4cL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PRVWMU8%2Fref%3Dnosim" target="_blank" rel="noopener">OCN モバイル ONE 音声通話+LTEデータ通信SIMカード 月額1,728円(税込)~(マイクロ、ナノ、標準)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> NTTコミュニケーションズ 2014-12-01    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DOCN%2520%2583%2582%2583o%2583C%2583%258B%2520ONE%2520%2589%25B9%2590%25BA%2592%25CA%2598b%2520LTE%2583f%2581%255B%2583%255E%2592%25CA%2590MSIM%2583J%2581%255B%2583h%2520%258C%258E%258Az1%252C728%2589~%2528%2590%25C5%258D%259E%2529~%2528%2583%257D%2583C%2583N%2583%258D%2581A%2583i%2583m%2581A%2595W%258F%2580%2529%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FOCN%2520%25E3%2583%25A2%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25AB%2520ONE%2520%25E9%259F%25B3%25E5%25A3%25B0%25E9%2580%259A%25E8%25A9%25B1%2520LTE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E9%2580%259A%25E4%25BF%25A1SIM%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%2520%25E6%259C%2588%25E9%25A1%258D1%252C728%25E5%2586%2586%2528%25E7%25A8%258E%25E8%25BE%25BC%2529~%2528%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2580%2581%25E3%2583%258A%25E3%2583%258E%25E3%2580%2581%25E6%25A8%2599%25E6%25BA%2596%2529%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h1>まとめ</h1>
<ul>
<li>大手キャリアiPhoneを所有している人は、<a href="http://xiaolongchakan.com/archives/4031729.html">小龍茶館</a>でファクトリーアンロックしましょう</li>
<li>ロック解除の検証には基本料０円のSIMを事前に準備しておきましょう</li>
<li>本命の格安SIMは、その時々の評価を念入りにチェックし、自分にあった料金体系のものを選びましょう。</li>
</ul>
１年前は、ぷららモバイルLTEのSIMの評判がすごく良かったんですが、今はあまり評判よくないみたいですね・・・。加入者が増えすぎたんだろうか。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">使い物にならん！ぷららモバイルLTEのプランを無制限から定額に変更。: ぷららモバイルLTEが遅くて使い物になりません！ 昨年の夏からぷららモバイルLTEの音声通話付き格安SIMを使っています。… <a href="https://t.co/Q80JiFGagY">https://t.co/Q80JiFGagY</a> <a href="https://twitter.com/hashtag/LTE?src=hash">#LTE</a></p>&mdash; LTE研究家 (@LTE_info_jp) <a href="https://twitter.com/LTE_info_jp/status/751827485533216769">2016年7月9日</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">DTI SIMデータつかい放題、ぷららモバイルで鍛えられた自分にとっては快適。<br />あとは、増強が継続的に行われることを願う。</p>&mdash; ワイワイ！ (@zc_WAIWAI) <a href="https://twitter.com/zc_WAIWAI/status/751206442279968768">2016年7月8日</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">NTTぷらら　無制限SIM　<br />いやぁ、素晴らしい速度だ！__<br />_(_`^´_)_ <a href="https://t.co/zNfR8IgoYK">pic.twitter.com/zNfR8IgoYK</a></p>&mdash; _WinterMagician_ (@2ZGRG) <a href="https://twitter.com/2ZGRG/status/741896783987511296">2016年6月12日</a></blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1436</wp:post_id>
		<wp:post_date><![CDATA[2016-07-12 14:08:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-12 05:08:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[make-sim-free-iphone]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="iphone"><![CDATA[iPhone]]></category>
		<category domain="post_tag" nicename="%e3%82%ac%e3%82%b8%e3%82%a7%e3%83%83%e3%83%88"><![CDATA[ガジェット]]></category>
		<category domain="category" nicename="%e3%82%ac%e3%82%b8%e3%82%a7%e3%83%83%e3%83%88"><![CDATA[ガジェット]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:88:"http://weekly.ascii.jp/elem/000/000/266/266256/20141015_factoryunlock008a_cs1e1_480x.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
ソフトバンクiPhoneをファクトリーアンロックしてから早１年。何の問題もなく使えています。</p>

<p>ファクトリーアンロックとは何か？ 脱獄（Jail Break）とはどう違う？ 手順は？ 本当に大丈夫？ などの情報をまとめてみました。</p>

<h1 id="sim">そもそもSIMロックとは？</h1>

<p>大手キャリアからiPhoneを買うと、囲い込みのためにSIMがロックされています。ソフトバンクで買ったiPhoneはソフトバンクSIMでしか使えないよう、アクティベーションサーバが情報を管理しています。</p>

<p>iPhoneを使い始めるのにインターネット環境が必要な理由は、このアクティベーションサーバに接続するためなんですよね。</p>

<p><em>引用元:<a href="http://weekly.ascii.jp/elem/000/000/266/266110/">週刊アスキー</a></em>
<img src="http://weekly.ascii.jp/elem/000/000/266/266256/20141015_factoryunlock008a_cs1e1_480x.jpg" alt="" /></p>

<h1 id="sim">SIMロックによるデメリット</h1>

<p>SIMロックによる制限のおかげで、用途に合わせてキャリアを替えたり、海外旅行でプリペイド型のSIMに差し替えたり、といったことができません。</p>

<p>そして、端末の実質０円キャンペーンとかでばらまいた端末代をキャリア側が回収するため、なんだかんだオプション付けられて、どう頑張って節約しても毎月6〜7千円スマホ代で消費します。夫婦合算で<strong>1万5〜6千円</strong>。年間だと<strong>19万円</strong>にもなるんですよね。</p>

<p>様々な自由を奪う憎きSIMロック…。</p>

<h1 id="">ファクトリーアンロックとは？</h1>

<p>SIMロックされたスマホ端末、実はロック解除できるのです。</p>

<p>先ほど出てきたアクティベーションサーバの情報を業者さんに書き換えてもらいます。これをファクトリーアンロックと呼びます。脱獄みたいな非正規ルートではなく、一応正規の方法らしいです。</p>

<p>アクティベーションサーバの情報を書き換えるだけなので、<strong>スマホ端末を業者さんに送るといった面倒な手続きが一切ない</strong>のがいいですね。</p>

<p>詳しくは<a href="http://weekly.ascii.jp/elem/000/000/266/266110/">週アス記事</a>で図解されているので、詳細はそちらを参照ください。</p>

<h1 id="">ファクトリーアンロックの具体的な手順</h1>

<p>私の場合はソフトバンクiPhone5s 16GBをファクトリーアンロックしてもらいましたが、申し込んでからおよそ２ヶ月くらいかかりました。</p>

<p>どうしてもSIMロックフリー版iPhoneが欲しかったので、Apple Storeで買い直すことも考えましたが、<a href="http://blog.rinka-blossom.com/truth_of_ghana_agbogbloshie/">アグボグブロシー</a>のようなこともあるので、すでに所有しているiPhoneを使い倒すと決心して、ひたすら待ちました。1ヶ月単位で待つのが嫌な人は、素直にApple StoreやオークションなどでSIMフリー版iPhoneを購入した方がいいかもしれません。</p>

<p>前置きが長くなりましたが、ファクトリアンロックの具体的な手順は以下になります。</p>

<ol>
<li><a href="http://xiaolongchakan.com/archives/4031729.html">小龍茶館</a>のサイトの注意書きをよく読み、所有するiPhoneに対応しているか確認する（iPhone 6s Plusにも対応しているので、ほぼ網羅されていると思います）  </li>
<li>所有するiPhoneのIMEIやシリアルナンバーを携え、サイトのフォームから申し込む（調べ方はサイトに記載されています）  </li>
<li>小龍茶館から確認メールを受信したら、指示通りに代金を振り込み、しばし待つ（ソフトバンクiPhone 5s 16GBで、2014年12月時点で2,000HKD。日本円で2万円程度？ 機種や不揮発メモリサイズで値段が変動します）  </li>
<li>待っている間に、動作確認用のSIMを入手する。5.の後でもいいかも。（b-mobileの基本料0円SIMがお勧め）  </li>
<li>SIMロック解除完了メールを受信したら、指示通りにアクティベーション作業を行う（iPhone内部のデータは保持されるのでご安心を）</li>
</ol>

<p><strong>動作確認用SIM</strong>は、とても重要です。できる限り事前に用意しておきましょう。</p>

<p>もしロック解除出来たとして、本当に通信できるか試験せずに、キャリアとの契約解除なんてできませんよね。元の大手キャリアSIMでは、SIMロック解除の確認になりませんし。docomoと契約済みの知人からSIM借りて確認するなんて面倒ですし。</p>

<p>ということで、<strong><a href="http://www.bmobile.ne.jp/zsim/">b-mobileの月額基本料０円SIM</a></strong>がお勧めです。持っておくだけなら月学基本料はかからないし、動作確認で一瞬使ったらあとは半年放置すれば自動的に解約されます。</p>

<h1 id="sim">お勧めSIMカード</h1>

<p>速度の安定性、速度制限のシステム、料金の面から、<strong>OCNモバイルONE</strong>がお勧めです。</p>

<p>私が契約しているのは、最大通信量が１日おきにリセットされるタイプで、１日110MBまで、月に直すとだいたい３GBの通信量です。月ごとにリセットするタイプの契約だと、<strong>3GBを一気に使い果たしてしまった時、次の月まで通信制限が解除されない</strong>のが痛い。ので、<strong>１日おきにリセットしてくれるOCNなら、その日使いすぎても次の日になれば通信速度が回復してくれる</strong>ので、安心ですよ。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PRVWMU8%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41rtkN2K4cL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PRVWMU8%2Fref%3Dnosim" target="_blank" >OCN モバイル ONE 音声通話+LTEデータ通信SIMカード 月額1,728円(税込)~(マイクロ、ナノ、標準)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> NTTコミュニケーションズ 2014-12-01    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DOCN%2520%2583%2582%2583o%2583C%2583%258B%2520ONE%2520%2589%25B9%2590%25BA%2592%25CA%2598b%2520LTE%2583f%2581%255B%2583%255E%2592%25CA%2590MSIM%2583J%2581%255B%2583h%2520%258C%258E%258Az1%252C728%2589~%2528%2590%25C5%258D%259E%2529~%2528%2583%257D%2583C%2583N%2583%258D%2581A%2583i%2583m%2581A%2595W%258F%2580%2529%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.c
om/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FOCN%2520%25E3%2583%25A2%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25AB%2520ONE%2520%25E9%259F%25B3%25E5%25A3%25B0%25E9%2580%259A%25E8%25A9%25B1%2520LTE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E9%2580%259A%25E4%25BF%25A1SIM%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%2520%25E6%259C%2588%25E9%25A1%258D1%252C728%25E5%2586%2586%2528%25E7%25A8%258E%25E8%25BE%25BC%2529~%2528%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2580%2581%25E3%2583%258A%25E3%2583%258E%25E3%2580%2581%25E6%25A8%2599%25E6%25BA%2596%2529%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<h1 id="">まとめ</h1>

<ul>
<li>大手キャリアiPhoneを所有している人は、<a href="http://xiaolongchakan.com/archives/4031729.html">小龍茶館</a>でファクトリーアンロックしましょう</li>
<li>ロック解除の検証には基本料０円のSIMを事前に準備しておきましょう</li>
<li>本命の格安SIMは、その時々の評価を念入りにチェックし、自分にあった料金体系のものを選びましょう。</li>
</ul>

<p>１年前は、ぷららモバイルLTEのSIMの評判がすごく良かったんですが、今はあまり評判よくないみたいですね・・・。加入者が増えすぎたんだろうか。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">使い物にならん！ぷららモバイルLTEのプランを無制限から定額に変更。: ぷららモバイルLTEが遅くて使い物になりません！ 昨年の夏からぷららモバイルLTEの音声通話付き格安SIMを使っています。… <a href="https://t.co/Q80JiFGagY">https://t.co/Q80JiFGagY</a> <a href="https://twitter.com/hashtag/LTE?src=hash">#LTE</a></p>&mdash; LTE研究家 (@LTE_info_jp) <a href="https://twitter.com/LTE_info_jp/status/751827485533216769">2016年7月9日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">DTI SIMデータつかい放題、ぷららモバイルで鍛えられた自分にとっては快適。<br>あとは、増強が継続的に行われることを願う。</p>&mdash; ワイワイ！ (@zc_WAIWAI) <a href="https://twitter.com/zc_WAIWAI/status/751206442279968768">2016年7月8日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">NTTぷらら　無制限SIM　<br>いやぁ、素晴らしい速度だ！__<br>_(_`^´_)_ <a href="https://t.co/zNfR8IgoYK">pic.twitter.com/zNfR8IgoYK</a></p>&mdash; _WinterMagician_ (@2ZGRG) <a href="https://twitter.com/2ZGRG/status/741896783987511296">2016年6月12日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5948018854]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447168]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2749]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2750]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2751]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2752]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2747]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2755]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2756]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>linux上でiOSアプリを開発できるらしい。</title>
		<link>https://tech.blog.uribou.me/linuxshang-deswiftwoshi-i-iosapuriwokai-fa-dekiru/</link>
		<pubDate>Sun, 10 Jul 2016 04:56:29 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/linuxshang-deswiftwoshi-i-iosapuriwokai-fa-dekiru/</guid>
		<description></description>
		<content:encoded><![CDATA[日経BPを流し読みしていたら、衝撃的な記事を発見。
<a href="http://techon.nikkeibp.co.jp/atcl/column/15/425482/120400059/?n_cid=nbptec_tecml">米Appleがプログラミング言語「Swift」をOSSとして公開、Linux対応も</a>
<blockquote>
  米Appleは2015年12月3日（米国時間）、プログラミング言語の「Swift」をオープンソースソフトウエア（OSS）として公開した。
  Appleが今回リリースしたSwiftコンパイラーは、従来対応する「iOS」と「OS X」に加えて、新たに「Linux」にも対応した。これによって開発者はSwiftを使ってiOS、OS X、Linuxの三つのOSに対応したアプリケーションを開発できるようになる。
</blockquote>
ただし、以下注意点。
<blockquote>
  なおAppleの「App Store」を使ってiOSやOS X向けにアプリケーションを配信/販売するには、Apple純正の開発環境である「Xcode」に付属するSwiftを使う必要がある。OSS版のSwiftのみを使い、Xcodeを使わずに開発したアプリケーションは、Appleによるアプリケーション審査をパスできない。
</blockquote>
それでもlinux上で動作するアプリケーションをswiftで開発できるなら、学習するモチベーションが5割増です。
早速インストールしてみよう。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1442</wp:post_id>
		<wp:post_date><![CDATA[2016-07-10 13:56:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-10 04:56:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linuxshang-deswiftwoshi-i-iosapuriwokai-fa-dekiru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ios"><![CDATA[iOS]]></category>
		<category domain="post_tag" nicename="swift"><![CDATA[swift]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>日経BPを流し読みしていたら、衝撃的な記事を発見。</p>

<p><a href="http://techon.nikkeibp.co.jp/atcl/column/15/425482/120400059/?n_cid=nbptec_tecml">米Appleがプログラミング言語「Swift」をOSSとして公開、Linux対応も</a></p>

<blockquote>
  <p>米Appleは2015年12月3日（米国時間）、プログラミング言語の「Swift」をオープンソースソフトウエア（OSS）として公開した。
  Appleが今回リリースしたSwiftコンパイラーは、従来対応する「iOS」と「OS X」に加えて、新たに「Linux」にも対応した。これによって開発者はSwiftを使ってiOS、OS X、Linuxの三つのOSに対応したアプリケーションを開発できるようになる。</p>
</blockquote>

<p>ただし、以下注意点。</p>

<blockquote>
  <p>なおAppleの「App Store」を使ってiOSやOS X向けにアプリケーションを配信/販売するには、Apple純正の開発環境である「Xcode」に付属するSwiftを使う必要がある。OSS版のSwiftのみを使い、Xcodeを使わずに開発したアプリケーションは、Appleによるアプリケーション審査をパスできない。</p>
</blockquote>

<p>それでもlinux上で動作するアプリケーションをswiftで開発できるなら、学習するモチベーションが5割増です。</p>

<p>早速インストールしてみよう。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947349485]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533644]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>車のダッシュボードは太陽光発電に最適な件。</title>
		<link>https://tech.blog.uribou.me/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/</link>
		<pubDate>Wed, 13 Jul 2016 04:27:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/zhen-zai-nibei-etedian-yuan-woque-bao-siteoku/">作り途中だった車内発電所</a>、近くで見るととても手抜きだけど一応完成。
車は毎日乗るものではないのだけど、日当たりの良い駐車場に１日中置いてある上、運転中でも大半は太陽に照らされている屋根とダッシュボードのスペースが勿体無い…。
車に太陽光パネルを取り付けるなら屋根が一般的だけど、風雨にさらされて劣化するのが嫌なので、ダッシュボードに取り付けることにしました。
<img src="https://farm8.staticflickr.com/7632/26882816855_fa4580d12c_z_d.jpg" alt="" />
セミフレキシブルという特性に甘えて、両面テープでダッシュボードに貼り付けるという手抜きっぷり。
<img src="https://farm8.staticflickr.com/7443/26830353031_4a88e1e681_z_d.jpg" alt="" />
でも遠目にはそれなりの高級感を以って見れる気がするので、良しとする。
この辺をちゃんとやろうとしたら、ダッシュボードに穴あけたりしないとかなぁ。
蓄電池は容量小さいけど軽くて安い、バイク用12V 20Ahのバッテリーを使います。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41SbQRaU2AL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" rel="noopener">Long WP20-12 GP12170 PE12V17</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バイクパーツセンター     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DLong%2520WP20-12%2520GP12170%2520PE12V17%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FLong%2520WP20-12%2520GP12170%2520PE12V17%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
ノートPCも使えるようにするなら、もう少し容量が欲しいところ。
でも重量増えると、車の燃費が悪くなるし、車内のスペースもとるし…　悩む。
蓄電池の電気を実際に使うには、もう一工夫。シガーライターソケット用の分配器のソケット部分をぶった切って、チャージコントローラの負荷側に接続します。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00742EX9G%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41sVE95uAkL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00742EX9G%2Fref%3Dnosim" target="_blank" rel="noopener">Hanwha USB2ポート搭載 2連シガーソケット分配器 2.1A/1Aの高USB出力によりiPadの充電にも対応</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> ハンファ・ジャパン株式会社     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DHanwha%2520USB2%2583%257C%2581%255B%2583g%2593%258B%258D%25DA%25202%2598A%2583V%2583K%2581%255B%2583%255C%2583P%2583b%2583g%2595%25AA%2594z%258A%25ED%25202.1A%252F1A%2582%25CC%258D%2582USB%258Fo%2597%25CD%2582%25C9%2582%25E6%2582%25E8iPad%2582%25CC%258F%255B%2593d%2582%25C9%2582%25E0%2591%25CE%2589%259E%2581I%2520%255BUSB%2583J%2581%255B%2583%2560%2583%2583%2581%255B%2583W%2583%2583%2581%255B%255D%2520UMA-2CS2USB%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FHanwha%2520USB2%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E6%2590%25AD%25E8%25BC%2589%25202%25E9%2580%25A3%25E3%2582%25B7%25E3%2582%25AC%25E3%2583%25BC%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E5%2588%2586%25E9%2585%258D%25E5%2599%25A8%25202.1A%252F1A%25E3%2581%25AE%25E9%25AB%2598USB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258AiPad%25E3%2581%25AE%25E5%2585%2585%25E9%259B%25BB%25E3%2581%25AB%25E3%2582%2582%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2581%2520%255BUSB%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%255D%2520UMA-2CS2USB%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
これならUSBもシガーソケットも使えるので、ここから更にインバータをかましてAC電源に変換することも可能。
例えばこういうの↓。でもMacbook Air 11インチでもACアダプタ容量は45Wなので、ちょっと足りない…。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0062NOYTW%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/413DrPnpLWL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0062NOYTW%2Fref%3Dnosim" target="_blank" rel="noopener">USB出力付ハイブリッドインバーター FTU-30B</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> セルスター(CELLSTAR)     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DUSB%258Fo%2597%25CD%2595t%2583n%2583C%2583u%2583%258A%2583b%2583h%2583C%2583%2593%2583o%2581%255B%2583%255E%2581%255B%2520FTU-30B%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FUSB%25E5%2587%25BA%25E5%258A%259B%25E4%25BB%2598%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%2520FTU-30B%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
でもここで、容量が足りないからといって容量大きめのインバータ、例えば120Wを使うと、最大120W / 12V = 10Aの電流が蓄電池から流れることになるので、蓄電池とインバータとを接続する電線は最低1.2sq（平方ミリメートル）程度の太さが必要になる…　など、いろいろ考えないといけないので、ご注意を。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1522</wp:post_id>
		<wp:post_date><![CDATA[2016-07-13 13:27:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-13 04:27:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7632/26882816855_fa4580d12c_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/zhen-zai-nibei-etedian-yuan-woque-bao-siteoku/">作り途中だった車内発電所</a>、近くで見るととても手抜きだけど一応完成。</p>

<p>車は毎日乗るものではないのだけど、日当たりの良い駐車場に１日中置いてある上、運転中でも大半は太陽に照らされている屋根とダッシュボードのスペースが勿体無い…。</p>

<p>車に太陽光パネルを取り付けるなら屋根が一般的だけど、風雨にさらされて劣化するのが嫌なので、ダッシュボードに取り付けることにしました。</p>

<p><img src="https://farm8.staticflickr.com/7632/26882816855_fa4580d12c_z_d.jpg" alt="" /></p>

<p>セミフレキシブルという特性に甘えて、両面テープでダッシュボードに貼り付けるという手抜きっぷり。</p>

<p><img src="https://farm8.staticflickr.com/7443/26830353031_4a88e1e681_z_d.jpg" alt="" /></p>

<p>でも遠目にはそれなりの高級感を以って見れる気がするので、良しとする。</p>

<p>この辺をちゃんとやろうとしたら、ダッシュボードに穴あけたりしないとかなぁ。</p>

<p>蓄電池は容量小さいけど軽くて安い、バイク用12V 20Ahのバッテリーを使います。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41SbQRaU2AL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" >Long WP20-12 GP12170 PE12V17</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バイクパーツセンター     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DLong%2520WP20-12%2520GP12170%2520PE12V17%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FLong%2520WP20-12%2520GP12170%2520PE12V17%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>ノートPCも使えるようにするなら、もう少し容量が欲しいところ。</p>

<p>でも重量増えると、車の燃費が悪くなるし、車内のスペースもとるし…　悩む。</p>

<p>蓄電池の電気を実際に使うには、もう一工夫。シガーライターソケット用の分配器のソケット部分をぶった切って、チャージコントローラの負荷側に接続します。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00742EX9G%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41sVE95uAkL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00742EX9G%2Fref%3Dnosim" target="_blank" >Hanwha USB2ポート搭載 2連シガーソケット分配器 2.1A/1Aの高USB出力によりiPadの充電にも対応</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> ハンファ・ジャパン株式会社     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DHanwha%2520USB2%2583%257C%2581%255B%2583g%2593%258B%258D%25DA%25202%2598A%2583V%2583K%2581%255B%2583%255C%2583P%2583b%2583g%2595%25AA%2594z%258A%25ED%25202.1A%252F1A%2582%25CC%258D%2582USB%258Fo%2597%25CD%2582%25C9%2582%25E6%2582%25E8iPad%2582%25CC%258F%255B%2593d%2582%25C9%2582%25E0%2591%25CE%2589%259E%2581I%2520%255BUSB%2583J%2581%255B%2583%2560%2583%2583%2581%255B%2583W%2583%2583%2581%255B%255D%2520UMA-2CS2USB%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FHanwha%2520USB2%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E6%2590%25AD%25E8%25BC%2589%25202%25E9%2580%25A3%25E3%2582%25B7%25E3%2582%25AC%25E3%2583%25BC%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E5%2588%2586%25E9%2585%258D%25E5%2599%25A8%25202.1A%252F1A%25E3%2581%25AE%25E9%25AB%2598USB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258AiPad%25E3%2581%25AE%25E5%2585%2585%25E9%259B%25BB%25E3%2581%25AB%25E3%2582%2582%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2581%2520%255BUSB%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%255D%2520UMA-2CS2USB%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>これならUSBもシガーソケットも使えるので、ここから更にインバータをかましてAC電源に変換することも可能。</p>

<p>例えばこういうの↓。でもMacbook Air 11インチでもACアダプタ容量は45Wなので、ちょっと足りない…。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0062NOYTW%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/413DrPnpLWL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601
xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0062NOYTW%2Fref%3Dnosim" target="_blank" >USB出力付ハイブリッドインバーター FTU-30B</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> セルスター(CELLSTAR)     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DUSB%258Fo%2597%25CD%2595t%2583n%2583C%2583u%2583%258A%2583b%2583h%2583C%2583%2593%2583o%2581%255B%2583%255E%2581%255B%2520FTU-30B%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FUSB%25E5%2587%25BA%25E5%258A%259B%25E4%25BB%2598%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%2520FTU-30B%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>でもここで、容量が足りないからといって容量大きめのインバータ、例えば120Wを使うと、最大120W / 12V = 10Aの電流が蓄電池から流れることになるので、蓄電池とインバータとを接続する電線は最低1.2sq（平方ミリメートル）程度の太さが必要になる…　など、いろいろ考えないといけないので、ご注意を。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941070310]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533646]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>LinuxでiOSアプリを開発できないらしい。</title>
		<link>https://tech.blog.uribou.me/linuxshang-deiosapuriwokai-fa-dekinairasii/</link>
		<pubDate>Sun, 10 Jul 2016 06:31:25 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/linuxshang-deiosapuriwokai-fa-dekinairasii/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
「<a href="http://blog.rinka-blossom.com/linuxshang-deswiftwoshi-i-iosapuriwokai-fa-dekiru/">LinuxでiOSアプリを開発できるらしい</a>」というのは、間違いでした…。少なくとも現時点では。
とりあえず分かったことは以下の通り。
<ul>
<li>FoundationライブラリがOSS化された</li>
<li>その上に乗るCocoaやUIKitはOSS化されていない</li>
<li>Objective-C runtimeもOSS化されていない</li>
</ul>
そして、<strong>OSS化されたFoundationが<a href="https://github.com/apple/swift-corelibs-foundation">Githubに公開されている</a></strong>んですが、そのREADME.mdにも以下のように書いてあります。
<blockquote>
  <strong>Why not make the existing Objective-C implementation of Foundation open source?</strong><br />
  Foundation on Darwin is written primarily in Objective-C, and the Objective-C runtime is not part of the Swift open source project. CoreFoundation, however, is a portable C library and does not require the Objective-C runtime. It contains much of the behavior that is exposed via the Foundation API. Therefore, it is used on all platforms including Linux.
</blockquote>
ということで、実際に試してみると、そもそもLinux版SwiftではUIKitやCocoa（お洒落なGUIが作れるライブラリですね）をimportできません。
Linuxでおなじみ、Glibcはimportして使用することができるところをみると、SwiftインタフェースでLinux CUIアプリケーション作れる環境を用意した感じですかね。あくまでSwift言語の学習用ということか…。
<h1>Linux版Swiftインストール手順</h1>
せっかくなのでまとめておきます。
基本的に、<a href="https://swift.org/download/#using-downloads">Swift公式ページ</a>に書かれている通りです。
<pre><code class="bash">~$ wget https://swift.org/builds/swift-3.0-preview-2/ubuntu1404/swift-3.0-PREVIEW-2/swift-3.0-PREVIEW-2-ubuntu14.04.tar.gz
~$ tar xzf swift-3.0-PREVIEW-2-ubuntu14.04.tar.gz
~$ sudo mv sudo mv swift-3.0-PREVIEW-2-ubuntu14.04 /usr/local/
~$ sudo bash -c "echo 'export=?${PATH}:/usr/local/swift-3.0-PREVIEW-2-ubuntu14.04/usr/bin' &gt; /etc/profile.d/swift_toolchain.sh"
~$ exec -l ${SHELL}
</code></pre>
<h1>簡単にSwiftを触ってみる</h1>
Swift言語をちゃんと勉強したわけではないので、本当に基本的なところだけ試してみました。Glibcがimportできるとあって、見慣れた関数が使えます。
<pre><code class="swift">  3&gt; import Glibc
  4&gt; print(sin(3.141592))
6.53589793076242e-07
  5&gt; print(cos(3.141592))
-0.999999999999786
  6&gt;
  7&gt; func test() {
  8.     print(1+2+3)
  9. }
 10&gt;
 11&gt; test()
6
 12&gt; print(rand())
1804289383
</code></pre>
例えば、randと入力してTabキーを２回押すと、補完候補が出力されます。bashやipythonと同じで、何もしなくても最初からauto completionが効いていて、とても良い。
<pre><code class="swift"> 15&gt; rand
Available completions:
        (): Int32
        rand() -&gt; Int32
        rand_r(__seed: UnsafeMutablePointer&lt;UInt32&gt;) -&gt; Int32
        random() -&gt; Int
        random_data
        random_r(__buf: UnsafeMutablePointer&lt;random_data&gt;, __result: UnsafeMutablePointer&lt;Int32&gt;) -&gt; Int32
</code></pre>
<h1>感想</h1>
あくまでSwift言語の勉強用と割り切って、Macを買う前にLinuxで触っておく、くらいですかね。使うメリットを見出すとすれば…。要望をコードでpushしてpull requestできるだけのスキルを持っていれば、また別のメリットもあるんでしょうけど…。
既にMac持ってる人にとっては、XCode入れればもれなくターミナルからSwift使えるので、メリットは特にないのかな…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1562</wp:post_id>
		<wp:post_date><![CDATA[2016-07-10 15:31:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-10 06:31:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linuxshang-deiosapuriwokai-fa-dekinairasii]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ios"><![CDATA[iOS]]></category>
		<category domain="post_tag" nicename="swift"><![CDATA[swift]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
「<a href="http://blog.rinka-blossom.com/linuxshang-deswiftwoshi-i-iosapuriwokai-fa-dekiru/">LinuxでiOSアプリを開発できるらしい</a>」というのは、間違いでした…。少なくとも現時点では。</p>

<p>とりあえず分かったことは以下の通り。</p>

<ul>
<li>FoundationライブラリがOSS化された</li>
<li>その上に乗るCocoaやUIKitはOSS化されていない</li>
<li>Objective-C runtimeもOSS化されていない</li>
</ul>

<p>そして、<strong>OSS化されたFoundationが<a href="https://github.com/apple/swift-corelibs-foundation">Githubに公開されている</a></strong>んですが、そのREADME.mdにも以下のように書いてあります。</p>

<blockquote>
  <p><strong>Why not make the existing Objective-C implementation of Foundation open source?</strong> <br />
  Foundation on Darwin is written primarily in Objective-C, and the Objective-C runtime is not part of the Swift open source project. CoreFoundation, however, is a portable C library and does not require the Objective-C runtime. It contains much of the behavior that is exposed via the Foundation API. Therefore, it is used on all platforms including Linux.</p>
</blockquote>

<p>ということで、実際に試してみると、そもそもLinux版SwiftではUIKitやCocoa（お洒落なGUIが作れるライブラリですね）をimportできません。</p>

<p>Linuxでおなじみ、Glibcはimportして使用することができるところをみると、SwiftインタフェースでLinux CUIアプリケーション作れる環境を用意した感じですかね。あくまでSwift言語の学習用ということか…。</p>

<h1 id="linuxswift">Linux版Swiftインストール手順</h1>

<p>せっかくなのでまとめておきます。</p>

<p>基本的に、<a href="https://swift.org/download/#using-downloads">Swift公式ページ</a>に書かれている通りです。</p>

<pre><code class="language-bash">~$ wget https://swift.org/builds/swift-3.0-preview-2/ubuntu1404/swift-3.0-PREVIEW-2/swift-3.0-PREVIEW-2-ubuntu14.04.tar.gz
~$ tar xzf swift-3.0-PREVIEW-2-ubuntu14.04.tar.gz
~$ sudo mv sudo mv swift-3.0-PREVIEW-2-ubuntu14.04 /usr/local/
~$ sudo bash -c "echo 'export=?${PATH}:/usr/local/swift-3.0-PREVIEW-2-ubuntu14.04/usr/bin' &gt; /etc/profile.d/swift_toolchain.sh"
~$ exec -l ${SHELL}
</code></pre>

<h1 id="swift">簡単にSwiftを触ってみる</h1>

<p>Swift言語をちゃんと勉強したわけではないので、本当に基本的なところだけ試してみました。Glibcがimportできるとあって、見慣れた関数が使えます。</p>

<pre><code class="language-swift">  3&gt; import Glibc
  4&gt; print(sin(3.141592))
6.53589793076242e-07  
  5&gt; print(cos(3.141592))
-0.999999999999786
  6&gt;
  7&gt; func test() {
  8.     print(1+2+3)
  9. }
 10&gt;
 11&gt; test()
6  
 12&gt; print(rand())
1804289383  
</code></pre>

<p>例えば、randと入力してTabキーを２回押すと、補完候補が出力されます。bashやipythonと同じで、何もしなくても最初からauto completionが効いていて、とても良い。</p>

<pre><code class="language-swift"> 15&gt; rand
Available completions:  
        (): Int32
        rand() -&gt; Int32
        rand_r(__seed: UnsafeMutablePointer&lt;UInt32&gt;) -&gt; Int32
        random() -&gt; Int
        random_data
        random_r(__buf: UnsafeMutablePointer&lt;random_data&gt;, __result: UnsafeMutablePointer&lt;Int32&gt;) -&gt; Int32
</code></pre>

<h1 id="">感想</h1>

<p>あくまでSwift言語の勉強用と割り切って、Macを買う前にLinuxで触っておく、くらいですかね。使うメリットを見出すとすれば…。要望をコードでpushしてpull requestできるだけのスキルを持っていれば、また別のメリットもあるんでしょうけど…。</p>

<p>既にMac持ってる人にとっては、XCode入れればもれなくターミナルからSwift使えるので、メリットは特にないのかな…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941876208]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663165]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>車のダッシュボードに設置した太陽光発電。ノートPC＋iPhoneテザリングでブログ投稿も可能。</title>
		<link>https://tech.blog.uribou.me/note-pc-can-work-on-car-with-solar-system/</link>
		<pubDate>Sat, 06 Aug 2016 12:55:10 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/note-pc-can-work-on-car-with-solar-system/</guid>
		<description></description>
		<content:encoded><![CDATA[この投稿、車内で（もちろん駐車して）書きました。下記のブツを、ノートPC（Mac book air 11inch）とiPhone5sの電源として使いながら。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">車のダッシュボードは太陽光発電に最適な件。 _ <a href="https://t.co/Rqtet2NKZy">https://t.co/Rqtet2NKZy</a> <a href="https://twitter.com/hashtag/%E3%82%AA%E3%83%95%E3%82%B0%E3%83%AA%E3%83%83%E3%83%89?src=hash">#オフグリッド</a> <a href="https://twitter.com/hashtag/%E5%A4%AA%E9%99%BD%E5%85%89?src=hash">#太陽光</a> <a href="https://twitter.com/hashtag/%E7%99%BA%E9%9B%BB?src=hash">#発電</a> <a href="https://twitter.com/hashtag/%E8%93%84%E9%9B%BB?src=hash">#蓄電</a> <a href="https://twitter.com/hashtag/%E8%BB%8A%E4%B8%AD%E6%B3%8A?src=hash">#車中泊</a> <a href="https://twitter.com/hashtag/%E3%82%BD%E3%83%BC%E3%83%A9%E3%83%BC%E3%83%91%E3%83%8D%E3%83%AB?src=hash">#ソーラーパネル</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/733867312919371776">2016年5月21日</a></blockquote>

<blockquote>
  ノートPCも使えるようにするなら、もう少し容量が欲しいところ。
</blockquote>
とか言っちゃいましたが、間違いでした。バイク用のバッテリーでも十分いけますね。記事の後ろの方でちゃんと計算します。
こちらが運転席と助手席の間に設置した、蓄電池とチャージコントローラと交流変換インバータ。
<img src="https://farm9.staticflickr.com/8692/28222230746_712369a668_z_d.jpg" alt="" />
こちらはダッシュボードに設置した薄型太陽光パネルです。全面真っ黒なのがいい。フロントガラスに映りこまないので、運転の邪魔になることがないのです。
<img src="https://farm9.staticflickr.com/8625/28178358731_16c5013ff7_z_d.jpg" alt="" />
使用した交流インバータは、大学生の頃に購入して今も使っている、サンワサプライ製の75W。そろそろ15年経ちますけど、まだまだ現役で使えそうです。ヒューズは何度か交換しましたけどね。
<img src="https://farm8.staticflickr.com/7738/27640928834_881729bbc1_z_d.jpg" alt="" />
Mac book air 11inchが45W必要で、iPhoneは多分5Wかな？ 合計50Wの出力が必要と。
下記のバイク用12V 20Ahバッテリーを使っているので、負荷側が50Wということは、最大で50W/12V=4.2Aの電流を流し続けることになる。20Ahのバッテリーなので、20Ah/4.2A=4.7h=４時間４２分 の間は、バッテリーだけでノードPCとiPhoneテザリングを稼働させることが可能。すごい！
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41SbQRaU2AL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" rel="noopener">Long WP20-12 GP12170 PE12V17</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バイクパーツセンター     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DLong%2520WP20-12%2520GP12170%2520PE12V17%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FLong%2520WP20-12%2520GP12170%2520PE12V17%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
この記事を書いたときは晴れた昼間だったので、バッテリーだけでなく、太陽光パネルからの電流も入っていたなので、さらに駆動時間は延びていたはずですね。100Wくらいの負荷なら、この程度の小規模システムでも十分使えるかも…。
それではまた。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1563</wp:post_id>
		<wp:post_date><![CDATA[2016-08-06 21:55:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-06 12:55:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[note-pc-can-work-on-car-with-solar-system]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm9.staticflickr.com/8692/28222230746_712369a668_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>この投稿、車内で（もちろん駐車して）書きました。下記のブツを、ノートPC（Mac book air 11inch）とiPhone5sの電源として使いながら。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">車のダッシュボードは太陽光発電に最適な件。 _ <a href="https://t.co/Rqtet2NKZy">https://t.co/Rqtet2NKZy</a> <a href="https://twitter.com/hashtag/%E3%82%AA%E3%83%95%E3%82%B0%E3%83%AA%E3%83%83%E3%83%89?src=hash">#オフグリッド</a> <a href="https://twitter.com/hashtag/%E5%A4%AA%E9%99%BD%E5%85%89?src=hash">#太陽光</a> <a href="https://twitter.com/hashtag/%E7%99%BA%E9%9B%BB?src=hash">#発電</a> <a href="https://twitter.com/hashtag/%E8%93%84%E9%9B%BB?src=hash">#蓄電</a> <a href="https://twitter.com/hashtag/%E8%BB%8A%E4%B8%AD%E6%B3%8A?src=hash">#車中泊</a> <a href="https://twitter.com/hashtag/%E3%82%BD%E3%83%BC%E3%83%A9%E3%83%BC%E3%83%91%E3%83%8D%E3%83%AB?src=hash">#ソーラーパネル</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/733867312919371776">2016年5月21日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote>
  <p>ノートPCも使えるようにするなら、もう少し容量が欲しいところ。</p>
</blockquote>

<p>とか言っちゃいましたが、間違いでした。バイク用のバッテリーでも十分いけますね。記事の後ろの方でちゃんと計算します。</p>

<p>こちらが運転席と助手席の間に設置した、蓄電池とチャージコントローラと交流変換インバータ。</p>

<p><img src="https://farm9.staticflickr.com/8692/28222230746_712369a668_z_d.jpg" alt="" /></p>

<p>こちらはダッシュボードに設置した薄型太陽光パネルです。全面真っ黒なのがいい。フロントガラスに映りこまないので、運転の邪魔になることがないのです。</p>

<p><img src="https://farm9.staticflickr.com/8625/28178358731_16c5013ff7_z_d.jpg" alt="" /></p>

<p>使用した交流インバータは、大学生の頃に購入して今も使っている、サンワサプライ製の75W。そろそろ15年経ちますけど、まだまだ現役で使えそうです。ヒューズは何度か交換しましたけどね。</p>

<p><img src="https://farm8.staticflickr.com/7738/27640928834_881729bbc1_z_d.jpg" alt="" /></p>

<p>Mac book air 11inchが45W必要で、iPhoneは多分5Wかな？ 合計50Wの出力が必要と。</p>

<p>下記のバイク用12V 20Ahバッテリーを使っているので、負荷側が50Wということは、最大で50W/12V=4.2Aの電流を流し続けることになる。20Ahのバッテリーなので、20Ah/4.2A=4.7h=４時間４２分 の間は、バッテリーだけでノードPCとiPhoneテザリングを稼働させることが可能。すごい！</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41SbQRaU2AL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB007AEWAXO%2Fref%3Dnosim" target="_blank" >Long WP20-12 GP12170 PE12V17</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バイクパーツセンター     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DLong%2520WP20-12%2520GP12170%2520PE12V17%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FLong%2520WP20-12%2520GP12170%2520PE12V17%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>この記事を書いたときは晴れた昼間だったので、バッテリーだけでなく、太陽光パネルからの電流も入っていたなので、さらに駆動時間は延びていたはずですね。100Wくらいの負荷なら、この程度の小規模システムでも十分使えるかも…。</p>

<p>それではまた。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1564]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941094577]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562647]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>191</wp:comment_id>
			<wp:comment_author><![CDATA[Mag-sign up sa Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[39256404@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ph/register?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.95]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-27 12:09:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-27 03:09:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[Inscription sur www.binance.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[17900142@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/fr/join?ref=OMM3XK51</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.148]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-29 08:34:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-28 23:34:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>305</wp:comment_id>
			<wp:comment_author><![CDATA[Inscreva-se na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[35924146@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/pt-BR/join?ref=W0BCQMF1</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.116]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-08-02 00:49:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-08-01 15:49:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>「採れたて果実のおいしさ」が、紀伊路屋さんから届きました。4歳の娘が一気に飲み干す勢いの美味しさ。</title>
		<link>https://tech.blog.uribou.me/ji-yi-lu-wu-sankarajie-itaownerspurante-zhi-ziyusu/</link>
		<pubDate>Sun, 17 Jul 2016 14:50:20 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/ji-yi-lu-wu-sankarajie-itaownerspurante-zhi-ziyusu/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
今年３月に思い切って登録した、<a href="http://www.kiijiya.com/">紀伊路屋（きいじや）さん</a>の<a href="https://owner-style.com/">蜜柑農園オーナー</a>。
<blockquote class="twitter-tweet" data-partner="tweetdeck"><p lang="ja" dir="ltr">危ない。。締め切りまで時間あったのに既に満員御礼。蜜柑好き家族なので、思い切ってオーナーになってみました。<br />---<br />【満員御礼】400年の歴史が育む極上の有田みかんと、幻の希少果実 <a href="https://t.co/aCw9TR9iTH">https://t.co/aCw9TR9iTH</a> <a href="https://t.co/roA4At9TWG">https://t.co/roA4At9TWG</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/705933568103460865">March 5, 2016</a></blockquote>

それから少し経って７月初め、じゃばらとみかんのオレンジエード発送準備中のお知らせが。
<blockquote class="twitter-tweet" data-partner="tweetdeck"><p lang="ja" dir="ltr">パンチの効いた「じゃばらとみかんのオレンジエード」のお知らせが！楽しみ。<br />OWNERS | じゃばらとみかんのオレンジエード <a href="https://t.co/r3WAd3kXsS">https://t.co/r3WAd3kXsS</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/750118923605979137">July 5, 2016</a></blockquote>

そして届きました。まさか４本も送ってもらえるとは思わなかったので、びっくり(◎_◎;)
<img src="https://farm9.staticflickr.com/8625/28158733982_9b8631e211_z_d.jpg" alt="" />
重みで抜けないように、底が補強されていたり、暑中見舞いの手紙が入っていたりと、心遣いがそこかしこに。これを81箱も荷詰めして発送したのか・・・。ありがとうございますm(._.)m
<img src="https://farm9.staticflickr.com/8809/28228269016_a8450afccd_z_d.jpg" alt="" />
<img src="https://farm8.staticflickr.com/7347/28158731602_f4c60545f5_z_d.jpg" alt="" />
で、１本しかない「じゃばらとみかんのオレンジエード」、早速開封していただきました。
言われていた通り、、<strong>パンチが効いた</strong>の意味がわかりました。酸味の強い、大人向け蜜柑ジュースといった感じ。~~４歳の娘にはちょっと無理かな・・・。ありがたく大人がいただきます。~~ <strong>追加情報あり。[追記]参照。</strong>
<img src="https://farm9.staticflickr.com/8777/28184332861_acdd5bbfa3_z_d.jpg" alt="" />
早く帰ってこないかな・・・。
嫁と娘たち３人は１週間旅行中なので、一人寂しく蜜柑ジュースで晩酌する夜となりました。寂しい。
<strong>[7/18追記]</strong>
<strong>4歳の娘に、じゃばらとみかんのオレンジエードを「ちょっと酸っぱいかもよ？」と前置いて与えたところ、「！ おいしい」と言ってグビグビ飲み干しました。</strong>
<strong>普段は濃縮還元のオレンジジュースを飲んでいる娘ですが、嫁曰く、「あまり好きそうではない」のに、じゃばらとみかんのオレンジエードはいくらでも飲みたがって、もったいないからまた明日！と止めたほどでした。</strong>
<strong>紀伊路屋さん、_がる場を提供してくださったOWNERSさん、ありがとうございます。今後もお世話になりますので、宜しくお願いします。</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1565</wp:post_id>
		<wp:post_date><![CDATA[2016-07-17 23:50:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-17 14:50:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ji-yi-lu-wu-sankarajie-itaownerspurante-zhi-ziyusu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="owners"><![CDATA[OWNERS]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm9.staticflickr.com/8625/28158733982_9b8631e211_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
今年３月に思い切って登録した、<a href="http://www.kiijiya.com/">紀伊路屋（きいじや）さん</a>の<a href="https://owner-style.com/">蜜柑農園オーナー</a>。</p>

<blockquote class="twitter-tweet" data-partner="tweetdeck"><p lang="ja" dir="ltr">危ない。。締め切りまで時間あったのに既に満員御礼。蜜柑好き家族なので、思い切ってオーナーになってみました。<br>---<br>【満員御礼】400年の歴史が育む極上の有田みかんと、幻の希少果実 <a href="https://t.co/aCw9TR9iTH">https://t.co/aCw9TR9iTH</a> <a href="https://t.co/roA4At9TWG">https://t.co/roA4At9TWG</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/705933568103460865">March 5, 2016</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>それから少し経って７月初め、じゃばらとみかんのオレンジエード発送準備中のお知らせが。</p>

<blockquote class="twitter-tweet" data-partner="tweetdeck"><p lang="ja" dir="ltr">パンチの効いた「じゃばらとみかんのオレンジエード」のお知らせが！楽しみ。<br>OWNERS | じゃばらとみかんのオレンジエード <a href="https://t.co/r3WAd3kXsS">https://t.co/r3WAd3kXsS</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/750118923605979137">July 5, 2016</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>そして届きました。まさか４本も送ってもらえるとは思わなかったので、びっくり(◎_◎;)</p>

<p><img src="https://farm9.staticflickr.com/8625/28158733982_9b8631e211_z_d.jpg" alt="" /></p>

<p>重みで抜けないように、底が補強されていたり、暑中見舞いの手紙が入っていたりと、心遣いがそこかしこに。これを81箱も荷詰めして発送したのか・・・。ありがとうございますm(._.)m</p>

<p><img src="https://farm9.staticflickr.com/8809/28228269016_a8450afccd_z_d.jpg" alt="" /></p>

<p><img src="https://farm8.staticflickr.com/7347/28158731602_f4c60545f5_z_d.jpg" alt="" /></p>

<p>で、１本しかない「じゃばらとみかんのオレンジエード」、早速開封していただきました。</p>

<p>言われていた通り、、<strong>パンチが効いた</strong>の意味がわかりました。酸味の強い、大人向け蜜柑ジュースといった感じ。<del>４歳の娘にはちょっと無理かな・・・。ありがたく大人がいただきます。</del> <strong>追加情報あり。[追記]参照。</strong></p>

<p><img src="https://farm9.staticflickr.com/8777/28184332861_acdd5bbfa3_z_d.jpg" alt="" /></p>

<p>早く帰ってこないかな・・・。</p>

<p>嫁と娘たち３人は１週間旅行中なので、一人寂しく蜜柑ジュースで晩酌する夜となりました。寂しい。</p>

<p><strong>[7/18追記]</strong></p>

<p><strong>4歳の娘に、じゃばらとみかんのオレンジエードを「ちょっと酸っぱいかもよ？」と前置いて与えたところ、「！ おいしい」と言ってグビグビ飲み干しました。</strong></p>

<p><strong>普段は濃縮還元のオレンジジュースを飲んでいる娘ですが、嫁曰く、「あまり好きそうではない」のに、じゃばらとみかんのオレンジエードはいくらでも飲みたがって、もったいないからまた明日！と止めたほどでした。</strong></p>

<p><strong>紀伊路屋さん、_がる場を提供してくださったOWNERSさん、ありがとうございます。今後もお世話になりますので、宜しくお願いします。</strong></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1566]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6918842079]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548385]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Pythonで実行中のコードの情報を取得する方法。例えば関数名とか。</title>
		<link>https://tech.blog.uribou.me/python-inspect/</link>
		<pubDate>Fri, 15 Jul 2016 22:17:42 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-inspect/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
テスト実装していて、ふと「今実行中の関数名を取得するにはどうするんだろう？」と思って調べてみると、いつもお世話になっているQiitaに投稿している人がいた。助かります。 m(._.)m
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Pythonネタ。実行中の関数・メソッド名を取得したい on <a href="https://twitter.com/Qiita">@Qiita</a> <a href="https://t.co/CJsM5lp2Uh">https://t.co/CJsM5lp2Uh</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/754127051234304000">2016年7月16日</a></blockquote>

ちなみにPython2でも3でも同じ方法で取得できました。
<pre><code class="python">&gt;&gt;&gt; def printFuncName():
...     print sys._getframe().f_code.co_name
...
&gt;&gt;&gt; printFuncName()
printFuncName
</code></pre>
ただ、さすがにこのコードは覚えにくいな・・・。sysモジュールのprivateな関数使ってるし・・・。
ということで「frame」をキーワードに調べてみると、ちゃんと用意されていました。inspectモジュールを使って、もっとスマートに取得できるようです。
<h1>inspectモジュールでスタック情報を参照する</h1>
<strong><a href="http://docs.python.jp/2/library/inspect.html#inspect-stack">inspect: インタプリタスタック</a></strong>から引用します。ちなみに、Python3.5はまたちょっと違うようですが、少なくとも関数の名前のインデックスは同じです。
<blockquote>
  以下の関数には、戻り値として”フレームレコード”を返す関数があります。 “フレームレコード”は長さ6のタプルで、以下の値を格納しています: フレームオブジェクト、ファイル名、実行中の行番号、関数名、コンテキストのソース行のリスト、ソース行のリストにおける実行中の行のインデックス。
</blockquote>
組み込みでよくお目にかかるスタックフレームのPython版ですね。そして以下注釈あり。
<blockquote>
  フレームレコードの最初の要素などのフレームオブジェクトへの参照を保存すると、循環参照になってしまう場合があります。循環参照ができると、 Python の循環参照検出機能を有効にしていたとしても関連するオブジェクトが参照しているすべてのオブジェクトが解放されにくくなり、明示的に参照を削除しないとメモリ消費量が増大する恐れがあります。
</blockquote>
<h1>スタック情報から関数名を取得するサンプルコード</h1>
ということで、取得したframeは別の変数に保持したりせず、さっさと必要な情報をもらって何もせず返すようにしましょう。
<pre><code class="python">def hogeFunction():
    f = inspect.currentframe()
    return inspect.getframeinfo(f)[2]
print(hogeFunction())
</code></pre>
上記のコードを実行すると、<code>hogeFunction</code>文字列が出力されます。この関数をそのまま使うと常にhogeFunctionが出力されちゃうので、<code>inspect.getframeinfo(inspect.currentframe())[2]</code>を見たいところに埋め込むのが良いと思います。
ちなみに、getframeinfo()が返すタプルをそのまま出力すると<code>Traceback(filename='&lt;ipython-input-27-52b24ab92ea5&gt;', lineno=3, function='hogeFunction', code_context=['    return inspect.getframeinfo(f)?n'], index=0)</code>となります。
<h1>おまけ</h1>
inspectモジュールにはその他にも色々と便利そうな関数が用意されていますね。inspectが示す通り、テストや不具合解析なんかで便利に使えそうです。
<pre><code>inspect.ismodule(object)(原文)
オブジェクトがモジュールの場合真を返します。
inspect.isclass(object)(原文)
オブジェクトが組み込みか Python が生成したクラスの場合に真を返します。
inspect.ismethod(object)(原文)
オブジェクトがメソッドの場合真を返します。
inspect.isfunction(object)(原文)
オブジェクトが Python 関数(lambda 式で生成されたものを含む) の場合に真を返します。
inspect.isgeneratorfunction(object)(原文)
object が Python のジェネレータ関数の場合真を返します。
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1568</wp:post_id>
		<wp:post_date><![CDATA[2016-07-16 07:17:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-15 22:17:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-inspect]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
テスト実装していて、ふと「今実行中の関数名を取得するにはどうするんだろう？」と思って調べてみると、いつもお世話になっているQiitaに投稿している人がいた。助かります。 m(._.)m</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Pythonネタ。実行中の関数・メソッド名を取得したい on <a href="https://twitter.com/Qiita">@Qiita</a> <a href="https://t.co/CJsM5lp2Uh">https://t.co/CJsM5lp2Uh</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/754127051234304000">2016年7月16日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>ちなみにPython2でも3でも同じ方法で取得できました。</p>
<pre><code class="language-python">&gt;&gt;&gt; def printFuncName():
...     print sys._getframe().f_code.co_name
...
&gt;&gt;&gt; printFuncName()
printFuncName
</code></pre>
<p>ただ、さすがにこのコードは覚えにくいな・・・。sysモジュールのprivateな関数使ってるし・・・。</p>
<p>ということで「frame」をキーワードに調べてみると、ちゃんと用意されていました。inspectモジュールを使って、もっとスマートに取得できるようです。</p>
<h1 id="inspect">inspectモジュールでスタック情報を参照する</h1>
<p><strong><a href="http://docs.python.jp/2/library/inspect.html#inspect-stack">inspect: インタプリタスタック</a></strong>から引用します。ちなみに、Python3.5はまたちょっと違うようですが、少なくとも関数の名前のインデックスは同じです。</p>
<blockquote>
  <p>以下の関数には、戻り値として”フレームレコード”を返す関数があります。 “フレームレコード”は長さ6のタプルで、以下の値を格納しています: フレームオブジェクト、ファイル名、実行中の行番号、関数名、コンテキストのソース行のリスト、ソース行のリストにおける実行中の行のインデックス。</p>
</blockquote>
<p>組み込みでよくお目にかかるスタックフレームのPython版ですね。そして以下注釈あり。</p>
<blockquote>
  <p>フレームレコードの最初の要素などのフレームオブジェクトへの参照を保存すると、循環参照になってしまう場合があります。循環参照ができると、 Python の循環参照検出機能を有効にしていたとしても関連するオブジェクトが参照しているすべてのオブジェクトが解放されにくくなり、明示的に参照を削除しないとメモリ消費量が増大する恐れがあります。</p>
</blockquote>
<h1 id="">スタック情報から関数名を取得するサンプルコード</h1>
<p>ということで、取得したframeは別の変数に保持したりせず、さっさと必要な情報をもらって何もせず返すようにしましょう。</p>
<pre><code class="language-python">def hogeFunction():
    f = inspect.currentframe()
    return inspect.getframeinfo(f)[2]
print(hogeFunction())
</code></pre>
<p>上記のコードを実行すると、<code>hogeFunction</code>文字列が出力されます。この関数をそのまま使うと常にhogeFunctionが出力されちゃうので、<code>inspect.getframeinfo(inspect.currentframe())[2]</code>を見たいところに埋め込むのが良いと思います。</p>
<p>ちなみに、getframeinfo()が返すタプルをそのまま出力すると<code>Traceback(filename='&lt;ipython-input-27-52b24ab92ea5&gt;', lineno=3, function='hogeFunction', code_context=['    return inspect.getframeinfo(f)?n'], index=0)</code>となります。</p>
<h1 id="">おまけ</h1>
<p>inspectモジュールにはその他にも色々と便利そうな関数が用意されていますね。inspectが示す通り、テストや不具合解析なんかで便利に使えそうです。</p>
<pre><code>inspect.ismodule(object)(原文)
オブジェクトがモジュールの場合真を返します。
inspect.isclass(object)(原文)
オブジェクトが組み込みか Python が生成したクラスの場合に真を返します。
inspect.ismethod(object)(原文)
オブジェクトがメソッドの場合真を返します。
inspect.isfunction(object)(原文)
オブジェクトが Python 関数(lambda 式で生成されたものを含む) の場合に真を返します。
inspect.isgeneratorfunction(object)(原文)
object が Python のジェネレータ関数の場合真を返します。
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941233373]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548384]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>197</wp:comment_id>
			<wp:comment_author><![CDATA[free binance account]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[13197691@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/en/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.108]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-30 13:22:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-30 04:22:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>276</wp:comment_id>
			<wp:comment_author><![CDATA[OKAMA KENPU]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[miriammitchell@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://sports.unisda.ac.id/live-streaming-chelsea-vs-arsenal-europa-league/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.253.41.141]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-08 19:52:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-08 10:52:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I very delighted to find this internet site on bing, just what I was searching for as well saved to fav]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>手軽にIoTしたいなら、XBeeがオススメです。</title>
		<link>https://tech.blog.uribou.me/recommend-xbee/</link>
		<pubDate>Thu, 21 Jul 2016 05:38:50 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/recommend-xbee/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
IoTといえば、何かしらのセンサーから収集したデータをクラウドサーバに溜め込んで、何かしらのサービスを提供することですよね。
センサーデータを送受信するのに一番手軽なのはUART。RS232C経由のシリアルデータです。でもこれは当然有線なので、ケーブル長やレイアウトを考える必要があり、不便極まりない。
ということで、これを低消費電力性を実現しながら無線化したのが、XBeeという製品です。ざっくり言うとそんな感じ。
<h1>XBee活用事例</h1>
XBeeを活用したスマートアグリカルチャーの研究事例が、既にあったりします。検索すると他にも色々出て…こないんですよね。そんなに流行ってないのかな。結構便利なのに。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">スマートアグリカルチャー（賢い農業）へのXBee活用事例。<a href="https://t.co/0PcQLjINVd">https://t.co/0PcQLjINVd</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/756121838523064321">2016年7月21日</a></blockquote>

<h1>どこで手に入る？</h1>
アンテナ形状ごとにバリエーションありますが、ZBシリーズで揃えれば通信規格は同じなので、普通に相互通信が可能です。
個人的には省スペースなPCBタイプ（基盤内部にアンテナを内蔵している）がオススメ。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE523BC%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41B0YF7Tz7L._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE523BC%2Fref%3Dnosim" target="_blank" rel="noopener">XBee ZB（S2C） / PCBアンテナ型</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> スイッチサイエンス     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DXBee%2520ZB%2581iS2C%2581j%2520%252F%2520PCB%2583A%2583%2593%2583e%2583i%258C%255E%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FXBee%2520ZB%25EF%25BC%2588S2C%25EF%25BC%2589%2520%252F%2520PCB%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%259E%258B%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE4D0U6%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41kz3MEcYUL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE4D0U6%2Fref%3Dnosim" target="_blank" rel="noopener">XBee ZB（S2C） / ワイヤアンテナ型</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> スイッチサイエンス     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DXBee%2520ZB%2581iS2C%2581j%2520%252F%2520%2583%258F%2583C%2583%2584%2583A%2583%2593%2583e%2583i%258C%255E%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FXBee%2520ZB%25EF%25BC%2588S2C%25EF%25BC%2589%2520%252F%2520%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%259E%258B%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h1>どうやって使う？</h1>
このXBee、今となっては超有名なArduinoとは違って、自分で書いたコードをコンパイルすることはできません（できる製品もあるっぽいんですが）。
出来合いのファームウェアを選んで書くだけというシンプル仕様。
ファームを書くまではシンプルなんですが、狙った通りに動かすための<strong>設定</strong>はかなりしんどいです。
それらを一括してやるための専用公式アプリが公開されています。もちろん無料。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">XCTU - Next Gen Configuration Platform for XBee/RF Solutions - Digi International <a href="https://t.co/6Udsld4uLq">https://t.co/6Udsld4uLq</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/756129849186525185">2016年7月21日</a></blockquote>

このXBee設定方法や理屈の詳細は、オライリーらしからぬ明るい表紙の下記の本を熟読するのがオススメです。センサー類をXBeeに接続して無線で監視するような本格的なシステム構築方法を詳しく解説しています。
<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4873115302%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51gJRt1G6JL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4873115302%2Fref%3Dnosim" target="_blank" rel="noopener">XBeeで作るワイヤレスセンサーネットワーク (Make: PROJECTS)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Robert Faludi オライリージャパン 2011-12-09    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4873115302%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DXBee%2582%25C5%258D%25EC%2582%25E9%2583%258F%2583C%2583%2584%2583%258C%2583X%2583Z%2583%2593%2583T%2581%255B%2583l%2583b%2583g%2583%258F%2581%255B%2583N%2520%2528Make%253A%2520PROJECTS%2529%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F11474007%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=" target="_blank" rel="noopener">楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                  </div></div><div class="booklink-footer"></div></div>
<h1>使い方概略</h1>
詳しくは本読めと丸投げするのもなんなので、簡単に概略説明します。
XBeeはCoordinator、Router、EndDeviceの３つのうち、どれか一つの動作モードを選択します。どれか一つのファームウェアしか書くことができない、ということですね。
選ぶのは、先ほど触れた専用アプリの下記画面。Routerとかの文字が見れますね。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/1ab68ab6-822f-91db-d9cf-513a1f5dbe8e.png" alt="スクリーンショット 2014-09-16 11.29.12.png" />
XBeeを使って構築する無線ネットワーク内に、Coordinatorが必ず一つ必要で、他のRouterやEndDeviceの中心的存在となります。
で、まあ、選択したタイプやネットワークに応じて以下のような画面でポチポチ設定していくわけなんですが…。
<img src="https://qiita-image-store.s3.amazonaws.com/0/27086/b4ab21f8-ae96-1081-ae7e-b0e30f9a8629.png" alt="スクリーンショット 2015-07-22 1.33.26.png" />
これを事細かに説明するのは正直しんどいので、先ほど紹介した「XBeeで作るワイヤレスセンサーネットワーク」を買って読んでみてください。Kindle版もありますよ。
<h1>まとめ</h1>
温度や湿度を計測するセンサーはSPIやI2Cで通信するタイプが多いので、XBee単体だとちょっと辛いです。やっぱりArduinoくらいは必要か…。
<strong>各種センサー -&gt; Arduino -&gt; XBee -&gt; XBee -&gt; RaspberryPi/普通のPC -&gt; クラウドサーバ</strong>
といった感じですかね。
土の湿り気を測るSoil Sensorなんかはアナログ形式が多く、微弱な電圧計測可能なADC端子さえあればいいので、XBee単体でもいけそうです。
次回はもう少し掘り下げてみたいと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1569</wp:post_id>
		<wp:post_date><![CDATA[2016-07-21 14:38:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-21 05:38:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[recommend-xbee]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="iot"><![CDATA[IoT]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/41B0YF7Tz7L._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
IoTといえば、何かしらのセンサーから収集したデータをクラウドサーバに溜め込んで、何かしらのサービスを提供することですよね。</p>

<p>センサーデータを送受信するのに一番手軽なのはUART。RS232C経由のシリアルデータです。でもこれは当然有線なので、ケーブル長やレイアウトを考える必要があり、不便極まりない。</p>

<p>ということで、これを低消費電力性を実現しながら無線化したのが、XBeeという製品です。ざっくり言うとそんな感じ。</p>

<h1 id="xbee">XBee活用事例</h1>

<p>XBeeを活用したスマートアグリカルチャーの研究事例が、既にあったりします。検索すると他にも色々出て…こないんですよね。そんなに流行ってないのかな。結構便利なのに。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">スマートアグリカルチャー（賢い農業）へのXBee活用事例。<a href="https://t.co/0PcQLjINVd">https://t.co/0PcQLjINVd</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/756121838523064321">2016年7月21日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<h1 id="">どこで手に入る？</h1>

<p>アンテナ形状ごとにバリエーションありますが、ZBシリーズで揃えれば通信規格は同じなので、普通に相互通信が可能です。</p>

<p>個人的には省スペースなPCBタイプ（基盤内部にアンテナを内蔵している）がオススメ。</p>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE523BC%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41B0YF7Tz7L._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE523BC%2Fref%3Dnosim" target="_blank" >XBee ZB（S2C） / PCBアンテナ型</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> スイッチサイエンス     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DXBee%2520ZB%2581iS2C%2581j%2520%252F%2520PCB%2583A%2583%2593%2583e%2583i%258C%255E%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FXBee%2520ZB%25EF%25BC%2588S2C%25EF%25BC%2589%2520%252F%2520PCB%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%259E%258B%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE4D0U6%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41kz3MEcYUL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01CE4D0U6%2Fref%3Dnosim" target="_blank" >XBee ZB（S2C） / ワイヤアンテナ型</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> スイッチサイエンス     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DXBee%2520ZB%2581iS2C%2581j%2520%252F%2520%2583%258F%2583C%2583%2584%2583A%2583%2593%2583e%2583i%258C%255E%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FXBee%2520ZB%25EF%25BC%2588S2C%25EF%25BC%2589%2520%252F%2520%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%259E%258B%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<h1 id="">どうやって使う？</h1>

<p>このXBee、今となっては超有名なArduinoとは違って、自分で書いたコードをコンパイルすることはできません（できる製品もあるっぽいんですが）。</p>

<p>出来合いのファームウェアを選んで書くだけというシンプル仕様。</p>

<p>ファームを書くまではシンプルなんですが、狙った通りに動かすための<strong>設定</strong>はかなりしんどいです。</p>

<p>それらを一括してやるための専用公式アプリが公開されています。もちろん無料。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">XCTU - Next Gen Configuration Platform for XBee/RF Solutions - Digi International <a href="https://t.co/6Udsld4uLq">https://t.co/6Udsld4uLq</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/756129849186525185">2016年7月21日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>このXBee設定方法や理屈の詳細は、オライリーらしからぬ明るい表紙の下記の本を熟読するのがオススメです。センサー類をXBeeに接続して無線で監視するような本格的なシステム構築方法を詳しく解説しています。</p>

<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4873115302%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51gJRt1G6JL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=17
0&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4873115302%2Fref%3Dnosim" target="_blank" >XBeeで作るワイヤレスセンサーネットワーク (Make: PROJECTS)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Robert Faludi オライリージャパン 2011-12-09    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4873115302%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DXBee%2582%25C5%258D%25EC%2582%25E9%2583%258F%2583C%2583%2584%2583%258C%2583X%2583Z%2583%2593%2583T%2581%255B%2583l%2583b%2583g%2583%258F%2581%255B%2583N%2520%2528Make%253A%2520PROJECTS%2529%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F11474007%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=" target="_blank" >楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                  </div></div><div class="booklink-footer"></div></div>

<h1 id="">使い方概略</h1>

<p>詳しくは本読めと丸投げするのもなんなので、簡単に概略説明します。</p>

<p>XBeeはCoordinator、Router、EndDeviceの３つのうち、どれか一つの動作モードを選択します。どれか一つのファームウェアしか書くことができない、ということですね。</p>

<p>選ぶのは、先ほど触れた専用アプリの下記画面。Routerとかの文字が見れますね。</p>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/27086/1ab68ab6-822f-91db-d9cf-513a1f5dbe8e.png" alt="スクリーンショット 2014-09-16 11.29.12.png" /></p>

<p>XBeeを使って構築する無線ネットワーク内に、Coordinatorが必ず一つ必要で、他のRouterやEndDeviceの中心的存在となります。</p>

<p>で、まあ、選択したタイプやネットワークに応じて以下のような画面でポチポチ設定していくわけなんですが…。</p>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/27086/b4ab21f8-ae96-1081-ae7e-b0e30f9a8629.png" alt="スクリーンショット 2015-07-22 1.33.26.png" /></p>

<p>これを事細かに説明するのは正直しんどいので、先ほど紹介した「XBeeで作るワイヤレスセンサーネットワーク」を買って読んでみてください。Kindle版もありますよ。</p>

<h1 id="">まとめ</h1>

<p>温度や湿度を計測するセンサーはSPIやI2Cで通信するタイプが多いので、XBee単体だとちょっと辛いです。やっぱりArduinoくらいは必要か…。</p>

<p><strong>各種センサー -> Arduino -> XBee -> XBee -> RaspberryPi/普通のPC -> クラウドサーバ</strong></p>

<p>といった感じですかね。</p>

<p>土の湿り気を測るSoil Sensorなんかはアナログ形式が多く、微弱な電圧計測可能なADC端子さえあればいいので、XBee単体でもいけそうです。</p>

<p>次回はもう少し掘り下げてみたいと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942198965]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548386]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[binance Registrera]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[38347413@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/join?ref=RQUR4BEO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.31]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-19 13:04:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-19 04:04:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>271</wp:comment_id>
			<wp:comment_author><![CDATA[binance us registrati]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[83815619@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/it/register?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-19 00:31:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-18 15:31:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>289</wp:comment_id>
			<wp:comment_author><![CDATA[найкращий реферальний код на бнанс]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[50674702@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/uk-UA/register?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.232]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-23 18:41:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-23 09:41:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>XBeeよりTWE-Liteを選ぶべき理由？を３つほど。</title>
		<link>https://tech.blog.uribou.me/xbeeyoritwe-litewoxuan-bubekili-you-wo3tuhodo/</link>
		<pubDate>Fri, 22 Jul 2016 03:49:05 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/xbeeyoritwe-litewoxuan-bubekili-you-wo3tuhodo/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
XBeeの類似製品にTWE-Lite（トワイライト）があるんですが、これはZigbee認証を受けていないみたいですね。
<strong><a href="http://www.zigbee.org/zigbee-products-2/">Zigbee認証済み製品は、こちらで検索できる</a></strong>んですが、TWE-Liteはヒットせず。
<blockquote>
  ZigBeeアライアンスが認定した製品が正式なZigBeeであり、市場では802.15.4部分のみを利用した製品や準拠しただけの非認定製品に対してZigBeeの表現が用いられる事がある。
  ZigBeeの名称はZigBeeアライアンスの商標
</blockquote>
by <a href="https://ja.m.wikipedia.org/wiki/ZigBee">Wikipedia</a>
どうりで、<a href="http://mono-wireless.com/jp/products/TWE-NET/index.html">TWE-Lite公式ページ</a>でもZigbee準拠と書いてないわけだ…。
XBeeとの相互通信は無理ってことかな。試してないけど。
でも、それを補って余りある長所が、TWE-Liteにはありそうです。以下、XBee比での利点を挙げてみます。
<h1>ファームウェアをプログラミングできる</h1>
<img src="http://mono-wireless.com/jp/products/TWE-NET/TWE-NET_service.png" alt="" />
C言語でユーザアプリケーションを書くためのSDKが用意されていて、各イベントに応じた自前のコールバック関数を登録できます。
詳しくは<strong><a href="http://mono-wireless.com/jp/tech/Programming/index.html">公式のプログラミング情報</a></strong>に記載されていますが、概略はこんな感じ。
<ul>
<li>cbAppColdStart()
<ul>
<li>電源投入時に呼び出し</li>
</ul></li>
<li>cbAppWarmStart()
<ul>
<li>スリープ復帰時に呼び出し</li>
</ul></li>
<li>cbToCoNet_vMain()
<ul>
<li>メインループ。各種センサーの情報を定期的に送信する処理はここに書くことになるんでしょうね。</li>
</ul></li>
<li>cbToCoNet_vRxEvent()
<ul>
<li>無線パケット受信時に呼び出し</li>
</ul></li>
<li>cbToCoNet_vTxEvent()
<ul>
<li>無線パケット送信完了時に呼び出し</li>
</ul></li>
<li>cbToCoNet_vNwkEvent()
<ul>
<li>MAC層やネットワーク層の各種イベント通知。外部からのwake upピンlow/highはここで受けるんだろうか？ドキュメント読まないと分かりませんが…。</li>
</ul></li>
<li>cbToCoNet_vHwEvent()
<ul>
<li>ペリフェラルの割り込み処理の遅延実行部。割り込み処理後に呼び出される…ということは、wake up割り込み処理もここに書くのかな？</li>
</ul></li>
<li>cbToCoNet_u8HwInt()
<ul>
<li>ペリフェラルの割り込みハンドラ。sleep中のwake up割り込みを受けられるとしたら、遅延実行側よりこっちかな。</li>
</ul></li>
</ul>
<h1>XBeeより小さい</h1>
<img src="http://mono-wireless.com/jp/tech/assets/TWE-Lite-RFID.jpg" alt="" />
大きさは、ほぼ一円玉大。
XBeeって意外と大きいんですよね。500円玉くらいかな。その分、アンテナを基盤に内蔵してたりするんですけど。
TWE-Liteはアンテナが別途必要になります。それでも小さいけど。
<h1>XBeeより安い</h1>
XBeeは3000〜4000円。
対してTWE-Liteは、2000〜3000円で購入できます。
XBeeには、Zigbee認証分のコストが上乗せされているってことですかね。
<h1>まとめ</h1>
結局、<strong>目的に応じてどっちを使うか決める</strong>という、よくある結論に落ち着きました。
Zigbee採用製品との連携を図りたいなら、多少高価でもXBee。
独自の小規模ネットワークを構築するだけなら、安価なTWE-Lite。
ってとこでしょうか。
とりあえず、XBeeとの相互接続が本当に不可なのか試すためにも、一つ買ってみようかな。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1571</wp:post_id>
		<wp:post_date><![CDATA[2016-07-22 12:49:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-22 03:49:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xbeeyoritwe-litewoxuan-bubekili-you-wo3tuhodo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:64:"http://mono-wireless.com/jp/products/TWE-NET/TWE-NET_service.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
XBeeの類似製品にTWE-Lite（トワイライト）があるんですが、これはZigbee認証を受けていないみたいですね。</p>

<p><strong><a href="http://www.zigbee.org/zigbee-products-2/">Zigbee認証済み製品は、こちらで検索できる</a></strong>んですが、TWE-Liteはヒットせず。</p>

<blockquote>
  <p>ZigBeeアライアンスが認定した製品が正式なZigBeeであり、市場では802.15.4部分のみを利用した製品や準拠しただけの非認定製品に対してZigBeeの表現が用いられる事がある。
  ZigBeeの名称はZigBeeアライアンスの商標</p>
</blockquote>

<p>by <a href="https://ja.m.wikipedia.org/wiki/ZigBee">Wikipedia</a></p>

<p>どうりで、<a href="http://mono-wireless.com/jp/products/TWE-NET/index.html">TWE-Lite公式ページ</a>でもZigbee準拠と書いてないわけだ…。</p>

<p>XBeeとの相互通信は無理ってことかな。試してないけど。</p>

<p>でも、それを補って余りある長所が、TWE-Liteにはありそうです。以下、XBee比での利点を挙げてみます。</p>

<h1 id="">ファームウェアをプログラミングできる</h1>

<p><img src="http://mono-wireless.com/jp/products/TWE-NET/TWE-NET_service.png" alt="" /></p>

<p>C言語でユーザアプリケーションを書くためのSDKが用意されていて、各イベントに応じた自前のコールバック関数を登録できます。</p>

<p>詳しくは<strong><a href="http://mono-wireless.com/jp/tech/Programming/index.html">公式のプログラミング情報</a></strong>に記載されていますが、概略はこんな感じ。</p>

<ul>
<li>cbAppColdStart()
<ul><li>電源投入時に呼び出し</li></ul></li>
<li>cbAppWarmStart()
<ul><li>スリープ復帰時に呼び出し</li></ul></li>
<li>cbToCoNet_vMain()
<ul><li>メインループ。各種センサーの情報を定期的に送信する処理はここに書くことになるんでしょうね。</li></ul></li>
<li>cbToCoNet_vRxEvent()
<ul><li>無線パケット受信時に呼び出し</li></ul></li>
<li>cbToCoNet_vTxEvent()
<ul><li>無線パケット送信完了時に呼び出し</li></ul></li>
<li>cbToCoNet_vNwkEvent()
<ul><li>MAC層やネットワーク層の各種イベント通知。外部からのwake upピンlow/highはここで受けるんだろうか？ドキュメント読まないと分かりませんが…。</li></ul></li>
<li>cbToCoNet_vHwEvent()
<ul><li>ペリフェラルの割り込み処理の遅延実行部。割り込み処理後に呼び出される…ということは、wake up割り込み処理もここに書くのかな？</li></ul></li>
<li>cbToCoNet_u8HwInt()
<ul><li>ペリフェラルの割り込みハンドラ。sleep中のwake up割り込みを受けられるとしたら、遅延実行側よりこっちかな。</li></ul></li>
</ul>

<h1 id="xbee">XBeeより小さい</h1>

<p><img src="http://mono-wireless.com/jp/tech/assets/TWE-Lite-RFID.jpg" alt="" /></p>

<p>大きさは、ほぼ一円玉大。</p>

<p>XBeeって意外と大きいんですよね。500円玉くらいかな。その分、アンテナを基盤に内蔵してたりするんですけど。</p>

<p>TWE-Liteはアンテナが別途必要になります。それでも小さいけど。</p>

<h1 id="xbee">XBeeより安い</h1>

<p>XBeeは3000〜4000円。</p>

<p>対してTWE-Liteは、2000〜3000円で購入できます。</p>

<p>XBeeには、Zigbee認証分のコストが上乗せされているってことですかね。</p>

<h1 id="">まとめ</h1>

<p>結局、<strong>目的に応じてどっちを使うか決める</strong>という、よくある結論に落ち着きました。</p>

<p>Zigbee採用製品との連携を図りたいなら、多少高価でもXBee。</p>

<p>独自の小規模ネットワークを構築するだけなら、安価なTWE-Lite。</p>

<p>ってとこでしょうか。</p>

<p>とりあえず、XBeeとの相互接続が本当に不可なのか試すためにも、一つ買ってみようかな。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941022235]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447168]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Amazon Cloud Driveが無制限プラン開始</title>
		<link>https://tech.blog.uribou.me/amazon-unlimited-storage-trial/</link>
		<pubDate>Sat, 23 Jul 2016 05:56:16 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/amazon-unlimited-storage-trial/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
<a href="http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/">Amazon Primeに入ると、自動的についてくるPrime Photoサービス。</a>写真であれば、たとえRAWデータであれ、無制限にオンラインストレージに保存できます。年額3900円、月額に直すとたったの325円のPrime会費で、このオンラインストレージがついてくるのだから驚きです。
それが今度は、別途料金にはなりますが、<strong><a href="https://www.amazon.co.jp/clouddrive/home">無制限オンラインストレージサービスを開始しました。</a></strong>お値段13800円/年、月額に直すと、たったの1150円にて。大丈夫か？ Amazon。
以前<a href="https://www.bitcasa.com/ja-JP/personal/">Bitcasa</a>というサービスで、月1000円で無制限ストレージを提供したことがありましたが、あれよあれよと無制限プランは消えて無くなってしまいました。採算が合わなかったんですかね…。
Amazonはいつまで継続できるのかわかりませんが、３ヶ月の無料試用期間があるので、試してみました。
<h1>まずは申し込み</h1>
無料試用期間が３ヶ月もあるので、まずは試してみましょう。<a href="https://www.amazon.co.jp/clouddrive/home">ここ</a>から申し込みます。
<img src="https://farm9.staticflickr.com/8681/28404734631_54aaa0c595_z_d.jpg" alt="" />
既にクレジットカード情報を登録済みであれば、そのまま確定。なければ「クレジットカードを追加」から登録します。
<img src="https://farm9.staticflickr.com/8740/28404734921_327e78dc3f_z_d.jpg" alt="" />
たったこれだけで、無料トライアルが開始されます。
<img src="https://farm8.staticflickr.com/7529/28199930580_da3b404cbf_z_d.jpg" alt="" />
<h1>自動契約更新の解除</h1>
が、このままだと３ヶ月後に自動的に契約が継続され、使用料が発生するので、まずはそれを解除します。<strong><a href="https://www.amazon.co.jp/clouddrive">私のAmazon Drive</a></strong>の右上にある<strong>ストレージの管理</strong>をクリック。
<img src="https://farm9.staticflickr.com/8416/28199930950_5c32fb18e5_o_d.png" alt="" />
以下のように、現在のプランが表示されます。<strong>継続しない</strong>をクリック。
<img src="https://farm9.staticflickr.com/8468/28404736301_bd59d49933_z_d.jpg" alt="" />
すると、以下のように<strong>登録を再開始</strong>となれば設定完了。
<img src="https://farm9.staticflickr.com/8558/28404736631_7192f794ed_o_d.png" alt="" />
と同時に以下のようなメールが届いて、<strong>「無料体験をキャンセルしました」</strong>？！ と一瞬ビビりますが、ちゃんと継続されています。３ヶ月の間は無料試用期間が継続するのでご安心を。
<img src="https://farm9.staticflickr.com/8131/28483158585_437e024002_o_d.png" alt="" />
<h1>Amazon Cloud Driveのコマンドライン操作</h1>
以前の記事で、<a href="http://blog.rinka-blossom.com/amazonkuraudodoraibunikomandodeakusesusurufang-fa/">Amazon Cloud Driveにコマンドラインでファイルアップロードする方法</a>を紹介しましたが、Unlimited版でもまんま使えます。
unlimited切り替え前。
<pre><code class="bash">~ $ acdcli usage
Documents:   15273,  162.1 MiB
Other:         233,   42.8 MiB
Photos:      81413,  283.8 GiB
Videos:          0,    0.0 B
Total:       96919,  284.0 GiB
</code></pre>
切り替え後。特に変化はないです。
<pre><code class="bash">~ $ acdcli usage
Documents:   15273,  162.1 MiB
Other:         233,   42.8 MiB
Photos:      81413,  283.8 GiB
Videos:          0,    0.0 B
Total:       96919,  284.0 GiB
</code></pre>
が、切り替え前、写真以外のファイルは5GBまでしかアップロードできませんでした。それが以下のように、61GBの動画ファイルをアップロードできます。
<pre><code class="bash">[takashi@espresso:private]$ du -hs 2016
61G     2016
[takashi@espresso:private]$ time acdcli ul -o 2016 /ビデオ/
[#########################] 100.0% of   61GiB  443/443     0.0B/s       0s
real    154m51.236s
user    31m35.016s
sys     7m4.204s
</code></pre>
単純計算で、平均53Mbpsのアップ速度。
Bitcasaの時とはえらい違いです。あの時は遅すぎてひどかった…　計測データは残ってないんですが、ここまで出なかったのは確かです。
<h1>60fpsのFullHD動画がそのまま閲覧可能</h1>
これは驚きました。FullHDビデオカメラで撮影した、60fpsのFullHD MTS動画もそのままCloud Driveにアップしたんですが、ブラウザ経由で開くと、コマ落ちや音ズレもなく、きれいに再生できました。
パソコンでMTS動画ファイルを開くと、動画が重すぎて音ズレやコマ落ちが発生してしまうんですよね…。
<img src="https://farm9.staticflickr.com/8587/27875917083_d5110dc10f_z_d.jpg" alt="" />
ちなみに、その激重動画を撮影したのは以下のビデオカメラ。SONY製HDR-PJ760です。
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB006YFH3MS%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51u1H-tz4bL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB006YFH3MS%2Fref%3Dnosim" target="_blank" rel="noopener">SONY ビデオカメラ Handycam PJ760V 内蔵メモリ96GB ブラック HDR-PJ760V</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> ソニー 2012-03-09    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSONY%2520%2583r%2583f%2583I%2583J%2583%2581%2583%2589%2520Handycam%2520PJ760V%2520%2593%25E0%2591%25A0%2583%2581%2583%2582%2583%258A96GB%2520%2583u%2583%2589%2583b%2583N%2520HDR-PJ760V%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSONY%2520%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%2520Handycam%2520PJ760V%2520%25E5%2586%2585%25E8%2594%25B5%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA96GB%2520%25E3%2583%2596%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AF%2520HDR-PJ760V%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
もしかしてiPhoneのAmazon Cloud Driveアプリでも再生可能か？！と期待したんですが、さすがにこちらは無理でした。
<img src="https://farm8.staticflickr.com/7306/28386398332_edafaea7a2_z_d.jpg" alt="" />
上のようにアイコン表示は可能ですが、MTS動画ファイルをタップすると再生できず。
<img src="https://farm9.staticflickr.com/8282/28491460625_09d73a9eb5_z_d.jpg" alt="" />
以下のようにmp4動画に変換済みのファイルは正常に再生できました。
<img src="https://farm9.staticflickr.com/8677/28459320196_00f2c07d25_z_d.jpg" alt="" />
<h1>まとめ</h1>
バックボーンがAWSだからか、さすがのAmazon品質の無制限オンラインストレージサービス。
これが月額1150円で使えるのだから、<strong>買い</strong>だとは思いますが…　Bitcasaの例を知っているだけに、いつまでこの料金でこの品質を維持できるのか？ が心配なところではあります。
現時点では、動画の適切なバックアップ先に困っていたところなので、継続して契約してしまうかなぁ・・。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1573</wp:post_id>
		<wp:post_date><![CDATA[2016-07-23 14:56:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-23 05:56:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[amazon-unlimited-storage-trial]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="amazon"><![CDATA[amazon]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
<a href="http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/">Amazon Primeに入ると、自動的についてくるPrime Photoサービス。</a>写真であれば、たとえRAWデータであれ、無制限にオンラインストレージに保存できます。年額3900円、月額に直すとたったの325円のPrime会費で、このオンラインストレージがついてくるのだから驚きです。</p>
<p>それが今度は、別途料金にはなりますが、<strong><a href="https://www.amazon.co.jp/clouddrive/home">無制限オンラインストレージサービスを開始しました。</a></strong>お値段13800円/年、月額に直すと、たったの1150円にて。大丈夫か？ Amazon。</p>
<p>以前<a href="https://www.bitcasa.com/ja-JP/personal/">Bitcasa</a>というサービスで、月1000円で無制限ストレージを提供したことがありましたが、あれよあれよと無制限プランは消えて無くなってしまいました。採算が合わなかったんですかね…。</p>
<p>Amazonはいつまで継続できるのかわかりませんが、３ヶ月の無料試用期間があるので、試してみました。</p>
<h1 id="">まずは申し込み</h1>
<p>無料試用期間が３ヶ月もあるので、まずは試してみましょう。<a href="https://www.amazon.co.jp/clouddrive/home">ここ</a>から申し込みます。</p>
<p><img src="https://farm9.staticflickr.com/8681/28404734631_54aaa0c595_z_d.jpg" alt="" /></p>
<p>既にクレジットカード情報を登録済みであれば、そのまま確定。なければ「クレジットカードを追加」から登録します。</p>
<p><img src="https://farm9.staticflickr.com/8740/28404734921_327e78dc3f_z_d.jpg" alt="" /></p>
<p>たったこれだけで、無料トライアルが開始されます。</p>
<p><img src="https://farm8.staticflickr.com/7529/28199930580_da3b404cbf_z_d.jpg" alt="" /></p>
<h1 id="">自動契約更新の解除</h1>
<p>が、このままだと３ヶ月後に自動的に契約が継続され、使用料が発生するので、まずはそれを解除します。<strong><a href="https://www.amazon.co.jp/clouddrive">私のAmazon Drive</a></strong>の右上にある<strong>ストレージの管理</strong>をクリック。</p>
<p><img src="https://farm9.staticflickr.com/8416/28199930950_5c32fb18e5_o_d.png" alt="" /></p>
<p>以下のように、現在のプランが表示されます。<strong>継続しない</strong>をクリック。</p>
<p><img src="https://farm9.staticflickr.com/8468/28404736301_bd59d49933_z_d.jpg" alt="" /></p>
<p>すると、以下のように<strong>登録を再開始</strong>となれば設定完了。</p>
<p><img src="https://farm9.staticflickr.com/8558/28404736631_7192f794ed_o_d.png" alt="" /></p>
<p>と同時に以下のようなメールが届いて、<strong>「無料体験をキャンセルしました」</strong>？！ と一瞬ビビりますが、ちゃんと継続されています。３ヶ月の間は無料試用期間が継続するのでご安心を。</p>
<p><img src="https://farm9.staticflickr.com/8131/28483158585_437e024002_o_d.png" alt="" /></p>
<h1 id="amazonclouddrive">Amazon Cloud Driveのコマンドライン操作</h1>
<p>以前の記事で、<a href="http://blog.rinka-blossom.com/amazonkuraudodoraibunikomandodeakusesusurufang-fa/">Amazon Cloud Driveにコマンドラインでファイルアップロードする方法</a>を紹介しましたが、Unlimited版でもまんま使えます。</p>
<p>unlimited切り替え前。</p>
<pre><code class="language-bash">~ $ acdcli usage
Documents:   15273,  162.1 MiB
Other:         233,   42.8 MiB
Photos:      81413,  283.8 GiB
Videos:          0,    0.0 B
Total:       96919,  284.0 GiB
</code></pre>
<p>切り替え後。特に変化はないです。</p>
<pre><code class="language-bash">~ $ acdcli usage
Documents:   15273,  162.1 MiB
Other:         233,   42.8 MiB
Photos:      81413,  283.8 GiB
Videos:          0,    0.0 B
Total:       96919,  284.0 GiB
</code></pre>
<p>が、切り替え前、写真以外のファイルは5GBまでしかアップロードできませんでした。それが以下のように、61GBの動画ファイルをアップロードできます。</p>
<pre><code class="language-bash">[takashi@espresso:private]$ du -hs 2016
61G     2016
[takashi@espresso:private]$ time acdcli ul -o 2016 /ビデオ/
[#########################] 100.0% of   61GiB  443/443     0.0B/s       0s
real    154m51.236s
user    31m35.016s
sys     7m4.204s
</code></pre>
<p>単純計算で、平均53Mbpsのアップ速度。</p>
<p>Bitcasaの時とはえらい違いです。あの時は遅すぎてひどかった…　計測データは残ってないんですが、ここまで出なかったのは確かです。</p>
<h1 id="60fpsfullhd">60fpsのFullHD動画がそのまま閲覧可能</h1>
<p>これは驚きました。FullHDビデオカメラで撮影した、60fpsのFullHD MTS動画もそのままCloud Driveにアップしたんですが、ブラウザ経由で開くと、コマ落ちや音ズレもなく、きれいに再生できました。</p>
<p>パソコンでMTS動画ファイルを開くと、動画が重すぎて音ズレやコマ落ちが発生してしまうんですよね…。</p>
<p><img src="https://farm9.staticflickr.com/8587/27875917083_d5110dc10f_z_d.jpg" alt="" /></p>
<p>ちなみに、その激重動画を撮影したのは以下のビデオカメラ。SONY製HDR-PJ760です。</p>
<div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB006YFH3MS%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51u1H-tz4bL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB006YFH3MS%2Fref%3Dnosim" target="_blank" >SONY ビデオカメラ Handycam PJ760V 内蔵メモリ96GB ブラック HDR-PJ760V</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> ソニー 2012-03-09    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSONY%2520%2583r%2583f%2583I%2583J%2583%2581%2583%2589%2520Handycam%2520PJ760V%2520%2593%25E0%2591%25A0%2583%2581%2583%2582%2583%258A96GB%2520%2583u%2583%2589%2583b%2583N%2520HDR-PJ760V%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSONY%2520%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%2520Handycam%2520PJ760V%2520%25E5%2586%2585%25E8%2594%25B5%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA96GB%2520%25E3%2583%2596%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AF%2520HDR-PJ760V%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<p>もしかしてiPhoneのAmazon Cloud Driveアプリでも再生可能か？！と期待したんですが、さすがにこちらは無理でした。</p>
<p><img src="https://farm8.staticflickr.com/7306/28386398332_edafaea7a2_z_d.jpg" alt="" /></p>
<p>上のようにアイコン表示は可能ですが、MTS動画ファイルをタップすると再生できず。</p>
<p><img src="https://farm9.staticflickr.com/8282/28491460625_09d73a9eb5_z_d.jpg" alt="" /></p>
<p>以下のようにmp4動画に変換済みのファイルは正常に再生できました。</p>
<p><img src="https://farm9.staticflickr.com/8677/28459320196_00f2c07d25_z_d.jpg" alt="" /></p>
<h1 id="">まとめ</h1>
<p>バックボーンがAWSだからか、さすがのAmazon品質の無制限オンラインストレージサービス。</p>
<p>これが月額1150円で使えるのだから、<strong>買い</strong>だとは思いますが…　Bitcasaの例を知っているだけに、いつまでこの料金でこの品質を維持できるのか？ が心配なところではあります。</p>
<p>現時点では、動画の適切なバックアップ先に困っていたところなので、継続して契約してしまうかなぁ・・。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1574]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5943173076]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562646]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>意外と知らない、超基本コマンドcdの便利なオプション。</title>
		<link>https://tech.blog.uribou.me/cd-hyphen-option/</link>
		<pubDate>Wed, 27 Jul 2016 05:43:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/cd-hyphen-option/</guid>
		<description></description>
		<content:encoded><![CDATA[<br />
近い将来、Windowsにも組み込まれるbash。これでLinux、OSX、Windowsで共通のシェルが使えるようになって、嬉しい限り。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Windows 10のbash on Windowsを試す - kkamegawa&#039;s weblog <a href="https://t.co/24T68tN00y">https://t.co/24T68tN00y</a></p>&mdash; 情弱 (@pudding_info) <a href="https://twitter.com/pudding_info/status/757546244323495937">2016年7月25日</a></blockquote>

そんなbashの組み込みコマンドには、超基本なcd (change directory) がありますよね。以外と知られていない （であろう）、ハイフンだけのオプションがあるの、ご存知でしょうか？
<pre><code class="bash">tmp $ cd /var
var $ pwd
/var
var $ cd /tmp
tmp $ cd -
/var
var $ cd -
/tmp
</code></pre>
要するに<strong>「元いた場所に戻る」</strong>オプションです。
よく似た動作をするコマンドにpushd/popdがありますが、こちらはも少し高機能で、スタックにpush/popするようなイメージ。でもcdよりタイプ数が多くて面倒なので、個人的には使う機会少なめです。
<pre><code class="bash">tmp $ pushd /var
/var /tmp
var $ pushd /var/log
/var/log /var /tmp
log $ pushd /usr/local/bin
/usr/local/bin /var/log /var /tmp
bin $ popd
/var/log /var /tmp
log $ popd
/var /tmp
var $ popd
/tmp
</code></pre>
なんだかんだで使う機会の多いcdコマンド。ハイフンオプションを知っておくだけでも、日々の作業がかなり効率化した気がしますよ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1576</wp:post_id>
		<wp:post_date><![CDATA[2016-07-27 14:43:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-27 05:43:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cd-hyphen-option]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="komando"><![CDATA[コマンド]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br> <br />
近い将来、Windowsにも組み込まれるbash。これでLinux、OSX、Windowsで共通のシェルが使えるようになって、嬉しい限り。</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Windows 10のbash on Windowsを試す - kkamegawa&#39;s weblog <a href="https://t.co/24T68tN00y">https://t.co/24T68tN00y</a></p>&mdash; 情弱 (@pudding_info) <a href="https://twitter.com/pudding_info/status/757546244323495937">2016年7月25日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>そんなbashの組み込みコマンドには、超基本なcd (change directory) がありますよね。以外と知られていない （であろう）、ハイフンだけのオプションがあるの、ご存知でしょうか？</p>
<pre><code class="language-bash">tmp $ cd /var
var $ pwd
/var
var $ cd /tmp
tmp $ cd -
/var
var $ cd -
/tmp
</code></pre>
<p>要するに<strong>「元いた場所に戻る」</strong>オプションです。</p>
<p>よく似た動作をするコマンドにpushd/popdがありますが、こちらはも少し高機能で、スタックにpush/popするようなイメージ。でもcdよりタイプ数が多くて面倒なので、個人的には使う機会少なめです。</p>
<pre><code class="language-bash">tmp $ pushd /var
/var /tmp
var $ pushd /var/log
/var/log /var /tmp
log $ pushd /usr/local/bin
/usr/local/bin /var/log /var /tmp
bin $ popd
/var/log /var /tmp
log $ popd
/var /tmp
var $ popd
/tmp
</code></pre>
<p>なんだかんだで使う機会の多いcdコマンド。ハイフンオプションを知っておくだけでも、日々の作業がかなり効率化した気がしますよ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942195754]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577289]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[創建binance帳戶]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[23239465@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/zh-TC/join?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.159]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-26 12:59:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-26 03:59:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>chmod 777 禁止！</title>
		<link>https://tech.blog.uribou.me/forbid-chmod-777/</link>
		<pubDate>Thu, 28 Jul 2016 05:23:18 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/forbid-chmod-777/</guid>
		<description></description>
		<content:encoded><![CDATA[何も考えずに<code>chmod 777 ${some_file}</code>するの、やめて本当にマジで。
そのファイルの所有者やグループ設定、何の意味もなくなっちゃうでしょ！ 誰でも読み書き削除できちゃうじゃんか！
というニュアンスが、拙い英語だとほぼ通じない。特に相手は強者インド人。
自分：<strong>「この<code>sleep 10</code>は何のためにあるの？」</strong>
インド人：<strong>「ああ、2秒くらい待てば良い？（言いながら<code>sleep 2</code>にチョチョイと修正）」</strong>
自分：<strong>「修正する前に質問に答えなさい！」</strong>
万事がこんな感じ。Don't set three seven! Any process accidentally write or remove the file!なんて言ってみたところでBut that's more convenient.と返されるだけ…。
本当に必要な権限なんだったら、せめて<code>chmod a=rwx ${file}</code>にして。実行権を追加したいのなら、<code>chmod a+x ${file}</code>して。<code>man chmod</code>すれば詳しい使い方出てくるんだから。
<pre><code class="bash">NAME
     chmod -- change file modes or Access Control
MODES
     Modes may be absolute or symbolic.
     For example, the absolute mode that permits read, write and execute by the owner, read and execute by group members,
     read and execute by others, and no set-uid or set-gid behaviour is 755 (400+200+100+040+010+004+001).
     The symbolic mode is described by the following grammar:
           mode         ::= clause [, clause ...]
           clause       ::= [who ...] [action ...] action
           action       ::= op [perm ...]
           who          ::= a | u | g | o
           op           ::= + | - | =
           perm         ::= r | s | t | w | x | X | u | g | o
</code></pre>
体系的に勉強するならLPICがお勧め。世界的なベンダー資格だから、探せば英語版もあると思います。
こちらは教科書的な使い方がメイン。
<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/518t5R3P6mL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2Fref%3Dnosim" target="_blank" rel="noopener">Linux教科書 LPICレベル1 Version4.0対応</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">中島 能和 翔泳社 2015-06-16    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01076Y8CC%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13215761%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                        </div></div><div class="booklink-footer"></div></div>
教科書を読んでコマンドを一通り試したら、下記の練習問題を９割解けるようになるまで繰り返せば、LPIC level1試験は余裕で合格できて、コマンドのオプションにもある程度精通できて楽しいですよー。
<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844339648%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51PSB8j0S2L._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844339648%2Fref%3Dnosim" target="_blank" rel="noopener">(PDF版付)徹底攻略LPIC Level1問題集[Version 4.0]対応</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">鳥谷部 昭寛,菖蒲 淳司 インプレス 2015-12-04    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844339648%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB018I45YF0%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13504558%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                     </div></div><div class="booklink-footer"></div></div>
インド人の方にも勧めておこう…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1577</wp:post_id>
		<wp:post_date><![CDATA[2016-07-28 14:23:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-28 05:23:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[forbid-chmod-777]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="komando"><![CDATA[コマンド]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/518t5R3P6mL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>何も考えずに<code>chmod 777 ${some_file}</code>するの、やめて本当にマジで。</p>

<p>そのファイルの所有者やグループ設定、何の意味もなくなっちゃうでしょ！ 誰でも読み書き削除できちゃうじゃんか！</p>

<p>というニュアンスが、拙い英語だとほぼ通じない。特に相手は強者インド人。</p>

<p>自分：<strong>「この<code>sleep 10</code>は何のためにあるの？」</strong></p>

<p>インド人：<strong>「ああ、2秒くらい待てば良い？（言いながら<code>sleep 2</code>にチョチョイと修正）」</strong></p>

<p>自分：<strong>「修正する前に質問に答えなさい！」</strong></p>

<p>万事がこんな感じ。Don't set three seven! Any process accidentally write or remove the file!なんて言ってみたところでBut that's more convenient.と返されるだけ…。</p>

<p>本当に必要な権限なんだったら、せめて<code>chmod a=rwx ${file}</code>にして。実行権を追加したいのなら、<code>chmod a+x ${file}</code>して。<code>man chmod</code>すれば詳しい使い方出てくるんだから。</p>

<pre><code class="language-bash">NAME  
     chmod -- change file modes or Access Control 

MODES  
     Modes may be absolute or symbolic.

     For example, the absolute mode that permits read, write and execute by the owner, read and execute by group members,
     read and execute by others, and no set-uid or set-gid behaviour is 755 (400+200+100+040+010+004+001).

     The symbolic mode is described by the following grammar:

           mode         ::= clause [, clause ...]
           clause       ::= [who ...] [action ...] action
           action       ::= op [perm ...]
           who          ::= a | u | g | o
           op           ::= + | - | =
           perm         ::= r | s | t | w | x | X | u | g | o
</code></pre>

<p>体系的に勉強するならLPICがお勧め。世界的なベンダー資格だから、探せば英語版もあると思います。</p>

<p>こちらは教科書的な使い方がメイン。</p>

<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/518t5R3P6mL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2Fref%3Dnosim" target="_blank" >Linux教科書 LPICレベル1 Version4.0対応</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">中島 能和 翔泳社 2015-06-16    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01076Y8CC%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13215761%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                        </div></div><div class="booklink-footer"></div></div>

<p>教科書を読んでコマンドを一通り試したら、下記の練習問題を９割解けるようになるまで繰り返せば、LPIC level1試験は余裕で合格できて、コマンドのオプションにもある程度精通できて楽しいですよー。</p>

<div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844339648%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51PSB8j0S2L._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844339648%2Fref%3Dnosim" target="_blank" >(PDF版付)徹底攻略LPIC Level1問題集[Version 4.0]対応</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">鳥谷部 昭寛,菖蒲 淳司 インプレス 2015-12-04    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844339648%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB018I45YF0%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13504558%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                        </div></div><div class="booklink-footer"></div></div>

<p>インド人の方にも勧めておこう…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947471409]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462169]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>bashでファイル末尾を0埋めする方法。例えばLinuxカーネルのページサイズでalignしたい場合。</title>
		<link>https://tech.blog.uribou.me/zero-padding-file-on-bash/</link>
		<pubDate>Sat, 30 Jul 2016 06:10:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/zero-padding-file-on-bash/</guid>
		<description></description>
		<content:encoded><![CDATA[文字列の先頭や末尾を0埋めする方法はよくあるんですが、ファイル末尾を0データで埋める方法って、なかなか見つからなかったので、書いてみました。
こんなの一体いつ使うのか？ と聞かれたら、使う機会は早々ないのであまり役に立たないかもしれないです(･_･; が、例えばinitramfsイメージファイルをLinuxカーネルのページサイズでalignしたい場合に役立ちます。
…絶対使わなそうですが、以下のようなスクリプトを書いてtest.shとして保存しておき、<code>test.sh target.bin 4096</code>のように実行すれば、target.binの後に0データを付加して4096バイトでalignしてくれます。
<pre><code class="bash">#!/bin/bash
FILE_TARGET=${1}
SIZE_PAGE=${2}
function get_file_size() {
    FILE=${1}
    echo $(LANG=C ls -l ${FILE} | cut -d' ' -f5)
}
function get_printf_format() {
    SIZE_PAD=${1}
    while [ ${SIZE_PAD} -gt 0 ]; do
        FORMAT=${FORMAT}'%b'
        BIN=${BIN}'?x0'
        let SIZE_PAD--
    done
    echo ${FORMAT} ${BIN}
}
MASK=$((${SIZE_PAGE} - 1))
SURPLUS=$(($(get_file_size ${FILE_TARGET}) &amp; ${MASK}))
if [ ${SURPLUS} -ne 0 ]; then
    printf $(get_printf_format $((${SIZE_PAGE} - ${SURPLUS}))) &gt;&gt; ${FILE_TARGET}
fi
</code></pre>
例えば以下のようなサイズのファイルがあったとします。10進で99472バイトのデータです。
<pre><code class="bash">~ $ ls -l target.bin
-rw-r--r-- 1 pi pi 99472 Jul 31 00:01 target.bin
~ $ printf "0x%x?n" $(ls -l target.bin | cut -d' ' -f5)
0x18490
</code></pre>
これに先ほどのスクリプトを実行してやると、以下のようになります。
<pre><code class="bash">~ $ ./test.sh target.bin 4096
~ $ ls -l target.bin
-rw-r--r-- 1 pi pi 102400 Jul 31 00:04 target.bin
~ $ printf "0x%x?n" $(ls -l target.bin | cut -d' ' -f5)
0x19000
~ $ hexdump -C target.bin | tail -n 4
00018480  75 74 69 6c 73 2e 73 79  73 63 6f 6e 66 69 67 0a  |utils.sysconfig.|
00018490  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
00019000
</code></pre>
しっかりと、4096 (0x1000)バイトでalignされたデータファイルになりました。これでとある機器のLinuxカーネルがパニックすることなく起動できます。
ぜひお試しあれ。
ただ、先ほどのスクリプト、<code>get_printf_format</code>関数内の処理がかなり非効率なので、もっといい案あればぜひ教えてください（^人^）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1578</wp:post_id>
		<wp:post_date><![CDATA[2016-07-30 15:10:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-30 06:10:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[zero-padding-file-on-bash]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="komando"><![CDATA[コマンド]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>文字列の先頭や末尾を0埋めする方法はよくあるんですが、ファイル末尾を0データで埋める方法って、なかなか見つからなかったので、書いてみました。</p>

<p>こんなの一体いつ使うのか？ と聞かれたら、使う機会は早々ないのであまり役に立たないかもしれないです(･_･; が、例えばinitramfsイメージファイルをLinuxカーネルのページサイズでalignしたい場合に役立ちます。</p>

<p>…絶対使わなそうですが、以下のようなスクリプトを書いてtest.shとして保存しておき、<code>test.sh target.bin 4096</code>のように実行すれば、target.binの後に0データを付加して4096バイトでalignしてくれます。</p>

<pre><code class="language-bash">#!/bin/bash

FILE_TARGET=${1}  
SIZE_PAGE=${2}

function get_file_size() {  
    FILE=${1}
    echo $(LANG=C ls -l ${FILE} | cut -d' ' -f5)
}

function get_printf_format() {  
    SIZE_PAD=${1}

    while [ ${SIZE_PAD} -gt 0 ]; do
        FORMAT=${FORMAT}'%b'
        BIN=${BIN}'?x0'
        let SIZE_PAD--
    done

    echo ${FORMAT} ${BIN}
}

MASK=$((${SIZE_PAGE} - 1))  
SURPLUS=$(($(get_file_size ${FILE_TARGET}) &amp; ${MASK}))

if [ ${SURPLUS} -ne 0 ]; then  
    printf $(get_printf_format $((${SIZE_PAGE} - ${SURPLUS}))) &gt;&gt; ${FILE_TARGET}
fi  
</code></pre>

<p>例えば以下のようなサイズのファイルがあったとします。10進で99472バイトのデータです。</p>

<pre><code class="language-bash">~ $ ls -l target.bin
-rw-r--r-- 1 pi pi 99472 Jul 31 00:01 target.bin
~ $ printf "0x%x?n" $(ls -l target.bin | cut -d' ' -f5)
0x18490  
</code></pre>

<p>これに先ほどのスクリプトを実行してやると、以下のようになります。</p>

<pre><code class="language-bash">~ $ ./test.sh target.bin 4096
~ $ ls -l target.bin
-rw-r--r-- 1 pi pi 102400 Jul 31 00:04 target.bin
~ $ printf "0x%x?n" $(ls -l target.bin | cut -d' ' -f5)
0x19000

~ $ hexdump -C target.bin | tail -n 4
00018480  75 74 69 6c 73 2e 73 79  73 63 6f 6e 66 69 67 0a  |utils.sysconfig.|  
00018490  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|  
*
00019000  
</code></pre>

<p>しっかりと、4096 (0x1000)バイトでalignされたデータファイルになりました。これでとある機器のLinuxカーネルがパニックすることなく起動できます。</p>

<p>ぜひお試しあれ。</p>

<p>ただ、先ほどのスクリプト、<code>get_printf_format</code>関数内の処理がかなり非効率なので、もっといい案あればぜひ教えてください（^人^）</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5959088411]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577289]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>171</wp:comment_id>
			<wp:comment_author><![CDATA[binance-]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[99188522@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ka-GE/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.65]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-16 12:28:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-16 03:28:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>木製ロボット玩具、Cubettoが工場生産開始！</title>
		<link>https://tech.blog.uribou.me/cubetto-production-line-is-officially-rolling/</link>
		<pubDate>Tue, 02 Aug 2016 18:36:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/cubetto-production-line-is-officially-rolling/</guid>
		<description></description>
		<content:encoded><![CDATA[2016年3月にbackerになった <a href="https://www.kickstarter.com/projects/primotoys/cubetto-hands-on-coding-for-girls-and-boys-aged-3/posts/1627744?ref=backer_project_update">木製ロボット玩具Cubetto</a> が、ついに工場生産開始されたようです。いやー、めでたい。
<blockquote>
  Our production line is officially rolling. Bits and atoms are all coming together on the factory floor. This is it! We also have news on patent trolling, competitions, maps, awards, translations and team. First things first... our final shipping schedule:
  <strong>Maiden voyage</strong><br />
  With all the variables involved, coming up with a final calendar for shipping hasn’t been easy, but we’re happy to announce the below schedule
</blockquote>
早ければ８月中にも発送するってことですかね。あれ、日本はどこへ…。
<pre><code>Early birds
30/08/2016 - 400 Units (US)
05/08/2016 - 400 Units (EU)
05/09/2016 - 400 Units (ROW)
All other backers
12/09/2016 - 400 Units (US)
19/09/2016 - 400 Units (EU)
26/09/2016 - 800 Units (US + EU + ROW)
10/10/2016 - 800 Units (US + EU + ROW)
17/10/2016 - 800 Units (US + EU + ROW)
24/10/2016 - 800 Units (US + EU + ROW)
</code></pre>
ちなみにCubettoとは何かというと、<strong>３歳児でもプログラミングの基礎を学べる、イギリス発の学習キット</strong>です。
公式サイトでPR動画が配信されています。
 
動画を見れば大体わかるんですが、ざっくり説明すると、木製のボード上にロボットをどう動かすか指示するためのブロックを並べ、あらかじめ用意された地図の上を狙った通りに動かしてゴールさせる、といった感じです。
パソコンもスマホも使わずに、ロボットに出す指示を木製ブロックでコーディングするスタイルがとても気に入ったので、思わずポチってしまいました。
見た目も可愛いので、娘も気に入ることでしょう。何より未就学児がプログラミングの基礎を学べるというコンセプトがいいと思いました。
早く届かないかな〜。
届いたら現在４歳の娘と遊び倒してレポートするので、お楽しみに。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1579</wp:post_id>
		<wp:post_date><![CDATA[2016-08-03 03:36:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-02 18:36:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cubetto-production-line-is-officially-rolling]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="robotuto"><![CDATA[ロボット]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>2016年3月にbackerになった <a href="https://www.kickstarter.com/projects/primotoys/cubetto-hands-on-coding-for-girls-and-boys-aged-3/posts/1627744?ref=backer_project_update">木製ロボット玩具Cubetto</a> が、ついに工場生産開始されたようです。いやー、めでたい。</p>
<blockquote>
  <p>Our production line is officially rolling. Bits and atoms are all coming together on the factory floor. This is it! We also have news on patent trolling, competitions, maps, awards, translations and team. First things first... our final shipping schedule:</p>
  <p><strong>Maiden voyage</strong> <br />
  With all the variables involved, coming up with a final calendar for shipping hasn’t been easy, but we’re happy to announce the below schedule</p>
</blockquote>
<p>早ければ８月中にも発送するってことですかね。あれ、日本はどこへ…。</p>
<pre><code>Early birds
30/08/2016 - 400 Units (US)
05/08/2016 - 400 Units (EU)
05/09/2016 - 400 Units (ROW)
All other backers
12/09/2016 - 400 Units (US)
19/09/2016 - 400 Units (EU)
26/09/2016 - 800 Units (US + EU + ROW)
10/10/2016 - 800 Units (US + EU + ROW)
17/10/2016 - 800 Units (US + EU + ROW)
24/10/2016 - 800 Units (US + EU + ROW)
</code></pre>
<p>ちなみにCubettoとは何かというと、<strong>３歳児でもプログラミングの基礎を学べる、イギリス発の学習キット</strong>です。</p>
<p>公式サイトでPR動画が配信されています。</p>
<iframe width="640" height="360" src="https://www.kickstarter.com/projects/primotoys/cubetto-hands-on-coding-for-girls-and-boys-aged-3/widget/video.html" frameborder="0" scrolling="no"> </iframe>
<p>動画を見れば大体わかるんですが、ざっくり説明すると、木製のボード上にロボットをどう動かすか指示するためのブロックを並べ、あらかじめ用意された地図の上を狙った通りに動かしてゴールさせる、といった感じです。</p>
<p>パソコンもスマホも使わずに、ロボットに出す指示を木製ブロックでコーディングするスタイルがとても気に入ったので、思わずポチってしまいました。</p>
<p>見た目も可愛いので、娘も気に入ることでしょう。何より未就学児がプログラミングの基礎を学べるというコンセプトがいいと思いました。</p>
<p>早く届かないかな〜。</p>
<p>届いたら現在４歳の娘と遊び倒してレポートするので、お楽しみに。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5959540158]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1643]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477015]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>退職届の書き方は…どうするんだったかな？</title>
		<link>https://tech.blog.uribou.me/tui-zhi-jie-noshu-kifang-ha-doudatutakana/</link>
		<pubDate>Sun, 07 Aug 2016 06:23:33 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/tui-zhi-jie-noshu-kifang-ha-doudatutakana/</guid>
		<description></description>
		<content:encoded><![CDATA[ここが分かりやすい。<strong><a href="http://ten-navi.com/hacks/retire-8-4437">退職届・退職願の書き方【失敗しない文例・テンプレ付き】</a></strong>。
そうそう書くものではないけれど、前回退職届を書いたのが2006年だから…
実に10年ぶりかぁ。
当時も事前にネットで調べまくって書いた記憶があるなぁ。
前回の退職理由は、身近な人が心の健康を害して職場を去るまでの経過を間近でまざまざと見せつけらられた上、次のその人の役が自分に課されると知って身の危険を感じたから。
当時開発していた心電計よ電極を、その人が自ら装着して、小動物並みの、
あり得ない心拍数を叩き出していたのは、今でも印象に残ってる。具体的な数値は忘れた。
今回の退職理由は… 色々あり過ぎて、纏めるのが一苦労しそう。
兎にも角にも、明日退職届を出さないといけないので、今から書き上げねば。
今回の退職理由は、無事退職してから書くことにします。
ではまた。
<hr />
<em>追記</em>
なんと、<strong>10年前に書いた、きったない字の退職届（予備）が、余った無地封筒と一緒に出てきました</strong>。
何かの巡り合わせだろうか…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1580</wp:post_id>
		<wp:post_date><![CDATA[2016-08-07 15:23:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-07 06:23:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tui-zhi-jie-noshu-kifang-ha-doudatutakana]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ここが分かりやすい。<strong><a href="http://ten-navi.com/hacks/retire-8-4437">退職届・退職願の書き方【失敗しない文例・テンプレ付き】</a></strong>。</p>

<p>そうそう書くものではないけれど、前回退職届を書いたのが2006年だから…</p>

<p>実に10年ぶりかぁ。</p>

<p>当時も事前にネットで調べまくって書いた記憶があるなぁ。</p>

<p>前回の退職理由は、身近な人が心の健康を害して職場を去るまでの経過を間近でまざまざと見せつけらられた上、次のその人の役が自分に課されると知って身の危険を感じたから。</p>

<p>当時開発していた心電計よ電極を、その人が自ら装着して、小動物並みの、
あり得ない心拍数を叩き出していたのは、今でも印象に残ってる。具体的な数値は忘れた。</p>

<p>今回の退職理由は… 色々あり過ぎて、纏めるのが一苦労しそう。</p>

<p>兎にも角にも、明日退職届を出さないといけないので、今から書き上げねば。</p>

<p>今回の退職理由は、無事退職してから書くことにします。</p>

<p>ではまた。</p>

<hr />

<p><em>追記</em></p>

<p>なんと、<strong>10年前に書いた、きったない字の退職届（予備）が、余った無地封筒と一緒に出てきました</strong>。</p>

<p>何かの巡り合わせだろうか…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6014825545]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577291]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>248</wp:comment_id>
			<wp:comment_author><![CDATA[binance-]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[20616730@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ka-GE/join?ref=JHQQKNKN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-07 15:46:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-07 06:46:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>ダメ元で始めたメロン栽培。ちゃんと実ができてる！！</title>
		<link>https://tech.blog.uribou.me/3-melons/</link>
		<pubDate>Thu, 11 Aug 2016 05:01:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/3-melons/</guid>
		<description></description>
		<content:encoded><![CDATA[色々あって３週間サボッていた菜園メンテ…。
雑草がとんでもないことになっていました(^_^;) この写真じゃ、ちょっとわかりづらいか…。全部刈るのに１時間半はかかったと思います。
<img src="https://farm9.staticflickr.com/8657/28626557930_f4d2de1815_z_d.jpg" alt="" />
でもって、定番のミニトマト。実が多すぎて、重みで傾いてます。味は相変わらず最高。４歳の娘も大好物です。
<img src="https://farm9.staticflickr.com/8612/28293953214_24d1d927a7_z_d.jpg" alt="" />
9ヶ月の娘も口を出しますが、さすがにまだ食べれません。もう少ししたらね。
<img src="https://farm9.staticflickr.com/8755/28880214046_d2a2f41ecc_z_d.jpg" alt="" />
雑草をザクザク刈っていると…　なんと、ダメ元で植えていたメロンの実が成っていました！ しかも３個！ まだ拳大にもなっていないけど、これはイケるか？
カボチャと同様、土と触れないように雑草の座布団を敷いて、鳥に突かれないように大事に隠しておきました。大きく甘くなってくれると嬉しいなぁ。
<img src="https://farm9.staticflickr.com/8118/28293953024_d4ddee813f_z_d.jpg" alt="" />
そして今日の釣果がこちら。ミニトマトは多すぎて数える気がしませんでした…。
<img src="https://farm9.staticflickr.com/8707/28835940111_bc08a47c74_z_d.jpg" alt="" />
そんな自分専用のミニ農園を貸してもらえて、無農薬野菜の育てかたを教わることができる<a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a>、お勧めですよ〜。近場で家庭菜園に興味がある方は是非。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">本日は、藤沢駅近くの東奥田公園でのeマルシェに菜園体験コトモファームが参加。来月27日も出店するので、よろしくお願いします！ <a href="https://t.co/GCDSuKZTXa">pic.twitter.com/GCDSuKZTXa</a></p>&mdash; えと菜園 小島 (@etonaen) <a href="https://twitter.com/etonaen/status/681082394028290048">2015年12月27日</a></blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1582</wp:post_id>
		<wp:post_date><![CDATA[2016-08-11 14:01:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-11 05:01:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[3-melons]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm9.staticflickr.com/8657/28626557930_f4d2de1815_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>色々あって３週間サボッていた菜園メンテ…。</p>

<p>雑草がとんでもないことになっていました(^_^;) この写真じゃ、ちょっとわかりづらいか…。全部刈るのに１時間半はかかったと思います。</p>

<p><img src="https://farm9.staticflickr.com/8657/28626557930_f4d2de1815_z_d.jpg" alt="" /></p>

<p>でもって、定番のミニトマト。実が多すぎて、重みで傾いてます。味は相変わらず最高。４歳の娘も大好物です。</p>

<p><img src="https://farm9.staticflickr.com/8612/28293953214_24d1d927a7_z_d.jpg" alt="" /></p>

<p>9ヶ月の娘も口を出しますが、さすがにまだ食べれません。もう少ししたらね。</p>

<p><img src="https://farm9.staticflickr.com/8755/28880214046_d2a2f41ecc_z_d.jpg" alt="" /></p>

<p>雑草をザクザク刈っていると…　なんと、ダメ元で植えていたメロンの実が成っていました！ しかも３個！ まだ拳大にもなっていないけど、これはイケるか？ </p>

<p>カボチャと同様、土と触れないように雑草の座布団を敷いて、鳥に突かれないように大事に隠しておきました。大きく甘くなってくれると嬉しいなぁ。</p>

<p><img src="https://farm9.staticflickr.com/8118/28293953024_d4ddee813f_z_d.jpg" alt="" /></p>

<p>そして今日の釣果がこちら。ミニトマトは多すぎて数える気がしませんでした…。</p>

<p><img src="https://farm9.staticflickr.com/8707/28835940111_bc08a47c74_z_d.jpg" alt="" /></p>

<p>そんな自分専用のミニ農園を貸してもらえて、無農薬野菜の育てかたを教わることができる<a href="http://www.eto-na-en.com/cotomo-farm/">コトモファーム</a>、お勧めですよ〜。近場で家庭菜園に興味がある方は是非。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">本日は、藤沢駅近くの東奥田公園でのeマルシェに菜園体験コトモファームが参加。来月27日も出店するので、よろしくお願いします！ <a href="https://t.co/GCDSuKZTXa">pic.twitter.com/GCDSuKZTXa</a></p>&mdash; えと菜園 小島 (@etonaen) <a href="https://twitter.com/etonaen/status/681082394028290048">2015年12月27日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1583]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5984798844]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591163]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>機械学習ライブラリTensorFlowの日本語書籍まとめ。</title>
		<link>https://tech.blog.uribou.me/machine-learning-in-japanese/</link>
		<pubDate>Thu, 11 Aug 2016 13:23:33 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/machine-learning-in-japanese/</guid>
		<description></description>
		<content:encoded><![CDATA[まだ全部は読破できていない上、１冊は発売予定なんですが…　Google製機械（深層）学習ライブラリ、TensorFlowの解説本を紹介します。
TensorFlowのフロントエンドがPythonなので、どの書籍もPythonの基本を理解していることが前提の内容となっています。
まずはこちらのポップな表紙の<strong>「TensorFlowはじめました」</strong>。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01IT509EY%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51wV2UR2giL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01IT509EY%2Fref%3Dnosim" target="_blank" rel="noopener">TensorFlowはじめました　実践！最新Googleマシンラーニング (NextPublishing)[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">有山 圭二 インプレスR&amp;D 2016-07-29    </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01IT509EY%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4802090889%2F" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                                  </div></div><div class="booklink-footer"></div></div></div>
本当にTensorFlowとは何なのか？ Tensorとは何か？ といった、TensorFlow公式ページのチュートリアルを読めば分かるような位置から図解入りで解説してくれます。
Amazonの評価コメントの評価は低いですが、入門としてはとてもお勧めだと思います。自分のような入門者にとっては、概念を図解してくれるだけでも理解のとっかかりになって、有難いものです。
次は、<strong>「TensorFlowで学ぶディープラーニング入門」</strong>。はい、まだ発売してません。すいません。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4839960887%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://g-ecx.images-amazon.com/images/G/09/nav2/dp/no-image-no-ciu._SL90_.gif" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4839960887%2Fref%3Dnosim" target="_blank" rel="noopener">TensorFlowで学ぶディープラーニング入門 ~畳み込みニューラルネットワーク徹底解説~</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">中井 悦司 マイナビ出版 2016-09-28    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4839960887%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTensorFlow%2582%25C5%258Aw%2582%25D4%2583f%2583B%2581%255B%2583v%2583%2589%2581%255B%2583j%2583%2593%2583O%2593%25FC%2596%25E5%2520~%258F%25F4%2582%25DD%258D%259E%2582%25DD%2583j%2583%2585%2581%255B%2583%2589%2583%258B%2583l%2583b%2583g%2583%258F%2581%255B%2583N%2593O%2592%25EA%2589%25F0%2590%25E0~%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F14394414%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                       </div></div><div class="booklink-footer"></div></div></div>
でも上記の書籍は、副題からも、この中井悦司さんが出されている他の書籍を見ても、かなり本格的な内容であることが予想できますね。ニューラルネットワークって…　言葉は知っているけど、技術的にどうこう言われるとガクブルなので、勉強します。
そして次の本に至っては、TensorFlow解説ですらないという…。注釈に出てはくるんですけどね。Pythonはある程度習熟しているけど、機械学習は初学者ですという人（自分）にとっては、ちょっとハードル高めで良い感じです。<strong>「Python機械学習プログラミング 達人データサイエンティストによる理論と実践」</strong>。個人的にかなりお勧めします。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51YzbphP0JL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2Fref%3Dnosim" target="_blank" rel="noopener">Python機械学習プログラミング 達人データサイエンティストによる理論と実践 (impress top gear)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Sebastian Raschka インプレス 2016-06-30    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F14282899%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                        </div></div><div class="booklink-footer"></div></div></div>
Pythonの機械学習ライブラリ、scikit-learnを中心とした解説本なのですが、よくある使い方講座で終わりません。機械学習の基礎理論から入り、数式を交えながら、簡単な気概学習モデルをPythonを使って自分で書いてみよう！ というハードルの高さです。
まだ全く読み終えてませんが、日本語でまとまった書籍でしかもPythonでサンプルを書ける、ここまで内容が濃い書籍は他にないんじゃないでしょうか。イチオシです。
もっと読み進めて内容そのものに触れたくなったらまた記事にします。
それではまた。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1584</wp:post_id>
		<wp:post_date><![CDATA[2016-08-11 22:23:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-11 13:23:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[machine-learning-in-japanese]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="tensorflow"><![CDATA[TensorFlow]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/51wV2UR2giL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>まだ全部は読破できていない上、１冊は発売予定なんですが…　Google製機械（深層）学習ライブラリ、TensorFlowの解説本を紹介します。</p>

<p>TensorFlowのフロントエンドがPythonなので、どの書籍もPythonの基本を理解していることが前提の内容となっています。</p>

<p>まずはこちらのポップな表紙の<strong>「TensorFlowはじめました」</strong>。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01IT509EY%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51wV2UR2giL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01IT509EY%2Fref%3Dnosim" target="_blank" >TensorFlowはじめました　実践！最新Googleマシンラーニング (NextPublishing)[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">有山 圭二 インプレスR&D 2016-07-29    </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01IT509EY%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4802090889%2F" target="_blank" >Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>                                                    </div></div><div class="booklink-footer"></div></div></div>

<p>本当にTensorFlowとは何なのか？ Tensorとは何か？ といった、TensorFlow公式ページのチュートリアルを読めば分かるような位置から図解入りで解説してくれます。</p>

<p>Amazonの評価コメントの評価は低いですが、入門としてはとてもお勧めだと思います。自分のような入門者にとっては、概念を図解してくれるだけでも理解のとっかかりになって、有難いものです。</p>

<p>次は、<strong>「TensorFlowで学ぶディープラーニング入門」</strong>。はい、まだ発売してません。すいません。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4839960887%2Fref%3Dnosim" target="_blank" ><img src="http://g-ecx.images-amazon.com/images/G/09/nav2/dp/no-image-no-ciu._SL90_.gif" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4839960887%2Fref%3Dnosim" target="_blank" >TensorFlowで学ぶディープラーニング入門 ~畳み込みニューラルネットワーク徹底解説~</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">中井 悦司 マイナビ出版 2016-09-28    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4839960887%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTensorFlow%2582%25C5%258Aw%2582%25D4%2583f%2583B%2581%255B%2583v%2583%2589%2581%255B%2583j%2583%2593%2583O%2593%25FC%2596%25E5%2520~%258F%25F4%2582%25DD%258D%259E%2582%25DD%2583j%2583%2585%2581%255B%2583%2589%2583%258B%2583l%2583b%2583g%2583%258F%2581%255B%2583N%2593O%2592%25EA%2589%25F0%2590%25E0~%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F14394414%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                        </div></div><div class="booklink-footer"></div></div></div>

<p>でも上記の書籍は、副題からも、この中井悦司さんが出されている他の書籍を見ても、かなり本格的な内容であることが予想できますね。ニューラルネットワークって…　言葉は知っているけど、技術的にどうこう言われるとガクブルなので、勉強します。</p>

<p>そして次の本に至っては、TensorFlow解説ですらないという…。注釈に出てはくるんですけどね。Pythonはある程度習熟しているけど、機械学習は初学者ですという人（自分）にとっては、ちょっとハードル高めで良い感じです。<strong>「Python機械学習プログラミング 達人データサイエンティストによる理論と実践」</strong>。個人的にかなりお勧めします。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51YzbphP0JL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2Fref%3Dnosim" target="_blank" >Python機械学習プログラミング 達人データサイエンティストによる理論と実践 (impress top gear)</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">
Sebastian Raschka インプレス 2016-06-30    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F14282899%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                        </div></div><div class="booklink-footer"></div></div></div>

<p>Pythonの機械学習ライブラリ、scikit-learnを中心とした解説本なのですが、よくある使い方講座で終わりません。機械学習の基礎理論から入り、数式を交えながら、簡単な気概学習モデルをPythonを使って自分で書いてみよう！ というハードルの高さです。</p>

<p>まだ全く読み終えてませんが、日本語でまとまった書籍でしかもPythonでサンプルを書ける、ここまで内容が濃い書籍は他にないんじゃないでしょうか。イチオシです。</p>

<p>もっと読み進めて内容そのものに触れたくなったらまた記事にします。</p>

<p>それではまた。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941009676]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477015]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>機械学習ネタ。ピアソンの相関係数をヒートマップ化してプロットするには。</title>
		<link>https://tech.blog.uribou.me/piason-r-heatmap/</link>
		<pubDate>Fri, 12 Aug 2016 07:21:39 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/piason-r-heatmap/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/tag/detasaiensu/">Udemyのデータサイエンス講習</a>は一通りやってしまったので、復習するのもいいけど何か新しいことをやりたいと思い…
これを買ってしまいました。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/611cFWZK1-L._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2Fref%3Dnosim" target="_blank" rel="noopener">Python機械学習プログラミング 達人データサイエンティストによる理論と実践 impress top gearシリーズ[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Sebastian Raschka,株式会社クイープ,福島 真太朗 インプレス 2016-06-30    </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2F" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                                  </div></div><div class="booklink-footer"></div></div></div>
大学数学から離れて１０年以上立つので正直きついですが、かなり掘り下げて解説してくれるので理解が深まります。
その中でも、やってみて面白かったことを備忘録と練習を兼ねて、本書とは別のデータセット、irisデータを使い、特徴量同士の相関をヒートマップ化してみようと思います。
まずは特徴量同士のpairplot出力を見てみます。
<img src="https://farm9.staticflickr.com/8784/28316005554_b00027d7d8_z_d.jpg" alt="" />
この図を出すには、以下のようにします。
<pre><code class="python">import numpy as np
import seaborn as sns
import pandas as pd
from sklearn.datasets import load_iris
iris = load_iris()
iris_df = pd.DataFrame(iris["data"], columns=iris["feature_names"])
iris_df = pd.concat([iris_df, pd.DataFrame(iris["target"], columns=["target",])], axis=1)
sns.pairplot(iris_df, hue="target")
sns.plt.show()
</code></pre>
このpairplot、相関の有無やクラスタを見た目で判断できて便利なんですが、相関の強さを数値化できたら…　どのデータを重点的に見れば良いか分かるので、更に便利。なはず。
ということで、各特徴量同士の<a href="https://ja.wikipedia.org/wiki/%E7%9B%B8%E9%96%A2%E4%BF%82%E6%95%B0">ピアソンの相関係数</a>を計算して、ヒートマップとしてプロットしてみます。値が大きいほど相関が強いということですね。
<img src="https://farm9.staticflickr.com/8606/28858099011_3b0aa019fc_z_d.jpg" alt="" />
この図を出すには、さっきのpairplot出力コードに続けて、以下のようにします。
<pre><code class="python">hm = np.corrcoef(iris_df[iris_df.columns[:-1]].T)
sns.heatmap(hm, annot=True, xticklabels=iris_df.columns[:-1], yticklabels=iris_df.columns[:-1])
sns.plt.show()
</code></pre>
petal lengthとpetal widthが最も強い相関を示すのが、数値で示せましたね。pairplotでも見た目そうであることが分かりますが、こちらの方がより明確になりました。
<h3>ちょっと解説</h3>
sklearn.datasetsがload_iris()関数を提供してくれているので、こちらを使いました。<code>load_iris()["data"]</code>はnumpy.ndarray型のデータを返すので、columnsを設定したpandas.DataFrame型に変換してやると、後でデータを俯瞰する際に便利です。
<pre><code class="python">iris = load_iris()
iris.keys()
dict_keys(['target_names', 'data', 'feature_names', 'target', 'DESCR'])
iris.feature_names
['sepal length (cm)',
 'sepal width (cm)',
 'petal length (cm)',
 'petal width (cm)']
</code></pre>
上記のデータを以下のコードでDataFrame形式に変換し、
<pre><code class="python">iris_df = pd.DataFrame(iris["data"], columns=iris["feature_names"])
</code></pre>
以下のコードで目的変数も上記DataFrame形式データに連結しちゃったわけですね。
<pre><code class="python">iris.target
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
iris.target_names
array(['setosa', 'versicolor', 'virginica'],
      dtype='&lt;U10')
iris_df = pd.concat([iris_df, pd.DataFrame(iris["target"], columns=["target",])], axis=1)
</code></pre>
こうしておくと、pairplotする際にhue指定してクラスタが見分けやすくなったりと、後々嬉しいことがたくさんあります。
ということで、また<strong>Python機械学習プログラミング 達人データサイエンティストによる理論と実践</strong>を進めたら、何か練習用の課題を設定して公開しようと思います。
それではまた。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1585</wp:post_id>
		<wp:post_date><![CDATA[2016-08-12 16:21:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-12 07:21:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[piason-r-heatmap]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/611cFWZK1-L._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/tag/detasaiensu/">Udemyのデータサイエンス講習</a>は一通りやってしまったので、復習するのもいいけど何か新しいことをやりたいと思い…</p>

<p>これを買ってしまいました。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/611cFWZK1-L._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2Fref%3Dnosim" target="_blank" >Python機械学習プログラミング 達人データサイエンティストによる理論と実践 impress top gearシリーズ[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Sebastian Raschka,株式会社クイープ,福島 真太朗 インプレス 2016-06-30    </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01HGIPIAK%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844380605%2F" target="_blank" >Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>                                                    </div></div><div class="booklink-footer"></div></div></div>

<p>大学数学から離れて１０年以上立つので正直きついですが、かなり掘り下げて解説してくれるので理解が深まります。</p>

<p>その中でも、やってみて面白かったことを備忘録と練習を兼ねて、本書とは別のデータセット、irisデータを使い、特徴量同士の相関をヒートマップ化してみようと思います。</p>

<p>まずは特徴量同士のpairplot出力を見てみます。</p>

<p><img src="https://farm9.staticflickr.com/8784/28316005554_b00027d7d8_z_d.jpg" alt="" /></p>

<p>この図を出すには、以下のようにします。</p>

<pre><code class="language-python">import numpy as np  
import seaborn as sns  
import pandas as pd  
from sklearn.datasets import load_iris

iris = load_iris()  
iris_df = pd.DataFrame(iris["data"], columns=iris["feature_names"])  
iris_df = pd.concat([iris_df, pd.DataFrame(iris["target"], columns=["target",])], axis=1)

sns.pairplot(iris_df, hue="target")  
sns.plt.show()  
</code></pre>

<p>このpairplot、相関の有無やクラスタを見た目で判断できて便利なんですが、相関の強さを数値化できたら…　どのデータを重点的に見れば良いか分かるので、更に便利。なはず。</p>

<p>ということで、各特徴量同士の<a href="https://ja.wikipedia.org/wiki/%E7%9B%B8%E9%96%A2%E4%BF%82%E6%95%B0">ピアソンの相関係数</a>を計算して、ヒートマップとしてプロットしてみます。値が大きいほど相関が強いということですね。</p>

<p><img src="https://farm9.staticflickr.com/8606/28858099011_3b0aa019fc_z_d.jpg" alt="" /></p>

<p>この図を出すには、さっきのpairplot出力コードに続けて、以下のようにします。</p>

<pre><code class="language-python">hm = np.corrcoef(iris_df[iris_df.columns[:-1]].T)  
sns.heatmap(hm, annot=True, xticklabels=iris_df.columns[:-1], yticklabels=iris_df.columns[:-1])  
sns.plt.show()  
</code></pre>

<p>petal lengthとpetal widthが最も強い相関を示すのが、数値で示せましたね。pairplotでも見た目そうであることが分かりますが、こちらの方がより明確になりました。</p>

<h3 id="">ちょっと解説</h3>

<p>sklearn.datasetsがload_iris()関数を提供してくれているので、こちらを使いました。<code>load_iris()["data"]</code>はnumpy.ndarray型のデータを返すので、columnsを設定したpandas.DataFrame型に変換してやると、後でデータを俯瞰する際に便利です。</p>

<pre><code class="language-python">iris = load_iris()

iris.keys()  
dict_keys(['target_names', 'data', 'feature_names', 'target', 'DESCR'])

iris.feature_names  
['sepal length (cm)',
 'sepal width (cm)',
 'petal length (cm)',
 'petal width (cm)']
</code></pre>

<p>上記のデータを以下のコードでDataFrame形式に変換し、</p>

<pre><code class="language-python">iris_df = pd.DataFrame(iris["data"], columns=iris["feature_names"])  
</code></pre>

<p>以下のコードで目的変数も上記DataFrame形式データに連結しちゃったわけですね。</p>

<pre><code class="language-python">iris.target  
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])

iris.target_names  
array(['setosa', 'versicolor', 'virginica'],  
      dtype='&lt;U10')

iris_df = pd.concat([iris_df, pd.DataFrame(iris["target"], columns=["target",])], axis=1)  
</code></pre>

<p>こうしておくと、pairplotする際にhue指定してクラスタが見分けやすくなったりと、後々嬉しいことがたくさんあります。</p>

<p>ということで、また<strong>Python機械学習プログラミング 達人データサイエンティストによる理論と実践</strong>を進めたら、何か練習用の課題を設定して公開しようと思います。</p>

<p>それではまた。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1586]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941930349]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605565]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>303</wp:comment_id>
			<wp:comment_author><![CDATA[Registrasi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[54278047@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/id/join?ref=OMM3XK51</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.142]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-31 23:48:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-31 14:48:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>$5（約500円）Linuxボード、Raspberry Pi Zeroが再入荷してる！</title>
		<link>https://tech.blog.uribou.me/raspberry-pi-zero-in-stock/</link>
		<pubDate>Fri, 12 Aug 2016 16:10:40 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/raspberry-pi-zero-in-stock/</guid>
		<description></description>
		<content:encoded><![CDATA[Raspberry Pi Zeroが一向に入荷しないなぁ…　と、いつも通り諦めつつ在庫チェックしていると…　<strong>入荷してる！</strong>
ココです↓
<ul>
<li><a href="https://www.adafruit.com/products/2885">adafruit</a></li>
<li><a href="https://shop.pimoroni.com/products/raspberry-pi-zero">PIMORONI</a></li>
<li><a href="http://www.microcenter.com/product/457746/Zero_Development_Board">MICRO CENTER</a></li>
</ul>
はい、全部海外サイトです。購入時の送付先住所を英語で入力するというハードルと、高めの送料、為替レート換算が必要になります。adafruitで最安送料を選択すると、以下のようになりました。
<blockquote>
  Raspberry Pi Zero - Version 1.3<br />
  $5.00 USD 1   $5.00 USD<br />
  <br />
  Shipping and handling $29.86 USD<br />
  Exchange rate: 1 JPY = 0.00954112 USD
</blockquote>
以前は入荷と同時にSold Outだったのが、今回は余裕ありますね。お一人様一品限りという制限のおかげか…？
でもこの制限、海外から輸入する立場の人間からすると厳しすぎ…。だって、<strong>$5ボード1枚購入するのに$29.86の送料</strong>って、ちょっと、ねぇ…。
そう考えると、Amazonで出品されてるこの価格設定は、まぁ納得できますよね。日本円で500円の製品が何で3780円なんだよ！ という批判コメントもありますけど、それが嫌なら直接海外から個人輸入すればいいんじゃないでしょうか。
実際それなりの手間と送料がかかってそうですし。今なら少なくともAmazon以外の３つの海外サイトから個人輸入できるわけですし。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB018K9NNJW%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://g-ecx.images-amazon.com/images/G/09/nav2/dp/no-image-no-ciu._SL90_.gif" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB018K9NNJW%2Fref%3Dnosim" target="_blank" rel="noopener">Raspberry Pi Zero</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> raspberrypi.org     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DRaspberry%2520Pi%2520Zero%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FRaspberry%2520Pi%2520Zero%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
で、この送料負担を少しでも軽く感じるように、工夫できそうです。
よく見ると、Zeroに限らずA+など他のRaspberry Piも、adafruitで直接買ったほうがお得なんです。Amazonだと4800〜5800円、adafruitだと$24.95（2615円）。
他の製品も同時購入して、送料の負荷を分散するといい感じです。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PI9KPLC%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51ZLVaeIbdL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PI9KPLC%2Fref%3Dnosim" target="_blank" rel="noopener">Raspberry Pi Model A+</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> raspberrypi.org     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DRaspberry%2520Pi%2520Model%2520A%2520%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FRaspberry%2520Pi%2520Model%2520A%2520%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
ということで、やっとRaspberry Pi Zeroが入手できそう。
作りたい監視システムがあるので、この超低消費電力Linuxマシンを使って試作したいと思います。
ではまた。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1587</wp:post_id>
		<wp:post_date><![CDATA[2016-08-13 01:10:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-12 16:10:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[raspberry-pi-zero-in-stock]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="raspberrypi"><![CDATA[RaspberryPi]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:77:"http://g-ecx.images-amazon.com/images/G/09/nav2/dp/no-image-no-ciu._SL90_.gif";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>Raspberry Pi Zeroが一向に入荷しないなぁ…　と、いつも通り諦めつつ在庫チェックしていると…　<strong>入荷してる！</strong></p>

<p>ココです↓</p>

<ul>
<li><a href="https://www.adafruit.com/products/2885">adafruit</a></li>
<li><a href="https://shop.pimoroni.com/products/raspberry-pi-zero">PIMORONI</a></li>
<li><a href="http://www.microcenter.com/product/457746/Zero_Development_Board">MICRO CENTER</a></li>
</ul>

<p>はい、全部海外サイトです。購入時の送付先住所を英語で入力するというハードルと、高めの送料、為替レート換算が必要になります。adafruitで最安送料を選択すると、以下のようになりました。</p>

<blockquote>
  <p>Raspberry Pi Zero - Version 1.3 <br />
  $5.00 USD    1   $5.00 USD  </p>
  
  <p>Shipping and handling    $29.86 USD <br />
  Exchange rate: 1 JPY = 0.00954112 USD  </p>
</blockquote>

<p>以前は入荷と同時にSold Outだったのが、今回は余裕ありますね。お一人様一品限りという制限のおかげか…？</p>

<p>でもこの制限、海外から輸入する立場の人間からすると厳しすぎ…。だって、<strong>$5ボード1枚購入するのに$29.86の送料</strong>って、ちょっと、ねぇ…。</p>

<p>そう考えると、Amazonで出品されてるこの価格設定は、まぁ納得できますよね。日本円で500円の製品が何で3780円なんだよ！ という批判コメントもありますけど、それが嫌なら直接海外から個人輸入すればいいんじゃないでしょうか。</p>

<p>実際それなりの手間と送料がかかってそうですし。今なら少なくともAmazon以外の３つの海外サイトから個人輸入できるわけですし。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB018K9NNJW%2Fref%3Dnosim" target="_blank" ><img src="http://g-ecx.images-amazon.com/images/G/09/nav2/dp/no-image-no-ciu._SL90_.gif" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB018K9NNJW%2Fref%3Dnosim" target="_blank" >Raspberry Pi Zero</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> raspberrypi.org     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DRaspberry%2520Pi%2520Zero%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FRaspberry%2520Pi%2520Zero%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>で、この送料負担を少しでも軽く感じるように、工夫できそうです。</p>

<p>よく見ると、Zeroに限らずA+など他のRaspberry Piも、adafruitで直接買ったほうがお得なんです。Amazonだと4800〜5800円、adafruitだと$24.95（2615円）。</p>

<p>他の製品も同時購入して、送料の負荷を分散するといい感じです。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PI9KPLC%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51ZLVaeIbdL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00PI9KPLC%2Fref%3Dnosim" target="_blank" >Raspberry Pi Model A+</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> raspberrypi.org     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DRaspberry%2520Pi%2520Model%2520A%2520%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FRaspberry%2520Pi%2520Model%2520A%2520%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>ということで、やっとRaspberry Pi Zeroが入手できそう。</p>

<p>作りたい監視システムがあるので、この超低消費電力Linuxマシンを使って試作したいと思います。</p>

<p>ではまた。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1588]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942046475]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648889]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ちょっとしたコマンドラインツールをpythonで作る時に便利なargparseの使い方</title>
		<link>https://tech.blog.uribou.me/python-argparsenoshi-ifang/</link>
		<pubDate>Thu, 03 Nov 2016 12:26:47 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-argparsenoshi-ifang/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>ちょっとしたコマンドラインツールを作るとき、欲しくなるのが以下のようなカッコイイオプション指定機能とヘルプ表示。</p>
<pre class="lang:sh decode:true">$ python photosort.py -h
usage: photosort.py [-h] [-d [PATH_ROOT_DST]]
                    [-p SORT_PHOTO_EXTENTIONS [SORT_PHOTO_EXTENTIONS ...]]
                    [-v SORT_VIDEO_EXTENTIONS [SORT_VIDEO_EXTENTIONS ...]]
                    [-l DELIMITER] [--subdir-year] [--subdir-month] [--copy]
                    [--callback-function CALLBACK_FUNCTION] [--debug DEBUG]
                    path_root_src
This script to make directory of date which the photo is taken, and move the
photo into the directory.
positional arguments:
  path_root_src         Directory path where your taken photo files are
                        located.
optional arguments:
  -h, --help            show this help message and exit
  -d [PATH_ROOT_DST], --path-root-dst [PATH_ROOT_DST]
                        Directory path where you want to create date folder
                        and locate photo files. (default: same as source
                        directory)
  -p SORT_PHOTO_EXTENTIONS [SORT_PHOTO_EXTENTIONS ...], --sort-photo-extentions SORT_PHOTO_EXTENTIONS [SORT_PHOTO_EXTENTIONS ...]
                        Extentions of photo file which you want to sort.
                        (default: jpg)
  -v SORT_VIDEO_EXTENTIONS [SORT_VIDEO_EXTENTIONS ...], --sort-video-extentions SORT_VIDEO_EXTENTIONS [SORT_VIDEO_EXTENTIONS ...]
                        Extentions of video file which you want to sort.
                        (default: jpg)
  -l DELIMITER, --delimiter DELIMITER
                        A character as delimiter which you want to set the
                        name of date folder like "2014-05-01". (default: none)
  --subdir-year         Generate sub directory of year if this is set.
  --subdir-month        Generate sub directory of month if this is set.
  --copy                Copy media files but not move.
  --callback-function CALLBACK_FUNCTION
                        Function to be callback when copying/moving a photo
                        finished. The format is like "/User/takashi/flickr_upl
                        oader/flickr_uploader:upload?key=xxx&amp;param=yyy". The
                        "upload" function should have an argument
                        "path_to_photo_uploading" as first and another args is
                        passed to keyword arguments. (default: none)
  --debug DEBUG         debug mode if this flag is set (default: info)
</pre>
<p>pythonなら、標準パッケージ<a href="http://docs.python.jp/2/library/argparse.html">argparse</a>を使うことで、簡単に実装できます。</p>
<h1>スクリプトの引数仕様</h1>
<p>例えば、とあるスクリプトの引数をこんな感じで指定できるようにしたい。</p>
<ul>
    <li>srcディレクトリパスの指定は必須</li>
    <li>dstディレクトリパスの指定は必須ではない</li>
    <li>対象とするファイルの拡張子を複数指定したい</li>
    <li>debug用のprint文は普段はstdoutに出したくない</li>
</ul>
<h1>まずは初期化</h1>
<p>ArgumentParserオブジェクトを生成します。
その初期化パラメータは、description以外はデフォルトのままで問題ありません。add_help(-h/–help オプションをパーサーに追加する）等、便利な機能は予め有効になっています。</p>
<pre class="lang:python decode:true ">import argparse
parser = argparse.ArgumentParser(description='This script is ...')</pre>
<h1>引数の追加</h1>
<h2>その１</h2>
<blockquote>
<p>srcディレクトリパスの指定は必須
add_argumentの第一引数にpath_root_srcを、nargsにNoneを指定します。この名前に、-や--を付けないのがミソです。
こうすることで、-や--付オプション以外の引数がスクリプトに指定されないと、<code>too few argument</code>エラーとなってくれます。
もしnargsを'?'にした場合は、引数の数0個を許可したことになるので、エラーになることなくスクリプトを実行できることになります。ただし、その際はdefaultやconstの設定が必要になります。詳しくは後ほど。</p>
<pre class="lang:python decode:true">parser.add_argument(
'path_root_src',
action='store',
nargs=None,
const=None,
default=None,
type=str,
choices=None,
help='Directory path where your taken photo files are located.',
metavar=None)</pre>
<p>ここで指定した第一引数の文字列'path_root_src'は、最後の仕上げでコールする<code>args = parser.parse_args()</code>が返すNamespaceオブジェクトの属性名として使用されます。
つまり、下記のように実行した場合、<code>args.path_root_src</code>に&quot;&quot;/Users/test/Pictures&quot;&quot;が格納されることになります。</p>
<pre class="lang:sh decode:true ">$ ./photosort.py /Users/test/Pictures</pre>
<h2>その２</h2>
<p>dstディレクトリパスの指定は必須ではない
add_argumentの第一引数に２種類のオプション文字列を、nargsに'?'を指定することで実現可能です。
これにより、可能なら1つの引数がコマンドラインから取られ、<code>args = parser.parse_args()</code>が返すNamespaceオブジェクトの属性名'path_root_dst'として使用され、引数の値はその属性にセットされます。
オプション引数そのものが存在しない（-d自体が指定されない）場合はdefaultの値が渡されます。
それに対し、オプション引数が指定され、その後にコマンドライン引数が無い場合は、constの値が渡されます。
下記の例の場合、どちらもNoneなので同じことですが…。</p>
<pre class="lang:python decode:true ">parser.add_argument(
　　　　'-d', '--path-root-dst',
　　　　action='store',
　　　　nargs='?',
　　　　const=None,
　　　　default=None,
　　　　type=str,
　　　　choices=None,
　　　　help='Directory path where you want to create date folder and locate photo files. (default: same as source directory)',
　　　　metavar=None)</pre>
<h2>その３</h2>
<p>対象とするファイルの拡張子を複数指定したい
add_argumentの第一引数に２種類のオプション文字列を、nargsに'+'を指定することで実現可能です。
nargsに'+'を指定すると、最低でも1つのコマンドライン引数が必要となり、条件を満たさない場合は<code>too few argument</code>エラーとなります。
ただし、<code>too few argument</code>エラーとなるのは、オプションが指定されているのにコマンドライン引数が指定されていない場合のみです。
オプション自体が指定されていない場合は、defaultに指定した<code>[&#039;jpg&#039;]</code>が使用され、エラーになりません。</p>
<pre class="lang:python decode:true ">parser.add_argument(
　　　　'-e', '--sort-files-extentions',
　　　　action='store',
　　　　nargs='+',
　　　　const=None,
　　　　default=['jpg'],
　　　　type=str,
　　　　choices=None,
　　　　help='Extentions of file which you want to sort. (default: jpg)',
　　　　metavar=None)
</pre>
<h2>その４</h2>
<p>debug用のprint文は普段はstdoutに出したくない
あるオプション引数が指定された場合、単純にTrueかFalseの値を持ちたい場合、actionに'store_true'や'store_false'を指定することで実現できます。
このスクリプトが--debug付きで実行された場合は、最後の仕上げでコールする<code>args = parser.parse_args()</code>が返すNamespaceオブジェクトの属性名<code>args.debug</code>にTrueが格納されることになります。</p>
<pre class="lang:python decode:true  ">parser.add_argument(
'--debug',
action='store_true',
help='debug mode if this flag is set (default: False)')</pre>
<h1>最後の仕上げ</h1>
<p>以下のようにすると、これまでに指定した引数設定を元にして、コマンドラインで指定された引数をNamespaceオブジェクトの属性に変換して返します。</p>
<pre class="lang:python decode:true ">import sys
args = parser.parse_args(sys.argv[1:])</pre>
<p>下記のようにparse_args()関数の引数を省略しても結果は同じです。</p>
<pre class="lang:python decode:true ">args = parser.parse_args()</pre>
<p>こうしてできたargsオブジェクトをダンプしてみると、以下のように属性値として格納されていることがわかります。</p>
<pre class="lang:default decode:true ">(Pdb) b 112
Breakpoint 1 at /Users/dodo5522/Development/manage_media_data/photosort.py:112
(Pdb) c
/Users/dodo5522/Development/manage_media_data/photosort.py(112)()
-&gt; args = parser.parse_args()
(Pdb) n
(Pdb) dir(args)
['__class__', '__contains__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_get_args', '_get_kwargs', 'debug', 'path_root_dst', 'path_root_src', 'sort_files_extentions']
(Pdb) args.debug
(Pdb) print args.debug
False
(Pdb) print args.path_root_dst
/Users/dodo5522/Public
(Pdb) print args.path_root_src
/Users/dodo5522/Pictures
(Pdb) print args.sort_files_extentions
['jpg', 'png', 'mov']
(Pdb)</pre>
<p>&nbsp;</p>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1441</wp:post_id>
		<wp:post_date><![CDATA[2016-11-03 21:26:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-03 12:26:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-argparsenoshi-ifang]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>2016.11.3 追記しました。<a href="http://blog.rinka-blossom.com/python-argparse-exceptions/">argparseのテストで気をつけるべきこと。</a></p>
<hr />
<p>ちょっとしたコマンドラインツールを作るとき、欲しくなるのが以下のようなカッコイイオプション指定機能とヘルプ表示。</p>
<p>pythonなら、標準で使える<a href="http://docs.python.jp/2/library/argparse.html">argparseパッケージ</a>を使って簡単に実装することができます。</p>
<p>こうして作ったツールを<a href="http://man.cx/start-stop-daemon(8)/ja">start−stop−daemon</a>と組み合わせて、オフグリッドシステム監視に使ってたりします。</p>
<p>以下の例は別のツールなので、オフグリッドシステム監視ツールについてはまた別の機会に。</p>
<pre><code class="language-bash">$ ./photosort.py -h
usage: photosort.py [-h] [-d [PATH_ROOT_DST]]
                    [-p SORT_PHOTO_EXTENTIONS [SORT_PHOTO_EXTENTIONS ...]]
                    [-v SORT_VIDEO_EXTENTIONS [SORT_VIDEO_EXTENTIONS ...]]
                    [-l DELIMITER] [--subdir-year] [--subdir-month] [--copy]
                    [--debug DEBUG]
                    path_root_src
This script to make directory of date which the photo is taken, and move the
photo into the directory.
positional arguments:
  path_root_src         Directory path where your taken photo files are
                        located.
optional arguments:
  -h, --help            show this help message and exit
  -d [PATH_ROOT_DST], --path-root-dst [PATH_ROOT_DST]
                        Directory path where you want to create date folder
                        and locate photo files. (default: same as source
                        directory)
  -p SORT_PHOTO_EXTENTIONS [SORT_PHOTO_EXTENTIONS ...], --sort-photo-extentions SORT_PHOTO_EXTENTIONS [SORT_PHOTO_EXTENTIONS ...]
                        Extentions of photo file which you want to sort.
                        (default: jpg)
  -v SORT_VIDEO_EXTENTIONS [SORT_VIDEO_EXTENTIONS ...], --sort-video-extentions SORT_VIDEO_EXTENTIONS [SORT_VIDEO_EXTENTIONS ...]
                        Extentions of video file which you want to sort.
                        (default: jpg)
  -l DELIMITER, --delimiter DELIMITER
                        A character as delimiter which you want to set the
                        name of date folder like "2014-05-01". (default: none)
  --subdir-year         Generate sub directory of year if this is set.
  --subdir-month        Generate sub directory of month if this is set.
  --copy                Copy media files but not move.
  --debug DEBUG         debug mode if this flag is set (default: info)
</code></pre>
<h1 id="">スクリプトの引数仕様</h1>
<p>例えば、とあるスクリプトの引数をこんな感じで指定できるようにしたい。</p>
<ul>
<li>srcディレクトリパスの指定は必須</li>
<li>dstディレクトリパスの指定は必須ではない</li>
<li>対象とするファイルの拡張子を複数指定したい</li>
<li>debug用のprint文は普段はstdoutに出したくない</li>
</ul>
<h1 id="">まずは初期化</h1>
<p>ArgumentParserオブジェクトを生成します。</p>
<p>その初期化パラメータは、description以外はデフォルトのままで問題ありません。add_help(-h/_help オプションをパーサーに追加する）等、便利な機能は予め有効になっています。</p>
<pre><code class="language-python:initialize">import argparse
parser = argparse.ArgumentParser(description='This script is ...')
</code></pre>
<h1 id="">引数の追加</h1>
<h2 id="">その１</h2>
<blockquote>
  <p>srcディレクトリパスの指定は必須</p>
</blockquote>
<p>add<em>argumentの第一引数にpath</em>root_srcを、nargsにNoneを指定します。この名前に、-や--を付けないのがミソです。</p>
<p>こうすることで、-や--付オプション以外の引数がスクリプトに指定されないと、<code>too few argument</code>エラーとなってくれます。</p>
<p>もしnargsを'?'にした場合は、引数の数0個を許可したことになるので、エラーになることなくスクリプトを実行できることになります。ただし、その際はdefaultやconstの設定が必要になります。詳しくは後ほど。</p>
<pre><code class="language-python:add_argument">parser.add_argument('path_root_src', ?
        action='store', ?
        nargs=None, ?
        const=None, ?
        default=None, ?
        type=str, ?
        choices=None, ?
        help='Directory path where your taken photo files are located.', ?
        metavar=None)
</code></pre>
<p>ここで指定した第一引数の文字列'path<em>root</em>src'は、最後の仕上げでコールする<code>args = parser.parse_args()</code>が返すNamespaceオブジェクトの属性名として使用されます。</p>
<p>つまり、下記のように実行した場合、<code>args.path_root_src</code>に"/Users/test/Pictures"が格納されることになります。</p>
<pre><code class="language-bash">$ ./photosort.py /Users/test/Pictures
</code></pre>
<h2 id="">その２</h2>
<blockquote>
  <p>dstディレクトリパスの指定は必須ではない</p>
</blockquote>
<p>add_argumentの第一引数に２種類のオプション文字列を、nargsに'?'を指定することで実現可能です。</p>
<p>これにより、可能なら1つの引数がコマンドラインから取られ、<code>args = parser.parse_args()</code>が返すNamespaceオブジェクトの属性名'path<em>root</em>dst'として使用され、引数の値はその属性にセットされます。</p>
<p>オプション引数そのものが存在しない（-d自体が指定されない）場合はdefaultの値が渡されます。</p>
<p>それに対し、オプション引数が指定され、その後にコマンドライン引数が無い場合は、constの値が渡されます。</p>
<p>下記の例の場合、どちらもNoneなので同じことですが…。</p>
<pre><code class="language-python:add_argument">parser.add_argument('-d', '--path-root-dst', ?
        action='store', ?
        nargs='?', ?
        const=None, ?
        default=None, ?
        type=str, ?
        choices=None, ?
        help='Directory path where you want to create date folder and locate photo files. (default: same as source directory)', ?
        metavar=None)
</code></pre>
<h2 id="">その３</h2>
<blockquote>
  <p>対象とするファイルの拡張子を複数指定したい</p>
</blockquote>
<p>add_argumentの第一引数に２種類のオプション文字列を、nargsに'+'を指定することで実現可能です。</p>
<p>nargsに'+'を指定すると、最低でも1つのコマンドライン引数が必要となり、条件を満たさない場合は<code>too few argument</code>エラーとなります。</p>
<p>ただし、<code>too few argument</code>エラーとなるのは、オプションが指定されているのにコマンドライン引数が指定されていない場合のみです。
オプション自体が指定されていない場合は、defaultに指定した<code>['jpg']</code>が使用され、エラーになりません。</p>
<pre><code class="language-python:add_argument">parser.add_argument('-e', '--sort-files-extentions', ?
        action='store', ?
        nargs='+', ?
        const=None, ?
        default=['jpg'], ?
        type=str, ?
        choices=None, ?
        help='Extentions of file which you want to sort. (default: jpg)', ?
        metavar=None)
</code></pre>
<h2 id="">その４</h2>
<blockquote>
  <p>debug用のprint文は普段はstdoutに出したくない</p>
</blockquote>
<p>あるオプション引数が指定された場合、単純にTrueかFalseの値を持ちたい場合、actionに'store<em>true'や'store</em>false'を指定することで実現できます。</p>
<p>このスクリプトが--debug付きで実行された場合は、最後の仕上げでコールする<code>args = parser.parse_args()</code>が返すNamespaceオブジェクトの属性名<code>args.debug</code>にTrueが格納されることになります。</p>
<pre><code class="language-python:add_argument">parser.add_argument('--debug', ?
        action='store_true', ?
        default=False, ?
        help='debug mode if this flag is set (default: False)')
</code></pre>
<h1 id="">最後の仕上げ</h1>
<p>以下のようにすると、これまでに指定した引数設定を元にして、コマンドラインで指定された引数をNamespaceオブジェクトの属性に変換して返します。</p>
<pre><code class="language-python:parse_args">import sys
args = parser.parse_args(sys.argv[1:])
</code></pre>
<p>下記のようにparse_args()関数の引数を省略しても結果は同じです。</p>
<pre><code class="language-python:parse_args">args = parser.parse_args()
</code></pre>
<p>こうしてできたargsオブジェクトをダンプしてみると、以下のように属性値として格納されていることがわかります。</p>
<pre><code class="language-bash">(Pdb) b 112
Breakpoint 1 at /Users/dodo5522/Development/manage_media_data/photosort.py:112
(Pdb) c
&gt; /Users/dodo5522/Development/manage_media_data/photosort.py(112)&lt;module&gt;()
-&gt; args = parser.parse_args()
(Pdb) n
(Pdb) dir(args)
['__class__', '__contains__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_get_args', '_get_kwargs', 'debug', 'path_root_dst', 'path_root_src', 'sort_files_extentions']
(Pdb) args.debug
(Pdb) print args.debug
False
(Pdb) print args.path_root_dst
/Users/dodo5522/Public
(Pdb) print args.path_root_src
/Users/dodo5522/Pictures
(Pdb) print args.sort_files_extentions
['jpg', 'png', 'mov']
(Pdb)
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942438414]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605563]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2809]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>空間放射線量データを公開しているSafecast。REST API経由で定点観測データを自動送信するには？</title>
		<link>https://tech.blog.uribou.me/rest-api-safecast/</link>
		<pubDate>Sat, 20 Aug 2016 14:05:50 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/rest-api-safecast/</guid>
		<description></description>
		<content:encoded><![CDATA[[とらんじしょん昭島（地域活動）](http://nrda83.wix.com/ttakishima#!blank-3/g3o7j)の一環で、空間線量定点観測所があるといいよねって話になって、システム構成検討中。そのメモ記事です。
## 全体の構成
絵にしたいとこですが、今の所はざっくり箇条書きで。
1. 空間放射線量計測センサー
2. 計測データ集計・送信用マイコン
3. データベースサーバ（Safecastさんのデータベースに蓄積したい）
4. 計測データ閲覧用フロントエンド（WebブラウザだったりiPhoneアプリだったり）
以下に詳細を書き留めます。
### 空間放射線量計測センサー
以下の３候補のうちの何れか。
電子工作ではおなじみ？のSparkFunが出しているGeiger Counter。個人輸入すれば$149程度です。コンパクトなガイガーミュラー菅は、LND712だそうです。
[![](http://www.marutsu.co.jp/contents/shop/marutsu/img/goods/020/580417/580417_2.jpg)](http://www.marutsu.co.jp/pc/i/580417/)
探してみると、意外とありますね。こちらはAdafruit製。$100切ってます。安い。ガイガー菅はSbM20っぽい。
[![](https://cdn-shop.adafruit.com/970x728/483-00.jpg)](https://www.adafruit.com/product/483)
そしてGM-10。３つの中では一番高くて、$199。SparkFunのと同LND712を使っているようです。
[![](http://www.blackcatsystems.com/pics/GM/GM10usb.jpg)](http://www.blackcatsystems.com/GM/products/GM10GeigerCounter.html)
これらは全て、USBシリアル経由でASCII文字コードを出力するので、それらを1分間数えてあげればcpm（count per minute）単位でデータが取得できます。これをμSv/hに変換してやればいいわけですが、**[簡易なカウント数からシーベルトへの換算](http://www.utsunomia.com/y.utsunomia/Kansan.html)**で書かれているLND712の係数を参考にすれば良さそう。
### 計測データ集計・送信用マイコン
SparkFunのGeiger CounterにはArduinoが載っているので、Ethernetボード＋無線コンバータかませばいいかな？ と思ったんですが、コストかかりすぎるので、$5マイコンボード Raspberry Pi Zeroを採用したい。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">$5（約500円）Linuxボード、Raspberry Pi Zeroが再入荷してる！ <a href="https://t.co/LHmIE6eqc7">https://t.co/LHmIE6eqc7</a><a href="https://twitter.com/hashtag/LINUX?src=hash">#LINUX</a> <a href="https://twitter.com/hashtag/RASPBERRY?src=hash">#RASPBERRY</a>-PI-ZERO <a href="https://twitter.com/hashtag/ZERO?src=hash">#ZERO</a> <a href="https://twitter.com/hashtag/RASPBERRY?src=hash">#RASPBERRY</a> <a href="https://twitter.com/hashtag/ADAFRUIT?src=hash">#ADAFRUIT</a> <a href="https://twitter.com/hashtag/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4?src=hash">#ラズベリーパイ</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/764268275719020544">2016年8月13日</a></blockquote>

コストが安いのもいいのだけど、この安さと小ささでLinuxが動くもんだから、何でもできてしまうのが良い。これに格安の無線LAN USBドングル付ければ、データ送信部の出来上がり。
難点は、入手が困難ということか…。今のところ、一人当たり１ボードのみ購入できます、という状態。品薄状態が早く解消されないかなぁ。
### データベースサーバ
空間放射線量計測用キットを自前で設計、開発したり、そのキット制作ワークショップを開催したり、データを蓄積するデータベースをオープンにしていたりと、何かと先進的な取り組みをされているSafecastさんという団体を見つけまして。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Our poster with <a href="https://twitter.com/safecast">@safecast</a> called &quot;Citizen-based radiation measurement in Europe&quot; is here now <a href="https://t.co/7jSjZS03eY">https://t.co/7jSjZS03eY</a> <a href="https://t.co/7NPzfN5CoC">pic.twitter.com/7NPzfN5CoC</a></p>&mdash; Jan Helebrant (@jhelebrant) <a href="https://twitter.com/jhelebrant/status/756953915632025600">2016年7月23日</a></blockquote>

こちらに全てのデータを提供しつつ、データベース等のインフラを間借りさせていただけないかなぁ…　と目論見中。そのうちコンタクトとってみようと思ってます。
ただ、[Safecast API](https://api.safecast.org/en-US/measurements)でアカウント作成してAPI仕様を見ても、計測データをcurlとかでPOSTするのに必要なクエリが分からなかったので、Google Chromeのデベロッパツールや**[Safecastさん提供のgithubコード](https://github.com/Safecast/measurement_count/blob/master/safecast_measurement_count.js)**を参考に、コマンドベースでデータ送信できることを確認しました。
Safecastさん提供のWebアプリ経由で観測データをアップロードするまでの操作をGoogle Chromeデベロッパツールでトレースしてみると、以下のようなデータをPOSTしていることが分かります。
```
[General]
Request URL:https://api.safecast.org/en-US/measurements
Request Method:POST
Status Code:302 Found
Remote Address:162.243.100.197:443
[Response Headers]
Access-Control-Allow-Methods:GET, OPTION
Access-Control-Allow-Origin:*
Cache-Control:no-cache
Connection:keep-alive
Content-Type:text/html; charset=utf-8
Date:Fri, 19 Aug 2016 04:43:08 GMT
Location:https://api.safecast.org/en-US/measurements/70276074
...
[Form Data]
utf8:✓
authenticity_token:xxxx
measurement[value]:0.28
measurement[unit]:usv
measurement[captured_at]:25 December 2014, 14:00:00
measurement[location_name]:栃木県那須塩原市二区町周辺
measurement[latitude]:36.867139847134666
measurement[longitude]:139.95172936359324
measurement[device_id]:155
measurement[height]:1m
measurement[surface]:Soil
measurement[radiation]:Air
```
これと、先ほどの[Safecastさん提供githubコード](https://github.com/Safecast/measurement_count/blob/master/safecast_measurement_count.js)に実装されているapi_keyクエリを追加したPythonコードが以下になります。
```python
data = {
"utf8": "✓",
"measurement[value]": 0.11,
"measurement[unit]": "usv",
"measurement[captured_at]": "25 December 2014, 14:00:00",
"measurement[location_name]": "埼玉県羽生市大字弥勒周辺",
"measurement[latitude]": 36.180948,
"measurement[longitude]": 139.585453,
"measurement[device_id]": 155,
"measurement[height]": "1m",
"measurement[surface]": "Soil",
"measurement[radiation]": "Air",
}
requests.post("https://api.safecast.org/en-US/measurements?api_key=xxxx", data=data)
```
[この通り](https://api.safecast.org/en-US/measurements/70288333)、しっかり反映されました。
![](https://farm9.staticflickr.com/8869/28805268700_e0cc160158_z_d.jpg)
### 計測データ閲覧用フロントエンド（WebブラウザだったりiPhoneアプリだったり）
Safecastさんとコラボさせてもらえれば、こんなカッコイイ線量マップが参照できてしまいます。すごい…。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">I often refresh the data on the <a href="https://twitter.com/safecast">@safecast</a> iOS app and just scroll around seeing all the new data posted. <a href="https://t.co/gvkhAwnxzK">pic.twitter.com/gvkhAwnxzK</a></p>&mdash; Sean Bonner XⓋX (@seanbonner) <a href="https://twitter.com/seanbonner/status/738573123751006209">2016年6月3日</a></blockquote>

## まとめ
早いとこ全体構成図を描いて、Safecastさんにコンタクト取りたいと思います。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1455</wp:post_id>
		<wp:post_date><![CDATA[2016-08-20 23:05:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-20 14:05:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rest-api-safecast]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
		<category domain="post_tag" nicename="%e6%94%be%e5%b0%84%e8%83%bd"><![CDATA[放射能]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://nrda83.wix.com/ttakishima#!blank-3/g3o7j">とらんじしょん昭島（地域活動）</a>の一環で、空間線量定点観測所があるといいよねって話になって、システム構成検討中。そのメモ記事です。</p>
<h1 id="">全体の構成</h1>
<p>絵にしたいとこですが、今の所はざっくり箇条書きで。</p>
<ol>
<li>空間放射線量計測センサー  </li>
<li>計測データ集計・送信用マイコン  </li>
<li>データベースサーバ（Safecastさんのデータベースに蓄積したい）  </li>
<li>計測データ閲覧用フロントエンド（WebブラウザだったりiPhoneアプリだったり）</li>
</ol>
<p>以下に詳細を書き留めます。</p>
<h2 id="">空間放射線量計測センサー</h2>
<p>以下の３候補のうちの何れか。</p>
<p>電子工作ではおなじみ？のSparkFunが出しているGeiger Counter。個人輸入すれば$149程度です。コンパクトなガイガーミュラー菅は、LND712だそうです。</p>
<p><a href="http://www.marutsu.co.jp/pc/i/580417/"><img src="http://www.marutsu.co.jp/contents/shop/marutsu/img/goods/020/580417/580417_2.jpg" alt="" title="" /></a></p>
<p>探してみると、意外とありますね。こちらはAdafruit製。$100切ってます。安い。ガイガー菅はSbM20っぽい。</p>
<p><a href="https://www.adafruit.com/product/483"><img src="https://cdn-shop.adafruit.com/970x728/483-00.jpg" alt="" title="" /></a></p>
<p>そしてGM-10。３つの中では一番高くて、$199。SparkFunのと同LND712を使っているようです。</p>
<p><a href="http://www.blackcatsystems.com/GM/products/GM10GeigerCounter.html"><img src="http://www.blackcatsystems.com/pics/GM/GM10usb.jpg" alt="" title="" /></a></p>
<p>これらは全て、USBシリアル経由でASCII文字コードを出力するので、それらを1分間数えてあげればcpm（count per minute）単位でデータが取得できます。これをμSv/hに変換してやればいいわけですが、<strong><a href="http://www.utsunomia.com/y.utsunomia/Kansan.html">簡易なカウント数からシーベルトへの換算</a></strong>で書かれているLND712の係数を参考にすれば良さそう。</p>
<h2 id="">計測データ集計・送信用マイコン</h2>
<p>SparkFunのGeiger CounterにはArduinoが載っているので、Ethernetボード＋無線コンバータかませばいいかな？ と思ったんですが、コストかかりすぎるので、$5マイコンボード Raspberry Pi Zeroを採用したい。</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">$5（約500円）Linuxボード、Raspberry Pi Zeroが再入荷してる！ <a href="https://t.co/LHmIE6eqc7">https://t.co/LHmIE6eqc7</a><a href="https://twitter.com/hashtag/LINUX?src=hash">#LINUX</a> <a href="https://twitter.com/hashtag/RASPBERRY?src=hash">#RASPBERRY</a>-PI-ZERO <a href="https://twitter.com/hashtag/ZERO?src=hash">#ZERO</a> <a href="https://twitter.com/hashtag/RASPBERRY?src=hash">#RASPBERRY</a> <a href="https://twitter.com/hashtag/ADAFRUIT?src=hash">#ADAFRUIT</a> <a href="https://twitter.com/hashtag/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4?src=hash">#ラズベリーパイ</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/764268275719020544">2016年8月13日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>コストが安いのもいいのだけど、この安さと小ささでLinuxが動くもんだから、何でもできてしまうのが良い。これに格安の無線LAN USBドングル付ければ、データ送信部の出来上がり。</p>
<p>難点は、入手が困難ということか…。今のところ、一人当たり１ボードのみ購入できます、という状態。品薄状態が早く解消されないかなぁ。</p>
<h2 id="">データベースサーバ</h2>
<p>空間放射線量計測用キットを自前で設計、開発したり、そのキット制作ワークショップを開催したり、データを蓄積するデータベースをオープンにしていたりと、何かと先進的な取り組みをされているSafecastさんという団体を見つけまして。</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Our poster with <a href="https://twitter.com/safecast">@safecast</a> called &quot;Citizen-based radiation measurement in Europe&quot; is here now <a href="https://t.co/7jSjZS03eY">https://t.co/7jSjZS03eY</a> <a href="https://t.co/7NPzfN5CoC">pic.twitter.com/7NPzfN5CoC</a></p>&mdash; Jan Helebrant (@jhelebrant) <a href="https://twitter.com/jhelebrant/status/756953915632025600">2016年7月23日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>こちらに全てのデータを提供しつつ、データベース等のインフラを間借りさせていただけないかなぁ…　と目論見中。そのうちコンタクトとってみようと思ってます。</p>
<p>ただ、<a href="https://api.safecast.org/en-US/measurements">Safecast API</a>でアカウント作成してAPI仕様を見ても、計測データをcurlとかでPOSTするのに必要なクエリが分からなかったので、Google Chromeのデベロッパツールや<strong><a href="https://github.com/Safecast/measurement_count/blob/master/safecast_measurement_count.js">Safecastさん提供のgithubコード</a></strong>を参考に、コマンドベースでデータ送信できることを確認しました。</p>
<p>Safecastさん提供のWebアプリ経由で観測データをアップロードするまでの操作をGoogle Chromeデベロッパツールでトレースしてみると、以下のようなデータをPOSTしていることが分かります。</p>
<pre><code>[General]
Request URL:https://api.safecast.org/en-US/measurements
Request Method:POST
Status Code:302 Found
Remote Address:162.243.100.197:443
[Response Headers]
Access-Control-Allow-Methods:GET, OPTION
Access-Control-Allow-Origin:*
Cache-Control:no-cache
Connection:keep-alive
Content-Type:text/html; charset=utf-8
Date:Fri, 19 Aug 2016 04:43:08 GMT
Location:https://api.safecast.org/en-US/measurements/70276074
...
[Form Data]
utf8:_
authenticity_token:xxxx
measurement[value]:0.28
measurement[unit]:usv
measurement[captured_at]:25 December 2014, 14:00:00
measurement[location_name]:栃木県那須塩原市二区町周辺
measurement[latitude]:36.867139847134666
measurement[longitude]:139.95172936359324
measurement[device_id]:155
measurement[height]:1m
measurement[surface]:Soil
measurement[radiation]:Air
</code></pre>
<p>これと、先ほどの<a href="https://github.com/Safecast/measurement_count/blob/master/safecast_measurement_count.js">Safecastさん提供githubコード</a>に実装されているapi_keyクエリを追加したPythonコードが以下になります。</p>
<pre><code class="language-python">data = {
"utf8": "_",
"measurement[value]": 0.11,
"measurement[unit]": "usv",
"measurement[captured_at]": "25 December 2014, 14:00:00",
"measurement[location_name]": "埼玉県羽生市大字弥勒周辺",
"measurement[latitude]": 36.180948,
"measurement[longitude]": 139.585453,
"measurement[device_id]": 155,
"measurement[height]": "1m",
"measurement[surface]": "Soil",
"measurement[radiation]": "Air",
}
requests.post("https://api.safecast.org/en-US/measurements?api_key=xxxx", data=data)
</code></pre>
<p><a href="https://api.safecast.org/en-US/measurements/70288333">この通り</a>、しっかり反映されました。</p>
<p><img src="https://farm9.staticflickr.com/8869/28805268700_e0cc160158_z_d.jpg" alt="" /></p>
<h2 id="webiphone">計測データ閲覧用フロントエンド（WebブラウザだったりiPhoneアプリだったり）</h2>
<p>Safecastさんとコラボさせてもらえれば、こんなカッコイイ線量マップが参照できてしまいます。すごい…。</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">I often refresh the data on the <a href="https://twitter.com/safecast">@safecast</a> iOS app and just scroll around seeing all the new data posted. <a href="https://t.co/gvkhAwnxzK">pic.twitter.com/gvkhAwnxzK</a></p>&mdash; Sean Bonner X_X (@seanbonner) <a href="https://twitter.com/seanbonner/status/738573123751006209">2016年6月3日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<h1 id="">まとめ</h1>
<p>早いとこ全体構成図を描いて、Safecastさんにコンタクト取りたいと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5946232859]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677712]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>226</wp:comment_id>
			<wp:comment_author><![CDATA[binance registration]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[5637485@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/en/register?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.47]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-18 17:51:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-18 08:51:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>vimのテンプレート機能でコーディングを3倍楽にする方法。</title>
		<link>https://tech.blog.uribou.me/vim-tamplate/</link>
		<pubDate>Tue, 06 Dec 2016 17:43:30 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/vim-tamplate/</guid>
		<description></description>
		<content:encoded><![CDATA[コードを書き始めるとき、毎回同じことを書くのは時間の無駄ですよね。
典型例がソースコードのライセンス条文だったり、HTMLの雛形タグだったり、Markdownの章立てだったりすると思います。
<h1>.vimrcを設定する</h1>
vimであれば、こんな風な設定を<code>.vimrc</code>に書いといて、テンプレートとなるファイルを<code>${HOME}/.vim/template</code>に置くだけで無駄を省くことができます。
<pre><code class="vim">autocmd BufNewFile *.py 0r $HOME/.vim/template/python.txt
autocmd BufNewFile *.md 0r $HOME/.vim/template/markdown.txt
autocmd BufNewFile *.uml 0r $HOME/.vim/template/plantuml.txt
</code></pre>
<h1>plantumlソーステンプレートを作成する</h1>
特にオススメなのが<a href="http://ja.plantuml.com/sequence.html">plantuml</a>ソースのテンプレート。
こんな形で予め網羅的に書いといて、.vimrcと一緒に適当なVMSにpushしておくと良いです。
<pre><code class="plantuml">' sequence diagram
@startuml
hide footbox
actor Foo1
boundary Foo2
control Foo3
entity Foo4
database Foo5
Foo1 -&gt; Foo2 : To boundary
Foo1 -&gt; Foo3 : To control
Foo1 -&gt; Foo4 : To entity
Foo1 -&gt; Foo5 : To database
@enduml
' class diagram
@startuml
scale 800 width
Class01 &lt;|-- Class02
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 -- Class10
Class11 &lt;|.. Class12
Class13 --&gt; Class14
Class15 ..&gt; Class16
Class17 ..|&gt; Class18
Class19 &lt;--* Class20
@enduml
</code></pre>
<h1>ソースファイルヘッダのライセンス条文をテンプレート化する</h1>
以下はPythonの例ですが、予めライセンス条文を埋め込んでおくと楽ちんです。
<code>setup.py</code>をclassifiers付きでテンプレート化しておくのもいいかもしれませんね。setup関数引数仕様は多すぎて覚えきれないので…。
<pre><code class="python">#!/usr/bin/env python
# -*- coding:utf-8 -*-
#   Copyright 2016 Takashi Ando - http://blog.rinka-blossom.com/
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
import os
if __name__ == "__main__":
    print(os.sys.path)
</code></pre>
<h1>Markdown章立てをテンプレート化する</h1>
Markdownドキュメントの決まりきった構成を予め入れておけば、かなり楽になります。
<pre><code># Description
This is ...
# System design
* hoge
    * detail
* hogehoge
    * detail
# Directory structure
* documents
    * Overview, Schematics, etc.
* code
    * C/C++ source code working on Arduino.
</code></pre>
<h1>まとめ、その他</h1>
他にもc/c++、html、css、jsや、PythonのMANIFEST.inなんかもテンプレート化しておくと、とても快適なのでオススメです。
vim以外のエディタにも大抵備わっている機能だと思いますけどね^^;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1570</wp:post_id>
		<wp:post_date><![CDATA[2016-12-07 02:43:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-06 17:43:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vim-tamplate]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>コードを書き始めるとき、毎回同じことを書くのは時間の無駄ですよね。</p>
<p>典型例がソースコードのライセンス条文だったり、HTMLの雛形タグだったり、Markdownの章立てだったりすると思います。</p>
<h1 id="vimrc">.vimrcを設定する</h1>
<p>vimであれば、こんな風な設定を<code>.vimrc</code>に書いといて、テンプレートとなるファイルを<code>${HOME}/.vim/template</code>に置くだけで無駄を省くことができます。</p>
<pre><code class="language-vim">autocmd BufNewFile *.py 0r $HOME/.vim/template/python.txt
autocmd BufNewFile *.md 0r $HOME/.vim/template/markdown.txt
autocmd BufNewFile *.uml 0r $HOME/.vim/template/plantuml.txt
</code></pre>
<h1 id="plantuml">plantumlソーステンプレートを作成する</h1>
<p>特にオススメなのが<a href="http://ja.plantuml.com/sequence.html">plantuml</a>ソースのテンプレート。</p>
<p>こんな形で予め網羅的に書いといて、.vimrcと一緒に適当なVMSにpushしておくと良いです。</p>
<pre><code class="language-plantuml">' sequence diagram
@startuml
hide footbox
actor Foo1
boundary Foo2
control Foo3
entity Foo4
database Foo5
Foo1 -&gt; Foo2 : To boundary
Foo1 -&gt; Foo3 : To control
Foo1 -&gt; Foo4 : To entity
Foo1 -&gt; Foo5 : To database
@enduml
' class diagram
@startuml
scale 800 width
Class01 &lt;|-- Class02
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 -- Class10
Class11 &lt;|.. Class12
Class13 --&gt; Class14
Class15 ..&gt; Class16
Class17 ..|&gt; Class18
Class19 &lt;--* Class20
@enduml
</code></pre>
<h1 id="">ソースファイルヘッダのライセンス条文をテンプレート化する</h1>
<p>以下はPythonの例ですが、予めライセンス条文を埋め込んでおくと楽ちんです。</p>
<p><code>setup.py</code>をclassifiers付きでテンプレート化しておくのもいいかもしれませんね。setup関数引数仕様は多すぎて覚えきれないので…。</p>
<pre><code class="language-python">#!/usr/bin/env python
# -*- coding:utf-8 -*-
#   Copyright 2016 Takashi Ando - http://blog.rinka-blossom.com/
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
import os
if __name__ == "__main__":
    print(os.sys.path)
</code></pre>
<h1 id="markdown">Markdown章立てをテンプレート化する</h1>
<p>Markdownドキュメントの決まりきった構成を予め入れておけば、かなり楽になります。</p>
<pre><code># Description
This is ...
# System design
* hoge
    * detail
* hogehoge
    * detail
# Directory structure
* documents
    * Overview, Schematics, etc.
* code
    * C/C++ source code working on Arduino.
</code></pre>
<h1 id="">まとめ、その他</h1>
<p>他にもc/c++、html、css、jsや、PythonのMANIFEST.inなんかもテンプレート化しておくと、とても快適なのでオススメです。</p>
<p>vim以外のエディタにも大抵備わっている機能だと思いますけどね^^;</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949282729]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://d33wubrfki0l68.cloudfront.net/e23b8e4a3472ea6219092fc2be5eeeb2d83e3e9f/aea63/media/2014/04/superman.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505214]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>199</wp:comment_id>
			<wp:comment_author><![CDATA[binance Kontoerstellung]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[83450243@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/de-CH/register?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-31 11:50:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-31 02:50:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>pyenv install時にzlibがコンパイルされていないよエラーが出た場合の対処方法。</title>
		<link>https://tech.blog.uribou.me/pyenv-install-error-on-osx/</link>
		<pubDate>Tue, 16 Aug 2016 03:23:52 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/pyenv-install-error-on-osx/</guid>
		<description></description>
		<content:encoded><![CDATA[OSX + anyenv + pyenv環境下で新しいPython環境をインストールしようとして、以下のようなエラーが起きた時。Maverics時代に遭遇した覚えがないので、Capitanに更新したせいかなぁ？
<pre><code class="bash">$ pyenv install 3.3.6
Downloading Python-3.3.6.tgz...
-&gt; https://www.python.org/ftp/python/3.3.6/Python-3.3.6.tgz
Installing Python-3.3.6...
WARNING: The Python sqlite3 extension was not compiled. Missing the SQLite3 lib?
ERROR: The Python zlib extension was not compiled. Missing the zlib?
</code></pre>
ご丁寧に、以下のメッセージも出力されます。問題解決するには以下を見ろと。
<pre><code class="bash">Please consult to the Wiki page to fix the problem.
https://github.com/yyuu/pyenv/wiki/Common-build-problems
</code></pre>
解決方法として、以下の手順が上がっていました。
<ul>
<li>Mac OS X: <code>brew install readline xz</code></li>
<li>On Mac OS X 10.9, 10.10 and 10.11 you may need to set the CFLAGS environment variable when installing a new version in order for configure to find the zlib headers (XCode command line tools must be installed first):<code>CFLAGS="-I$(xcrun --show-sdk-path)/usr/include" pyenv install -v 2.7.7</code></li>
</ul>
readlineやxzはインストール済みだったので、次のCFLAGS設定を試そうとしましたが、以下の記述もあり。
<ul>
<li>Alternatively, try reinstalling XCode command line tools for your OS (especially if you just upgraded your OS)<code>xcode-select --install</code></li>
</ul>
pyenv installするたびにCFLAGS設定したりエイリアス設定するのは面倒なので、おとなしくxcode-selectしてみると…。
<pre><code class="bash">$ pyenv install 3.3.6
Installing Python-3.3.6...
Installing pip from https://bootstrap.pypa.io/get-pip.py...
Installed Python-3.3.6 to /Users/takashi/.anyenv/envs/pyenv/versions/3.3.6
</code></pre>
うまくいきました。
XCode command line toolsって、いろんなところに影響するなぁ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1589</wp:post_id>
		<wp:post_date><![CDATA[2016-08-16 12:23:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-16 03:23:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pyenv-install-error-on-osx]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>OSX + anyenv + pyenv環境下で新しいPython環境をインストールしようとして、以下のようなエラーが起きた時。Maverics時代に遭遇した覚えがないので、Capitanに更新したせいかなぁ？</p>
<pre><code class="language-bash">$ pyenv install 3.3.6
Downloading Python-3.3.6.tgz...
-&gt; https://www.python.org/ftp/python/3.3.6/Python-3.3.6.tgz
Installing Python-3.3.6...
WARNING: The Python sqlite3 extension was not compiled. Missing the SQLite3 lib?
ERROR: The Python zlib extension was not compiled. Missing the zlib?
</code></pre>
<p>ご丁寧に、以下のメッセージも出力されます。問題解決するには以下を見ろと。</p>
<pre><code class="language-bash">Please consult to the Wiki page to fix the problem.
https://github.com/yyuu/pyenv/wiki/Common-build-problems
</code></pre>
<p>解決方法として、以下の手順が上がっていました。</p>
<ul>
<li>Mac OS X: <code>brew install readline xz</code></li>
<li>On Mac OS X 10.9, 10.10 and 10.11 you may need to set the CFLAGS environment variable when installing a new version in order for configure to find the zlib headers (XCode command line tools must be installed first):<code>CFLAGS="-I$(xcrun --show-sdk-path)/usr/include" pyenv install -v 2.7.7</code></li>
</ul>
<p>readlineやxzはインストール済みだったので、次のCFLAGS設定を試そうとしましたが、以下の記述もあり。</p>
<ul>
<li>Alternatively, try reinstalling XCode command line tools for your OS (especially if you just upgraded your OS)<code>xcode-select --install</code></li>
</ul>
<p>pyenv installするたびにCFLAGS設定したりエイリアス設定するのは面倒なので、おとなしくxcode-selectしてみると…。</p>
<pre><code class="language-bash">$ pyenv install 3.3.6
Installing Python-3.3.6...
Installing pip from https://bootstrap.pypa.io/get-pip.py...
Installed Python-3.3.6 to /Users/takashi/.anyenv/envs/pyenv/versions/3.3.6
</code></pre>
<p>うまくいきました。</p>
<p>XCode command line toolsって、いろんなところに影響するなぁ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_014cc1c9d62f4b0a473047ed939034df]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5969805259]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648889]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Raspberry Pi Zeroセットアップでするべき事４つ。</title>
		<link>https://tech.blog.uribou.me/raspberry-pi-zero-initial-setup/</link>
		<pubDate>Tue, 23 Aug 2016 05:44:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/raspberry-pi-zero-initial-setup/</guid>
		<description></description>
		<content:encoded><![CDATA[raspbianインストール手順は<a href="https://www.raspberrypi.org/documentation/installation/installing-images/">公式ページ</a>にあるので、そちらを参照するとして…。
実際に使える状態に持っていくためにすべき事をまとめておきます。
<h1>X起動をやめる</h1>
独立電源でスタンドアロンで働いてもらうので、重い＆消費電力デカイXは不要。
Raspberry Pi ZeroのMini HDMIを適当なディスプレイに繋いで起動して、ターミナルから以下のコマンドを実行し、再起動すると、めでたくXを無効にできます。
<pre><code class="bash">$ sudo systemctl set-default multi-user.target
$ sudo reboot
</code></pre>
以前は/etc/initrdの設定を変更していたはずですが、今後は組みこみLinuxも軒並みsystemdになっていくんですかね。
<h1>キーボードレイアウトを日本語109に変更する</h1>
英語101キーボードを使っている人には関係ないですが、自分は日本語109キーボードを使っているので、設定しないと記号入力がとても不便。
以下のようにします。
<pre><code class="bash">$ sudo dpkg-reconfigure keyboard-configuration
</code></pre>
使っているキーボードそのものズバリな機種はもちろん存在しないので、適当にDellとかのJapaneseキーボードを選択してやると、ちゃんと動作します。
<h1>ネットワーク（無線LAN）に繋ぐ</h1>
Zeroという名の通り、Zeroには何も付いてません。Raspberry Pi 1/2/3には普通にあったEthernetポートですら…。
ということで、後々楽チンな無線LANを設定します。
生産終了しちゃってますが、バッファロー製のwli-uc-gnという無線LANドングルは、何も追加インストールせずに動作しました。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001POGJKU%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/31p7dLiqFSL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001POGJKU%2Fref%3Dnosim" target="_blank" rel="noopener">BUFFALO Air Station NFINITI 11n/g/b USB用 無線子機 WLI-UC-GN</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バッファロー     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DBUFFALO%2520Air%2520Station%2520NFINITI%252011n%252Fg%252Fb%2520USB%2597p%2520%2596%25B3%2590%25FC%258Eq%258B%2540%2520WLI-UC-GN%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FBUFFALO%2520Air%2520Station%2520NFINITI%252011n%252Fg%252Fb%2520USB%25E7%2594%25A8%2520%25E7%2584%25A1%25E7%25B7%259A%25E5%25AD%2590%25E6%25A9%259F%2520WLI-UC-GN%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
今時無線LANをWEPで運用しないので、WPA2-PSK/AESの設定をします。
<pre><code class="bash">$ vi /etc/wpa_supplicant/wpa_supplicant.conf
</code></pre>
上記の設定ファイルに、以下のように入力してください。暗号方式をAESではなくTKIPにする場合は、CCMPをTKIPにすればいいそうですが…　ウチはAESなので試してません。
<pre><code>ap_scan=1
network={
        ssid="YOUR-WIFI-AP-SSID"
        proto=WPA2
        key_mgmt=WPA-PSK
        pairwise=CCMP
        group=CCMP
        psk="YOUR-WIFI-AP-PASSPHRASE"
}
</code></pre>
reboot後、勝手にAPに接続しました。
<h1>aptリポジトリを日本国内ミラーに向ける</h1>
<a href="https://www.raspbian.org/RaspbianMirrors">Raspberry Pi用APTミラーの一覧</a>から、物理的な距離が近いところを探します。
ウチは筑波のが一番近いかな。
まずは以下のファイルの中身を全てコメントアウトします。
<pre><code class="bash">$ vi /etc/apt/sources.list.d/raspi.list
</code></pre>
次に以下のファイルを編集して、
<pre><code class="bash">$ sudo vi /etc/apt/sources.list
</code></pre>
以下のように筑波ミラーのみ残します。
<pre><code>#deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi
deb http://ftp.tsukuba.wide.ad.jp/Linux/raspbian/raspbian/ jessie main contrib non-free rpi
# Uncomment line below then 'apt-get update' to enable 'apt-get source'
#deb-src http://archive.raspbian.org/raspbian/ jessie main contrib non-free rpi
</code></pre>
これでデフォルト設定よりかは速くパッケージインストールが可能になります。
<pre><code class="bash">$ sudo apt-get update
$ sudo apt-get upgrade
</code></pre>
<h1>するべき事５つ目以降</h1>
目的に応じてやるべきことはまだまだ沢山ありますが、とりあえずこの４つを押さえておけば必要十分だと思います。
次はPython環境整備を進めないと…。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1592</wp:post_id>
		<wp:post_date><![CDATA[2016-08-23 14:44:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-23 05:44:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[raspberry-pi-zero-initial-setup]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="raspberrypi"><![CDATA[RaspberryPi]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/31p7dLiqFSL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>raspbianインストール手順は<a href="https://www.raspberrypi.org/documentation/installation/installing-images/">公式ページ</a>にあるので、そちらを参照するとして…。</p>

<p>実際に使える状態に持っていくためにすべき事をまとめておきます。</p>

<h1 id="x">X起動をやめる</h1>

<p>独立電源でスタンドアロンで働いてもらうので、重い＆消費電力デカイXは不要。</p>

<p>Raspberry Pi ZeroのMini HDMIを適当なディスプレイに繋いで起動して、ターミナルから以下のコマンドを実行し、再起動すると、めでたくXを無効にできます。</p>

<pre><code class="language-bash">$ sudo systemctl set-default multi-user.target
$ sudo reboot
</code></pre>

<p>以前は/etc/initrdの設定を変更していたはずですが、今後は組みこみLinuxも軒並みsystemdになっていくんですかね。</p>

<h1 id="109">キーボードレイアウトを日本語109に変更する</h1>

<p>英語101キーボードを使っている人には関係ないですが、自分は日本語109キーボードを使っているので、設定しないと記号入力がとても不便。</p>

<p>以下のようにします。</p>

<pre><code class="language-bash">$ sudo dpkg-reconfigure keyboard-configuration
</code></pre>

<p>使っているキーボードそのものズバリな機種はもちろん存在しないので、適当にDellとかのJapaneseキーボードを選択してやると、ちゃんと動作します。</p>

<h1 id="lan">ネットワーク（無線LAN）に繋ぐ</h1>

<p>Zeroという名の通り、Zeroには何も付いてません。Raspberry Pi 1/2/3には普通にあったEthernetポートですら…。</p>

<p>ということで、後々楽チンな無線LANを設定します。</p>

<p>生産終了しちゃってますが、バッファロー製のwli-uc-gnという無線LANドングルは、何も追加インストールせずに動作しました。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001POGJKU%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/31p7dLiqFSL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001POGJKU%2Fref%3Dnosim" target="_blank" >BUFFALO Air Station NFINITI 11n/g/b USB用 無線子機 WLI-UC-GN</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> バッファロー     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DBUFFALO%2520Air%2520Station%2520NFINITI%252011n%252Fg%252Fb%2520USB%2597p%2520%2596%25B3%2590%25FC%258Eq%258B%2540%2520WLI-UC-GN%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FBUFFALO%2520Air%2520Station%2520NFINITI%252011n%252Fg%252Fb%2520USB%25E7%2594%25A8%2520%25E7%2584%25A1%25E7%25B7%259A%25E5%25AD%2590%25E6%25A9%259F%2520WLI-UC-GN%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>今時無線LANをWEPで運用しないので、WPA2-PSK/AESの設定をします。</p>

<pre><code class="language-bash">$ vi /etc/wpa_supplicant/wpa_supplicant.conf
</code></pre>

<p>上記の設定ファイルに、以下のように入力してください。暗号方式をAESではなくTKIPにする場合は、CCMPをTKIPにすればいいそうですが…　ウチはAESなので試してません。</p>

<pre><code>ap_scan=1  
network={  
        ssid="YOUR-WIFI-AP-SSID"
        proto=WPA2
        key_mgmt=WPA-PSK
        pairwise=CCMP
        group=CCMP
        psk="YOUR-WIFI-AP-PASSPHRASE"
}
</code></pre>

<p>reboot後、勝手にAPに接続しました。</p>

<h1 id="apt">aptリポジトリを日本国内ミラーに向ける</h1>

<p><a href="https://www.raspbian.org/RaspbianMirrors">Raspberry Pi用APTミラーの一覧</a>から、物理的な距離が近いところを探します。</p>

<p>ウチは筑波のが一番近いかな。</p>

<p>まずは以下のファイルの中身を全てコメントアウトします。</p>

<pre><code class="language-bash">$ vi /etc/apt/sources.list.d/raspi.list
</code></pre>

<p>次に以下のファイルを編集して、</p>

<pre><code class="language-bash">$ sudo vi /etc/apt/sources.list
</code></pre>

<p>以下のように筑波ミラーのみ残します。</p>

<pre><code>#deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi
deb http://ftp.tsukuba.wide.ad.jp/Linux/raspbian/raspbian/ jessie main contrib non-free rpi  
# Uncomment line below then 'apt-get update' to enable 'apt-get source'
#deb-src http://archive.raspbian.org/raspbian/ jessie main contrib non-free rpi
</code></pre>

<p>これでデフォルト設定よりかは速くパッケージインストールが可能になります。</p>

<pre><code class="language-bash">$ sudo apt-get update
$ sudo apt-get upgrade
</code></pre>

<h1 id="">するべき事５つ目以降</h1>

<p>目的に応じてやるべきことはまだまだ沢山ありますが、とりあえずこの４つを押さえておけば必要十分だと思います。</p>

<p>次はPython環境整備を進めないと…。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1593]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942300913]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677712]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>269</wp:comment_id>
			<wp:comment_author><![CDATA[Inscreva-se na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[33202219@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/pt-PT/register?ref=RQUR4BEO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-14 01:17:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-13 16:17:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>My発電所、再稼働。</title>
		<link>https://tech.blog.uribou.me/reboot-offgrid/</link>
		<pubDate>Thu, 25 Aug 2016 17:03:22 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/reboot-offgrid/</guid>
		<description></description>
		<content:encoded><![CDATA[太陽が元気なこの時期に、バッテリトラブルにより太陽光蓄電を止めていました。
何があったかというと…　グラフを見れば一目瞭然。
<img src="https://farm9.staticflickr.com/8527/28613269593_65d507c222_o_d.png" alt="" />
太陽光パネルの発電量は問題ないのに、8月8日あたりから蓄電池の電圧が回復してくれない！
これはおかしいと思い、2V×12個の蓄電池を一つ一つ調べてみると…　１個だけ極端に電圧が低いのを発見。ほとんどの蓄電池は1.8〜2.1Vを示すのに対し、この個体だけ1Vを切りそうな状態でした。
<a href="http://www.offgrid-child.com/">NPO法人 非電化地域の人々に蓄電池をおくる会</a>の鈴木さんに相談すると、これは異常とのことで、即交換してくださいました。対応が早い…。
つい先ほど再稼働したので、ボットも元気に呟いてくれることでしょう。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">バッテリトラブルにより１０日間停止していましたが、再稼働しました。直近データが少なくて、グラフが寂しい限り…。<a href="https://t.co/MiDVBVVHKe">https://t.co/MiDVBVVHKe</a> <a href="https://t.co/B31yKozvNh">pic.twitter.com/B31yKozvNh</a></p>&mdash; solar_monitor (@mybot_athome) <a href="https://twitter.com/mybot_athome/status/768982537532080128">2016年8月26日</a></blockquote>

ちなみに、今のシステムだと200Vクーラーは稼働できないのですが、窓に取り付けるタイプで1500W以内なら何とか動かせるかなぁ。窓枠が完全密閉できないから虫が入ってくるとか、防犯上不安があるとか、色々とマイナス情報多いけど…　どうなんでしょ。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01BOO9DTE%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41leretQEGL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01BOO9DTE%2Fref%3Dnosim" target="_blank" rel="noopener">CW-1616-WS コロナCORONA 窓用エアコン（冷房専用・おもに4〜6畳用） CW-F1616WSの一般ルート向けモデル</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> コロナ     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DCW-1616-WS%2520%2583R%2583%258D%2583iCORONA%2520%2591%258B%2597p%2583G%2583A%2583R%2583%2593%2581i%2597%25E2%2596%255B%2590%25EA%2597p%2581E%2582%25A8%2582%25E0%2582%25C94%2581%25606%258F%25F4%2597p%2581j%2520CW-F1616WS%2582%25CC%2588%25EA%2594%25CA%2583%258B%2581%255B%2583g%258C%25FC%2582%25AF%2583%2582%2583f%2583%258B%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FCW-1616-WS%2520%25E3%2582%25B3%25E3%2583%25AD%25E3%2583%258ACORONA%2520%25E7%25AA%2593%25E7%2594%25A8%25E3%2582%25A8%25E3%2582%25A2%25E3%2582%25B3%25E3%2583%25B3%25EF%25BC%2588%25E5%2586%25B7%25E6%2588%25BF%25E5%25B0%2582%25E7%2594%25A8%25E3%2583%25BB%25E3%2581%258A%25E3%2582%2582%25E3%2581%25AB4%25EF%25BD%259E6%25E7%2595%25B3%25E7%2594%25A8%25EF%25BC%2589%2520CW-F1616WS%25E3%2581%25AE%25E4%25B8%2580%25E8%2588%25AC%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E5%2590%2591%25E3%2581%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
使ったことあるよ！ という方、使用感など情報求む！ よろしくお願いします。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1594</wp:post_id>
		<wp:post_date><![CDATA[2016-08-26 02:03:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-25 17:03:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reboot-offgrid]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm9.staticflickr.com/8527/28613269593_65d507c222_o_d.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>太陽が元気なこの時期に、バッテリトラブルにより太陽光蓄電を止めていました。</p>

<p>何があったかというと…　グラフを見れば一目瞭然。</p>

<p><img src="https://farm9.staticflickr.com/8527/28613269593_65d507c222_o_d.png" alt="" /></p>

<p>太陽光パネルの発電量は問題ないのに、8月8日あたりから蓄電池の電圧が回復してくれない！</p>

<p>これはおかしいと思い、2V×12個の蓄電池を一つ一つ調べてみると…　１個だけ極端に電圧が低いのを発見。ほとんどの蓄電池は1.8〜2.1Vを示すのに対し、この個体だけ1Vを切りそうな状態でした。</p>

<p><a href="http://www.offgrid-child.com/">NPO法人 非電化地域の人々に蓄電池をおくる会</a>の鈴木さんに相談すると、これは異常とのことで、即交換してくださいました。対応が早い…。</p>

<p>つい先ほど再稼働したので、ボットも元気に呟いてくれることでしょう。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">バッテリトラブルにより１０日間停止していましたが、再稼働しました。直近データが少なくて、グラフが寂しい限り…。<a href="https://t.co/MiDVBVVHKe">https://t.co/MiDVBVVHKe</a> <a href="https://t.co/B31yKozvNh">pic.twitter.com/B31yKozvNh</a></p>&mdash; solar_monitor (@mybot_athome) <a href="https://twitter.com/mybot_athome/status/768982537532080128">2016年8月26日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>ちなみに、今のシステムだと200Vクーラーは稼働できないのですが、窓に取り付けるタイプで1500W以内なら何とか動かせるかなぁ。窓枠が完全密閉できないから虫が入ってくるとか、防犯上不安があるとか、色々とマイナス情報多いけど…　どうなんでしょ。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01BOO9DTE%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41leretQEGL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01BOO9DTE%2Fref%3Dnosim" target="_blank" >CW-1616-WS コロナCORONA 窓用エアコン（冷房専用・おもに4〜6畳用） CW-F1616WSの一般ルート向けモデル</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> コロナ     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DCW-1616-WS%2520%2583R%2583%258D%2583iCORONA%2520%2591%258B%2597p%2583G%2583A%2583R%2583%2593%2581i%2597%25E2%2596%255B%2590%25EA%2597p%2581E%2582%25A8%2582%25E0%2582%25C94%2581%25606%258F%25F4%2597p%2581j%2520CW-F1616WS%2582%25CC%2588%25EA%2594%25CA%2583%258B%2581%255B%2583g%258C%25FC%2582%25AF%2583%2582%2583f%2583%258B%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FCW-1616-WS%2520%25E3%2582%25B3%25E3%2583%25AD%25E3%2583%258ACORONA%2520%25E7%25AA%2593%25E7%2594%25A8%25E3%2582%25A8%25E3%2582%25A2%25E3%2582%25B3%25E3%2583%25B3%25EF%25BC%2588%25E5%2586%25B7%25E6%2588%25BF%25E5%25B0%2582%25E7%2594%25A8%25E3%2583%25BB%25E3%2581%258A%25E3%2582%2582%25E3%2581%25AB4%25EF%25BD%259E6%25E7%2595%25B3%25E7%2594%25A8%25EF%25BC%2589%2520CW-F1616WS%25E3%2581%25AE%25E4%25B8%2580%25E8%2588%25AC%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%25E5%2590%2591%25E3%2581%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>使ったことあるよ！ という方、使用感など情報求む！ よろしくお願いします。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5976036296]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477016]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>288</wp:comment_id>
			<wp:comment_author><![CDATA[To tài khon binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[83705772@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/vi/join?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-22 23:54:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-22 14:54:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>SparkFunのSEN-11345をcpm単位で空間線量を返すように修正してみる。ついでに、OSXでmakeする環境整備も。</title>
		<link>https://tech.blog.uribou.me/geiger-sen-11345/</link>
		<pubDate>Sun, 28 Aug 2016 04:39:55 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/geiger-sen-11345/</guid>
		<description></description>
		<content:encoded><![CDATA[電子工作ではおなじみのSparkFunが出しているガイガーカウンター、SEN-11345。すごく気になる…。
<a href="https://www.sparkfun.com/products/11345"><img src="https://cdn.sparkfun.com//assets/parts/7/0/6/3/11345-01a.jpg" alt="" /></a>
コンパクトなガイガーミュラー菅には、LND712を使用している上、ArduinoでおなじみのATMega328を搭載しているんですよね。以下のArduino Pro Miniと動作周波数も同じです。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0079FZ7BQ%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51bwyFOEn9L._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0079FZ7BQ%2Fref%3Dnosim" target="_blank" rel="noopener">Arduino Pro Mini 328 3.3V 8MHz</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> スイッチサイエンス     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DArduino%2520Pro%2520Mini%2520328%25203.3V%25208MHz%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FArduino%2520Pro%2520Mini%2520328%25203.3V%25208MHz%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
というか、このArduino Pro Mini、以前庭先の自動水やり機を作った時の余りが手元にあるんですよね。
でもって、Geiger Counter用コードが<a href="https://github.com/sparkfun/Geiger_Counter/tree/V_HW4.0_FW1.2">Github</a>にpushされていると。
ハード構成は色々違うはずですが、このGeiger Counter用コードがArduino Pro Miniで動くのか試してみたくなりました。
<h1>OSXでMakeする</h1>
Arduinoのソフトウェアは基本的に<a href="https://www.arduino.cc/en/Main/Software">Arduino IDE</a>で開発するので、Geiger Counterのように素でMakeする環境はちょっとハードル上がります。
個人的には、マウスでボタン押してソフトウェア書き込みするより、全ての作業がコマンドラインで完結している方がやりやすい。
でもOSXのターミナルでMakeするには、色々と下準備が必要です。
<ol>
<li><a href="https://www.arduino.cc/en/Main/Software">Arduino IDE</a>をインストールする</li>
<li>avrコマンドへのパスを通す</li>
<li>Arduino Pro Mini上で動作させるためのMakefile修正</li>
<li>cpm単位で値を返すようにGeiger Counterのソースコードを修正する</li>
</ol>
これで、OSX上でMakeできる上、<code>make program</code>コマンドでボードへのソフトウェア書き込みもできてしまいます。
以下、詳細です。
<h2>Arduino IDEをインストールする</h2>
<a href="https://www.arduino.cc/en/Main/Software">リンク先</a>からインストーラをダウンロードして、インストールしてください。
<h2>avrコマンドへのパスを通す</h2>
Makeでavr-gccやavrdudeコマンドが必要になるので、PATHが通ってないといけません。
以下のようにします。
<pre><code class="bash">$ export PATH=/Applications/Arduino.app/Contents/Java/hardware/tools/avr/bin:${PATH}
</code></pre>
永続的にパス通しておきたいなら.bash_profile辺りに追記しておきます。
<pre><code class="bash">$ echo 'export PATH=/Applications/Arduino.app/Contents/Java/hardware/tools/avr/bin:${PATH}' &gt;&gt; ~/.bash_profile
</code></pre>
パスがちゃんと通れば、以下のようにavrdudeコマンドが実行できるはず。
<pre><code>$ avrdude -C /Applications/Arduino.app/Contents/Java/hardware/tools/avr/etc/avrdude.conf -c ?
Valid programmers are:
  2232HIO          = FT2232H based generic programmer
  4232h            = FT4232H based generic programmer
  arduino          = Arduino
  arduino-ft232r   = Arduino: FT232R connected to ISP
  arduinoisp       =
  avr109           = Atmel AppNote AVR109 Boot Loader
  avr910           = Atmel Low Cost Serial Programmer
  avr911           = Atmel AppNote AVR911 AVROSP
  avrftdi          = FT2232D based generic programmer
  avrisp           = Atmel AVR ISP
  avrisp2          = Atmel AVR ISP mkII
...
</code></pre>
<h2>Arduino Pro Mini上で動作させるためのMakefile修正</h2>
以下のようにします。
<pre><code class="diff">--- a/firmware/geiger_counter_board/Makefile
+++ b/firmware/geiger_counter_board/Makefile
@@ -197,16 +197,20 @@ LDFLAGS += $(PRINTF_LIB) $(SCANF_LIB) $(MATH_LIB)
 #
 # Type: avrdude -c ?
 # to get a full listing.
-AVRDUDE_PROGRAMMER = stk500v2
+AVRDUDE_PROGRAMMER = arduino
+#AVRDUDE_PROGRAMMER = avrisp
 #AVRDUDE_PROGRAMMER = ponyser
 # com1 = serial port. Use lpt1 to connect to parallel port.
 #AVRDUDE_PORT = lpt1
-AVRDUDE_PORT = COM3
+AVRDUDE_PORT = /dev/tty.usbserial-A9KZJ9DL
 AVRDUDE_WRITE_FLASH = -U flash:w:$(TARGET).hex
 #AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep
+AVRDUDE_CONF = -C /Applications/Arduino.app/Contents/Java/hardware/tools/avr/etc/avrdude.conf
+AVRDUDE_BAUD = -b 57600
 # Uncomment the following if you want avrdude's erase cycle counter.
 # Note that this counter needs to be initialized first using -Yn,
@@ -382,7 +386,7 @@ gccversion :
 # Program the device.
 program: $(TARGET).hex $(TARGET).eep
-       $(AVRDUDE) $(AVRDUDE_FLAGS) $(AVRDUDE_WRITE_FLASH) $(AVRDUDE_WRITE_EEPROM)
+       $(AVRDUDE) $(AVRDUDE_BAUD) $(AVRDUDE_CONF) $(AVRDUDE_FLAGS) $(AVRDUDE_WRITE_FLASH) $(AVRDUDE_WRITE_EEPROM)
</code></pre>
AVRDUDE_PORTは使用するPro Miniによって変わるので、適宜変更してください。
AVRDUDE_PROGRAMMERはavrispでも正常に書き込みできました。
ちなみに、この<a href="http://www.nongnu.org/avrdude/">avrdude(AVR Downloader/UploaDEr)</a>コマンド、詳細なオプション情報はリンク先のdownload pageからマニュアルがダウンロードできるので、もっと詳細が知りたくなったらこちらを参照してください。
<h2>cpm単位で値を返すようにGeiger Counterのソースコードを修正する</h2>
<a href="https://github.com/sparkfun/Geiger_Counter/tree/V_HW4.0_FW1.2">Github</a>に公開されているGeiger Counter用コードは以下のように、INT0割り込み回数を1秒毎にprintfするようになっています。
<pre><code class="c">ISR(INT0_vect) {
    i++;
    cbi(PORTC, STATUS_LED);
}
ISR(TIMER1_OVF_vect) {
    TCNT1 = 34000;  //(256/8MHz)*(65536bits-34000)~=1.009s
    printf("counts per second: %ld  ?r", i);
    i=0;
}
int main(void) {
    ioinit(); //Setup IO pins and defaults
    delay_ms(1200); //wait to settle
    while(1) {
        sbi(PORTC, STATUS_LED);
        delay_ms(30);
    }
    cli();
}
void ioinit (void) {
    ...
    //load timer with a value to optimize for 1 second, (256/8MHz)*(65536bits-34000)~=1.009s
    TCNT1 = 34000;
    sei(); //turn on global interrupts
}
</code></pre>
ガイガーミュラー菅に放射線が通ると割り込み発生、ってことなんでしょうね。
さらにTimer1のTCNT1設定方法を<a href="https://sites.google.com/site/qeewiki/books/avr-guide/counter-atmega328">COUNTERS ON THE ATmega168/328</a>で見てみると、コードのコメントにある通り、1クロック毎にデクリメントしてちょうど1秒になるように設定してやると、1秒タイマーの出来上がり。
<blockquote>
  Timer/Counter Register (stores the counter value) Can be accessed as TCNT1.<br />
  The Control Logic unit in counter1 has the ability to increment, decrement or clear(reset) the TCNT1 register.
</blockquote>
これをcpm単位で返せるように修正すると、以下のようになります。…間違ってないよね？
<pre><code class="c">ISR(INT0_vect) {
    ++cps;
    cbi(PORTC, STATUS_LED);
}
ISR(TIMER1_OVF_vect) {
    TCNT1 = TCNT1_1SEC;
    //printf("%lu ?r", sec);
    if (sec &lt; 60) {
        cpm += cps;
        ++sec;
    }
    cps = 0;
}
int main(void) {
    ioinit(); //Setup IO pins and defaults
    delay_ms(1200); //wait to settle
    while(1) {
        sbi(PORTC, STATUS_LED);
        delay_ms(30);
        if (sec &gt;= 60) {
            //printf("cpm:%lu          ?r", cpm);
            printf("cpm:%lu          ?n", cpm);
            cpm = 0;
            sec = 0;
        }
    }
    cli(); // Disables all interrupts by clearing the global interrupt mask.
}
</code></pre>
可能なかぎりISR（割り込み処理）内の処理は軽く、単純な四則演算だけで処理して、少なくとも返すcpmの値を計測する時間に差が発生しないようにしたつもり。
これでmakeしたコードをArduino Pro Miniに書き込んで、
<pre><code class="bash">$ make
$ make program
</code></pre>
<a href="http://www.cyberciti.biz/faq/unix-linux-apple-osx-bsd-screen-set-baud-rate/">screenコマンド</a>でArduino Pro Miniが返す値を表示してやると、
<pre><code class="bash">$ screen /dev/tty.usbserial-A9KZJ9DL 19200
</code></pre>
こうなります。
<pre><code class="bash">cpm:3000
cpm:3051
cpm:2989
</code></pre>
まぁ、ガイガーミュラー菅がないので、適当な変な値が表示されるだけですが。
<h1>結局何がしたいのか？</h1>
SEN-11345を使って定点観測所を作りたいんですよね。
行政が作る定点観測所は、どうも信用ならない。あるがままの値を計測するのではなく、計測所周りを綺麗に掃除して綺麗な値を公表したいだけに思えるので。
こんな感じでその日その瞬間の空間線量値をつぶやいたり、
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">バッテリ電圧がかなり低下しています。<br />現在22.34[V]ですので、PCサーバ等の電源を落とします。<br />2016年8月28日11時26分に取得したデータを元にしています。</p>&mdash; solar_monitor (@mybot_athome) <a href="https://twitter.com/mybot_athome/status/769858599459823616">2016年8月28日</a></blockquote>

地点毎の線量をグラフ化して公開したりしたいですね。
<a href="http://blog.rinka-blossom.com/rest-api-safecast/">Safecast APIでの線量値のPost方法もわかった</a>ので、iOSアプリでのマップ情報も参照できるようになる。…予定です。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1595</wp:post_id>
		<wp:post_date><![CDATA[2016-08-28 13:39:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-28 04:39:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[geiger-sen-11345]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e6%94%be%e5%b0%84%e8%83%bd"><![CDATA[放射能]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:60:"https://cdn.sparkfun.com//assets/parts/7/0/6/3/11345-01a.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>電子工作ではおなじみのSparkFunが出しているガイガーカウンター、SEN-11345。すごく気になる…。</p>

<p><a href="https://www.sparkfun.com/products/11345"><img src="https://cdn.sparkfun.com//assets/parts/7/0/6/3/11345-01a.jpg" alt="" title="" /></a></p>

<p>コンパクトなガイガーミュラー菅には、LND712を使用している上、ArduinoでおなじみのATMega328を搭載しているんですよね。以下のArduino Pro Miniと動作周波数も同じです。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0079FZ7BQ%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51bwyFOEn9L._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0079FZ7BQ%2Fref%3Dnosim" target="_blank" >Arduino Pro Mini 328 3.3V 8MHz</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> スイッチサイエンス     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DArduino%2520Pro%2520Mini%2520328%25203.3V%25208MHz%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FArduino%2520Pro%2520Mini%2520328%25203.3V%25208MHz%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>というか、このArduino Pro Mini、以前庭先の自動水やり機を作った時の余りが手元にあるんですよね。</p>

<p>でもって、Geiger Counter用コードが<a href="https://github.com/sparkfun/Geiger_Counter/tree/V_HW4.0_FW1.2">Github</a>にpushされていると。</p>

<p>ハード構成は色々違うはずですが、このGeiger Counter用コードがArduino Pro Miniで動くのか試してみたくなりました。</p>

<h1 id="osxmake">OSXでMakeする</h1>

<p>Arduinoのソフトウェアは基本的に<a href="https://www.arduino.cc/en/Main/Software">Arduino IDE</a>で開発するので、Geiger Counterのように素でMakeする環境はちょっとハードル上がります。</p>

<p>個人的には、マウスでボタン押してソフトウェア書き込みするより、全ての作業がコマンドラインで完結している方がやりやすい。</p>

<p>でもOSXのターミナルでMakeするには、色々と下準備が必要です。</p>

<ol>
<li><a href="https://www.arduino.cc/en/Main/Software">Arduino IDE</a>をインストールする  </li>
<li>avrコマンドへのパスを通す  </li>
<li>Arduino Pro Mini上で動作させるためのMakefile修正  </li>
<li>cpm単位で値を返すようにGeiger Counterのソースコードを修正する</li>
</ol>

<p>これで、OSX上でMakeできる上、<code>make program</code>コマンドでボードへのソフトウェア書き込みもできてしまいます。</p>

<p>以下、詳細です。</p>

<h2 id="arduinoide">Arduino IDEをインストールする</h2>

<p><a href="https://www.arduino.cc/en/Main/Software">リンク先</a>からインストーラをダウンロードして、インストールしてください。</p>

<h2 id="avr">avrコマンドへのパスを通す</h2>

<p>Makeでavr-gccやavrdudeコマンドが必要になるので、PATHが通ってないといけません。</p>

<p>以下のようにします。</p>

<pre><code class="language-bash">$ export PATH=/Applications/Arduino.app/Contents/Java/hardware/tools/avr/bin:${PATH}
</code></pre>

<p>永続的にパス通しておきたいなら.bash_profile辺りに追記しておきます。</p>

<pre><code class="language-bash">$ echo 'export PATH=/Applications/Arduino.app/Contents/Java/hardware/tools/avr/bin:${PATH}' &gt;&gt; ~/.bash_profile
</code></pre>

<p>パスがちゃんと通れば、以下のようにavrdudeコマンドが実行できるはず。</p>

<pre><code>$ avrdude -C /Applications/Arduino.app/Contents/Java/hardware/tools/avr/etc/avrdude.conf -c ?

Valid programmers are:  
  2232HIO          = FT2232H based generic programmer
  4232h            = FT4232H based generic programmer
  arduino          = Arduino
  arduino-ft232r   = Arduino: FT232R connected to ISP
  arduinoisp       =
  avr109           = Atmel AppNote AVR109 Boot Loader
  avr910           = Atmel Low Cost Serial Programmer
  avr911           = Atmel AppNote AVR911 AVROSP
  avrftdi          = FT2232D based generic programmer
  avrisp           = Atmel AVR ISP
  avrisp2          = Atmel AVR ISP mkII
...
</code></pre>

<h2 id="arduinoprominimakefile">Arduino Pro Mini上で動作させるためのMakefile修正</h2>

<p>以下のようにします。</p>

<pre><code class="language-diff">--- a/firmware/geiger_counter_board/Makefile
+++ b/firmware/geiger_counter_board/Makefile
@@ -197,16 +197,20 @@ LDFLAGS += $(PRINTF_LIB) $(SCANF_LIB) $(MATH_LIB)
 #
 # Type: avrdude -c ?
 # to get a full listing.
-AVRDUDE_PROGRAMMER = stk500v2
+AVRDUDE_PROGRAMMER = arduino
+#AVRDUDE_PROGRAMMER = avrisp
 #AVRDUDE_PROGRAMMER = ponyser

 # com1 = serial port. Use lpt1 to connect to parallel port.
 #AVRDUDE_PORT = lpt1
-AVRDUDE_PORT = COM3
+AVRDUDE_PORT = /dev/tty.usbserial-A9KZJ9DL

 AVRDUDE_WRITE_FLASH = -U flash:w:$(TARGET).hex
 #AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep

+AVRDUDE_CONF = -C /Applications/Arduino.app/Contents/Java/hardware/tools/avr/etc/avrdude.conf
+AVRDUDE_BAUD = -b 57600

 # Uncomment the following if you want avrdude's erase cycle counter.
 # Note that this counter needs to be initialized first using -Yn,
@@ -382,7 +386,7 @@ gccversion :

 # Program the device.
 program: $(TARGET).hex $(TARGET).eep
-       $(AVRDUDE) $(AVRDUDE_FLAGS) $(AVRDUDE_WRITE_FLASH) $(AVRDUDE_WRITE_EEPROM)
+       $(AVRDUDE) $(AVRDUDE_BAUD) $(AVRDUDE_CONF) $(AVRDUDE_FLAGS) $(AVRDUDE_WRITE_FLASH) $(AVRDUDE_WRITE_EEPROM)
</code></pre>

<p>AVRDUDE_PORTは使用するPro Miniによって変わるので、適宜変更してください。</p>

<p>AVRDUDE_PROGRAMMERはavrispでも正常に書き込みできました。</p>

<p>ちなみに、この<a href="http://www.nongnu.org/avrdude/">avrdude(AVR Downloader/UploaDEr)</a>コマンド、詳細なオプション情報はリンク先のdownload pageからマニュアルがダウンロードできるので、もっと詳細が知りたくなったらこちらを参照してください。</p>

<h2 id="cpmgeigercounter">cpm単位で値を返すようにGeiger Counterのソースコードを修正する</h2>

<p><a href="https://github.com/sparkfun/Geiger_Counter/tree/V_HW4.0_FW1.2">Github</a>に公開されているGeiger Counter用コードは以下のように、INT0割り込み回数を1秒毎にprintfするようになっています。</p>

<pre><code class="language-c">ISR(INT0_vect) {  
    i++;
    cbi(PORTC, STATUS_LED);
}

ISR(TIMER1_OVF_vect) {  
    TCNT1
= 34000;  //(256/8MHz)*(65536bits-34000)~=1.009s
    printf("counts per second: %ld  ?r", i);
    i=0;
}

int main(void) {  
    ioinit(); //Setup IO pins and defaults
    delay_ms(1200); //wait to settle

    while(1) {
        sbi(PORTC, STATUS_LED);
        delay_ms(30);
    }

    cli();
}

void ioinit (void) {  
    ...
    //load timer with a value to optimize for 1 second, (256/8MHz)*(65536bits-34000)~=1.009s
    TCNT1 = 34000;
    sei(); //turn on global interrupts
}
</code></pre>

<p>ガイガーミュラー菅に放射線が通ると割り込み発生、ってことなんでしょうね。</p>

<p>さらにTimer1のTCNT1設定方法を<a href="https://sites.google.com/site/qeewiki/books/avr-guide/counter-atmega328">COUNTERS ON THE ATmega168/328</a>で見てみると、コードのコメントにある通り、1クロック毎にデクリメントしてちょうど1秒になるように設定してやると、1秒タイマーの出来上がり。</p>

<blockquote>
  <p>Timer/Counter Register (stores the counter value) Can be accessed as TCNT1. <br />
  The Control Logic unit in counter1 has the ability to increment, decrement or clear(reset) the TCNT1 register.</p>
</blockquote>

<p>これをcpm単位で返せるように修正すると、以下のようになります。…間違ってないよね？</p>

<pre><code class="language-c">ISR(INT0_vect) {  
    ++cps;
    cbi(PORTC, STATUS_LED);
}

ISR(TIMER1_OVF_vect) {  
    TCNT1 = TCNT1_1SEC;
    //printf("%lu ?r", sec);

    if (sec &lt; 60) {
        cpm += cps;
        ++sec;
    }

    cps = 0;
}

int main(void) {  
    ioinit(); //Setup IO pins and defaults

    delay_ms(1200); //wait to settle

    while(1) {
        sbi(PORTC, STATUS_LED);
        delay_ms(30);

        if (sec &gt;= 60) {
            //printf("cpm:%lu          ?r", cpm);
            printf("cpm:%lu          ?n", cpm);
            cpm = 0;
            sec = 0;
        }
    }

    cli(); // Disables all interrupts by clearing the global interrupt mask.
}
</code></pre>

<p>可能なかぎりISR（割り込み処理）内の処理は軽く、単純な四則演算だけで処理して、少なくとも返すcpmの値を計測する時間に差が発生しないようにしたつもり。</p>

<p>これでmakeしたコードをArduino Pro Miniに書き込んで、</p>

<pre><code class="language-bash">$ make
$ make program
</code></pre>

<p><a href="http://www.cyberciti.biz/faq/unix-linux-apple-osx-bsd-screen-set-baud-rate/">screenコマンド</a>でArduino Pro Miniが返す値を表示してやると、</p>

<pre><code class="language-bash">$ screen /dev/tty.usbserial-A9KZJ9DL 19200
</code></pre>

<p>こうなります。</p>

<pre><code class="language-bash">cpm:3000  
cpm:3051  
cpm:2989  
</code></pre>

<p>まぁ、ガイガーミュラー菅がないので、適当な変な値が表示されるだけですが。</p>

<h1 id="">結局何がしたいのか？</h1>

<p>SEN-11345を使って定点観測所を作りたいんですよね。</p>

<p>行政が作る定点観測所は、どうも信用ならない。あるがままの値を計測するのではなく、計測所周りを綺麗に掃除して綺麗な値を公表したいだけに思えるので。</p>

<p>こんな感じでその日その瞬間の空間線量値をつぶやいたり、</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">バッテリ電圧がかなり低下しています。<br>現在22.34[V]ですので、PCサーバ等の電源を落とします。<br>2016年8月28日11時26分に取得したデータを元にしています。</p>&mdash; solar_monitor (@mybot_athome) <a href="https://twitter.com/mybot_athome/status/769858599459823616">2016年8月28日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>地点毎の線量をグラフ化して公開したりしたいですね。</p>

<p><a href="http://blog.rinka-blossom.com/rest-api-safecast/">Safecast APIでの線量値のPost方法もわかった</a>ので、iOSアプリでのマップ情報も参照できるようになる。…予定です。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6001481046]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677713]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>302</wp:comment_id>
			<wp:comment_author><![CDATA[ustvarjanje racuna na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[60626331@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/sl/join?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.142]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-31 18:08:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-31 09:08:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>地域通貨での初仕事？ 学研電子ブロックを修理するついでに色々遊んでみました。</title>
		<link>https://tech.blog.uribou.me/repair-gakken-denshi-block/</link>
		<pubDate>Sun, 28 Aug 2016 05:13:38 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/repair-gakken-denshi-block/</guid>
		<description></description>
		<content:encoded><![CDATA[ずいぶん前に興味あってチェックした覚えがあるけど、手を出していなかった学研電子ブロック復刻版。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00L3YNOV4%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51Lczz5AwIL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00L3YNOV4%2Fref%3Dnosim" target="_blank" rel="noopener">復刻新装版 学研電子ブロック EX-150</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 学研ステイフル 2014-10-04    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2595%259C%258D%258F%2590V%2591%2595%2594%25C5%2520%258Aw%258C%25A4%2593d%258Eq%2583u%2583%258D%2583b%2583N%2520EX-150%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" rel="noopener">Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E5%25BE%25A9%25E5%2588%25BB%25E6%2596%25B0%25E8%25A3%2585%25E7%2589%2588%2520%25E5%25AD%25A6%25E7%25A0%2594%25E9%259B%25BB%25E5%25AD%2590%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%2520EX-150%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
昭島の地域通貨ネッコで、この電子ブロック自体が故障しているのか、使い方が悪いのか検証してほしいというお願いがきました！
~~遊んでみたかったので~~お役に立てるならと、二つ返事で引き受けて早速説明書を読んでみると…　子供向け学習教材と侮るなかれ、かなり本格的な内容にびっくり。
48個の電子回路ブロックを組み合わせることで、150種類の回路が作成できてしまいます。説明書の内容もかなりマニアックで、個人的に思ったのは、<strong>電子工作経験者だけど電子回路の基礎をあまり真面目に勉強してこなかったから、改めて勉強し直したい</strong>という、ある意味不真面目な大人（要するに自分のような）向けの教材なんじゃないかと思いました。
<strong>復刻版</strong>と付いているのはそのせいか？
とりあえず、受け取ってすぐLEDが光ることは確認できました。
<img src="https://farm8.staticflickr.com/7761/29178117932_130b17202c_z_d.jpg" alt="" />
続いてラジオ回路の製作。
…何も聞こえない。
スイッチをいれても本当に何も聞こえないのでおかしいなと思い、使用したブロックを一個一個裏返してチェックしてみると…
ありました。
<img src="https://farm8.staticflickr.com/7476/28998379080_aee2f806df_z_d.jpg" alt="" />
ハンダが浮いてしまい、回路が繋がらなくなっていました。
念のため他のブロックも全部チェックしましたが、剥がれていたのはこれ一つのみ。
ハンダを少し盛って付けてやると、ちゃんとラジオが聞こえました。とはいえ、超小音量なので、聴覚検査か？！ ってくらい耳をすませる必要がありましたが・・・。
<img src="https://farm9.staticflickr.com/8301/29178121382_3b2f535463_z_d.jpg" alt="" />
夏風邪っぴきの４歳の娘による検査を受ける図です。
しかし、このブロックの構造からして、やっぱり子供向けではない気がするなぁ・・・。ちょっと乱暴に扱ったらすぐハンダが剥がれそう。少なくともウチの４歳児には触らせられないと思い、完成品のチェックのみして頂きました。
でも、楽しかった。もう少し娘が大きくなったら、購入も考えてみようかな。
とりあえず、直って良かった。学研電子ブロックも、娘の体調も。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1596</wp:post_id>
		<wp:post_date><![CDATA[2016-08-28 14:13:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-28 05:13:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[repair-gakken-denshi-block]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="di-yu-tong-huo"><![CDATA[地域通貨]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/51Lczz5AwIL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ずいぶん前に興味あってチェックした覚えがあるけど、手を出していなかった学研電子ブロック復刻版。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00L3YNOV4%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51Lczz5AwIL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00L3YNOV4%2Fref%3Dnosim" target="_blank" >復刻新装版 学研電子ブロック EX-150</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 学研ステイフル 2014-10-04    </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2595%259C%258D%258F%2590V%2591%2595%2594%25C5%2520%258Aw%258C%25A4%2593d%258Eq%2583u%2583%258D%2583b%2583N%2520EX-150%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i" target="_blank" >Amazonで購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E5%25BE%25A9%25E5%2588%25BB%25E6%2596%25B0%25E8%25A3%2585%25E7%2589%2588%2520%25E5%25AD%25A6%25E7%25A0%2594%25E9%259B%25BB%25E5%25AD%2590%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%2520EX-150%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で購入</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>昭島の地域通貨ネッコで、この電子ブロック自体が故障しているのか、使い方が悪いのか検証してほしいというお願いがきました！</p>

<p><del>遊んでみたかったので</del>お役に立てるならと、二つ返事で引き受けて早速説明書を読んでみると…　子供向け学習教材と侮るなかれ、かなり本格的な内容にびっくり。</p>

<p>48個の電子回路ブロックを組み合わせることで、150種類の回路が作成できてしまいます。説明書の内容もかなりマニアックで、個人的に思ったのは、<strong>電子工作経験者だけど電子回路の基礎をあまり真面目に勉強してこなかったから、改めて勉強し直したい</strong>という、ある意味不真面目な大人（要するに自分のような）向けの教材なんじゃないかと思いました。</p>

<p><strong>復刻版</strong>と付いているのはそのせいか？</p>

<p>とりあえず、受け取ってすぐLEDが光ることは確認できました。</p>

<p><img src="https://farm8.staticflickr.com/7761/29178117932_130b17202c_z_d.jpg" alt="" /></p>

<p>続いてラジオ回路の製作。</p>

<p>…何も聞こえない。</p>

<p>スイッチをいれても本当に何も聞こえないのでおかしいなと思い、使用したブロックを一個一個裏返してチェックしてみると…</p>

<p>ありました。</p>

<p><img src="https://farm8.staticflickr.com/7476/28998379080_aee2f806df_z_d.jpg" alt="" /></p>

<p>ハンダが浮いてしまい、回路が繋がらなくなっていました。</p>

<p>念のため他のブロックも全部チェックしましたが、剥がれていたのはこれ一つのみ。</p>

<p>ハンダを少し盛って付けてやると、ちゃんとラジオが聞こえました。とはいえ、超小音量なので、聴覚検査か？！ ってくらい耳をすませる必要がありましたが・・・。</p>

<p><img src="https://farm9.staticflickr.com/8301/29178121382_3b2f535463_z_d.jpg" alt="" /></p>

<p>夏風邪っぴきの４歳の娘による検査を受ける図です。</p>

<p>しかし、このブロックの構造からして、やっぱり子供向けではない気がするなぁ・・・。ちょっと乱暴に扱ったらすぐハンダが剥がれそう。少なくともウチの４歳児には触らせられないと思い、完成品のチェックのみして頂きました。</p>

<p>でも、楽しかった。もう少し娘が大きくなったら、購入も考えてみようかな。</p>

<p>とりあえず、直って良かった。学研電子ブロックも、娘の体調も。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5951764497]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677714]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>234</wp:comment_id>
			<wp:comment_author><![CDATA[Създаване на личен профил]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[63943496@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/bg/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-28 09:03:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-28 00:03:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>DIYガイガーカウンタ製作日記その１。</title>
		<link>https://tech.blog.uribou.me/diy-geiger-counter/</link>
		<pubDate>Wed, 31 Aug 2016 18:43:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/diy-geiger-counter/</guid>
		<description></description>
		<content:encoded><![CDATA[sparkfunにて購入。人生初の個人輸入です。
<img src="https://farm9.staticflickr.com/8247/28738730384_357f5e3289_z_d.jpg" alt="" />
<a href="https://www.sparkfun.com/products/11345">ガイガーミュラー菅にLND-712を採用したやつ</a>になります。
決済したあとで、sparkfunから調査というか、質問が飛んできました。
「何の目的で本製品を購入したのか？」「自分以外の誰かに譲渡する予定はあるか？」なとなど。
raspberry pi zeroを買ったときは何も聞かれませんでしたが、発生源ではないにせよ、放射線が絡むと輸出入の規制が厳しいのかな。
で、無事届いた製品の外観がこれ。
<img src="https://farm9.staticflickr.com/8543/28738740434_20e0599ce1_z_d.jpg" alt="" />
自宅に定点観測所が欲しいと、かなり以前から考えていたこともあり・・・
<ul>
<li><a href="http://blog.rinka-blossom.com/rest-api-safecast/">空間放射線量データを公開しているSafecast。REST API経由で定点観測データを自動送信するには？</a></li>
<li><a href="http://blog.rinka-blossom.com/raspberry-pi-zero-initial-setup/">Raspberry Pi Zeroセットアップでするべき事４つ。</a></li>
<li><a href="http://blog.rinka-blossom.com/geiger-sen-11345/">SparkFunのSEN-11345をcpm単位で空間線量を返すように修正してみる。ついでに、OSXでmakeする環境整備も。</a></li>
</ul>
早速仮組みして、超簡易的にですが、完成してしまった。
上の記事の通り、ガイガーカウンタにはcpm（カウント毎秒）単位で計測データを返すように修正したソフトを書き込み済みなので、USBシリアル経由で出力するその文字列をPythonで少し加工してuSv/h単位に変換してやる、というコードです。
<pre><code class="python">from serial import Serial
port = Serial("/dev/ttyUSB0", baudrate=19200)
while True:
    cpm = int(port.readline().decode("ascii").split()[0])
    usv = cpm * 0.00812
    print("{:.2f}[uSv/h]".format(usv))
</code></pre>
<code>port.readline()</code>は改行コードを読み取るまで処理をブロックします。ガイガーカウンターは<code>20 cpm n</code>のような文字列データを出力するようにしているので、それをbin形式からunicode文字列型に変換後、空白で<code>split()</code>して、cpm単位の値に係数を掛けてuSv/hに変換し、printします。
結果は下記の通り。
<pre><code>0.13[uSv/h]
0.11[uSv/h]
0.08[uSv/h]
0.11[uSv/h]
0.09[uSv/h]
0.13[uSv/h]
0.11[uSv/h]
0.14[uSv/h]
0.12[uSv/h]
0.16[uSv/h]
0.11[uSv/h]
0.16[uSv/h]
0.08[uSv/h]
0.13[uSv/h]
0.07[uSv/h]
0.13[uSv/h]
0.09[uSv/h]
0.12[uSv/h]
0.11[uSv/h]
0.11[uSv/h]
</code></pre>
元々所有しているガイガーカウンタとほぼ同等の結果が得られました。
あとはこれをデータベース化するなり、Tweetするなり、グラフ化するなり、好きなように料理すれば良いと。
悩むのはソフトよりハードなんですけどね。これらを防水ケースに詰め込み、屋根代わりの太陽光パネル裏に貼り付け、半永久的にデータを送らせて…。
またホームセンター巡りが始まるなぁ。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1597</wp:post_id>
		<wp:post_date><![CDATA[2016-09-01 03:43:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-31 18:43:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diy-geiger-counter]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e6%94%be%e5%b0%84%e8%83%bd"><![CDATA[放射能]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm9.staticflickr.com/8247/28738730384_357f5e3289_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>sparkfunにて購入。人生初の個人輸入です。</p>

<p><img src="https://farm9.staticflickr.com/8247/28738730384_357f5e3289_z_d.jpg" alt="" /></p>

<p><a href="https://www.sparkfun.com/products/11345">ガイガーミュラー菅にLND-712を採用したやつ</a>になります。</p>

<p>決済したあとで、sparkfunから調査というか、質問が飛んできました。</p>

<p>「何の目的で本製品を購入したのか？」「自分以外の誰かに譲渡する予定はあるか？」なとなど。</p>

<p>raspberry pi zeroを買ったときは何も聞かれませんでしたが、発生源ではないにせよ、放射線が絡むと輸出入の規制が厳しいのかな。</p>

<p>で、無事届いた製品の外観がこれ。</p>

<p><img src="https://farm9.staticflickr.com/8543/28738740434_20e0599ce1_z_d.jpg" alt="" /></p>

<p>自宅に定点観測所が欲しいと、かなり以前から考えていたこともあり・・・</p>

<ul>
<li><a href="http://blog.rinka-blossom.com/rest-api-safecast/">空間放射線量データを公開しているSafecast。REST API経由で定点観測データを自動送信するには？</a></li>
<li><a href="http://blog.rinka-blossom.com/raspberry-pi-zero-initial-setup/">Raspberry Pi Zeroセットアップでするべき事４つ。</a></li>
<li><a href="http://blog.rinka-blossom.com/geiger-sen-11345/">SparkFunのSEN-11345をcpm単位で空間線量を返すように修正してみる。ついでに、OSXでmakeする環境整備も。</a></li>
</ul>

<p>早速仮組みして、超簡易的にですが、完成してしまった。</p>

<p>上の記事の通り、ガイガーカウンタにはcpm（カウント毎秒）単位で計測データを返すように修正したソフトを書き込み済みなので、USBシリアル経由で出力するその文字列をPythonで少し加工してuSv/h単位に変換してやる、というコードです。</p>

<pre><code class="language-python">from serial import Serial

port = Serial("/dev/ttyUSB0", baudrate=19200)

while True:  
    cpm = int(port.readline().decode("ascii").split()[0])
    usv = cpm * 0.00812
    print("{:.2f}[uSv/h]".format(usv))
</code></pre>

<p><code>port.readline()</code>は改行コードを読み取るまで処理をブロックします。ガイガーカウンターは<code>20 cpm n</code>のような文字列データを出力するようにしているので、それをbin形式からunicode文字列型に変換後、空白で<code>split()</code>して、cpm単位の値に係数を掛けてuSv/hに変換し、printします。</p>

<p>結果は下記の通り。</p>

<pre><code>0.13[uSv/h]  
0.11[uSv/h]  
0.08[uSv/h]  
0.11[uSv/h]  
0.09[uSv/h]  
0.13[uSv/h]  
0.11[uSv/h]  
0.14[uSv/h]  
0.12[uSv/h]  
0.16[uSv/h]  
0.11[uSv/h]  
0.16[uSv/h]  
0.08[uSv/h]  
0.13[uSv/h]  
0.07[uSv/h]  
0.13[uSv/h]  
0.09[uSv/h]  
0.12[uSv/h]  
0.11[uSv/h]  
0.11[uSv/h]  
</code></pre>

<p>元々所有しているガイガーカウンタとほぼ同等の結果が得られました。</p>

<p>あとはこれをデータベース化するなり、Tweetするなり、グラフ化するなり、好きなように料理すれば良いと。</p>

<p>悩むのはソフトよりハードなんですけどね。これらを防水ケースに詰め込み、屋根代わりの太陽光パネル裏に貼り付け、半永久的にデータを送らせて…。</p>

<p>またホームセンター巡りが始まるなぁ。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1598]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5952307309]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722477017]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>173</wp:comment_id>
			<wp:comment_author><![CDATA[Cont Binance gratuit]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[89812368@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ro/register-person?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.72]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-17 11:49:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-17 02:49:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>181</wp:comment_id>
			<wp:comment_author><![CDATA[conta da binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[61528148@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/pt-BR/register?ref=OMM3XK51</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.39]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-21 00:05:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-20 15:05:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>211</wp:comment_id>
			<wp:comment_author><![CDATA[注册Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[90047339@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/register?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.203]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-06 09:07:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-06 00:07:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>DIYガイガーカウンタ製作日記その２。</title>
		<link>https://tech.blog.uribou.me/diy-geiger-part2/</link>
		<pubDate>Mon, 19 Sep 2016 19:35:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/diy-geiger-part2/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/diy-geiger-counter/">DIYガイガーカウンタ製作日記その１</a>の続き。
前回はSparkfun製ガイガーカウンタから得たcpm値をuSv/hに変換してprintするとこまでだったので、今度はこれをSafacast API経由でSafecastサーバに送信してみます。
検討は過去記事<strong><a href="http://blog.rinka-blossom.com/rest-api-safecast/">空間放射線量データを公開しているSafecast。REST API経由で定点観測データを自動送信するには？</a></strong>でほぼ完了しているので、あとは組み合わせるだけです。
<pre><code class="python">import requests
from datetime import datetime
from serial import Serial
# Sparkfunガイガーカウンタを接続したシリアルポートを開く
port = Serial("/dev/tty.usbserial-AK05C8NQ", baudrate=19200)
while True:
    # cpm値の部分だけ抜き出す
    cpm = int(port.readline().decode("ascii").split()[0])
    # uSv/h換算
    usv = cpm * 0.00812
    print("{:.2f}[uSv]".format(usv))
    # 計測した線量値をSafecastのHPから登録する際のやり取りをgoogle chromeでキャプチャした結果を使う
    data = {
        "measurement[value]": cpm,
        "measurement[unit]": "cpm",
        "measurement[captured_at]": datetime.utcnow().strftime("%d %B %Y, %H:%M:%S"),
        "measurement[location_name]": "東京都昭島市",
        "measurement[latitude]": 35.704502,
        "measurement[longitude]": 139.353540,
        "measurement[device_id]": 158,
        "measurement[height]": "1m",
        "measurement[surface]": "Floor",
        "measurement[radiation]": "Air",
    }
    # Safecastサーバに送信する（API keyは伏字）
    requests.post("https://api.safecast.org/en-US/measurements?api_key=xxx", data=data)
</code></pre>
この結果が、記事のトップ絵になります。無事１分毎の線量データがSafecastに投稿できるようになりました。が、定点観測データを１分おきに送りつけるのはサーバ負荷対効果としてあまり宜しくない気がするので、適当に間引きたいと思います。
次回はXively連携でグラフ化したい。KeenIOの方がオシャレだけど、<a href="http://grid.rinka-blossom.com/">太陽光発電モニタリング</a>分で無料枠を使い切ってしまったので、Xivelyに頑張ってもらいます。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1599</wp:post_id>
		<wp:post_date><![CDATA[2016-09-20 04:35:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-19 19:35:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diy-geiger-part2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e6%94%be%e5%b0%84%e8%83%bd"><![CDATA[放射能]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/diy-geiger-counter/">DIYガイガーカウンタ製作日記その１</a>の続き。</p>
<p>前回はSparkfun製ガイガーカウンタから得たcpm値をuSv/hに変換してprintするとこまでだったので、今度はこれをSafacast API経由でSafecastサーバに送信してみます。</p>
<p>検討は過去記事<strong><a href="http://blog.rinka-blossom.com/rest-api-safecast/">空間放射線量データを公開しているSafecast。REST API経由で定点観測データを自動送信するには？</a></strong>でほぼ完了しているので、あとは組み合わせるだけです。</p>
<pre><code class="language-python">import requests
from datetime import datetime
from serial import Serial
# Sparkfunガイガーカウンタを接続したシリアルポートを開く
port = Serial("/dev/tty.usbserial-AK05C8NQ", baudrate=19200)
while True:
    # cpm値の部分だけ抜き出す
    cpm = int(port.readline().decode("ascii").split()[0])
    # uSv/h換算
    usv = cpm * 0.00812
    print("{:.2f}[uSv]".format(usv))
    # 計測した線量値をSafecastのHPから登録する際のやり取りをgoogle chromeでキャプチャした結果を使う
    data = {
        "measurement[value]": cpm,
        "measurement[unit]": "cpm",
        "measurement[captured_at]": datetime.utcnow().strftime("%d %B %Y, %H:%M:%S"),
        "measurement[location_name]": "東京都昭島市",
        "measurement[latitude]": 35.704502,
        "measurement[longitude]": 139.353540,
        "measurement[device_id]": 158,
        "measurement[height]": "1m",
        "measurement[surface]": "Floor",
        "measurement[radiation]": "Air",
    }
    # Safecastサーバに送信する（API keyは伏字）
    requests.post("https://api.safecast.org/en-US/measurements?api_key=xxx", data=data)
</code></pre>
<p>この結果が、記事のトップ絵になります。無事１分毎の線量データがSafecastに投稿できるようになりました。が、定点観測データを１分おきに送りつけるのはサーバ負荷対効果としてあまり宜しくない気がするので、適当に間引きたいと思います。</p>
<p>次回はXively連携でグラフ化したい。KeenIOの方がオシャレだけど、<a href="http://grid.rinka-blossom.com/">太陽光発電モニタリング</a>分で無料枠を使い切ってしまったので、Xivelyに頑張ってもらいます。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1598]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6037292673]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490505]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>229</wp:comment_id>
			<wp:comment_author><![CDATA[Registrarse]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[56514244@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/es/join?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-20 03:54:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-19 18:54:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>転職と家探し時期が被ったときに注意すべきこと。住宅ローン審査で効いてくるポイント３つ。</title>
		<link>https://tech.blog.uribou.me/how-to-select-my-home-01/</link>
		<pubDate>Wed, 28 Sep 2016 14:52:45 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/how-to-select-my-home-01/</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>私：「（某大手の）Ｔ社を今月退職するんですよ〜」</strong>
ふとした縁で、営業感皆無の、不動産知識と経験豊富な某不動産会社支店長さんと知り合うことになり、軽いノリで始まったお家選び。
休日に家族総出で、その支店長さんに案内されて新築物件を見に行こうとした矢先に、世間話のつもりで転職することを口に出してみた。
<strong>支店長：「え”っ…」</strong>
おや？ いつもの支店長さんのホンワカ空気が変わった。後で聞くと、隣にいた妻も感じたという。
<h1>住宅ローン審査で効いてくるポイント３つ</h1>
具体的な購入スケジュールも決めていない、<strong>いいのがあったら考えてみるか</strong>程度の意識だったこともあり、全く勉強してこなかった住宅ローンに関すること。
家を買うくらいの金額を貸す銀行など金融機関の立場になって考えてみれば当然のことで、住宅ローンを組む際に効いてくるポイントとしては以下の３つ。
<ol>
<li>勤続期間</li>
<li>収入の安定度合い</li>
<li>勤務先企業の知名度　というより規模か</li>
</ol>
上の順序で並べたのは意味があります。関係者数人に聞いて回った感触だと、優先度はこんなもんでした。そして、転職の話題を振ったときの支店長さんが醸す空気は、これで理解しました。
<h2>勤続期間</h2>
勤続期間が短いと、住宅ローン審査はまず通らない。例えば１ヶ月とか。
最低でも３ヶ月分の給与明細が必要で、半年分の収入が記載された源泉徴収票があると尚良し。
２〜３年勤務した後の源泉徴収票があれば、まず落ちることはない。次の<strong>収入の安定度合い</strong>にも依りますが。
<h2>収入の安定度合い</h2>
勤続期間が長く、その間安定して収入を得ていれば、審査に通る可能性は更に高くなる。
逆に、例えば自営業で毎月の収入が安定しないようだと、審査に通るのは厳しいんだそうで。
<h2>勤務先の企業規模</h2>
審査に通る通らないではなく、通った後の優遇幅に効いてくるのが、勤務先の企業の規模。
この会社ならまず潰れることはないだろう。そこに勤める人であれば、安定してローン返済可能だろう。と銀行が判断できれば、最大の優遇で金利を値引きしてくれるそうです。
例えば某銀行のこの表示。
<img src="https://farm8.staticflickr.com/7560/29000598114_a7d1036b83_o_d.png" alt="" />
額が小さすぎて例が悪いけど…　この差額-0.05%が、勤め先企業のネームバリュー分てことですね。複利計算すると、まあまあ効いてきます。
<h1>自分が置かれた状況を理解する</h1>
そういう訳なので、<strong>来月転職するということは、この先少なくとも３ヶ月、確実なのは１年以上、次の勤務先で働いた後、住宅ローンを組む必要がある</strong>と。
更に、納得の上で転職する訳ですが、<strong>企業規模はコンパクトになる（言葉を選びました）ので、金利の優遇が得にくい</strong>と。
逆に言えば、<strong>今月いっぱいは某大手のＴ社の威を借りることで、銀行から最大優遇幅の金利でお金を借りることができる</strong>と。
<em>※注意：</em><br />
<em>あまり大きな声では言えませんが、転職直前で現職の企業名で住宅ローンを組むこと自体は問題ありません。あくまで今所属している企業名と、その企業での収入の実績（源泉徴収票）が審査対象になるので。</em>
そんな訳で、最も有利な条件で住宅ローンを組むには、<strong>完成品の住宅を決めた上で、全ての手続きを済ませ、今月中に引き渡す必要がある</strong>ということが、９月５日に判明したのです。
家の購入手続き、住宅ローン審査＆申請、登記手続き、引き渡しに必要な時間を逆算すると、気に入る家を見つけて購入を決断するまでに残された猶予は、なんと、<strong>たったの４日</strong>。
<h1>妻と二人で出した結論</h1>
夜ちゃんと眠れる程度にではありますが、結構悩みました。
で、結論から言うと、某大手Ｔ社の威を借りるのは、諦めました。今まさに辞めようという会社のネームバリューを借りて大金借りるのは、ちょっと…ね。
何より、たった４日で一生に一度あるかないかの買い物を決断できるほどの度胸もないので。
そして諦めたその日の夜に届いたのが、この本。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4865270590%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51BUet2GPXL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4865270590%2Fref%3Dnosim" target="_blank" rel="noopener">あたらしい 家づくりの教科書</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">前 真之/岩前 篤/松尾 和也/今泉 太爾/森 みわ/竹内 昌義/伊礼 智/水上 修一/三浦 祐成(共著) 新建新聞社 2016-08-31    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4865270590%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2582%25A0%2582%25BD%2582%25E7%2582%25B5%2582%25A2%2520%2589%25C6%2582%25C3%2582%25AD%2582%25E8%2582%25CC%258B%25B3%2589%25C8%258F%2591%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                           </div></div><div class="booklink-footer"></div></div></div>
これを読まずに家購入を決断しなくて、本当良かった…　と、妻と二人で胸を撫で下ろしました。特に同意したのが、以下のお言葉。
<blockquote>
  生涯で一番の買い物がフィーリング？！<br />
  失敗したら３０年買い替えができないのに…<br />
  住宅はほとんどの方にとって生涯で一番高い買い物です。ということは生涯で一番下調べをすべきところですが、家電製品を買うときよりも下調べが少ないなんてことが往々にしてあります。
</blockquote>
本当、そうでした…。
表紙にも書いてありますが、<strong>『大事なことは目に見えない。家づくりは「見えないこと」が大事です。』</strong>なんですって。
主に断熱・気密性能のことなんですが、この本を読むまで、国際基準の性能なんて、全く意識していませんでした。その辺をちゃんと意識した工務店の方に話を聞くと、出るわ出るわ。今まで常識と思っていたことの非常識が。
まだまだ素人に毛が生えた程度の知識量ではあるけれど、備忘録として、この辺りの情報を少しずつ纏めていこう…。
それでは、また。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1602</wp:post_id>
		<wp:post_date><![CDATA[2016-09-28 23:52:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-28 14:52:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-select-my-home-01]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e4%bd%8f%e5%ae%85%e3%83%ad%e3%83%bc%e3%83%b3"><![CDATA[住宅ローン]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e9%a1%9e"><![CDATA[未分類]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm8.staticflickr.com/7560/29000598114_a7d1036b83_o_d.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><strong>私：「（某大手の）Ｔ社を今月退職するんですよ〜」</strong></p>

<p>ふとした縁で、営業感皆無の、不動産知識と経験豊富な某不動産会社支店長さんと知り合うことになり、軽いノリで始まったお家選び。</p>

<p>休日に家族総出で、その支店長さんに案内されて新築物件を見に行こうとした矢先に、世間話のつもりで転職することを口に出してみた。</p>

<p><strong>支店長：「え”っ…」</strong></p>

<p>おや？ いつもの支店長さんのホンワカ空気が変わった。後で聞くと、隣にいた妻も感じたという。</p>

<h1 id="">住宅ローン審査で効いてくるポイント３つ</h1>

<p>具体的な購入スケジュールも決めていない、<strong>いいのがあったら考えてみるか</strong>程度の意識だったこともあり、全く勉強してこなかった住宅ローンに関すること。</p>

<p>家を買うくらいの金額を貸す銀行など金融機関の立場になって考えてみれば当然のことで、住宅ローンを組む際に効いてくるポイントとしては以下の３つ。</p>

<ol>
<li>勤続期間  </li>
<li>収入の安定度合い  </li>
<li>勤務先企業の知名度　というより規模か</li>
</ol>

<p>上の順序で並べたのは意味があります。関係者数人に聞いて回った感触だと、優先度はこんなもんでした。そして、転職の話題を振ったときの支店長さんが醸す空気は、これで理解しました。</p>

<h2 id="">勤続期間</h2>

<p>勤続期間が短いと、住宅ローン審査はまず通らない。例えば１ヶ月とか。</p>

<p>最低でも３ヶ月分の給与明細が必要で、半年分の収入が記載された源泉徴収票があると尚良し。</p>

<p>２〜３年勤務した後の源泉徴収票があれば、まず落ちることはない。次の<strong>収入の安定度合い</strong>にも依りますが。</p>

<h2 id="">収入の安定度合い</h2>

<p>勤続期間が長く、その間安定して収入を得ていれば、審査に通る可能性は更に高くなる。</p>

<p>逆に、例えば自営業で毎月の収入が安定しないようだと、審査に通るのは厳しいんだそうで。</p>

<h2 id="">勤務先の企業規模</h2>

<p>審査に通る通らないではなく、通った後の優遇幅に効いてくるのが、勤務先の企業の規模。</p>

<p>この会社ならまず潰れることはないだろう。そこに勤める人であれば、安定してローン返済可能だろう。と銀行が判断できれば、最大の優遇で金利を値引きしてくれるそうです。</p>

<p>例えば某銀行のこの表示。</p>

<p><img src="https://farm8.staticflickr.com/7560/29000598114_a7d1036b83_o_d.png" alt="" /></p>

<p>額が小さすぎて例が悪いけど…　この差額-0.05%が、勤め先企業のネームバリュー分てことですね。複利計算すると、まあまあ効いてきます。</p>

<h1 id="">自分が置かれた状況を理解する</h1>

<p>そういう訳なので、<strong>来月転職するということは、この先少なくとも３ヶ月、確実なのは１年以上、次の勤務先で働いた後、住宅ローンを組む必要がある</strong>と。</p>

<p>更に、納得の上で転職する訳ですが、<strong>企業規模はコンパクトになる（言葉を選びました）ので、金利の優遇が得にくい</strong>と。</p>

<p>逆に言えば、<strong>今月いっぱいは某大手のＴ社の威を借りることで、銀行から最大優遇幅の金利でお金を借りることができる</strong>と。</p>

<p><em>※注意：</em> <br />
<em>あまり大きな声では言えませんが、転職直前で現職の企業名で住宅ローンを組むこと自体は問題ありません。あくまで今所属している企業名と、その企業での収入の実績（源泉徴収票）が審査対象になるので。</em></p>

<p>そんな訳で、最も有利な条件で住宅ローンを組むには、<strong>完成品の住宅を決めた上で、全ての手続きを済ませ、今月中に引き渡す必要がある</strong>ということが、９月５日に判明したのです。</p>

<p>家の購入手続き、住宅ローン審査＆申請、登記手続き、引き渡しに必要な時間を逆算すると、気に入る家を見つけて購入を決断するまでに残された猶予は、なんと、<strong>たったの４日</strong>。</p>

<h1 id="">妻と二人で出した結論</h1>

<p>夜ちゃんと眠れる程度にではありますが、結構悩みました。</p>

<p>で、結論から言うと、某大手Ｔ社の威を借りるのは、諦めました。今まさに辞めようという会社のネームバリューを借りて大金借りるのは、ちょっと…ね。</p>

<p>何より、たった４日で一生に一度あるかないかの買い物を決断できるほどの度胸もないので。</p>

<p>そして諦めたその日の夜に届いたのが、この本。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4865270590%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51BUet2GPXL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4865270590%2Fref%3Dnosim" target="_blank" >あたらしい 家づくりの教科書</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">前 真之/岩前 篤/松尾 和也/今泉 太爾/森 みわ/竹内 昌義/伊礼 智/水上 修一/三浦 祐成(共著) 新建新聞社 2016-08-31    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4865270590%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2582%25A0%2582%25BD%2582%25E7%2582%25B5%2582%25A2%2520%2589%25C6%2582%25C3%2582%25AD%2582%25E8%2582%25CC%258B%25B3%2589%25C8%258F%2591%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>                                              </div></div><div class="booklink-footer"></div></div></div>

<p>これを読まずに家購入を決断しなくて、本当良かった…　と、妻と二人で胸を撫で下ろしました。特に同意したのが、以下のお言葉。</p>

<blockquote>
  <p>生涯で一番の買い物がフィーリング？！ <br />
  失敗したら３０年買い替えができないのに…  </p>
  
  <p>住宅はほとんどの方にとって生涯で一番高い買い物です。ということは生涯で一番下調べをすべきところですが、家電製品を買うときよりも下調べ
が少ないなんてことが往々にしてあります。</p>
</blockquote>

<p>本当、そうでした…。</p>

<p>表紙にも書いてありますが、<strong>『大事なことは目に見えない。家づくりは「見えないこと」が大事です。』</strong>なんですって。</p>

<p>主に断熱・気密性能のことなんですが、この本を読むまで、国際基準の性能なんて、全く意識していませんでした。その辺をちゃんと意識した工務店の方に話を聞くと、出るわ出るわ。今まで常識と思っていたことの非常識が。</p>

<p>まだまだ素人に毛が生えた程度の知識量ではあるけれど、備忘録として、この辺りの情報を少しずつ纏めていこう…。</p>

<p>それでは、また。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1603]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5973242630]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490505]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>198</wp:comment_id>
			<wp:comment_author><![CDATA[bonificación de referencia de Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[24875765@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/es/join?ref=DB40ITMB</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.108]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-30 18:38:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-30 09:38:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>家計簿担当必携アプリ、マネーフォワードのススメ。</title>
		<link>https://tech.blog.uribou.me/recommend-money-forward/</link>
		<pubDate>Wed, 14 Sep 2016 05:26:11 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/recommend-money-forward/</guid>
		<description></description>
		<content:encoded><![CDATA[連携できる金融機関の数がものすごいのと、操作感がとても軽快で、その上、家計資産レポートや家計診断、支出ランキングを月ごとに報告してくれる、過保護なくらい親切な家計簿アプリです。
<div class="pochireba" style="text-align:left;font-size:small;padding:20px 0;overflow: hidden"><a href="https://itunes.apple.com/jp/app/jia-ji-bumanefowado-zi-dong/id594145971?mt=8&amp;uo=4&amp;at=1000locx" target="_blank" rel="noopener"><img src="http://is3.mzstatic.com/image/thumb/Purple62/v4/66/98/83/669883d1-e384-3e8e-9bff-505987160c46/source/60x60bb.jpg" alt="家計簿マネーフォワード-自動連携で簡単 人気の無料家計簿" width="60" height="60" style="float:left;margin:0 15px 0 0;width:60px;height:60px" class="pochi_img"></a><div class="pochi_info" style="text-align:left;overflow: hidden"><div class="pochi_name"><a href="https://itunes.apple.com/jp/app/jia-ji-bumanefowado-zi-dong/id594145971?mt=8&amp;uo=4&amp;at=1000locx" target="_blank" rel="noopener">家計簿マネーフォワード-自動連携で簡単 人気の無料家計簿</a></div><div class="pochi_price">無料</div><div class="pochi_time" style="font-size:x-small">(2016.09.14時点)</div><div class="pochi_seller"><a href="https://itunes.apple.com/jp/developer/money-forward-inc./id594145974?uo=4&amp;at=1000locx" target="_blank" rel="noopener">Money Forward, Inc.</a></div><div class="pochi_post" style="font-size:x-small">posted with <a href="http://pochireba.com" rel="nofollow noopener" target="_blank">ポチレバ</a></div></div><div class="pochireba-footer" style="clear: left"></div></div>
無料ではあるけれど、アプリ内課金があるのでご注意。月額５００円で全機能が使えます。
そんなMoney Forwardの便利機能の一つ、レシート読み取り機能の精度に感動したので、ちょっとだけご紹介。
このレシートを読み取ってみます。
<img src="https://farm9.staticflickr.com/8085/29589863886_9e149ae8a4_z_d.jpg" alt="" />
結果はこうなりました。日付、支出額、お店の名前やカテゴリに至るまで、見事正解です。
<img src="https://farm8.staticflickr.com/7563/29589864566_6ae10bebb3_z_d.jpg" alt="" />
お次はちょと特殊なフォントのまきばレストランのレシート。
<img src="https://farm9.staticflickr.com/8301/29589865136_7805d1c06d_z_d.jpg" alt="" />
これもしっかりと読み取ってます。すごい…。
<img src="https://farm9.staticflickr.com/8090/29589865886_4773bcac88_z_d.jpg" alt="" />
次はちょっと意地悪して、公共料金支払いレシート。値段が書かれていません。
<img src="https://farm9.staticflickr.com/8242/29589866566_b711404795_z_d.jpg" alt="" />
「１１」って、どこから読み取ったんだ？ でもちゃんと店名や日付はしっかりと読み取れている。すごい。
<img src="https://farm9.staticflickr.com/8208/29589867276_2e8bb7bf63_z_d.jpg" alt="" />
だいぶ前に、Money Forwardとは別のアプリでレシート読み取り機能を使ったことがあるんですが、その精度はまぁ酷かった…。
入力し直す手間の方が大きかったので、そのアプリはいつの間にか使わなくなりました。
しかし、このMoney Forwardのレシート読み取り機能は、読み間違えることがほとんどありません。溜まっていたレシート２０枚程度を数分で入力し終わりました。
金額入力するのがめんどくさくて家計簿が続かない人にオススメです。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1604</wp:post_id>
		<wp:post_date><![CDATA[2016-09-14 14:26:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-14 05:26:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[recommend-money-forward]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="post_tag" nicename="%e8%b3%87%e7%94%a3%e9%81%8b%e7%94%a8"><![CDATA[資産運用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:112:"http://is3.mzstatic.com/image/thumb/Purple62/v4/66/98/83/669883d1-e384-3e8e-9bff-505987160c46/source/60x60bb.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>連携できる金融機関の数がものすごいのと、操作感がとても軽快で、その上、家計資産レポートや家計診断、支出ランキングを月ごとに報告してくれる、過保護なくらい親切な家計簿アプリです。</p>

<div class="pochireba" style="text-align:left;font-size:small;padding:20px 0;/zoom: 1;overflow: hidden;"><a href="https://itunes.apple.com/jp/app/jia-ji-bumanefowado-zi-dong/id594145971?mt=8&uo=4&at=1000locx" target="_blank" ><img src="http://is3.mzstatic.com/image/thumb/Purple62/v4/66/98/83/669883d1-e384-3e8e-9bff-505987160c46/source/60x60bb.jpg" alt="家計簿マネーフォワード-自動連携で簡単 人気の無料家計簿" width="60" height="60" style="float:left;margin:0 15px 0 0;width:60px;height:60px;" class="pochi_img" ></a><div class="pochi_info" style="text-align:left;/zoom: 1;overflow: hidden;"><div class="pochi_name"><a href="https://itunes.apple.com/jp/app/jia-ji-bumanefowado-zi-dong/id594145971?mt=8&uo=4&at=1000locx" target="_blank" >家計簿マネーフォワード-自動連携で簡単 人気の無料家計簿</a></div><div class="pochi_price" style="display:inline;">無料</div><div class="pochi_time" style="font-size:x-small;display:inline;">(2016.09.14時点)</div><div class="pochi_seller"><a href="https://itunes.apple.com/jp/developer/money-forward-inc./id594145974?uo=4&at=1000locx" target="_blank" >Money Forward, Inc.</a></div><div class="pochi_post" style="font-size:x-small;">posted with <a href="http://pochireba.com" rel="nofollow" target="_blank">ポチレバ</a></div></div><div class="pochireba-footer" style="clear: left"></div></div>

<p>無料ではあるけれど、アプリ内課金があるのでご注意。月額５００円で全機能が使えます。</p>

<p>そんなMoney Forwardの便利機能の一つ、レシート読み取り機能の精度に感動したので、ちょっとだけご紹介。</p>

<p>このレシートを読み取ってみます。</p>

<p><img src="https://farm9.staticflickr.com/8085/29589863886_9e149ae8a4_z_d.jpg" alt="" /></p>

<p>結果はこうなりました。日付、支出額、お店の名前やカテゴリに至るまで、見事正解です。</p>

<p><img src="https://farm8.staticflickr.com/7563/29589864566_6ae10bebb3_z_d.jpg" alt="" /></p>

<p>お次はちょと特殊なフォントのまきばレストランのレシート。</p>

<p><img src="https://farm9.staticflickr.com/8301/29589865136_7805d1c06d_z_d.jpg" alt="" /></p>

<p>これもしっかりと読み取ってます。すごい…。</p>

<p><img src="https://farm9.staticflickr.com/8090/29589865886_4773bcac88_z_d.jpg" alt="" /></p>

<p>次はちょっと意地悪して、公共料金支払いレシート。値段が書かれていません。</p>

<p><img src="https://farm9.staticflickr.com/8242/29589866566_b711404795_z_d.jpg" alt="" /></p>

<p>「１１」って、どこから読み取ったんだ？ でもちゃんと店名や日付はしっかりと読み取れている。すごい。</p>

<p><img src="https://farm9.staticflickr.com/8208/29589867276_2e8bb7bf63_z_d.jpg" alt="" /></p>

<p>だいぶ前に、Money Forwardとは別のアプリでレシート読み取り機能を使ったことがあるんですが、その精度はまぁ酷かった…。</p>

<p>入力し直す手間の方が大きかったので、そのアプリはいつの間にか使わなくなりました。</p>

<p>しかし、このMoney Forwardのレシート読み取り機能は、読み間違えることがほとんどありません。溜まっていたレシート２０枚程度を数分で入力し終わりました。</p>

<p>金額入力するのがめんどくさくて家計簿が続かない人にオススメです。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5965460214]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490504]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>186</wp:comment_id>
			<wp:comment_author><![CDATA[binance Code]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[38819116@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/de-CH/join?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.191]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-24 09:02:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-24 00:02:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>10年前の転職体験記。就職先を決めずに辞めたあの頃は、若かった…。</title>
		<link>https://tech.blog.uribou.me/career-change-10-years-ago/</link>
		<pubDate>Thu, 29 Sep 2016 01:21:02 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/career-change-10-years-ago/</guid>
		<description></description>
		<content:encoded><![CDATA[10年勤めた会社を今月辞めます。残すところ1日となりました。
10年前に転職した時、もう他へ行くことはないだろうと思っていたのに、3.11起きるわ事業傾くわ不正会計問題起こして事業再編しまくるわ、人生何が起きるか分かりませんね…。
今回のは次回の転職体験記に回して、この記事は10年前の体験記になります。これ思い返すと、ホント住宅ローン組んでる場合じゃないわ…。
転職を考えている人に、少しでも役立つ情報となれば幸いです。
<h1>転職の動機</h1>
10年前、転職を考えた動機は、当時の会社で直属のプロジェクトリーダーが心を壊して休職するまでを目の当たりにしたことと、サブリーダーを務めていた自分に次のリーダー職が回ってきそうだったこと。
当時参画していたプロジェクトに限らず、心の健康を害して休職となったメンバーが全体の1〜2割程度いて、更に予備軍もいるという状態でした。
平日は夜遅くまで、土日も出る人多かったしなぁ…　自分含めて。
<h1>まずは転職サイトのエージェントを味方につける</h1>
<strong>転職を決意したら、その動機が後ろ向きであれ前向きであれ、まずは転職サイトにアカウント登録し、エージェントを味方につけることからスタートするのが良いです。</strong>
孤独な戦いになることも多いと思うので、まず最初にその道のプロを味方にすると、とても心強い。
どこから漏れるか分からないので、職場の同僚には相談しない。と言いながら、外注さんには思いっきり相談してたけど。
<h1>エージェントに愚痴る</h1>
エージェントと面談すると、まず最初に転職の動機を聞かれます。当たり前ですが。
初対面な事もあって身構えてしまい、猫かぶった前向きな動機を話しがちですが…　相手はプロなので、そんな誤魔化しは通用しませんでした。愚痴大会になります。
でもそれは悪いことではなくて、誰でもそこからスタートするんだそうです。当時お世話になったエージェントの方が教えてくれました。愚痴から本音を汲み取って、本来自分が望む働き方や、やりたいことを実現するための手助けをしてくれます。
<strong>後ろ向きな理由だからと尻込みせず、まずは相談という名の愚痴聞き大会を開催しましょう。</strong>
<h1>余剰資金を確保する</h1>
投資の話ではありません。
自分の場合、転職を決意したは良かったんですが、平日は朝早くから夜遅くまで客先作業、土曜もほぼ出勤、日曜も時々…　とデスマーチ状態だったため、並行して転職活動を進めることは不可能でした。
でもそのまま続けていては、倒れるのは時間の問題だったため…
これもエージェントに相談した上でですが、<strong>転職先を決める前に退職してしまいました</strong>。まだ書類選考用の書類を作成中の段階だったにも関わらず…。
自己都合で退職すると、失業保険を受け取れるまで3ヶ月の空白期間ができてしまいまうので、最低限その3ヶ月を乗り切る資金を貯めておくのが大切。転職を決意してからでは遅いので、常に持っといた方がいいですね。
<h1>（可能であれば）親のスネをかじる</h1>
自分の場合は、幸運にも同じ関東圏内に親が健在だったため、会社を辞めてすぐ親の家に居候させてもらいました。家賃無料なのは本当に助かった…。多謝。
<h1>辞めてから転職するか、転職（内定）してから辞めるか…</h1>
自分の場合、一般的にはリスクが高いと言われる、「次の仕事を決めずに退職する」という方法を取らざるを得ませんでした。確かにリスクは高いのですが、これも一長一短で。
<h2>退職してから活動を始める場合</h2>
<strong>全ての時間を転職活動に費やすことができる</strong>ので、短期集中で転職先が決まります。自分の場合がそうでした。経歴書の作成や、企業研究、マッチング分析、志望動機の作成、面接時間の確保など、思うままにスケジュールを組めるのだから当然かもしれませんが…。
ただ、転職活動中はプーなので、安心して活動するには生活資金と住居の確保が大切ですね…。
<h2>現職を継続しながら転職活動を進める場合</h2>
どうしても現職を優先せざるを得ず、思うように進まないことが多いそうです。転職希望時期が後ろ倒しになることはよくあることで。
ただ、一定の収入を得ながら活動できるので、そういう意味での安心感はありますよね。親のスネをかじる必要もないので、誰にも迷惑をかけないという点もメリットか。
<h1>まとめ</h1>
転職活動そのもののノウハウは、転職サイトに登録すればエージェントが手取り足取り教えてくれるので、エージェントに教わりましょう。
転職する気はなくても、普段から余剰資金は貯めておきましょう。
そして、かじれるスネはかじっておきましょう。家賃タダの住居は本当にとっても助かります。
そして何より、自分の心身を大切にしましょう。心を壊した当時のプロジェクトリーダーとは今も交流がありますが、今でも後遺症を引きずっています…。一度壊した心が完治するには、とても長い時間がかかるようです。壊す前に逃げるのは、敵前逃亡ではなく、戦略的撤退だと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1605</wp:post_id>
		<wp:post_date><![CDATA[2016-09-29 10:21:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-29 01:21:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[career-change-10-years-ago]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="ri-ji"><![CDATA[日記]]></category>
		<category domain="post_tag" nicename="zhuan-zhi"><![CDATA[転職]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>10年勤めた会社を今月辞めます。残すところ1日となりました。</p>

<p>10年前に転職した時、もう他へ行くことはないだろうと思っていたのに、3.11起きるわ事業傾くわ不正会計問題起こして事業再編しまくるわ、人生何が起きるか分かりませんね…。</p>

<p>今回のは次回の転職体験記に回して、この記事は10年前の体験記になります。これ思い返すと、ホント住宅ローン組んでる場合じゃないわ…。</p>

<p>転職を考えている人に、少しでも役立つ情報となれば幸いです。</p>

<h1 id="">転職の動機</h1>

<p>10年前、転職を考えた動機は、当時の会社で直属のプロジェクトリーダーが心を壊して休職するまでを目の当たりにしたことと、サブリーダーを務めていた自分に次のリーダー職が回ってきそうだったこと。</p>

<p>当時参画していたプロジェクトに限らず、心の健康を害して休職となったメンバーが全体の1〜2割程度いて、更に予備軍もいるという状態でした。</p>

<p>平日は夜遅くまで、土日も出る人多かったしなぁ…　自分含めて。</p>

<h1 id="">まずは転職サイトのエージェントを味方につける</h1>

<p><strong>転職を決意したら、その動機が後ろ向きであれ前向きであれ、まずは転職サイトにアカウント登録し、エージェントを味方につけることからスタートするのが良いです。</strong></p>

<p>孤独な戦いになることも多いと思うので、まず最初にその道のプロを味方にすると、とても心強い。</p>

<p>どこから漏れるか分からないので、職場の同僚には相談しない。と言いながら、外注さんには思いっきり相談してたけど。</p>

<h1 id="">エージェントに愚痴る</h1>

<p>エージェントと面談すると、まず最初に転職の動機を聞かれます。当たり前ですが。</p>

<p>初対面な事もあって身構えてしまい、猫かぶった前向きな動機を話しがちですが…　相手はプロなので、そんな誤魔化しは通用しませんでした。愚痴大会になります。</p>

<p>でもそれは悪いことではなくて、誰でもそこからスタートするんだそうです。当時お世話になったエージェントの方が教えてくれました。愚痴から本音を汲み取って、本来自分が望む働き方や、やりたいことを実現するための手助けをしてくれます。</p>

<p><strong>後ろ向きな理由だからと尻込みせず、まずは相談という名の愚痴聞き大会を開催しましょう。</strong></p>

<h1 id="">余剰資金を確保する</h1>

<p>投資の話ではありません。</p>

<p>自分の場合、転職を決意したは良かったんですが、平日は朝早くから夜遅くまで客先作業、土曜もほぼ出勤、日曜も時々…　とデスマーチ状態だったため、並行して転職活動を進めることは不可能でした。</p>

<p>でもそのまま続けていては、倒れるのは時間の問題だったため…</p>

<p>これもエージェントに相談した上でですが、<strong>転職先を決める前に退職してしまいました</strong>。まだ書類選考用の書類を作成中の段階だったにも関わらず…。</p>

<p>自己都合で退職すると、失業保険を受け取れるまで3ヶ月の空白期間ができてしまいまうので、最低限その3ヶ月を乗り切る資金を貯めておくのが大切。転職を決意してからでは遅いので、常に持っといた方がいいですね。</p>

<h1 id="">（可能であれば）親のスネをかじる</h1>

<p>自分の場合は、幸運にも同じ関東圏内に親が健在だったため、会社を辞めてすぐ親の家に居候させてもらいました。家賃無料なのは本当に助かった…。多謝。</p>

<h1 id="">辞めてから転職するか、転職（内定）してから辞めるか…</h1>

<p>自分の場合、一般的にはリスクが高いと言われる、「次の仕事を決めずに退職する」という方法を取らざるを得ませんでした。確かにリスクは高いのですが、これも一長一短で。</p>

<h2 id="">退職してから活動を始める場合</h2>

<p><strong>全ての時間を転職活動に費やすことができる</strong>ので、短期集中で転職先が決まります。自分の場合がそうでした。経歴書の作成や、企業研究、マッチング分析、志望動機の作成、面接時間の確保など、思うままにスケジュールを組めるのだから当然かもしれませんが…。</p>

<p>ただ、転職活動中はプーなので、安心して活動するには生活資金と住居の確保が大切ですね…。</p>

<h2 id="">現職を継続しながら転職活動を進める場合</h2>

<p>どうしても現職を優先せざるを得ず、思うように進まないことが多いそうです。転職希望時期が後ろ倒しになることはよくあることで。</p>

<p>ただ、一定の収入を得ながら活動できるので、そういう意味での安心感はありますよね。親のスネをかじる必要もないので、誰にも迷惑をかけないという点もメリットか。</p>

<h1 id="">まとめ</h1>

<p>転職活動そのもののノウハウは、転職サイトに登録すればエージェントが手取り足取り教えてくれるので、エージェントに教わりましょう。</p>

<p>転職する気はなくても、普段から余剰資金は貯めておきましょう。</p>

<p>そして、かじれるスネはかじっておきましょう。家賃タダの住居は本当にとっても助かります。</p>

<p>そして何より、自分の心身を大切にしましょう。心を壊した当時のプロジェクトリーダーとは今も交流がありますが、今でも後遺症を引きずっています…。一度壊した心が完治するには、とても長い時間がかかるようです。壊す前に逃げるのは、敵前逃亡ではなく、戦略的撤退だと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6014828175]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722691944]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>265</wp:comment_id>
			<wp:comment_author><![CDATA[gate io]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[17850851@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.gate.io/trade/BTC_USDT?ref=XwNAUwgM&amp;ref_type=106</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.190]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-31 01:26:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-30 16:26:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The point of view of your article has taught me a lot, and I already know how to improve the paper on gate.oi, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>DIYガイガーカウンタ製作日記その３。</title>
		<link>https://tech.blog.uribou.me/diy-geiger-part3/</link>
		<pubDate>Tue, 04 Oct 2016 05:12:52 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/diy-geiger-part3/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/diy-geiger-part2">DIYガイガーカウンタ製作日記その2</a>の続き。
事あるごとに線量計で家の周りを測るの、メンドくさいんですよね。
<strong>勝手に計測してくれて、リアルタイムに自動的にグラフ化してくれて、線量が上限の閾値を超えたら警告してくれる線量計</strong>があると、楽に安心して生活できるなぁ…。
<h1>リアルタイムに可視化した空間線量データ</h1>
そんな動機で作り始めて、リアルタイムに可視化するとこまで完成。
Safecastにデータ提供するだけだと、他の大量の観測データに埋もれてしまうのと、特定地点の線量の増減がよく分からないので、お馴染み<a href="https://personal.xively.com/feeds/1031061917">Xively</a>を使います。<strong>データ量によらず無料</strong>なのが良い。
<img src="https://farm6.staticflickr.com/5303/29483314003_99bc81b356_z_d.jpg" alt="" />
KeenIOのライブラリを使うと簡単に<a href="http://grid.rinka-blossom.com/">綺麗なグラフ</a>が描けるんですが、月当たりの送信可能データ量上限が決まっているので、今回は泣く泣く諦めることに。
<h1>コードの解説</h1>
Xivelyにデータ送信する部分のコードは以下です。実際は自前のevent trigger/handlerを間に挟んでいますが、送信部のみ抜粋しました。
<pre><code class="python">class XivelyEventHandler(IEventHandler):
    """ The instance should be registered to event trigger for data update.
        This uploads any data to xively cloud service.
    Args:
        api_key: API key ID provided by xively.
        feed_key: Feed key ID provided by xively.
        q_max: internal queue size to be used from another thread.
    Returns:
        Instance of this class.
    """
    def __init__(self, api_key, feed_key, q_max=5):
        IEventHandler.__init__(self, q_max=q_max)
        self._api_key = api_key
        self._feed_key = feed_key
</code></pre>
以前はXivelyAPIClientインスタンスを<strong>init</strong>()で生成して保持していたんですが、あまり長い間接続しているとセッション切られることがあるようで、データをアップするたびに接続/切断するようにしました。
<pre><code class="python">    def _run(self, data):
        """ Procedure to run when data received from trigger thread.
        Args:
            data: Pass to the registered event handlers.
        """
        def update(at):
            api = xively.XivelyAPIClient(self._api_key)
            feed = api.feeds.get(self._feed_key)
            datastreams = []
            for key, val in data["data"].items():
                datastreams.append(
                    xively.Datastream(
                        id="".join(key.split()),
                        current_value=val["value"],
                        at=at
                    )
                )
            feed.datastreams = datastreams
            feed.update()
            api.client.close()
        for _ in range(3):
            try:
                update(data["at"])
                logger.info("{} sent data to xively at {}".format(
                    type(self).__name__, data["at"]))
                break
            except Exception as e:
                logger.error("{} failed to send data to xively at {} by {}".format(
                    type(self).__name__, data["at"], type(e).__name__))
                time.sleep(1)
</code></pre>
XivelyAPIClientインスタンスを<strong>init</strong>()で生成していた時は度々ConnectionErrorが発生した名残で、例外発生時は３回リトライするようにしています。多分、必要なくなったはずなんですけどね…。
<blockquote>
  線量が上限の閾値を超えたら警告してくれる
</blockquote>
あとはこれを実装すれば、一通り完成かな。
あ、外装をどうにかするのを忘れてた。いい感じの防水ケースを入手せねば。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1606</wp:post_id>
		<wp:post_date><![CDATA[2016-10-04 14:12:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-10-04 05:12:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diy-geiger-part3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e6%94%be%e5%b0%84%e8%83%bd"><![CDATA[放射能]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5303/29483314003_99bc81b356_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/diy-geiger-part2">DIYガイガーカウンタ製作日記その2</a>の続き。</p>

<p>事あるごとに線量計で家の周りを測るの、メンドくさいんですよね。</p>

<p><strong>勝手に計測してくれて、リアルタイムに自動的にグラフ化してくれて、線量が上限の閾値を超えたら警告してくれる線量計</strong>があると、楽に安心して生活できるなぁ…。</p>

<h1 id="">リアルタイムに可視化した空間線量データ</h1>

<p>そんな動機で作り始めて、リアルタイムに可視化するとこまで完成。</p>

<p>Safecastにデータ提供するだけだと、他の大量の観測データに埋もれてしまうのと、特定地点の線量の増減がよく分からないので、お馴染み<a href="https://personal.xively.com/feeds/1031061917">Xively</a>を使います。<strong>データ量によらず無料</strong>なのが良い。</p>

<p><img src="https://farm6.staticflickr.com/5303/29483314003_99bc81b356_z_d.jpg" alt="" /></p>

<p>KeenIOのライブラリを使うと簡単に<a href="http://grid.rinka-blossom.com/">綺麗なグラフ</a>が描けるんですが、月当たりの送信可能データ量上限が決まっているので、今回は泣く泣く諦めることに。</p>

<h1 id="">コードの解説</h1>

<p>Xivelyにデータ送信する部分のコードは以下です。実際は自前のevent trigger/handlerを間に挟んでいますが、送信部のみ抜粋しました。</p>

<pre><code class="language-python">class XivelyEventHandler(IEventHandler):  
    """ The instance should be registered to event trigger for data update.
        This uploads any data to xively cloud service.

    Args:
        api_key: API key ID provided by xively.
        feed_key: Feed key ID provided by xively.
        q_max: internal queue size to be used from another thread.
    Returns:
        Instance of this class.
    """
    def __init__(self, api_key, feed_key, q_max=5):
        IEventHandler.__init__(self, q_max=q_max)

        self._api_key = api_key
        self._feed_key = feed_key
</code></pre>

<p>以前はXivelyAPIClientインスタンスを<strong>init</strong>()で生成して保持していたんですが、あまり長い間接続しているとセッション切られることがあるようで、データをアップするたびに接続/切断するようにしました。</p>

<pre><code class="language-python">    def _run(self, data):
        """ Procedure to run when data received from trigger thread.

        Args:
            data: Pass to the registered event handlers.
        """
        def update(at):
            api = xively.XivelyAPIClient(self._api_key)
            feed = api.feeds.get(self._feed_key)

            datastreams = []
            for key, val in data["data"].items():
                datastreams.append(
                    xively.Datastream(
                        id="".join(key.split()),
                        current_value=val["value"],
                        at=at
                    )
                )

            feed.datastreams = datastreams
            feed.update()

            api.client.close()

        for _ in range(3):
            try:
                update(data["at"])

                logger.info("{} sent data to xively at {}".format(
                    type(self).__name__, data["at"]))

                break
            except Exception as e:
                logger.error("{} failed to send data to xively at {} by {}".format(
                    type(self).__name__, data["at"], type(e).__name__))

                time.sleep(1)
</code></pre>

<p>XivelyAPIClientインスタンスを<strong>init</strong>()で生成していた時は度々ConnectionErrorが発生した名残で、例外発生時は３回リトライするようにしています。多分、必要なくなったはずなんですけどね…。</p>

<blockquote>
  <p>線量が上限の閾値を超えたら警告してくれる</p>
</blockquote>

<p>あとはこれを実装すれば、一通り完成かな。</p>

<p>あ、外装をどうにかするのを忘れてた。いい感じの防水ケースを入手せねば。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5967387932]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562647]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>279</wp:comment_id>
			<wp:comment_author><![CDATA[Binance úcet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[33225496@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/cs/join?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.65]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-17 02:16:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-16 17:16:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>How to make apache for ARM processor.</title>
		<link>https://tech.blog.uribou.me/how-to-make-apache-for-arm-processor/</link>
		<pubDate>Sat, 22 Oct 2016 17:06:41 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/how-to-make-apache-for-arm-processor/</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to make apache with some configurations by myself, but I couldn't find how to make it for ARM processor... So I needed to search for the way by myself, and found it. Then I'll share that.
<h1>How to do that?</h1>
Very simple. Replace some lines with using <code>qemu-arm-static</code> on makefiles for apr and apache like the following sample.
If you have a trouble of making apache for ARM, try this approach.
<h2>makefile sample</h2>
<pre><code class="makefile">HOST_PREFIX ?= x86_64-linux-gnu
CROSS_PREFIX ?= arm-linux-gnueabihf
LD_ROOT_PATH ?= /usr/local/$(CROSS_PREFIX)-4.8/$(CROSS_PREFIX)
URL_APACHE  ?= http://ftp.kddilabs.jp/infosystems/apache/httpd/httpd-2.4.20.tar.gz
URL_APR     ?= http://ftp.yz.yamagata-u.ac.jp/pub/network/apache/apr/apr-1.5.2.tar.gz
URL_APRUTIL ?= http://ftp.yz.yamagata-u.ac.jp/pub/network/apache/apr/apr-util-1.5.4.tar.gz
DIR_INSTALL ?= /var/tmp/apache
DIR_APACHE   = $(basename $(basename $(notdir $(URL_APACHE))))
DIR_APR      = $(DIR_APACHE)/srclib/apr
DIR_APRUTIL  = $(DIR_APACHE)/srclib/apr-util
$(DIR_APACHE)/Makefile:$(notdir $(URL_APACHE)) $(TARGET_OPENSSL) $(TARGET_EXPAT) $(TARGET_PCRE) $(TARGET_ZLIB)
    @+$(MAKE) -s $(TARGET_APR_UTIL) $(TARGET_APR)
    cd $(DIR_APACHE); ?
        ./configure ... ?
            --with-dbm=sdbm --with-berkeley-db=no ?
            --with-gdbm=no --with-ndbm=no ?
            --with-suexec-userdir=/usr ?
            --with-ssl=$(DIR_INSTALL) ?
            --with-expat=$(DIR_INSTALL) ?
            --with-pcre=$(DIR_INSTALL) ?
            --with-z=$(DIR_INSTALL) ?
            --build=$(HOST_PREFIX) ?
            --host=$(CROSS_PREFIX) ?
            --target=$(CROSS_PREFIX)
ifeq ($(findstring arm,$(CROSS_PREFIX)),arm)
    cd $(DIR_APR); ?
        cp -f Makefile Makefile.org; ?
        sed -e 's;tools/gen_test_char &gt;;qemu-arm-static -L $(LD_ROOT_PATH)/libc tools/gen_test_char &gt;;g' ?
        Makefile.org &gt; Makefile
    cd $(DIR_APACHE); ?
        cp -f server/Makefile server/Makefile.org; ?
        sed -e 's;?./gen_test_char &gt; ;qemu-arm-static -L $(LD_ROOT_PATH)/libc ./gen_test_char &gt; ;g' server/Makefile.org &gt; server/Makefile; ?
        cp -f support/Makefile support/Makefile.org; ?
        sed -e 's;PROGRAM_DEPENDENCIES = ;PROGRAM_DEPENDENCIES = -pthread;g' support/Makefile.org &gt; support/Makefile
endif
</code></pre>
<h2>What's this approach?</h2>
Apache has some tools which should be run on host machine (x86) if cross-compiling, so the make rule of tools for host machine (x86) needs to be separated from lib/binary for target (ARM).
On the other hand, my approach is very simple. All of the related files for apache is built for ARM, and some of tools which should be run on x86 are run with qemu.
So you need to modify just a line on makefile for both apache and apr to use qemu-arm-static.
<h2>zlib for ARM</h2>
under writing..
<h2>expat for ARM</h2>
under writing..
<h2>pcre for ARM</h2>
under writing..
<h2>SSL library for ARM</h2>
under writing..
<h2>fix pthread related errors</h2>
I encountered some errors related to pthread. These errors didn't raised when making for x86...
You can fix it by adding <code>-pthread</code> to <code>PROGRAM_DEPENDENCIES</code> on apache makefile like following.
<pre><code class="makefile">    cd $(DIR_APACHE); ?
        cp -f server/Makefile server/Makefile.org; ?
        sed -e 's;?./gen_test_char &gt; ;qemu-arm-static -L $(LD_ROOT_PATH)/libc ./gen_test_char &gt; ;g' server/Makefile.org &gt; server/Makefile; ?
        cp -f support/Makefile support/Makefile.org; ?
        sed -e 's;PROGRAM_DEPENDENCIES = ;PROGRAM_DEPENDENCIES = -pthread;g' support/Makefile.org &gt; support/Makefile
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1607</wp:post_id>
		<wp:post_date><![CDATA[2016-10-23 02:06:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-10-22 17:06:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-make-apache-for-arm-processor]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="make"><![CDATA[make]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>I needed to make apache with some configurations by myself, but I couldn't find how to make it for ARM processor... So I needed to search for the way by myself, and found it. Then I'll share that.</p>
<h1 id="howtodothat">How to do that?</h1>
<p>Very simple. Replace some lines with using <code>qemu-arm-static</code> on makefiles for apr and apache like the following sample.</p>
<p>If you have a trouble of making apache for ARM, try this approach.</p>
<h2 id="makefilesample">makefile sample</h2>
<pre><code class="language-makefile">HOST_PREFIX ?= x86_64-linux-gnu
CROSS_PREFIX ?= arm-linux-gnueabihf
LD_ROOT_PATH ?= /usr/local/$(CROSS_PREFIX)-4.8/$(CROSS_PREFIX)
URL_APACHE  ?= http://ftp.kddilabs.jp/infosystems/apache/httpd/httpd-2.4.20.tar.gz
URL_APR     ?= http://ftp.yz.yamagata-u.ac.jp/pub/network/apache/apr/apr-1.5.2.tar.gz
URL_APRUTIL ?= http://ftp.yz.yamagata-u.ac.jp/pub/network/apache/apr/apr-util-1.5.4.tar.gz
DIR_INSTALL ?= /var/tmp/apache
DIR_APACHE   = $(basename $(basename $(notdir $(URL_APACHE))))
DIR_APR      = $(DIR_APACHE)/srclib/apr
DIR_APRUTIL  = $(DIR_APACHE)/srclib/apr-util
$(DIR_APACHE)/Makefile:$(notdir $(URL_APACHE)) $(TARGET_OPENSSL) $(TARGET_EXPAT) $(TARGET_PCRE) $(TARGET_ZLIB)
    @+$(MAKE) -s $(TARGET_APR_UTIL) $(TARGET_APR)
    cd $(DIR_APACHE); ?
        ./configure ... ?
            --with-dbm=sdbm --with-berkeley-db=no ?
            --with-gdbm=no --with-ndbm=no ?
            --with-suexec-userdir=/usr ?
            --with-ssl=$(DIR_INSTALL) ?
            --with-expat=$(DIR_INSTALL) ?
            --with-pcre=$(DIR_INSTALL) ?
            --with-z=$(DIR_INSTALL) ?
            --build=$(HOST_PREFIX) ?
            --host=$(CROSS_PREFIX) ?
            --target=$(CROSS_PREFIX)
ifeq ($(findstring arm,$(CROSS_PREFIX)),arm)
    cd $(DIR_APR); ?
        cp -f Makefile Makefile.org; ?
        sed -e 's;tools/gen_test_char &gt;;qemu-arm-static -L $(LD_ROOT_PATH)/libc tools/gen_test_char &gt;;g' ?
        Makefile.org &gt; Makefile
    cd $(DIR_APACHE); ?
        cp -f server/Makefile server/Makefile.org; ?
        sed -e 's;?./gen_test_char &gt; ;qemu-arm-static -L $(LD_ROOT_PATH)/libc ./gen_test_char &gt; ;g' server/Makefile.org &gt; server/Makefile; ?
        cp -f support/Makefile support/Makefile.org; ?
        sed -e 's;PROGRAM_DEPENDENCIES = ;PROGRAM_DEPENDENCIES = -pthread;g' support/Makefile.org &gt; support/Makefile
endif
</code></pre>
<h2 id="whatsthisapproach">What's this approach?</h2>
<p>Apache has some tools which should be run on host machine (x86) if cross-compiling, so the make rule of tools for host machine (x86) needs to be separated from lib/binary for target (ARM).</p>
<p>On the other hand, my approach is very simple. All of the related files for apache is built for ARM, and some of tools which should be run on x86 are run with qemu.</p>
<p>So you need to modify just a line on makefile for both apache and apr to use qemu-arm-static.</p>
<h2 id="zlibforarm">zlib for ARM</h2>
<p>under writing..</p>
<h2 id="expatforarm">expat for ARM</h2>
<p>under writing..</p>
<h2 id="pcreforarm">pcre for ARM</h2>
<p>under writing..</p>
<h2 id="ssllibraryforarm">SSL library for ARM</h2>
<p>under writing..</p>
<h2 id="fixpthreadrelatederrors">fix pthread related errors</h2>
<p>I encountered some errors related to pthread. These errors didn't raised when making for x86...</p>
<p>You can fix it by adding <code>-pthread</code> to <code>PROGRAM_DEPENDENCIES</code> on apache makefile like following.</p>
<pre><code class="language-makefile">    cd $(DIR_APACHE); ?
        cp -f server/Makefile server/Makefile.org; ?
        sed -e 's;?./gen_test_char &gt; ;qemu-arm-static -L $(LD_ROOT_PATH)/libc ./gen_test_char &gt; ;g' server/Makefile.org &gt; server/Makefile; ?
        cp -f support/Makefile support/Makefile.org; ?
        sed -e 's;PROGRAM_DEPENDENCIES = ;PROGRAM_DEPENDENCIES = -pthread;g' support/Makefile.org &gt; support/Makefile
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5970519074]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490506]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>呼び出し規約とは？stdcallとはなんぞや？という話。</title>
		<link>https://tech.blog.uribou.me/stdcalltohananzoya-toiuhua-matome/</link>
		<pubDate>Thu, 27 Oct 2016 15:02:38 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/stdcalltohananzoya-toiuhua-matome/</guid>
		<description></description>
		<content:encoded><![CDATA[昔WindowsCEプラットフォームで製品開発していた時も、素のWin32APIを叩いてテストアプリを作ったりしていたけれど、今思うとあまり理解しないままに使って作っていたんだなぁ…と、今更ながら思う。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">ARMで言う所のeabiみたいなもんか。<br /><br />関数を呼び出すということ - Web/DB プログラミング徹底解説 <a href="https://t.co/Bb6Nw5icCO">https://t.co/Bb6Nw5icCO</a> <a href="https://twitter.com/ShareThis">@sharethis</a>より</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/791634275401510912">2016年10月27日</a></blockquote>

上のリンク先、「関数を呼び出すということ」なんて超基本じゃん！などと思うなかれ、かなり深いところまで掘り下げて解説されています。
最も具体的で身近な例としては、「Win32APIと標準Cライブラリとでは、スタックの巻き戻し方が違うんだよ」という点です。そうだったんだ！と、目から鱗でした^^;
そんな__stdcallの規約、大元の情報は以下のMicrosoft本家ページに記載されています。
<ul>
<li><a href="https://msdn.microsoft.com/ja-jp/library/zxk0tw93.aspx">Win32APIの呼び出し規約</a></li>
</ul>
Cライブラリはこちらです。
<ul>
<li><a href="https://msdn.microsoft.com/ja-jp/library/zkwh89ks.aspx">Cライブラリの規約__cdecl</a></li>
</ul>
ちなみに、上記の規約ページでも触れていますが、スマホなどの組み込み機器で確固たる地位を築き上げたARMプロセッサは、インテルのx86プロセッサとは全く異なるCPUなので、当然規約も違います。
検索したら、ARM社ではなく、なぜかMicrosoft の解説ページがトップに出てきたんですが… そのままリンク貼っちゃいます^^;
<ul>
<li><a href="https://msdn.microsoft.com/ja-jp/library/dn736986.aspx">ARM ABI 規則の概要</a></li>
</ul>
なんでこんなもん調べだしたのかというと…
今後仕事でWindows上で動かす業務効率化するスクリプトを書く機会が増えそうで、ならPythonで書いてしまえと思いまして。
その際、サードパーティ提供のdllを使う必要がありまして。
その際に使うctypesパッケージ提供のモジュールが、Win32APIと通常のCライブラリとで異なるみたいなんですよね。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/ShareThis">@ShareThis</a> そして <a href="https://twitter.com/hashtag/python?src=hash">#python</a> からcライブラリのexport APIをコールする際に使うctypesモジュールはABI（たぶん）によって変わると。windowsをインストールして確かめてみよっと。<a href="https://t.co/1t03de3M3b">https://t.co/1t03de3M3b</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/791637442038075393">2016年10月27日</a></blockquote>

んん？どういうことだ？
と、今までよく理解できていなかったので、上記サイトで分かりやすい解説を読んで勉強させていただいた次第です。
脇道に逸れまくって、本来の目的だったPythonからのWin32API呼び出しを試せていないんですが…。
それはまた後ほど。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1609</wp:post_id>
		<wp:post_date><![CDATA[2016-10-28 00:02:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-10-27 15:02:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stdcalltohananzoya-toiuhua-matome]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>昔WindowsCEプラットフォームで製品開発していた時も、素のWin32APIを叩いてテストアプリを作ったりしていたけれど、今思うとあまり理解しないままに使って作っていたんだなぁ…と、今更ながら思う。</p>
<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">ARMで言う所のeabiみたいなもんか。<br><br>関数を呼び出すということ - Web/DB プログラミング徹底解説 <a href="https://t.co/Bb6Nw5icCO">https://t.co/Bb6Nw5icCO</a> <a href="https://twitter.com/ShareThis">@sharethis</a>より</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/791634275401510912">2016年10月27日</a></blockquote> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>上のリンク先、「関数を呼び出すということ」なんて超基本じゃん！などと思うなかれ、かなり深いところまで掘り下げて解説されています。</p>
<p>最も具体的で身近な例としては、「Win32APIと標準Cライブラリとでは、スタックの巻き戻し方が違うんだよ」という点です。そうだったんだ！と、目から鱗でした^^;</p>
<p>そんな__stdcallの規約、大元の情報は以下のMicrosoft本家ページに記載されています。</p>
<ul>
<li><a href="https://msdn.microsoft.com/ja-jp/library/zxk0tw93.aspx">Win32APIの呼び出し規約</a></li>
</ul>
<p>Cライブラリはこちらです。</p>
<ul>
<li><a href="https://msdn.microsoft.com/ja-jp/library/zkwh89ks.aspx">Cライブラリの規約__cdecl</a></li>
</ul>
<p>ちなみに、上記の規約ページでも触れていますが、スマホなどの組み込み機器で確固たる地位を築き上げたARMプロセッサは、インテルのx86プロセッサとは全く異なるCPUなので、当然規約も違います。</p>
<p>検索したら、ARM社ではなく、なぜかMicrosoft の解説ページがトップに出てきたんですが… そのままリンク貼っちゃいます^^;</p>
<ul>
<li><a href="https://msdn.microsoft.com/ja-jp/library/dn736986.aspx">ARM ABI 規則の概要</a></li>
</ul>
<p>なんでこんなもん調べだしたのかというと…</p>
<p>今後仕事でWindows上で動かす業務効率化するスクリプトを書く機会が増えそうで、ならPythonで書いてしまえと思いまして。</p>
<p>その際、サードパーティ提供のdllを使う必要がありまして。</p>
<p>その際に使うctypesパッケージ提供のモジュールが、Win32APIと通常のCライブラリとで異なるみたいなんですよね。</p>
<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/ShareThis">@ShareThis</a> そして <a href="https://twitter.com/hashtag/python?src=hash">#python</a> からcライブラリのexport APIをコールする際に使うctypesモジュールはABI（たぶん）によって変わると。windowsをインストールして確かめてみよっと。<a href="https://t.co/1t03de3M3b">https://t.co/1t03de3M3b</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/791637442038075393">2016年10月27日</a></blockquote> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>んん？どういうことだ？</p>
<p>と、今までよく理解できていなかったので、上記サイトで分かりやすい解説を読んで勉強させていただいた次第です。</p>
<p>脇道に逸れまくって、本来の目的だったPythonからのWin32API呼び出しを試せていないんですが…。</p>
<p>それはまた後ほど。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941037174]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577290]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>168</wp:comment_id>
			<wp:comment_author><![CDATA[binance h"anvisningsbonus]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[83324677@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/join?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.132.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-15 04:32:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-14 19:32:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>ちょっとしたコマンドラインツールをpythonで作る時に便利なargparseのテストで気をつけるべきこと。</title>
		<link>https://tech.blog.uribou.me/python-argparse-exceptions/</link>
		<pubDate>Thu, 03 Nov 2016 12:31:06 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-argparse-exceptions/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://blog.rinka-blossom.com/python-argparsenoshi-ifang/">ちょっとしたコマンドラインツールをpythonで作る時に便利なargparse</a>なんですが、位置引数ありparserが出す例外をテストするコードを書いて初めて知ったことがありました。
そのメモ書きになります。</p>
<h2>位置引数とは</h2>
<p><a href="http://docs.python.jp/3.5/library/argparse.html#name-or-flags">argparseの公式ページ</a>にも載っている通り、コマンドライン実行時に必須となる引数のことです。以下引用。
位置引数は次のように作成します:</p>
<pre><code class="language-python">&gt;&gt;&gt;
&gt;&gt;&gt; parser.add_argument(&#039;bar&#039;)</code></pre>
<p>parse_args() が呼ばれたとき、オプション引数は接頭辞 - により識別され、それ以外の引数は位置引数として扱われます:</p>
<pre><code class="language-python">&gt;&gt;&gt;
&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&#039;PROG&#039;)
&gt;&gt;&gt; parser.add_argument(&#039;-f&#039;, &#039;--foo&#039;)
&gt;&gt;&gt; parser.add_argument(&#039;bar&#039;)
&gt;&gt;&gt; parser.parse_args([&#039;BAR&#039;])
Namespace(bar=&#039;BAR&#039;, foo=None)
&gt;&gt;&gt; parser.parse_args([&#039;BAR&#039;, &#039;--foo&#039;, &#039;FOO&#039;])
Namespace(bar=&#039;BAR&#039;, foo=&#039;FOO&#039;)
&gt;&gt;&gt; parser.parse_args([&#039;--foo&#039;, &#039;FOO&#039;])
usage: PROG [-h] [-f FOO] bar
PROG: error: too few arguments</code></pre>
<h2>位置引数ありのparserをテストする際に気をつけるべきこと</h2>
<p>あれっ　と思いました。
位置引数ありのparserをテストするとき、エラーケースのテストを書くにはどうするんだ？？と。
例えば以下のようなコードを書いたとして、</p>
<pre><code class="language-python">import sys
import argparse
def init(argv=sys.argv[1:]):
    arg = argparse.ArgumentParser(
        description=&quot;&quot;main program to test TS-MPPT-60 monitor modules&quot;&quot;)
    arg.add_argument(
        &quot;&quot;host_name&quot;&quot;,
        type=str,
        help=&quot;&quot;TS-MPPT-60 host address&quot;&quot;
    )
    arg.add_argument(
        &quot;&quot;-xa&quot;&quot;, &quot;&quot;--xively-api-key&quot;&quot;,
        type=str,
        nargs=&#039;?&#039;, default=None, const=None,
        help=&quot;&quot;Xively API key string&quot;&quot;
    )
    return arg.parse_args(argv)</code></pre>
<p>以下のようなテストを書くと、</p>
<pre><code class="language-python">class TestArgParser(unittest.TestCase):
    def test_default_args(self):
        parsed = argparser.init([])</code></pre>
<p>以下のようなエラーになります。</p>
<pre><code class="language-bash">test_argparser.py: error: the following arguments are required: host_name
Eusage: test_argparser.py [-h] [-xa [XIVELY_API_KEY]] [-xf [XIVELY_FEED_KEY]]
                         [-kp [KEENIO_PROJECT_ID]] [-kw [KEENIO_WRITE_KEY]]
                         [-tck [TWITTER_CONSUMER_KEY]]
                         [-tcs [TWITTER_CONSUMER_SECRET]] [-tk [TWITTER_KEY]]
                         [-ts [TWITTER_SECRET]] [-be] [-bl [BATTERY_LIMIT]]
                         [-bs [BATTERY_LIMIT_HOOK_SCRIPT]]
                         [-ch [CHARGE_CURRENT_HIGH]]
                         [-bf [BATTERY_FULL_LIMIT]] [-i INTERVAL]
                         [-l LOG_FILE] [--just-get-status] [--status-all]
                         [--debug]
                         host_name
test_argparser.py: error: the following arguments are required: host_name
E
======================================================================
ERROR: test_battery_full_limit (__main__.TestArgParser)
----------------------------------------------------------------------
Traceback (most recent call last):
  File &quot;&quot;/Users/takashi/Development/solar_monitor/test/test_argparser.py&quot;&quot;, line 81, in test_battery_full_limit
    parsed = argparser.init([&quot;&quot;-bf&quot;&quot;, ])
  File &quot;&quot;/Users/takashi/.anyenv/envs/pyenv/versions/test_py35/lib/python3.5/site-packages/solar_monitor/argparser.py&quot;&quot;, line 147, in init
    return arg.parse_args(argv)
  File &quot;&quot;/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py&quot;&quot;, line 1726, in parse_args
    args, argv = self.parse_known_args(args, namespace)
  File &quot;&quot;/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py&quot;&quot;, line 1758, in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
  File &quot;&quot;/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py&quot;&quot;, line 1993, in _parse_known_args
    &#039;, &#039;.join(required_actions))
  File &quot;&quot;/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py&quot;&quot;, line 2385, in error
    self.exit(2, _(&#039;%(prog)s: error: %(message)s\n&#039;) % args)
  File &quot;&quot;/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py&quot;&quot;, line 2372, in exit
    _sys.exit(status)
SystemExit: 2</code></pre>
<p>最後の行に回答があるんですけどね。
SystemExit例外がraiseされることを想定してテストを書けば良いのです。</p>
<pre><code class="language-python">class TestArgParser(unittest.TestCase):
    def test_default_args(self):
        self.assertRaises(SystemExit, argparser.init, [])</code></pre>
<h2>SystemExit例外とは</h2>
<p>これは<code>sys.exit()</code>が送出する例外で、<code>Exception</code>を継承した普通の例外とはちょっと扱いが異なります。
<a href="http://docs.python.jp/3/library/exceptions.html#SystemExit">詳しくは公式のヘルプ</a>に載っていますが、重要な部分だけ引用したのが以下です。</p>
<blockquote>
<p>Exception をキャッチするコードに誤ってキャッチされないように、Exception ではなく BaseException を継承しています。
つまり、以下のようなコードではキャッチできないんですね。</p>
<pre><code class="language-python">try:
argparser.init([])
except Exception as e:
print(&quot;&quot;hoge: &quot;&quot; + type(e).__name__)</code></pre>
<p><code>SystemExit</code>をキャッチするにはこうする必要があります。</p>
<pre><code class="language-python">try:
argparser.init([])
except BaseException as e:
print(&quot;&quot;hoge: &quot;&quot; + type(e).__name__)</code></pre>
<p><a href="http://docs.python.jp/3/library/exceptions.html#exception-hierarchy">例外階層</a>をみると、<code>SystemExit</code>以外にも<code>KeyboardInterrupt</code>や<code>GeneratorExit</code>なんかも<code>BaseException</code>を継承しているようです。なるほど。</p>
<h2>まとめ</h2>
<ul>
<li>位置引数ありのparserに位置引数を与えずに実行すると、<code>SystemExit</code>例外を出す（要するに<code>sys.exit()</code>する）</li>
<li><code>SystemExit</code>は<code>Exception</code>ではなく<code>BaseException</code>を継承している</li>
<li>位置引数ありのparserの<code>SystemExit</code>を出すケースをテストする際には、普通に<code>unittest</code>の<code>assertRaises</code>が使える</li>
</ul>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1610</wp:post_id>
		<wp:post_date><![CDATA[2016-11-03 21:31:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-03 12:31:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-argparse-exceptions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="argparse"><![CDATA[argparse]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/python-argparsenoshi-ifang/">ちょっとしたコマンドラインツールをpythonで作る時に便利なargparse</a>なんですが、位置引数ありparserが出す例外をテストするコードを書いて初めて知ったことがありました。</p>
<p>そのメモ書きになります。</p>
<h1 id="">位置引数とは</h1>
<p><a href="http://docs.python.jp/3.5/library/argparse.html#name-or-flags">argparseの公式ページ</a>にも載っている通り、コマンドライン実行時に必須となる引数のことです。以下引用。</p>
<p>位置引数は次のように作成します:</p>
<pre><code class="language-python">&gt;&gt;&gt;
&gt;&gt;&gt; parser.add_argument('bar')
</code></pre>
<p>parse_args() が呼ばれたとき、オプション引数は接頭辞 - により識別され、それ以外の引数は位置引数として扱われます:</p>
<pre><code class="language-python">&gt;&gt;&gt;
&gt;&gt;&gt; parser = argparse.ArgumentParser(prog='PROG')
&gt;&gt;&gt; parser.add_argument('-f', '--foo')
&gt;&gt;&gt; parser.add_argument('bar')
&gt;&gt;&gt; parser.parse_args(['BAR'])
Namespace(bar='BAR', foo=None)
&gt;&gt;&gt; parser.parse_args(['BAR', '--foo', 'FOO'])
Namespace(bar='BAR', foo='FOO')
&gt;&gt;&gt; parser.parse_args(['--foo', 'FOO'])
usage: PROG [-h] [-f FOO] bar
PROG: error: too few arguments
</code></pre>
<h1 id="parser">位置引数ありのparserをテストする際に気をつけるべきこと</h1>
<p>あれっ　と思いました。</p>
<p>位置引数ありのparserをテストするとき、エラーケースのテストを書くにはどうするんだ？？と。</p>
<p>例えば以下のようなコードを書いたとして、</p>
<pre><code class="language-python">import sys
import argparse
def init(argv=sys.argv[1:]):
    arg = argparse.ArgumentParser(
        description="main program to test TS-MPPT-60 monitor modules")
    arg.add_argument(
        "host_name",
        type=str,
        help="TS-MPPT-60 host address"
    )
    arg.add_argument(
        "-xa", "--xively-api-key",
        type=str,
        nargs='?', default=None, const=None,
        help="Xively API key string"
    )
    return arg.parse_args(argv)
</code></pre>
<p>以下のようなテストを書くと、</p>
<pre><code class="language-python">class TestArgParser(unittest.TestCase):
    def test_default_args(self):
        parsed = argparser.init([])
</code></pre>
<p>以下のようなエラーになります。</p>
<pre><code class="language-bash">test_argparser.py: error: the following arguments are required: host_name
Eusage: test_argparser.py [-h] [-xa [XIVELY_API_KEY]] [-xf [XIVELY_FEED_KEY]]
                         [-kp [KEENIO_PROJECT_ID]] [-kw [KEENIO_WRITE_KEY]]
                         [-tck [TWITTER_CONSUMER_KEY]]
                         [-tcs [TWITTER_CONSUMER_SECRET]] [-tk [TWITTER_KEY]]
                         [-ts [TWITTER_SECRET]] [-be] [-bl [BATTERY_LIMIT]]
                         [-bs [BATTERY_LIMIT_HOOK_SCRIPT]]
                         [-ch [CHARGE_CURRENT_HIGH]]
                         [-bf [BATTERY_FULL_LIMIT]] [-i INTERVAL]
                         [-l LOG_FILE] [--just-get-status] [--status-all]
                         [--debug]
                         host_name
test_argparser.py: error: the following arguments are required: host_name
E
======================================================================
ERROR: test_battery_full_limit (__main__.TestArgParser)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/takashi/Development/solar_monitor/test/test_argparser.py", line 81, in test_battery_full_limit
    parsed = argparser.init(["-bf", ])
  File "/Users/takashi/.anyenv/envs/pyenv/versions/test_py35/lib/python3.5/site-packages/solar_monitor/argparser.py", line 147, in init
    return arg.parse_args(argv)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py", line 1726, in parse_args
    args, argv = self.parse_known_args(args, namespace)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py", line 1758, in parse_known_args
    namespace, args = self._parse_known_args(args, namespace)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py", line 1993, in _parse_known_args
    ', '.join(required_actions))
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py", line 2385, in error
    self.exit(2, _('%(prog)s: error: %(message)s?n') % args)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/argparse.py", line 2372, in exit
    _sys.exit(status)
SystemExit: 2
</code></pre>
<p>最後の行に回答があるんですけどね。</p>
<p>SystemExit例外がraiseされることを想定してテストを書けば良いのです。</p>
<pre><code class="language-python">class TestArgParser(unittest.TestCase):
    def test_default_args(self):
        self.assertRaises(SystemExit, argparser.init, [])
</code></pre>
<h1 id="systemexit">SystemExit例外とは</h1>
<p>これは<code>sys.exit()</code>が送出する例外で、<code>Exception</code>を継承した普通の例外とはちょっと扱いが異なります。</p>
<p><a href="http://docs.python.jp/3/library/exceptions.html#SystemExit">詳しくは公式のヘルプ</a>に載っていますが、重要な部分だけ引用したのが以下です。</p>
<blockquote>
  <p>Exception をキャッチするコードに誤ってキャッチされないように、Exception ではなく BaseException を継承しています。</p>
</blockquote>
<p>つまり、以下のようなコードではキャッチできないんですね。</p>
<pre><code class="language-python">try:
    argparser.init([])
except Exception as e:
    print("hoge: " + type(e).__name__)
</code></pre>
<p><code>SystemExit</code>をキャッチするにはこうする必要があります。</p>
<pre><code class="language-python">try:
    argparser.init([])
except BaseException as e:
    print("hoge: " + type(e).__name__)
</code></pre>
<p><a href="http://docs.python.jp/3/library/exceptions.html#exception-hierarchy">例外階層</a>をみると、<code>SystemExit</code>以外にも<code>KeyboardInterrupt</code>や<code>GeneratorExit</code>なんかも<code>BaseException</code>を継承しているようです。なるほど。</p>
<h1 id="">まとめ</h1>
<ul>
<li>位置引数ありのparserに位置引数を与えずに実行すると、<code>SystemExit</code>例外を出す（要するに<code>sys.exit()</code>する）</li>
<li><code>SystemExit</code>は<code>Exception</code>ではなく<code>BaseException</code>を継承している</li>
<li>位置引数ありのparserの<code>SystemExit</code>を出すケースをテストする際には、普通に<code>unittest</code>の<code>assertRaises</code>が使える</li>
</ul>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942368400]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722490507]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>230</wp:comment_id>
			<wp:comment_author><![CDATA[najboljsa koda za napotitev na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[61276206@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/sl/register-person?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-20 10:50:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-20 01:50:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>297</wp:comment_id>
			<wp:comment_author><![CDATA[Binance推荐代码]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[70140722@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/register?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.77]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-28 10:56:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-28 01:56:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>DIY家具の設計にAUTODESK製3D CAD Fusion 360を導入したい件。</title>
		<link>https://tech.blog.uribou.me/diy-bookshelf-with-3d-cad/</link>
		<pubDate>Sat, 12 Nov 2016 16:55:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/diy-bookshelf-with-3d-cad/</guid>
		<description></description>
		<content:encoded><![CDATA[借りてる部屋の寸法にぴったり合う本棚って、なかなかないんですよね。
セミ・フルオーダーの本棚や家具を作ってくれる工房はもちろんあるんですが、よほどお金に困っていない富裕層以外はちょっと手が出ないし、そもそもそこまでする気にならないし。
嫁も簡単に「作っちゃえば？」と言ってくるので、重い腰を上げて作ってみました。本棚をDIYで。せっかくなので今借りてる部屋にぴったり合わせた寸法で。
<h1>手書き設計（落書き）してみる</h1>
<img src="https://farm6.staticflickr.com/5590/30123457762_f9587d4b07_z_d.jpg" alt="" />
汚い。・・・まぁ、上のは概略なので。次はマトモです。
<img src="https://farm9.staticflickr.com/8407/29608761103_cb3b34e95d_z_d.jpg" alt="" />
棚の背面は空けていて、壁の凹凸に合わせて底と天板の一部に切り欠きを入れています。
あとで出てくる完成品の写真を見れば分かると思うんですが・・・　やっぱりこういうのはタイトルにある通り、3D CADで書いてみたいですよね。
完成予想図を3次元モデルで見られるし、何より最近は3Dプリンタがお手頃価格になってきただけでなく、<a href="http://make.dmm.com/">DMM.make</a>みたいに会員制で機材を使える場や、<a href="http://fabcafe.com/tokyo/fab/">FabCafe</a>のようなカフェスタイルのお店も増えてきたので、3D CADスキルを身につけておくと色々と楽しそうです。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">DMM.make AKIBAが3Dプリント講座を開講 - <a href="https://t.co/zHEhFthmU3">https://t.co/zHEhFthmU3</a> <a href="https://twitter.com/hashtag/dmm?src=hash">#dmm</a> <a href="https://twitter.com/hashtag/dmmmakeakiba?src=hash">#dmmmakeakiba</a> <a href="https://twitter.com/hashtag/MakersCollege?src=hash">#MakersCollege</a> <a href="https://twitter.com/hashtag/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF?src=hash">#3dプリンタ</a> <a href="https://twitter.com/hashtag/3dprinter?src=hash">#3dprinter</a> <a href="https://twitter.com/hashtag/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0?src=hash">#3dプリンティング</a> <a href="https://twitter.com/hashtag/%E6%95%99%E8%82%B2?src=hash">#教育</a> <a href="https://twitter.com/hashtag/tech?src=hash">#tech</a> <a href="https://twitter.com/hashtag/%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88%E3%82%A2%E3%83%83%E3%83%97?src=hash">#スタートアップ</a></p>&mdash; id.arts (@idarts_jp) <a href="https://twitter.com/idarts_jp/status/759334969386815488">2016年7月30日</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">We are at the <a href="https://twitter.com/fabcafe_com">@fabcafe_com</a> in Tokyo. Grab a latte or use a 3D-printer, laser cutter or milling machine. <a href="https://t.co/jgGRFYy1bD">pic.twitter.com/jgGRFYy1bD</a></p>&mdash; Jessica Rosenkrantz (@nervous_jessica) <a href="https://twitter.com/nervous_jessica/status/699071746427658242">2016年2月15日</a></blockquote>

<h1>3D CADでモデリング（してみたい）</h1>
もちろん、専用のソフトウェアが必要になりますよね。そして普通に購入すると趣味で始めるには高すぎるお値段な上、勉強も必要と。
思いながら探してみると、あるもんですね。<strong>無料の本格派3D CADソフト、AUDODESK製のFusion 360</strong>。
<a href="http://www.autodesk.co.jp/products/fusion-360/try-buy">公式ページにも書いてある通り</a>、学生、趣味の工作、スタートアップの方で、非営利目的なら、<strong>無償で使えてしまいます！</strong>
さらに、ちゃんと日本語にローカライズされている上、Windows/Mac両対応。さすがにLinuxはないか…。
さらにさらに、<a href="http://www.autodesk.com/products/fusion-360/learn-training-tutorials">公式チュートリアルも超充実</a>しています。ただし、こちらはさすがに英語のみっぽいです。
<h1>人生最初の3D CADモデリング</h1>
ということで、ちょっとお試しで使ってみたんですが、さすがに一朝一夕にはできませんね…。
<img src="https://farm6.staticflickr.com/5796/30829545782_9aea038aac_z_d.jpg" alt="" />
木の板一枚モデリング。もっと勉強します^^;
<h1>Fusion 360の教本</h1>
Fusion 360の日本語書籍は少ないみたいですが、良さそうな本を見つけました。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833838%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51Lakbg5G6L._SL320_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833838%2Fref%3Dnosim" target="_blank" rel="noopener">Fusion 360操作ガイド ベーシック編―次世代クラウドベース3DCAD</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">三谷 大暁 カットシステム 2016-02-26    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833838%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DFusion%2520360%2591%2580%258D%25EC%2583K%2583C%2583h%2520%2583x%2581%255B%2583V%2583b%2583N%2595%25D2%2581%255C%258E%259F%2590%25A2%2591%25E3%2583N%2583%2589%2583E%2583h%2583x%2581%255B%2583X3DCAD%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13811852%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=" target="_blank" rel="noopener">楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkseven"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=932&amp;pc_id=1188&amp;pl_id=12456&amp;url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D4-87-783383-1%2520%257C%25204-877-83383-1%2520%257C%25204-8778-3383-1%2520%257C%25204-87783-383-1%2520%257C%25204-877833-83-1%2520%257C%25204-8778338-3-1" target="_blank" rel="noopener">7net<img></a></div>                            </div></div><div class="booklink-footer"></div></div></div>
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833951%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/51QOgZCPhZL._SL320_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833951%2Fref%3Dnosim" target="_blank" rel="noopener">Fusion 360操作ガイド アドバンス編―次世代クラウドベース3DCAD</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">三谷 大暁 カットシステム 2016-03    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833951%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DFusion%2520360%2591%2580%258D%25EC%2583K%2583C%2583h%2520%2583A%2583h%2583o%2583%2593%2583X%2595%25D2%2581%255C%258E%259F%2590%25A2%2591%25E3%2583N%2583%2589%2583E%2583h%2583x%2581%255B%2583X3DCAD%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13868457%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=" target="_blank" rel="noopener">楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkseven"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=932&amp;pc_id=1188&amp;pl_id=12456&amp;url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D4-87-783395-4%2520%257C%25204-877-83395-4%2520%257C%25204-8778-3395-4%2520%257C%25204-87783-395-4%2520%257C%25204-877833-95-4%2520%257C%25204-8778339-5-4" target="_blank" rel="noopener">7net<img></a></div>                           </div></div><div class="booklink-footer"></div></div></div>
以下、評価など。これは買わねば。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Fusion360 操作ガイド [ベーシック機能編] <a href="https://t.co/PjhJb9wlf0">https://t.co/PjhJb9wlf0</a> この本とてもわかりやすい！基礎が覚えられて、あまり回答を見なくても演習問題が解ける。Fusion 360使い始めて2日目♪ <a href="https://t.co/g6QvRGNqkp">pic.twitter.com/g6QvRGNqkp</a></p>&mdash; Kaz (@Kaz_Macintosh) <a href="https://twitter.com/Kaz_Macintosh/status/751395332299235328">2016年7月8日</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">「Fusion 360操作ガイド ベーシック編―次世代クラウドベース3DCAD<br />」こんなの出たのか欲しいな　工作工房として覚えなきゃいけないものな気がするんだよな…<a href="https://t.co/G5dFFXSJVy">https://t.co/G5dFFXSJVy</a> <a href="https://t.co/qnp6oYVyL2">pic.twitter.com/qnp6oYVyL2</a></p>&mdash; 工作工房 (@kousakukoubou) <a href="https://twitter.com/kousakukoubou/status/719144380670410752">2016年4月10日</a></blockquote>

<h1>現在のスキルベースでの現実</h1>
ということで今回の本棚DIY製作には間に合いませんでしたが、3D CADは気長に勉強していこうと思います。DMM.Makeに行きたいなぁ。
以下、製作工程。
いつもお世話になっている、近所のジョイフル本田で材料を買い揃えました。
<img src="https://farm6.staticflickr.com/5316/30152923481_7d014196ef_z_d.jpg" alt="" />
購入と同時に、設計図（冒頭のやつね）に合わせて、ジョイフルでカットしていただきました。
<img src="https://farm9.staticflickr.com/8614/29608793783_df0d464912_z_d.jpg" alt="" />
<img src="https://farm9.staticflickr.com/8644/30152923941_65aa866240_z_d.jpg" alt="" />
製作途中に強度試験。１歳児が乗っても大丈夫！
<img src="https://farm9.staticflickr.com/8645/29941896290_87e6d4b994_z_d.jpg" alt="" />
もちろん猫が乗っても大丈夫。
<img src="https://farm9.staticflickr.com/8559/29941895850_8b52cbe31f_z_d.jpg" alt="" />
制作中は子供たちがワラワラと寄ってきます。
<img src="https://farm9.staticflickr.com/8599/30203663876_afd54a8ce7_z_d.jpg" alt="" />
壁の凹凸とあっているか確認。ぴったり。
<img src="https://farm6.staticflickr.com/5819/30152954371_4de23a5545_z_d.jpg" alt="" />
<img src="https://farm6.staticflickr.com/5231/29941924010_344df9a0e5_z_d.jpg" alt="" />
<img src="https://farm9.staticflickr.com/8663/29941923440_b1678274a3_z_d.jpg" alt="" />
美しい…。
<img src="https://farm8.staticflickr.com/7536/30152955811_085d0c702f_z_d.jpg" alt="" />
ということで、完成しました。
<img src="https://farm9.staticflickr.com/8715/30123503552_86e928bbbc_z_d.jpg" alt="" />
<h1>まとめ</h1>
工具と材料はホームセンターで揃うので、部屋の寸法に合わせた家具をオーダーメイドするくらいならDIYしちゃいましょう。
設計図は紙に描くのもいいんですが、どうせなら最近流行りの3D printer導入を見越して、3D CADを練習しちゃいましょう。
その際には無料で使える上、チュートリアルや書籍情報が充実している上、Windows/Mac両対応のFusion 360を選びましょう。
いつか仕事でも使えるレベルになれるかな？なれたらいいな。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1613</wp:post_id>
		<wp:post_date><![CDATA[2016-11-13 01:55:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-12 16:55:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diy-bookshelf-with-3d-cad]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="cad"><![CDATA[CAD]]></category>
		<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="category" nicename="diy"><![CDATA[DIY]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5590/30123457762_f9587d4b07_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>借りてる部屋の寸法にぴったり合う本棚って、なかなかないんですよね。</p>

<p>セミ・フルオーダーの本棚や家具を作ってくれる工房はもちろんあるんですが、よほどお金に困っていない富裕層以外はちょっと手が出ないし、そもそもそこまでする気にならないし。</p>

<p>嫁も簡単に「作っちゃえば？」と言ってくるので、重い腰を上げて作ってみました。本棚をDIYで。せっかくなので今借りてる部屋にぴったり合わせた寸法で。</p>

<h1 id="">手書き設計（落書き）してみる</h1>

<p><img src="https://farm6.staticflickr.com/5590/30123457762_f9587d4b07_z_d.jpg" alt="" /></p>

<p>汚い。・・・まぁ、上のは概略なので。次はマトモです。</p>

<p><img src="https://farm9.staticflickr.com/8407/29608761103_cb3b34e95d_z_d.jpg" alt="" /></p>

<p>棚の背面は空けていて、壁の凹凸に合わせて底と天板の一部に切り欠きを入れています。</p>

<p>あとで出てくる完成品の写真を見れば分かると思うんですが・・・　やっぱりこういうのはタイトルにある通り、3D CADで書いてみたいですよね。</p>

<p>完成予想図を3次元モデルで見られるし、何より最近は3Dプリンタがお手頃価格になってきただけでなく、<a href="http://make.dmm.com/">DMM.make</a>みたいに会員制で機材を使える場や、<a href="http://fabcafe.com/tokyo/fab/">FabCafe</a>のようなカフェスタイルのお店も増えてきたので、3D CADスキルを身につけておくと色々と楽しそうです。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">DMM.make AKIBAが3Dプリント講座を開講 - <a href="https://t.co/zHEhFthmU3">https://t.co/zHEhFthmU3</a> <a href="https://twitter.com/hashtag/dmm?src=hash">#dmm</a> <a href="https://twitter.com/hashtag/dmmmakeakiba?src=hash">#dmmmakeakiba</a> <a href="https://twitter.com/hashtag/MakersCollege?src=hash">#MakersCollege</a> <a href="https://twitter.com/hashtag/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF?src=hash">#3dプリンタ</a> <a href="https://twitter.com/hashtag/3dprinter?src=hash">#3dprinter</a> <a href="https://twitter.com/hashtag/3d%E3%83%97%E3%83%AA%E3%83%B3%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0?src=hash">#3dプリンティング</a> <a href="https://twitter.com/hashtag/%E6%95%99%E8%82%B2?src=hash">#教育</a> <a href="https://twitter.com/hashtag/tech?src=hash">#tech</a> <a href="https://twitter.com/hashtag/%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88%E3%82%A2%E3%83%83%E3%83%97?src=hash">#スタートアップ</a></p>&mdash; id.arts (@idarts_jp) <a href="https://twitter.com/idarts_jp/status/759334969386815488">2016年7月30日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">We are at the <a href="https://twitter.com/fabcafe_com">@fabcafe_com</a> in Tokyo. Grab a latte or use a 3D-printer, laser cutter or milling machine. <a href="https://t.co/jgGRFYy1bD">pic.twitter.com/jgGRFYy1bD</a></p>&mdash; Jessica Rosenkrantz (@nervous_jessica) <a href="https://twitter.com/nervous_jessica/status/699071746427658242">2016年2月15日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<h1 id="3dcad">3D CADでモデリング（してみたい）</h1>

<p>もちろん、専用のソフトウェアが必要になりますよね。そして普通に購入すると趣味で始めるには高すぎるお値段な上、勉強も必要と。</p>

<p>思いながら探してみると、あるもんですね。<strong>無料の本格派3D CADソフト、AUDODESK製のFusion 360</strong>。</p>

<p><a href="http://www.autodesk.co.jp/products/fusion-360/try-buy">公式ページにも書いてある通り</a>、学生、趣味の工作、スタートアップの方で、非営利目的なら、<strong>無償で使えてしまいます！</strong></p>

<p>さらに、ちゃんと日本語にローカライズされている上、Windows/Mac両対応。さすがにLinuxはないか…。</p>

<p>さらにさらに、<a href="http://www.autodesk.com/products/fusion-360/learn-training-tutorials">公式チュートリアルも超充実</a>しています。ただし、こちらはさすがに英語のみっぽいです。</p>

<h1 id="3dcad">人生最初の3D CADモデリング</h1>

<p>ということで、ちょっとお試しで使ってみたんですが、さすがに一朝一夕にはできませんね…。</p>

<p><img src="https://farm6.staticflickr.com/5796/30829545782_9aea038aac_z_d.jpg" alt="" /></p>

<p>木の板一枚モデリング。もっと勉強します^^;</p>

<h1 id="fusion360">Fusion 360の教本</h1>

<p>Fusion 360の日本語書籍は少ないみたいですが、良さそうな本を見つけました。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833838%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51Lakbg5G6L._SL320_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833838%2Fref%3Dnosim" target="_blank" >Fusion 360操作ガイド ベーシック編―次世代クラウドベース3DCAD</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">三谷 大暁 カットシステム 2016-02-26    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833838%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DFusion%2520360%2591%2580%258D%25EC%2583K%2583C%2583h%2520%2583x%2581%255B%2583V%2583b%2583N%2595%25D2%2581%255C%258E%259F%2590%25A2%2591%25E3%2583N%2583%2589%2583E%2583h%2583x%2581%255B%2583X3DCAD%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13811852%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=" target="_blank" >楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkseven"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=932&pc_id=1188&pl_id=12456&url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D4-87-783383-1%2520%257C%25204-877-833
83-1%2520%257C%25204-8778-3383-1%2520%257C%25204-87783-383-1%2520%257C%25204-877833-83-1%2520%257C%25204-8778338-3-1" target="_blank" >7net<img?src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=932&pc_id=1188&pl_id=12456"?width="1"?height="1"?style="border:none;"></a></div>                            </div></div><div class="booklink-footer"></div></div></div>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833951%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/51QOgZCPhZL._SL320_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833951%2Fref%3Dnosim" target="_blank" >Fusion 360操作ガイド アドバンス編―次世代クラウドベース3DCAD</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">三谷 大暁 カットシステム 2016-03    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4877833951%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DFusion%2520360%2591%2580%258D%25EC%2583K%2583C%2583h%2520%2583A%2583h%2583o%2583%2593%2583X%2595%25D2%2581%255C%258E%259F%2590%25A2%2591%25E3%2583N%2583%2589%2583E%2583h%2583x%2581%255B%2583X3DCAD%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F13868457%2F" target="_blank" >楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=" target="_blank" >楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkseven"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=932&pc_id=1188&pl_id=12456&url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D4-87-783395-4%2520%257C%25204-877-83395-4%2520%257C%25204-8778-3395-4%2520%257C%25204-87783-395-4%2520%257C%25204-877833-95-4%2520%257C%25204-8778339-5-4" target="_blank" >7net<img?src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=932&pc_id=1188&pl_id=12456"?width="1"?height="1"?style="border:none;"></a></div>                            </div></div><div class="booklink-footer"></div></div></div>

<p>以下、評価など。これは買わねば。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Fusion360 操作ガイド [ベーシック機能編] <a href="https://t.co/PjhJb9wlf0">https://t.co/PjhJb9wlf0</a> この本とてもわかりやすい！基礎が覚えられて、あまり回答を見なくても演習問題が解ける。Fusion 360使い始めて2日目♪ <a href="https://t.co/g6QvRGNqkp">pic.twitter.com/g6QvRGNqkp</a></p>&mdash; Kaz (@Kaz_Macintosh) <a href="https://twitter.com/Kaz_Macintosh/status/751395332299235328">2016年7月8日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">「Fusion 360操作ガイド ベーシック編―次世代クラウドベース3DCAD<br>」こんなの出たのか欲しいな　工作工房として覚えなきゃいけないものな気がするんだよな…<a href="https://t.co/G5dFFXSJVy">https://t.co/G5dFFXSJVy</a> <a href="https://t.co/qnp6oYVyL2">pic.twitter.com/qnp6oYVyL2</a></p>&mdash; 工作工房 (@kousakukoubou) <a href="https://twitter.com/kousakukoubou/status/719144380670410752">2016年4月10日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<h1 id="">現在のスキルベースでの現実</h1>

<p>ということで今回の本棚DIY製作には間に合いませんでしたが、3D CADは気長に勉強していこうと思います。DMM.Makeに行きたいなぁ。</p>

<p>以下、製作工程。</p>

<p>いつもお世話になっている、近所のジョイフル本田で材料を買い揃えました。</p>

<p><img src="https://farm6.staticflickr.com/5316/30152923481_7d014196ef_z_d.jpg" alt="" /></p>

<p>購入と同時に、設計図（冒頭のやつね）に合わせて、ジョイフルでカットしていただきました。</p>

<p><img src="https://farm9.staticflickr.com/8614/29608793783_df0d464912_z_d.jpg" alt="" /></p>

<p><img src="https://farm9.staticflickr.com/8644/30152923941_65aa866240_z_d.jpg" alt="" /></p>

<p>製作途中に強度試験。１歳児が乗っても大丈夫！</p>

<p><img src="https://farm9.staticflickr.com/8645/29941896290_87e6d4b994_z_d.jpg" alt="" /></p>

<p>もちろん猫が乗っても大丈夫。</p>

<p><img src="https://farm9.staticflickr.com/8559/29941895850_8b52cbe31f_z_d.jpg" alt="" /></p>

<p>制作中は子供たちがワラワラと寄ってきます。</p>

<p><img src="https://farm9.staticflickr.com/8599/30203663876_afd54a8ce7_z_d.jpg" alt="" /></p>

<p>壁の凹凸とあっているか確認。ぴったり。</p>

<p><img src="https://farm6.staticflickr.com/5819/30152954371_4de23a5545_z_d.jpg" alt="" /></p>

<p><img src="https://farm6.staticflickr.com/5231/29941924010_344df9a0e5_z_d.jpg" alt="" /></p>

<p><img src="https://farm9.staticflickr.com/8663/29941923440_b1678274a3_z_d.jpg" alt="" /></p>

<p>美しい…。</p>

<p><img src="https://farm8.staticflickr.com/7536/30152955811_085d0c702f_z_d.jpg" alt="" /></p>

<p>ということで、完成しました。</p>

<p><img src="https://farm9.staticflickr.com/8715/30123503552_86e928bbbc_z_d.jpg" alt="" /></p>

<h1 id="">まとめ</h1>

<p>工具と材料はホームセンターで揃うので、部屋の寸法に合わせた家具をオーダーメイドするくらいならDIYしちゃいましょう。</p>

<p>設計図は紙に描くのもいいんですが、どうせなら最近流行りの3D printer導入を見越して、3D CADを練習しちゃいましょう。</p>

<p>その際には無料で使える上、チュートリアルや書籍情報が充実している上、Windows/Mac両対応のFusion 360を選びましょう。</p>

<p>いつか仕事でも使えるレベルになれるかな？なれたらいいな。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1614]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942499203]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505213]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>快適！全部入りメディアサーバ自作のススメ。</title>
		<link>https://tech.blog.uribou.me/recommend-diy-server-description/</link>
		<pubDate>Fri, 02 Dec 2016 17:06:55 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/recommend-diy-server-description/</guid>
		<description></description>
		<content:encoded><![CDATA[![](https://farm5.staticflickr.com/4317/36004933166_826777ca90_z_d.jpg)
超低消費電力なARMマイコンLinuxサーバとして活用できるRaspberry Pi。
我が家では、既に販売終了している初代の[Raspberry Pi 1 Model A](https://ja.wikipedia.org/wiki/Raspberry_Pi)が現役で活躍中です。
そんな我が家の家庭内LAN上に張り巡らせた、超快適環境を提供してくれるサーバ群を紹介します。
というより、そろそろ整理しておかないと、壊れた時に困りそうな気がして、慌てて書き出したというのが正直なところ^^;
## 提供サービス一覧@Raspberry Pi
低消費電力を活かして、**Raspberry Piには常時稼働が必要な、それでいて負荷が少ないサービスを割り当てるのが得策**です。<div style="color:#CCCCCC">OpenVPNは負荷が低いサービスに入るのか…？</div>
一般的なマイコンより高性能とはいえ、さすがにx86 Core2/CoreiなどのCPUには劣るARM。目的が違うのでしょうがない。
そういうわけで、我が家では以下のサービスがRaspberry Piで稼働しています。ディストリは標準的なraspbian。
<table style="border:solid 2px #FFFFFF">
  <thead>
    <tr>
      <th style="background:#ACB9BF" colspan="3">サーバサイド</th>
      <th style="background:#ACB9BF" colspan="3">クライアントサイド</th>
    </tr>
    <tr>
      <th style="background:#ACB9BF">名称</th>
      <th style="background:#ACB9BF">価格</th>
      <th style="background:#ACB9BF">概要</th>
      <th style="background:#ACB9BF">名称</th>
      <th style="background:#ACB9BF">価格</th>
      <th style="background:#ACB9BF">概要</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">OpenVPN</td>
      <td style="background:#F0F6F8" rowspan="2">free</td>
      <td style="background:#F0F6F8" rowspan="2">家庭内LANに安全にアクセス。</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/us/app/openvpn-connect/id590379981?mt=8&amp;at=1000locx">OpenVPN Connect</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">iOSアプリ。家庭内LANに安全にアクセス。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=net.openvpn.openvpn">OpenVPN Connect</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。機能はiOSアプリと同様。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2">BIND9</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">家庭内LANの名前解決に。</td>
      <td style="background:#E2EDF2">-</td>
      <td style="background:#F0F6F8">-</td>
      <td style="background:#F0F6F8">-</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/dodo5522/rpwc" target="_blank" rel="noopener">rpwcweb</td>
      <td style="background:#F0F6F8">free(original)</td>
      <td style="background:#F0F6F8">サーバPCの電源スイッチをリモートでON/OFFできる。</td>
      <td style="background:#E2EDF2">ブラウザ</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">ChromeやFirefox。一応IEでも動作する。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/dodo5522/solar_monitor">Solar monitor</a></td>
      <td style="background:#F0F6F8">free(original)</td>
      <td style="background:#F0F6F8">DIY太陽光蓄電システムの状況を監視し、データを可視化（グラフ化）したり、呟いてくれる。</td>
      <td style="background:#E2EDF2"><a href="http://grid.rinka-blossom.com/">ブラウザ</a>,<br /><a href="https://twitter.com/mybot_athome?lang=ja">Twitter</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">グラフ化したデータをブラウザで参照できる。Twitterで主要なイベントを参照できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/dodo5522/radiation_monitor" target="_blank" rel="noopener">Radiation monitor</a></td>
      <td style="background:#F0F6F8">free(original)</td>
      <td style="background:#F0F6F8">放射線量を定点観測し、データを可視化（グラフ化）したり、呟いてくれる。</td>
      <td style="background:#E2EDF2">ブラウザ,Twitter</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">休止中</td>
    </tr>
  </tfoot>
</table>
### OpenVPN
大量の写真や動画など、重いデータを抱えたサーバPCを外部ネットワークから隠すため、VPNを導入しています。
### BIND9
でもって、家庭内LAN上のデバイスをIPで直接指定するのはイケてないので、BIND9も稼働しています。DHCPはルータにMAC毎の固定割り当て設定をしてお任せしています。
### 太陽光/放射線量モニタ etc.
上記以外は自作のサーバアプリ群で、VPN内部に隠したサーバPCの電源をブラウザ経由でONしたり、自作ソーラー発電蓄電システムの状態を監視したり、家の周辺の放射線量を定点観測したりしています。
## メディアサーバPC提供サービス
VPNの後ろに隠したサーバPCでは以下のメディア関連サービスが稼働しています。
QNAPなどのNASを検討したこともありますが、ビデオカメラで撮影したMTS動画を標準的なMP4変換する処理など、結構重い処理をJenkinsが回すので、QNAP外にスレーブを用意するくらいならNASとビルドスレーブマシンは兼任させるのがベスト。
という判断で、PCサーバに落ち着いています。
ディストリは未だにUbuntu 14.04.5 LTS。そろそろdist-upgradeせねば…。
<table style="border:solid 2px #FFFFFF">
  <thead>
    <tr>
      <th style="background:#ACB9BF" colspan="3">サーバサイド</th>
      <th style="background:#ACB9BF" colspan="3">クライアントサイド</th>
    </tr>
    <tr>
      <th style="background:#ACB9BF">名称</th>
      <th style="background:#ACB9BF">価格</th>
      <th style="background:#ACB9BF">概要</th>
      <th style="background:#ACB9BF">名称</th>
      <th style="background:#ACB9BF">価格</th>
      <th style="background:#ACB9BF">概要</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td style="background:#E2EDF2">Jenkins</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">説明が不要なくらい超有名なCIシステム。<br />デジカメ写真や動画を撮影日ディレクトリに振り分けたり、写真を<a href="http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/">Amazon Cloud Service</a>に同期してくれたり、<a href="http://tech.uribou.tokyo/python_flickrapi_2/">flickrに自動でアップした上でExifデータを読み取って月ごとのアルバムを自動生成</a>したり、撮った動画をDLNA経由で配信できる形式に自動変換してくれる。</td>
      <td style="background:#E2EDF2">-</td>
      <td style="background:#F0F6F8">-</td>
      <td style="background:#F0F6F8">-</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">Bittorrent Sync</td>
      <td style="background:#F0F6F8" rowspan="2">free(機能制限あり)</td>
      <td style="background:#F0F6F8" rowspan="2">Dropboxのようなサービスを自前のPCサーバで実現できる。<br />無料で使用するには一部機能制限を受け入れる必要がある。</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/us/app/bittorrent-sync/id665156116?mt=8&amp;at=1000locx">BitTorrent Sync</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">iOSアプリ。<br />撮った写真や動画を自前PCサーバと同期できる。無線LAN接続時のみ同期させて通信量を節約することも可能。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=com.resilio.sync">Resilio Sync</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。<br />アプリ名はiPhone版と多少異なるが、リリース元、機能共に同じっぽい。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">mpd</td>
      <td style="background:#F0F6F8" rowspan="2">free</td>
      <td style="background:#F0F6F8" rowspan="2">ALSAデバイス用音楽Jukeboxサーバ。<br />ローカルに接続したALSAデバイス経由で、ローカルなスピーカから音楽再生が可能。&lt;!-- <br /><a href="https://wiki.archlinux.org/index.php/Music_Player_Daemon/Troubleshooting#Binding_to_IPV6_before_IPV4">Binding_to_IPV6_before_IPV4</a>に注意。 --&gt;</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/us/app/mpdluxe/id991758069?mt=8&amp;at=1000locx" target="_blank" rel="noopener">MPDluxe</a></td>
      <td style="background:#F0F6F8">$2.99</td>
      <td style="background:#F0F6F8">iOSアプリ。<br />mpdをリモート操作できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=com.namelessdev.mpdroid" target="_blank" rel="noopener">MPDroid</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。<br />mpdをリモート操作できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">Supersonic</td>
      <td style="background:#F0F6F8" rowspan="2">free</td>
      <td style="background:#F0F6F8" rowspan="2">Subsonicクローン。<br />WebベースのMusic Streamer。JukeboxやPodcast Receiver機能も備える。</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/jp/app/avsub/id923424694?mt=8&amp;uo=4&amp;at=1000locx" target="_blank" rel="noopener">AVSub</a></td>
      <td style="background:#F0F6F8">$3.99 (480円)</td>
      <td style="background:#F0F6F8">iOSアプリ。<br />Supersonicからのストリーミングを受けて音楽を再生できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=org.moire.ultrasonic" target="_blank" rel="noopener">UltraSonic</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。<br />Supersonicからのストリーミングを受けて音楽を再生できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/ps3mediaserver/ps3mediaserver">PS3 media server</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">動画や写真、音楽データをDLNAクライアントに配信できる。</td>
      <td style="background:#E2EDF2">色々</td>
      <td style="background:#F0F6F8">-</td>
      <td style="background:#F0F6F8">DLNAクライアントアプリ、デバイス。（省略）</td>
    </tr>
  </tfoot>
</table>
*※：日本円価格は為替レートにより変動します。*
### Jenkins
PCサーバは少し凝ったことを自動化していて、udevでSDカードの挿抜をフックしてJenkinsにイベント飛ばすようにしています。
JenkinsはSDカードから写真や動画をローカルにコピー、撮影日時に応じてディレクトリツリーを生成、振り分けて整理してくれた後、写真はRAWデータごと[Amazon Cloud Service](http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/)と同期してバックアップします。
また、写真はJPEG画像のみ、[flickrに自動でアップした上で、Exifデータを読み取って月ごとのアルバムを自動生成](http://tech.uribou.tokyo/python_flickrapi_2/)するようにしました。
Amazon Cloud Drive同様、flickrも **写真をオリジナル画質のままアップロードできる** ので重宝しています。
### Bittorrent Sync
DropBoxのようなサービスを自前のPCサーバで提供することができます。
無料で使用するには、同期するファイルを子フォルダに配置できないという宣言はありますが、同期ファイルのサイズ制限や容量制限はない（自前のPCサーバ容量が許す限り）ので、Dropboxよりはある意味自由度があるのかなと。
iPhoneの写真や動画をサーバに飛ばし、Jenkinsさんに処理させて自動整理するようにしています。
### mpd
ALSAに対応したサウンドデバイス経由で音楽再生を可能にするJukeboxサーバアプリケーションです。
クライアントアプリはiPhone、Androidの両方からリリースされているので、特に迷うことはないと思います。
### Supersonic
手持ちの音楽ファイルを、3G/4G回線を経由したVPN回線でストリーミング配信することができます。
このためにPCサーバを稼働させ続けるのでは電力が勿体無いので、[rpwcweb](https://github.com/dodo5522/rpwc)のような、外部から電源操作できるようなサービスがあると便利。
AndroidのSubsonicクライアントアプリは複数の選択肢がありましたが、無料アプリでSupersonicとの組み合わせで正常に音楽再生できたのは[Ultrasonic](https://play.google.com/store/apps/details?id=org.moire.ultrasonic)だけでした。他は**「サーバアドレスが不正」**などのエラーで再生できませんでした。Subsonicクローン対策がされているのかも…？
### PS3 media server
名前から分かる通り、PlayStation3のDLNAクライアントに配信するためのDLNAサーバです。
でも実際は規格を満たしていれば何でも良いので、、DLNAクライアントはiPhoneだろうがTVだろうが再生可能です。
主に旅の思い出動画を家族で鑑賞する際に使用しています。
## まとめ
カメラやビデオなど、記録を残すデバイスがデジタル化するにつれて、その記録したデータをどう手軽に参照するかが問題になると思います。
特に記録を残すデバイスが１つならまだいいんですが、複数個になると収集がつきませんよね。我が家の場合は夫婦それぞれが所有するデジカメとiPhone（各２台）、ビデオカメラが１台あるという状態です。
つまり、写真撮影可能な機材は４台、動画撮影可能な機材は５台あるわけですね。
メーカーもApple、Nikon、Sonyとバラバラなので、専用のアプリケーションソフトを個別にいれて管理しようものなら、破綻するのは明白。
というわけで、メディアサーバを１台用意し、Jenkinsという便利な自動化ツールを活用して、データを一元管理して快適なデジタルライフを送りましょう。
…ちょっとやりすぎな感じもしますが。
## おまけ
上記サーバ群は主にLinux OS上に構築しています。
Linuxについて知っておいて損はないと思うので、赤本黒本片手に勉強しながらサーバを構築し、LPIC資格も取得して一石二鳥にするのがオススメです。
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01076Y8CC%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51UR5R2PsXL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01076Y8CC%2Fref%3Dnosim" target="_blank" rel="noopener">Linux教科書 LPICレベル1 Version4.0対応[Kindle版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">リナックスアカデミー中島能和 翔泳社 2015-06-23    </div><div class="booklink-link2" style="margin-top:10px"><div class="shoplinkkindle" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01076Y8CC%2F" target="_blank" rel="noopener">Kindle</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkamazon" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4798141917%2F" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                    	  	  	  	</div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00APVQ6OS%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51%2B34i71KKL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00APVQ6OS%2Fref%3Dnosim" target="_blank" rel="noopener">徹底攻略LPI 問題集 Level1/Release3 対応 徹底攻略シリーズ[Kindle版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">鳥谷部 昭寛,菖蒲 淳司,ソキウス・ジャパン インプレス 2012-11-15    </div><div class="booklink-link2" style="margin-top:10px"><div class="shoplinkkindle" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00APVQ6OS%2F" target="_blank" rel="noopener">Kindle</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkamazon" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4844327941%2F" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                    	  	  	  	</div></div><div class="booklink-footer" style="clear: left"></div></div>
今では両方ともKindle版が出てるんですね。かさばらなくて良いなぁ。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1616</wp:post_id>
		<wp:post_date><![CDATA[2016-12-03 02:06:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-02 17:06:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[recommend-diy-server-description]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%84%e3%83%bc%e3%83%ab"><![CDATA[ツール]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>超低消費電力なARMマイコンLinuxサーバとして活用できるRaspberry Pi。</p>
<p>我が家では、既に販売終了している初代の<a href="https://ja.wikipedia.org/wiki/Raspberry_Pi">Raspberry Pi 1 Model A</a>が現役で活躍中です。</p>
<p>そんな我が家の家庭内LAN上に張り巡らせた、超快適環境を提供してくれるサーバ群を紹介します。</p>
<p>というより、そろそろ整理しておかないと、壊れた時に困りそうな気がして、慌てて書き出したというのが正直なところ^^;</p>
<h1 id="raspberrypi">提供サービス一覧@Raspberry Pi</h1>
<p>低消費電力を活かして、<strong>Raspberry Piには常時稼働が必要な、それでいて負荷が少ないサービスを割り当てるのが得策</strong>です。<div style="color:#CCCCCC">OpenVPNは負荷が低いサービスに入るのか…？</div></p>
<p>一般的なマイコンより高性能とはいえ、さすがにx86 Core2/CoreiなどのCPUには劣るARM。目的が違うのでしょうがない。</p>
<p>そういうわけで、我が家では以下のサービスがRaspberry Piで稼働しています。ディストリは標準的なraspbian。</p>
<table style="border:solid 2px #FFFFFF;">
  <thead>
    <tr>
      <th style="background:#ACB9BF" colspan="3">サーバサイド</th>
      <th style="background:#ACB9BF" colspan="3">クライアントサイド</th>
    </tr>
    <tr>
      <th style="background:#ACB9BF;">名称</th>
      <th style="background:#ACB9BF;">価格</th>
      <th style="background:#ACB9BF;">概要</th>
      <th style="background:#ACB9BF;">名称</th>
      <th style="background:#ACB9BF;">価格</th>
      <th style="background:#ACB9BF;">概要</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">OpenVPN</td>
      <td style="background:#F0F6F8" rowspan="2">free</td>
      <td style="background:#F0F6F8" rowspan="2">家庭内LANに安全にアクセス。</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/us/app/openvpn-connect/id590379981?mt=8&at=1000locx">OpenVPN Connect</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">iOSアプリ。家庭内LANに安全にアクセス。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=net.openvpn.openvpn">OpenVPN Connect</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。機能はiOSアプリと同様。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2">BIND9</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">家庭内LANの名前解決に。</td>
      <td style="background:#E2EDF2">-</td>
      <td style="background:#F0F6F8">-</td>
      <td style="background:#F0F6F8">-</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/dodo5522/rpwc" target="_blank">rpwcweb</td>
      <td style="background:#F0F6F8">free(original)</td>
      <td style="background:#F0F6F8">サーバPCの電源スイッチをリモートでON/OFFできる。</td>
      <td style="background:#E2EDF2">ブラウザ</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">ChromeやFirefox。一応IEでも動作する。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/dodo5522/solar_monitor">Solar monitor</a></td>
      <td style="background:#F0F6F8">free(original)</td>
      <td style="background:#F0F6F8">DIY太陽光蓄電システムの状況を監視し、データを可視化（グラフ化）したり、呟いてくれる。</td>
      <td style="background:#E2EDF2"><a href="http://grid.rinka-blossom.com/">ブラウザ</a>,<br><a href="https://twitter.com/mybot_athome?lang=ja">Twitter</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">グラフ化したデータをブラウザで参照できる。Twitterで主要なイベントを参照できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/dodo5522/radiation_monitor" target="_blank">Radiation monitor</a></td>
      <td style="background:#F0F6F8">free(original)</td>
      <td style="background:#F0F6F8">放射線量を定点観測し、データを可視化（グラフ化）したり、呟いてくれる。</td>
      <td style="background:#E2EDF2">ブラウザ,Twitter</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">休止中</td>
    </tr>
  </tfoot>
</table>
<h2 id="openvpn">OpenVPN</h2>
<p>大量の写真や動画など、重いデータを抱えたサーバPCを外部ネットワークから隠すため、VPNを導入しています。</p>
<h2 id="bind9">BIND9</h2>
<p>でもって、家庭内LAN上のデバイスをIPで直接指定するのはイケてないので、BIND9も稼働しています。DHCPはルータにMAC毎の固定割り当て設定をしてお任せしています。</p>
<h2 id="etc">太陽光/放射線量モニタ etc.</h2>
<p>上記以外は自作のサーバアプリ群で、VPN内部に隠したサーバPCの電源をブラウザ経由でONしたり、自作ソーラー発電蓄電システムの状態を監視したり、家の周辺の放射線量を定点観測したりしています。</p>
<h1 id="pc">メディアサーバPC提供サービス</h1>
<p>VPNの後ろに隠したサーバPCでは以下のメディア関連サービスが稼働しています。</p>
<p>QNAPなどのNASを検討したこともありますが、ビデオカメラで撮影したMTS動画を標準的なMP4変換する処理など、結構重い処理をJenkinsが回すので、QNAP外にスレーブを用意するくらいならNASとビルドスレーブマシンは兼任させるのがベスト。</p>
<p>という判断で、PCサーバに落ち着いています。</p>
<p>ディストリは未だにUbuntu 14.04.5 LTS。そろそろdist-upgradeせねば…。</p>
<table style="border:solid 2px #FFFFFF">
  <thead>
    <tr>
      <th style="background:#ACB9BF;" colspan="3">サーバサイド</th>
      <th style="background:#ACB9BF;" colspan="3">クライアントサイド</th>
    </tr>
    <tr>
      <th style="background:#ACB9BF;">名称</th>
      <th style="background:#ACB9BF;">価格</th>
      <th style="background:#ACB9BF;">概要</th>
      <th style="background:#ACB9BF;">名称</th>
      <th style="background:#ACB9BF;">価格</th>
      <th style="background:#ACB9BF;">概要</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td style="background:#E2EDF2">Jenkins</td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">説明が不要なくらい超有名なCIシステム。<br>デジカメ写真や動画を撮影日ディレクトリに振り分けたり、撮った動画をDLNA経由で配信できる形式に自動変換してくれる。</td>
      <td style="background:#E2EDF2">-</td>
      <td style="background:#F0F6F8">-</td>
      <td style="background:#F0F6F8">-</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">Bittorrent Sync</td>
      <td style="background:#F0F6F8" rowspan="2">free(機能制限あり)</td>
      <td style="background:#F0F6F8" rowspan="2">Dropboxのようなサービスを自前のPCサーバで実現できる。<br>無料で使用するには一部機能制限を受け入れる必要がある。</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/us/app/bittorrent-sync/id665156116?mt=8&at=1000locx">BitTorrent Sync</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">iOSアプリ。<br>撮った写真や動画を自前PCサーバと同期できる。無線LAN接続時のみ同期させて通信量を節約することも可能。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=com.resilio.sync">Resilio Sync</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。<br>アプリ名はiPhone版と多少異なるが、リリース元、機能共に同じっぽい。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">mpd</td>
      <td style="background:#F0F6F8" rowspan="2">free</td>
      <td style="background:#F0F6F8" rowspan="2">ALSAデバイス用音楽Jukeboxサーバ。<br>ローカルに接続したALSAデバイス経由で、ローカルなスピーカから音楽再生が可能。<!-- <br><a href="https://wiki.archlinux.org/index.php/Music_Player_Daemon/Troubleshooting#Binding_to_IPV6_before_IPV4">Binding_to_IPV6_before_IPV4</a>に注意。 --></td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/jp/app/mpod/id285063020?mt=8&uo=4&at=1000locx" target="_blank" >MPoD</a></td>
      <td style="background:#F0F6F8">$3.99 (480円)</td>
      <td style="background:#F0F6F8">iOSアプリ。<br>mpdをリモート操作できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=com.namelessdev.mpdroid" target="_blank" >MPDroid</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。<br>mpdをリモート操作できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2" rowspan="2">Supersonic</td>
      <td style="background:#F0F6F8" rowspan="2">free</td>
      <td style="background:#F0F6F8" rowspan="2">Subsonicクローン。<br>WebベースのMusic Streamer。JukeboxやPodcast Receiver機能も備える。</td>
      <td style="background:#E2EDF2"><a href="https://itunes.apple.com/jp/app/avsub/id923424694?mt=8&uo=4&at=1000locx" target="_blank" >AVSub</a></td>
      <td style="background:#F0F6F8">$3.99 (480円)</td>
      <td style="background:#F0F6F8">iOSアプリ。<br>Supersonicからのストリーミングを受けて音楽を再生できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://play.google.com/store/apps/details?id=org.moire.ultrasonic" target="_blank" >UltraSonic</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">Androidアプリ。<br>Supersonicからのストリーミングを受けて音楽を再生できる。</td>
    </tr>
    <tr>
      <td style="background:#E2EDF2"><a href="https://github.com/ps3mediaserver/ps3mediaserver">PS3 media server</a></td>
      <td style="background:#F0F6F8">free</td>
      <td style="background:#F0F6F8">動画や写真、音楽データをDLNAクライアントに配信できる。</td>
      <td style="background:#E2EDF2">色々</td>
      <td style="background:#F0F6F8">-</td>
      <td style="background:#F0F6F8">DLNAクライアントアプリ、デバイス。（省略）</td>
    </tr>
  </tfoot>
</table>
<p><em>※：日本円価格は為替レートにより変動します。</em></p>
<h2 id="jenkins">Jenkins</h2>
<p>PCサーバは少し凝ったことを自動化していて、udevでSDカードの挿抜をフックしてJenkinsにイベント飛ばすようにしています。</p>
<p>JenkinsはSDカードから写真や動画をローカルにコピー、撮影日時に応じてディレクトリツリーを生成、振り分けて整理してくれた後、写真はRAWデータごと<a href="http://blog.rinka-blossom.com/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/">Amazon Cloud Service</a>と同期してバックアップします。</p>
<h2 id="bittorrentsync">Bittorrent Sync</h2>
<p>DropBoxのようなサービスを自前のPCサーバで提供することができます。</p>
<p>無料で使用するには、同期するファイルを子フォルダに配置できないという宣言はありますが、同期ファイルのサイズ制限や容量制限はない（自前のPCサーバ容量が許す限り）ので、Dropboxよりはある意味自由度があるのかなと。</p>
<p>iPhoneの写真や動画をサーバに飛ばし、Jenkinsさんに処理させて自動整理するようにしています。</p>
<h2 id="mpd">mpd</h2>
<p>ALSAに対応したサウンドデバイス経由で音楽再生を可能にするJukeboxサーバアプリケーションです。</p>
<p>クライアントアプリはiPhone、Androidの両方からリリースされているので、特に迷うことはないと思います。</p>
<h2 id="supersonic">Supersonic</h2>
<p>手持ちの音楽ファイルを、3G/4G回線を経由したVPN回線でストリーミング配信することができます。</p>
<p>このためにPCサーバを稼働させ続けるのでは電力が勿体無いので、<a href="https://github.com/dodo5522/rpwc">rpwcweb</a>のような、外部から電源操作できるようなサービスがあると便利。</p>
<p>AndroidのSubsonicクライアントアプリは複数の選択肢がありましたが、無料アプリでSupersonicとの組み合わせで正常に音楽再生できたのは<a href="https://play.google.com/store/apps/details?id=org.moire.ultrasonic">Ultrasonic</a>だけでした。他は<strong>「サーバアドレスが不正」</strong>などのエラーで再生できませんでした。Subsonicクローン対策がされているのかも…？</p>
<h2 id="ps3mediaserver">PS3 media server</h2>
<p>名前から分かる通り、PlayStation3のDLNAクライアントに配信するためのDLNAサーバです。</p>
<p>でも実際は規格を満たしていれば何でも良いので、、DLNAクライアントはiPhoneだろうがTVだろうが再生可能です。</p>
<p>主に旅の思い出動画を家族で鑑賞する際に使用しています。</p>
<h1 id="">まとめ</h1>
<p>カメラやビデオなど、記録を残すデバイスがデジタル化するにつれて、その記録したデータをどう手軽に参照するかが問題になると思います。</p>
<p>特に記録を残すデバイスが１つならまだいいんですが、複数個になると収集がつきませんよね。我が家の場合は夫婦それぞれが所有するデジカメとiPhone（各２台）、ビデオカメラが１台あるという状態です。</p>
<p>つまり、写真撮影可能な機材は４台、動画撮影可能な機材は５台あるわけですね。</p>
<p>メーカーもApple、Nikon、Sonyとバラバラなので、専用のアプリケーションソフトを個別にいれて管理しようものなら、破綻するのは明白。</p>
<p>というわけで、メディアサーバを１台用意し、Jenkinsという便利な自動化ツールを活用して、データを一元管理して快適なデジタルライフを送りましょう。</p>
<p>…ちょっとやりすぎな感じもしますが。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941138355]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://farm5.staticflickr.com/4317/36004933166_826777ca90_z_d.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663165]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2702]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2703]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2704]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2705]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2706]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2707]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2708]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2709]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2710]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2711]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2712]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2713]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2714]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>収穫祭@2016年11月26日 - あまり経験がないヤーコンの食べ方３つとその食感。</title>
		<link>https://tech.blog.uribou.me/harvest-festival-2016-11-26/</link>
		<pubDate>Sat, 26 Nov 2016 03:22:20 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/harvest-festival-2016-11-26/</guid>
		<description></description>
		<content:encoded><![CDATA[今回はただの日記。収穫祭レポートです。
…といっても、写真の野菜たちはそのほとんどがお隣区画の方からの頂き物。ありがたや。
我が家の区画は育ちが悪く、まだ食べられる状態ではありません。特にチンゲンサイ。なんでこんなに立派に育つんだろう…？こういうところで技術の差を感じる。
<img src="https://farm6.staticflickr.com/5498/31104593572_d88b2ee521_z_d.jpg" alt="" />
こちらもお隣さん区画で育てていたヤーコン。大漁すぎて、むしろもっと持って帰ってと、たくさん頂きました。
でもこれ、どうやって食べるの…？
<h1>ヤーコンとは</h1>
外観はこんなんです。
<img src="https://farm6.staticflickr.com/5531/31104592712_4919bf9944_z_d.jpg" alt="" />
というか、そもそもヤーコンって何？と思って調べてみました。
<blockquote>
  ヤーコン（英: Yac_n、学名：Smallanthus sonchifolius）はキク科スマランサス属（英語版）[1]の多年草。<br />
  根にフラクトオリゴ糖（英語版）が多く、甘みがあり、食用にされる。<br />
  ヤーコンを「アンデス・ポテト」と呼ぶ例もあるが、同じくアンデス産のジャガイモと紛らわしく、不適当である。
</blockquote>
<a href="https://ja.wikipedia.org/wiki/%E3%83%A4%E3%83%BC%E3%82%B3%E3%83%B3">出典：Wikpedia</a>。
畑指導してくれる副市長さんも、アンデスのジャガイモと言ってたなぁ。Wikipediaは不適当と言っているけども。そしてその食べ方も教えてくれました。
<h1>ヤーコンの食べ方</h1>
主に以下の３通りに調理していただくといい感じだとか。
<strong>1. 輪切り/半月切りにして酢醤油でいただく</strong><br />
<strong>2. 千切りにしてサラダにしていただく</strong><br />
<strong>3. キンピラの味付けでいただく</strong>
んで、試してみたのが1.の酢醤油。
<img src="https://farm6.staticflickr.com/5661/31134307431_1f2af478f0_z_d.jpg" alt="" />
アク抜きなしでも、渋みや臭みは皆無で楽チンです。
食感は、芋というより大根や梨のような、水分多めでシャクシャクしてる。
素材の味は…　ほぼありません^^;　無味無臭といった感じ。Wikipediaは甘みがあると言っているけど、はて。
味付けは酢醤油以外にも、醤油そのもの、カツオだし入り麺つゆ、ポン酢を試してみました。個人的には<strong>ポン酢がオススメ</strong>です。他だとちょっと物足りない気が。
<h1>嫁の感想</h1>
嫁にも食べてもらいましたが…　まぁ、可もなく不可もなく？といった感じ。
<strong>大根の代わりに千切りにしてサラダにして、中華ドレッシングかけたら美味しいかもね〜（2.）</strong>　との提案付き。
ヤーコンはいくらでもあるので、次回試してみることにします。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1618</wp:post_id>
		<wp:post_date><![CDATA[2016-11-26 12:22:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-26 03:22:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[harvest-festival-2016-11-26]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%ae%b6%e5%ba%ad%e8%8f%9c%e5%9c%92"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm6.staticflickr.com/5498/31104593572_d88b2ee521_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>今回はただの日記。収穫祭レポートです。</p>

<p>…といっても、写真の野菜たちはそのほとんどがお隣区画の方からの頂き物。ありがたや。</p>

<p>我が家の区画は育ちが悪く、まだ食べられる状態ではありません。特にチンゲンサイ。なんでこんなに立派に育つんだろう…？こういうところで技術の差を感じる。</p>

<p><img src="https://farm6.staticflickr.com/5498/31104593572_d88b2ee521_z_d.jpg" alt="" /></p>

<p>こちらもお隣さん区画で育てていたヤーコン。大漁すぎて、むしろもっと持って帰ってと、たくさん頂きました。</p>

<p>でもこれ、どうやって食べるの…？</p>

<h1 id="">ヤーコンとは</h1>

<p>外観はこんなんです。</p>

<p><img src="https://farm6.staticflickr.com/5531/31104592712_4919bf9944_z_d.jpg" alt="" /></p>

<p>というか、そもそもヤーコンって何？と思って調べてみました。</p>

<blockquote>
  <p>ヤーコン（英: Yac_n、学名：Smallanthus sonchifolius）はキク科スマランサス属（英語版）[1]の多年草。 <br />
  根にフラクトオリゴ糖（英語版）が多く、甘みがあり、食用にされる。 <br />
  ヤーコンを「アンデス・ポテト」と呼ぶ例もあるが、同じくアンデス産のジャガイモと紛らわしく、不適当である。</p>
</blockquote>

<p><a href="https://ja.wikipedia.org/wiki/%E3%83%A4%E3%83%BC%E3%82%B3%E3%83%B3">出典：Wikpedia</a>。</p>

<p>畑指導してくれる副市長さんも、アンデスのジャガイモと言ってたなぁ。Wikipediaは不適当と言っているけども。そしてその食べ方も教えてくれました。</p>

<h1 id="">ヤーコンの食べ方</h1>

<p>主に以下の３通りに調理していただくといい感じだとか。</p>

<p><strong>1. 輪切り/半月切りにして酢醤油でいただく</strong> <br />
<strong>2. 千切りにしてサラダにしていただく</strong> <br />
<strong>3. キンピラの味付けでいただく</strong>  </p>

<p>んで、試してみたのが1.の酢醤油。</p>

<p><img src="https://farm6.staticflickr.com/5661/31134307431_1f2af478f0_z_d.jpg" alt="" /></p>

<p>アク抜きなしでも、渋みや臭みは皆無で楽チンです。</p>

<p>食感は、芋というより大根や梨のような、水分多めでシャクシャクしてる。</p>

<p>素材の味は…　ほぼありません^^;　無味無臭といった感じ。Wikipediaは甘みがあると言っているけど、はて。</p>

<p>味付けは酢醤油以外にも、醤油そのもの、カツオだし入り麺つゆ、ポン酢を試してみました。個人的には<strong>ポン酢がオススメ</strong>です。他だとちょっと物足りない気が。</p>

<h1 id="">嫁の感想</h1>

<p>嫁にも食べてもらいましたが…　まぁ、可もなく不可もなく？といった感じ。</p>

<p><strong>大根の代わりに千切りにしてサラダにして、中華ドレッシングかけたら美味しいかもね〜（2.）</strong>　との提案付き。</p>

<p>ヤーコンはいくらでもあるので、次回試してみることにします。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1619]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6037299926]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648891]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>189</wp:comment_id>
			<wp:comment_author><![CDATA[отваряне на профил в binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[14236623@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/bg/register?ref=PORL8W0Z</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.156]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-25 22:52:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-25 13:52:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>GhostからWordpressへ （１） 〜引越しプランを練る〜</title>
		<link>https://tech.blog.uribou.me/ghost_to_wordpress_plan/</link>
		<pubDate>Sun, 11 Jun 2017 23:45:09 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1188</guid>
		<description></description>
		<content:encoded><![CDATA[Ghostをご存知でしょうか。
[The Simple Alternative to WordPress](https://ghost.org/vs/wordpress/)を謳う、nodejsで書かれたブログシステムです。
管理画面はこんな感じ。
![](https://farm5.staticflickr.com/4240/35125189872_52de4e8123_z_d.jpg)
ブログを始めるにあたって、jsもあまり触ったことがないくせに無謀にもGhostを選択してしまい、管理コストが膨れ上がってきた次第…。
ということで、巷にノウハウ溢れるWordpressに移行しました。
## Ghost to Wordpress移行手順の概略
この手の情報は先駆者がいるもんなので、ありがたく参考にしよう…
と思ったら、ヒットする記事のほとんどが、WorpressからGhostへの移行記事。
GhostからWordpressに移行するのにトライした記事は意外と少なく、そのものズバリな記事は海外のものでした。
もちろん英語。
* [Migrating from Ghost to WordPress Step by Step](http://ahmed.amayem.com/moving-from-ghost-to-wordpress-step-by-step/)
要するに、
1. *Ghostからデータをjsonで抜き出し*
2. *jsonをCVS変換し*
3. *Markdownを解釈可能な状態のWordpressにインポートする*
というのが手順の概略。
この流れに沿っていれば、基本的にどのツールを使っても問題なし。
## Ghost to Wordpressプランを練る
ブログシステム移行のついでにドメインも変えたくなったので、進め方を考えます。
ドメインを変える＝URLが変わるので、検索上位にランクされている記事があっても、変えた瞬間にリセットされてしまう…。
そんな事態は避けたいので、このようにしました。
1. *旧ドメインのTTL（Time To Live）を最少にして、各地に散らばったDNSキャッシュ書き換え間隔が置き換わるのを待つ*
1. *Ghostデータをjson形式でエクスポート、CSVに変換*
1. *WordpressプラグインReally Simple CSV Importer仕様のカラムを指定、slugをGhost時と同一にする*
1. *Wordpressを立ち上げ、パーマリンク設定をGhostと同一にした上で、CSV形式データをインポート*
1. *DNSキャッシュ書き換え間隔が置き換わったであろう時間経過後、新ドメインURLへ301リダイレクトするWebサーバを、旧ドメインのGhostブログサーバと置き換える*
最後のステップ、この形に落ち着くまでが手こずった…。
[Ghostにリダイレクト機能が追加されたのはかなり最近のことで](http://qiita.com/7pepper/items/8387197e424630099227)、自分が使用していたバージョンは対応しておらず…。
ブログ移行のために今後使うことのないGhostをバックポートとかしたくないので、他の方法を取ることにしたのでした。
[次回](http://tech.uribou.tokyo/ghost_to_wordpress_switching_domain/)に続く。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1188</wp:post_id>
		<wp:post_date><![CDATA[2017-06-12 08:45:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-11 23:45:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ghost_to_wordpress_plan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ghost"><![CDATA[ghost]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="post_tag" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3"><![CDATA[プラグイン]]></category>
		<category domain="post_tag" nicename="%e3%83%96%e3%83%ad%e3%82%b0"><![CDATA[ブログ]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://farm5.staticflickr.com/4243/34447671994_5635b5c214_z_d.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[ghost_to_wordpress_translate_data]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955143296]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577290]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>太陽光オフグリッドシステムの作りかた</title>
		<link>https://tech.blog.uribou.me/how_to_make_diy_offgrid/</link>
		<pubDate>Sun, 09 Apr 2017 06:04:57 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/how_to_make_diy_offgrid/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>原発依存の生活見直しの一環で、約半年前の2015年5月から始めたDIYオフグリッド化。
自家発電した電気で1500W家電が使えるようになったことに加え、<a href="http://grid.uribou.me/">発電量見える化システム</a>も一応完成し、ネットでどこからでも発電状況をチェックできるようになったので、そこそこ満足しています。
<a href="http://grid.uribou.me/"><img src="https://farm5.staticflickr.com/4209/35086175820_e43aa99a9d_z_d.jpg" alt="" /></a>
とはいえ、不満もあり。
そもそも発電量が足りず、使用電力量の半分は外から買っている状況ということで、完全にはオフグリッドできていません。
でも、誰でも電力会社依存を断ち切れる可能性があることを多くの人に知ってもらいたいという目的で、賃貸住まいの自分がDIYオフグリッドシステムを製作した過程を紹介しようと思います。</p>
<h2>参考資料</h2>
<p>1kWの太陽光パネルを使い、DIYでオフグリッドシステムを製作する過程を詳細かつ具体的に解説した本。とても参考になります。
</p>
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4827720762%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51tukBu8eeL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4827720762%2Fref%3Dnosim" target="_blank" rel="noopener">自分で作る蓄電型発電所 1kW独立型太陽光発電―付・雨水の飲料水化</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">角川 浩 パワー社 2013-07-01    </div><div class="booklink-link2" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4827720762%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12378738%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                      </div></div><div class="booklink-footer" style="clear: left"></div></div>
<p>こちらの本は、上記の本より具体性に欠けますが、導入の勉強のためにはとてもいい内容だと思います。太陽光だけでなく風力や水力の例もあって、そこまで個人でやるかと驚きます。</p>
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4881818341%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/612-YheeltL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4881818341%2Fref%3Dnosim" target="_blank" rel="noopener">自分で作る 自家発電 (大人の週末工作)</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">中村昌広 総合科学出版 2013-09-25    </div><div class="booklink-link2" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4881818341%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12481357%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                                     </div></div><div class="booklink-footer" style="clear: left"></div></div>
<h2>目指すゴール</h2>
<p><img src="https://farm5.staticflickr.com/4358/36333506751_1053e31ffc_o_d.jpg" alt="" />
「オフグリッド」と言うと大変そうなイメージがありますが、構造は意外と単純。
間違えてはいけないポイントを抑えた上で、作り切る根気または覚悟をもってすれば、本当に簡単です。
ただ、本当に簡単な仕組みで済ませるためにも、売電はしません。
売電するには、従来の買電とは別の契約が必要になる上、高額なパワーコンディショナを設置する必要があるため、システムが複雑かつ高額になり、個人の手に負えなくなります。
そもそも買取価格を政府（というより電力会社）に握られ、依存関係を残したままでは、本来の目的が果たせません。
売電はせずに、気楽に安価で構築可能な蓄電がオススメです。</p>
<h2>必要な機材</h2>
<p><a data-flickr-embed="true" href="https://www.flickr.com/gp/29110932@N07/4T3832" title="オフグリッド上映会システム構成案"><img src="https://c1.staticflickr.com/3/2944/33090154284_3d40c54d24.jpg" width="500" height="375" alt="オフグリッド上映会システム構成案"></a>
ざっくり言うと、以下の４つを揃えて繋げるだけで、オフグリッドシステムの完成です。</p>
<ol>
<li>太陽光パネル</li>
<li>蓄電池</li>
<li>チャージコントローラ<a href="//standard-project.net/solar/words/ept.html)）">^n</a>　→詳細は<a href="http://tech.uribou.tokyo/how-to-select-charge-controller/">こちら</a></li>
<li>正弦波インバータ<a href="//standard-project.net/solar/words/ept.html)）">^n</a>　→詳細は<a href="http://tech.uribou.tokyo/how-to-select-charge-controller/">こちら</a>
繋げばいいとは言っても、最大電流量を想定した、適切な太さの電線を選ぶ必要があります。
電流量に対して電線が細すぎると発火することもあるので、特に注意が必要です。
この辺りの詳細は、<a href="http://tech.uribou.tokyo/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha/">電気工事士の試験</a>で出題される許容電流表を参考にしてください。</li>
</ol>
<h2>見込み発電量の計算</h2>
<p><img src="https://farm5.staticflickr.com/4367/36333069011_e1bb05dedd_o_d.jpg" alt="" />
本来なら使用する家電の消費電力量から逆算して、曇りや雨の日の分を考慮した容量の蓄電池を確保し、それを充電するのに必要な容量の太陽光パネルを揃えて、チャージコントローラを選定、といった流れで考えるんでしょうけど…
我が家は南西向きの庭付きアパートで、洗濯物を干すには程良く良好な日当たり具合ですが、太陽光発電向きな直射日光は夏の晴天であっても1日5〜6時間しか当たりません。
さらに、庭の広さ的に300W程度の太陽光パネル2枚が限界。
ということで、合計600Wのパネルが発電可能な電力量を貯めて使い切るのに必要な機材を、以下のような流れで揃えていきました。</p>
<ol>
<li>曇りや雨の日も考慮して、1日平均3時間程度の日光が当たると仮定し、300W x 2枚 x 3時間 / 日 = 1.8kWh/日の発電量になるはず。</li>
<li>上記発電量を貯める蓄電池は、蓄電容量の50%を超えない範囲で使うとして（蓄電池の寿命を縮めるので…）、倍の3.6kWhが必要。</li>
<li>チャージコントローラはMPPT方式<a href="//standard-project.net/solar/words/ept.html)）">^n</a>なので、最大電流値から必要な電線の太さを割り出し、電線管に収めた場合の電流減少係数も考慮して計算。
これらの計画（というより勉強？）、部品集めに１ヶ月くらい要しましたかね…。</li>
</ol>
<h2>組み立てと設置</h2>
<p>蓄電池をバッテリーボックスに収め、パネルの角度が30°になるように架台を組み立てます。
というより事前にそうなるように架台用の単管パイプ長さを切り揃えるんですけどね。
架台は、大人２人が鉄棒代わりにぶら下がっても大丈夫なくらいの強度です。
<img src="https://farm1.staticflickr.com/730/22951003390_6fb32b2b90_z_d.jpg" alt="基礎" />
組み上げた架台にパネルを載せます。
1枚あたり18.6kgあるので、1人で持ち上げて載せるのは、なかなか骨が折れました…。
奥に見えるのは当時2歳の娘なので、力仕事では戦力にならず…　でも色々と手伝おうとしてくれました。感謝。
<img src="https://farm1.staticflickr.com/778/23246846115_6b302c0b24_z_d.jpg" alt="組み立て中" />
下の写真が完成図です。
<img src="https://farm1.staticflickr.com/591/22619744243_069a6bfac8_z_d.jpg" alt="組み立て完了" /></p>
<h2>使用感と今後について</h2>
<p><img src="https://farm1.staticflickr.com/641/23017019892_30bd5ae4f7_z_d.jpg" alt="" />
正弦波インバータは1500Wの容量があるので、ドライヤー（1400W）、電子レンジ（1470W）、炊飯器（1430W）全て使えます。
ただ、やっぱり600W程度の太陽光パネルでは発電量が足りず、一度蓄電池を使い切ると再充電に２日はかかってしまいます…。
完全オフグリッドまでの道は遠い。
あと、「オフグリッド化するとお得なのか？」　とよく聞かれますが、費用的には得しません。多分。
蓄電池の耐用年数とかもありますしね。
でも、そもそもコスト削減が目的ではなく、原発や電力会社への依存を減らすのが目的なんで。
今後の目標としては、家庭の消費電力をもう少し減らした上で、太陽光パネルをもう２〜３枚増強して、完全オフグリッド化することですが…　今住んでるアパートじゃ無理だー。どうしたものか。</p>
<h2>お世話になったお店とNPOの方々</h2>
<p>必要な機器の入手にあたっては、以下の方々に非常にお世話になりました（敬称略）。</p>
<ul>
<li><a href="http://www.msolarsys.co.jp/">エムソーラーシステム株式会社</a>
<ul>
<li>耐久性、発電効率が良いSunPower社製の太陽光パネルを1枚単位で取り扱います</li>
</ul></li>
<li><a href="http://www.offgrid-child.com/">NPO法人 非電化地域の人々に蓄電池をおくる会</a>
<ul>
<li>劣化の少ない、使用済み蓄電池の再生、リユース販売をされています</li>
<li>HPに載っていない蓄電池も多数あるので、組もうとしているシステムの情報から、蓄電池選定の相談に乗って頂ける</li>
<li>最近では、太陽光パネルのアウトレット品も取り扱っています</li>
</ul></li>
<li><a href="http://oyaide.com/catalog/">オヤイデ電気</a>
<ul>
<li>様々な太さのケーブルを1m単位で切り売りしてくれる上、それをネットショップ経由で購入できるという、とても有難いお店です</li>
</ul></li>
<li><a href="http://www.natural-sky.net/">ナチュラルスカイネットワーク</a>
<ul>
<li>各種チャージコントローラ、太陽光パネル、正弦波インバータを取り扱います</li>
<li>他店と比べてTS−MPPTシリーズの値段が若干安い</li>
<li>組みたいシステムの構成を伝えると、コントローラ選定の相談に乗ってくれます</li>
</ul></li>
<li><a href="http://www.chikuden-sys.com/">蓄電システム.com</a>
<ul>
<li>各種チャージコントローラ、太陽光パネル、正弦波インバータを取り扱います</li>
<li>MPPT形式チャージコントローラの品揃え豊富です
チャージコントローラや正弦波インバータは、Amazonで買い揃えることもできます。</li>
</ul></li>
</ul>
<h3>チャージコントローラ</h3>
<p>TS-MPPT-30/45/60全て日本のアマゾンで取り扱っていますね。
数字は最大充電流量を示します。
また、Ethernet経由での情報取得はTS-MPPT-60のみサポートしているので、ご注意ください。</p>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" rel="noopener">ソーラーチャージコントローラー TS-MPPT-60 Morningstar社　桐生保証有　日本語取扱い説明書付き</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> Morningstar社     </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-60%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-60%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h3>正弦波インバータ</h3>
<p>太陽光で蓄電した電気は直流なので、家電製品を使うには交流に変換する必要があります。
その役割を担うのが正弦波インバータです。
品質面で評価が高い、電菱製がオススメ。
型番に付いている124は24V用、112は12V用を示しますが、<strong>24Vでシステムを組むことを強くお勧めします</strong>。
1500Wまでくると、蓄電池から取り出す電流の最大値が 1500W / 12V = 125A にもなり、これを許容する電線の太さは <strong>38sq (mm^2)</strong> （直径に直すと約7mm）にもなってしまうため、太くて重い電線を引き回すことになり、けっこう大変です。
24Vであれば、この最大電流値が  1500W / 24V = 62.5A と半分になり、必要な電線太さも <strong>14sq (mm^2)</strong> （直径に直すと約4mm）まで細く、軽くなります。</p>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KLV22EU%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/41L8EinewNL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KLV22EU%2Fref%3Dnosim" target="_blank" rel="noopener">COTEK(コーテック) 正弦波インバーター 出力1500W/12V 周波数50/60Hz 歪み率3%以下 SKシリーズ SK1500-112</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> COTEK(コーテック)     </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 0 no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSK1500-112%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 -50px no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSK1500-112%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KLV2AEW%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/41L8EinewNL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KLV2AEW%2Fref%3Dnosim" target="_blank" rel="noopener">COTEK(コーテック) 正弦波インバーター 出力1500W/24V 周波数50/60Hz 歪み率3%以下 SKシリーズ SK1500-124</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> COTEK(コーテック)     </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 0 no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSK1500-124%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 -50px no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSK1500-124%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h2>おまけ</h2>
<p>すでに使っている人も多いと思いますが、家庭の消費電力量を知るには、東京電力管轄下であれば<a href="https://www.kakeibo.tepco.co.jp/campaign201505/sp/index.html?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=Brand&amp;amp;re_adpcnt=7xl_w2H&amp;amp;device=m">電気家計簿</a>が便利です。
月毎の消費電力量や電力料金の推移を知ることができ、CSVファイル形式でデータをダウンロードすることもできます。
以下の表は、我が家の去年の消費電力量です。1日12〜15kWhを消費していたことが分かります。
<img src="https://farm6.staticflickr.com/5766/23029247110_87b1c47e2e_z_d.jpg" alt="" />
視覚的に分かりやすいグラフも描画してくれます。
<img src="https://farm1.staticflickr.com/759/22957118079_dea9291678_z_d.jpg" alt="" />
これを見てわかるように、オフグリッド化を始めた5〜6月に、買電量が急激に落ちてます。
特に6月の電力料金は、去年の8000円から半額の4000円になりました。意外とオフグリッドシステムの効果覿面だったのは自分でも驚きです。
電力会社のシステムを活用して、電力会社のシステムから脱却しましょ〜。</p>
<p><a href="//standard-project.net/solar/words/ept.html)）">^n</a>: 太陽光パネルの最大電力量で蓄電池を充電する方式。単純に言うと、300W太陽光パネル（50V, 6A）で12Vの蓄電池を充電する場合、PWM方式の場合は最大でも6Aの電流量でしか充電できないが、MPPT方式であれば　300W / 12V = 25Aの電流量で充電できる、といった感じ。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1456</wp:post_id>
		<wp:post_date><![CDATA[2017-04-09 15:04:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-09 06:04:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how_to_make_diy_offgrid]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>イケダハヤトさんのテンプレをお借りしましたm(_ _)m</p>
<p>原発や電力会社への依存から少しでも脱却したい、という思いから、約半年前の2015年5月から始めたDIYオフグリッド化。</p>
<p>今では、自家発電した電気で、<a href="http://blog.rinka-blossom.com/xu-dian-gabu-rimasu/">普通に家電が使えるようになりました</a>。</p>
<p>発電量を<a href="http://grid.rinka-blossom.com">スマホから見える化</a>するためのシステムもRaspberry Piを活用して自作したので、個人的には大満足。</p>
<p><a data-flickr-embed="true" data-footer="true"  href="https://www.flickr.com/photos/29110932@N07/25187103752/in/photolist-EnGurw-EpRc2R-ExDKGR-DmCGb7-Eb8234-BRVKeE-BS46Mi-CfWgZz-CM8FeA-CPrrok-CG93W8-CPrqAi-CL3zyx-CAsaUh-BNuqff-CcvcJD-CxtY59-CxtXYC-CH2B1k-CEHXvh-CmFNjJ-BhzG4E-BhzG4u-AWJfMt-Bs1xBS-BLBX74-BAGPD4-BBWRry-AF8vJc-AF2jAd-BvfFKk-BvfFGK-B531Kt-AF2joE-BvfFBe-AF2j9m-AEa1Kn-BzauU3-BrNAYs-B61UQE-AYDeoF-BoR1wC-AsQ6Up-AY6TH1-BqfarD-AM3iJR-AJJ5aH-AJHS4t-B4Wf7y-AQ6io9" title="すべての写真-122"><img src="https://c1.staticflickr.com/2/1537/25187103752_16a71ce3ae_z.jpg" width="640" height="361" alt="すべての写真-122"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>
<p>ただし、オフグリッドと言いながら、実際は東電管理の送電網に頼ったままなんですけどね…。電力会社はミツウロコグリーンエネルギーに変えましたが。</p>
<p>ご参考↓</p>
<ul>
<li><a href="http://blog.rinka-blossom.com/tuo-dong-jing-dian-li-wozhen-jian-nikao-eru/">脱・東京電力を真剣に考え始める。</a></li>
<li><a href="http://blog.rinka-blossom.com/zai-eneqie-riti-ewan-liao/">さよなら東電。再エネ切り替え完了しました。</a></li>
<li><a href="http://blog.rinka-blossom.com/dian-li-xiao-mai-zi-you-hua/">電力会社を乗り換えたら停電リスクが高まるって？</a></li>
</ul>
<p>それでも、とりあえず半分オフグリッドを謳ってしまうことにしました。</p>
<p>この記事は製作過程を簡単に紹介したもので、賃貸住まいでも電力会社依存を断ち切る可能性があることを多くの人に知ってもらい、挑戦する人が増えていくといいなと思って書きました。</p>
<h1 id="">参考資料</h1>
<p>1kWの太陽光パネルを使い、DIYでオフグリッドシステムを製作する過程を詳細かつ具体的に解説した本。とても参考になります。</p>
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4827720762%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/51tukBu8eeL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4827720762%2Fref%3Dnosim" target="_blank" >自分で作る蓄電型発電所 1kW独立型太陽光発電―付・雨水の飲料水化</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">角川 浩 パワー社 2013-07    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4827720762%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12378738%2F" target="_blank" >楽天ブックス</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                        </div></div><div class="booklink-footer"></div></div></div>
<p>こちらの本は、上記の本より具体性に欠けますが、導入の勉強のためにはとてもいい内容だと思います。太陽光だけでなく風力や水力の例もあって、そこまで個人でやるかと驚きます。</p>
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4881818341%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/612-YheeltL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4881818341%2Fref%3Dnosim" target="_blank" >自分で作る 自家発電 (大人の週末工作)</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">中村昌広 総合科学出版 2013-09-25    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4881818341%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12481357%2F" target="_blank" >楽天ブックス</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div>                                        </div></div><div class="booklink-footer"></div></div></div>
<h1 id="">目指すゴール</h1>
<p>オフグリッドというと、とても大変そうなイメージがありますが、構造は単純なので、意外と簡単です。</p>
<p>走り出す前の下調べ（目標発電量とか）、部品探し、ほんの少しの勇気（嫁さんに怒られる可能性とか）、最後までやり切る根気、間違えてはいけないポイントを抑える必要はありますが…。</p>
<p>ちなみに、売電はしません。</p>
<p>今現在の売値が維持される保証は全くありませんし、価格や送電網を電力会社に握られたままでは、当初の目的が果たせないので。</p>
<p>それに、売電に必要なシステムが複雑かつ高額になり、個人の手に負えなくなるので、気楽で安価に構築できるオフグリッドの方がオススメです。</p>
<h1 id="">必要な機材</h1>
<p>ざっくり言うと、以下の４つを揃えて繋げれば、オフグリッドシステムが出来上がります。各機器の詳細は別記事にて触れるつもり。</p>
<ol>
<li>太陽光パネル  </li>
<li>蓄電池  </li>
<li>チャージコントローラ<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>　<a href="http://blog.rinka-blossom.com/how-to-select-charge-controller/">詳細はこちら</a>  </li>
<li>正弦波インバータ<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li>
</ol>
<p>機器の接続は、ものすごく単純な図にするとこんな感じ。</p>
<p><a data-flickr-embed="true"  href="https://www.flickr.com/gp/29110932@N07/4T3832" title="オフク_リット_上映会システム構成案"><img src="https://c1.staticflickr.com/3/2944/33090154284_3d40c54d24.jpg" width="500" height="375" alt="オフク_リット_上映会システム構成案"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>
<p>繋げばいいとは言っても、最大電流量を想定した、適切な太さの電線を選ぶ必要があります。電流量に対して電線が細すぎると発火することもあるので、特に注意が必要です。</p>
<p>この辺りの詳細は、<a href="http://blog.rinka-blossom.com/dian-qi-gong-shi-shi-er-zhong-bi-ji-shi-yan-nihe-ge-suruniha/">電気工事士の試験</a>で出題される許容電流の表を見ると分かります。</p>
<h1 id="">見込み発電量の計算</h1>
<p>本来なら使用する家電の消費電力量から逆算して、曇りや雨の日の分を考慮した容量の蓄電池を確保し、それを充電するのに必要な容量の太陽光パネルを揃えて、チャージコントローラを選定、といった流れで考えるんでしょうけど…</p>
<p>我が家は南西向きの庭付きアパートで、洗濯物を干すには程良く良好な日当たり具合ですが、太陽光発電向きな直射日光は夏の晴天であっても1日5〜6時間しか当たりません。</p>
<p>そもそも庭の面積から、300W程度の太陽光パネル2枚が限界。</p>
<p>ということで、合計600Wのパネルが発電可能な電力量を貯めて使い切るのに必要な機材を揃えることにしました。</p>
<p>曇りや雨の日も考慮して、1日平均3時間程度の日光が当たると仮定し、300W x 2枚 x 3時間 / 日 = 1.8kWh/日の発電量になるはず。</p>
<p>その発電量を貯める蓄電池は、蓄電容量の50%を超えない範囲で使うとして（蓄電池の寿命を縮めるので…）、倍の3.6kWhが必要。</p>
<p>チャージコントローラはMPPT方式<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>なので、最大電流値から必要な電線の太さを割り出し、電線管に収めた場合の電流減少係数も考慮して…（以下略</p>
<p>といった感じで、少しずつ進めていきました。</p>
<p>これらの計画（というより勉強？）、部品集めに１ヶ月くらい要しましたかね…。</p>
<h1 id="">組み立てと設置</h1>
<p>蓄電池をバッテリーボックスに収め、パネルの角度が30°になるように架台を組み立てます。</p>
<p>というより事前にそうなるように架台用の単管パイプ長さを切り揃えるんですけどね。</p>
<p>架台は、大人２人が鉄棒代わりにぶら下がっても大丈夫なくらいの強度です。</p>
<p><img src="https://farm1.staticflickr.com/730/22951003390_6fb32b2b90_z_d.jpg" alt="基礎" /></p>
<p>組み上げた架台にパネルを載せます。</p>
<p>1枚あたり18.6kgあるので、1人で持ち上げて載せるのは、なかなか骨が折れました…。</p>
<p>奥に見えるのは当時2歳の娘なので、力仕事では戦力にならず…　でも色々と手伝おうとしてくれました。感謝。</p>
<p><img src="https://farm1.staticflickr.com/778/23246846115_6b302c0b24_z_d.jpg" alt="組み立て中" /></p>
<p>下の写真が完成図です。</p>
<p><img src="https://farm1.staticflickr.com/591/22619744243_069a6bfac8_z_d.jpg" alt="組み立て完了" /></p>
<h1 id="">使用感と今後について</h1>
<p>正弦波インバータは1500Wの容量があるので、ドライヤー（1400W）、電子レンジ（1470W）、炊飯器（1430W）全て使えます。</p>
<p>ただ、やっぱり600W程度の太陽光パネルでは発電量が足りず、一度蓄電池を使い切ると再充電に２日はかかってしまいます…。</p>
<p>完全オフグリッドまでの道は遠い。</p>
<p><img src="https://farm1.staticflickr.com/641/23017019892_30bd5ae4f7_z_d.jpg" alt="" /></p>
<p>あと、「オフグリッド化するとお得なのか？」　とよく聞かれますが、費用的には得しません。多分。</p>
<p>蓄電池の耐用年数とかもありますしね。</p>
<p>でも、そもそもコスト削減が目的ではなく、原発や電力会社への依存を減らすのが目的なんで。</p>
<p>今後の目標としては、家庭の消費電力をもう少し減らした上で、太陽光パネルをもう２〜３枚増強して、完全オフグリッド化することですが…　今住んでるアパートじゃ無理だー。どうしたものか。</p>
<h1 id="npo">お世話になったお店とNPOの方々</h1>
<p>必要な機器の入手にあたっては、以下の方々に非常にお世話になりました（敬称略）。</p>
<ul>
<li><a href="http://www.msolarsys.co.jp/">エムソーラーシステム株式会社</a>
<ul><li>耐久性、発電効率が良いSunPower社製の太陽光パネルを1枚単位で取り扱います</li></ul></li>
<li><a href="http://www.offgrid-child.com/">NPO法人 非電化地域の人々に蓄電池をおくる会</a>
<ul><li>劣化の少ない、使用済み蓄電池の再生、リユース販売をされています</li>
<li>HPに載っていない蓄電池も多数あるので、組もうとしているシステムの情報から、蓄電池選定の相談に乗って頂ける</li>
<li>最近では、太陽光パネルのアウトレット品も取り扱っています</li></ul></li>
<li><a href="http://oyaide.com/catalog/">オヤイデ電気</a>
<ul><li>様々な太さのケーブルを1m単位で切り売りしてくれる上、それをネットショップ経由で購入できるという、とても有難いお店です</li></ul></li>
<li><a href="http://www.natural-sky.net/">ナチュラルスカイネットワーク</a>
<ul><li>各種チャージコントローラ、太陽光パネル、正弦波インバータを取り扱います</li>
<li>他店と比べてTS−MPPTシリーズの値段が若干安い</li>
<li>組みたいシステムの構成を伝えると、コントローラ選定の相談に乗ってくれます</li></ul></li>
<li><a href="http://www.chikuden-sys.com/">蓄電システム.com</a>
<ul><li>各種チャージコントローラ、太陽光パネル、正弦波インバータを取り扱います</li>
<li>MPPT形式チャージコントローラの品揃え豊富です</li></ul></li>
</ul>
<p>チャージコントローラや正弦波インバータは、Amazonで買い揃えることもできます。</p>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" >ソーラーチャージコントローラー TS-MPPT-60 Morningstar社　桐生保証有　日本語取扱い説明書付き</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> Morningstar社     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-60%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-60%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB005PKN980%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31BKrmu51iL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB005PKN980%2Fref%3Dnosim" target="_blank" >電菱　インバーター　SK1500-112</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> 電菱     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSK1500-112%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSK1500-112%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB005PVZQYO%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31BKrmu51iL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB005PVZQYO%2Fref%3Dnosim" target="_blank" >電菱　インバーター　SK1500-124</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> 電菱     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DSK1500-124%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FSK1500-124%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<h1 id="">おまけ</h1>
<p>すでに使っている人も多いと思いますが、家庭の消費電力量を知るには、東京電力管轄下であれば<a href="https://www.kakeibo.tepco.co.jp/campaign201505/sp/index.html?utm_source=google&amp;utm_medium=cpc&amp;utm_campaign=Brand&amp;re_adpcnt=7xl_w2H&amp;device=m">電気家計簿</a>が便利です。</p>
<p>月毎の消費電力量や電力料金の推移を知ることができ、CSVファイル形式でデータをダウンロードすることもできます。</p>
<p>以下の表は、我が家の去年の消費電力量です。1日12〜15kWhを消費していたことが分かります。
<img src="https://farm6.staticflickr.com/5766/23029247110_87b1c47e2e_z_d.jpg" alt="" /></p>
<p>視覚的に分かりやすいグラフも描画してくれます。</p>
<p><img src="https://farm1.staticflickr.com/759/22957118079_dea9291678_z_d.jpg" alt="" /></p>
<p>これを見てわかるように、オフグリッド化を始めた5〜6月に、買電量が急激に落ちてます。</p>
<p>特に6月の電力料金は、去年の8000円から半額の4000円になりました。意外とオフグリッドシステムの効果覿面だったのは自分でも驚きです。</p>
<p>電力会社のシステムを活用して、電力会社のシステムから脱却しましょ〜。</p>
<div class="footnotes"><ol><li class="footnote" id="fn:1"><p>蓄電池の状態を見ながら適切に充電してくれる機器 <a href="#fnref:1" title="return to article">_</a></p></li>
<li class="footnote" id="fn:2"><p>蓄電池の直流電力を交流電力に変換してくれる機器 <a href="#fnref:2" title="return to article">_</a></p></li>
<li class="footnote" id="fn:3"><p>太陽光パネルの最大電力量で蓄電池を充電する方式。単純に言うと、300W太陽光パネル（50V, 6A）で12Vの蓄電池を充電する場合、PWM方式の場合は最大でも6Aの電流量でしか充電できないが、MPPT方式であれば　300W / 12V = 25Aの電流量で充電できる、といった感じ。 <a href="#fnref:3" title="return to article">_</a></p></li>
<li class="footnote" id="fn:4"><p>発電設備が建設・製造され、寿命を全うして廃棄・処理されるまでの一環のライフサイクルにおいて消費されるエネルギーを、その発電設備を使用することで相殺できる期間のこと（引用元：<a href="http://standard-project.net/solar/words/ept.html">太陽光発電想像情報</a>） <a href="#fnref:4" title="return to article">_</a></p></li></ol></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1668]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5941043028]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519256]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2714]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2747]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>165</wp:comment_id>
			<wp:comment_author><![CDATA[binance Sign Up]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[43635826@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/en/join?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.171]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-13 13:58:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-13 04:58:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>賃貸アパートでオフグリッドしよう。チャージコントローラの選びかた。</title>
		<link>https://tech.blog.uribou.me/how-to-select-charge-controller/</link>
		<pubDate>Sun, 09 Apr 2017 05:00:51 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/how-to-select-charge-controller/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://tech.blog.uribou.me/how_to_make_diy_offgrid/">こちら</a>で紹介している、賃貸アパートの庭に作ったオフグリッドシステム。
<a data-flickr-embed="true" href="https://www.flickr.com/gp/29110932@N07/d62W0t" title="IMG_6866"><img src="https://c1.staticflickr.com/1/591/22619744243_069a6bfac8.jpg" width="500" height="375" alt="IMG_6866"></a>
オフグリッドシステム制作にあたって、重要な部品は以下の4点です。</p>
<ul>
<li>太陽光パネル</li>
<li>チャージコントローラ</li>
<li>蓄電池</li>
<li>直流-&gt;交流インバータ または直流-&gt;直流コンバータ</li>
</ul>
<h1>チャージコントローラとは？</h1>
<p>その中でも中核を担うチャージコントーラという機器。
太陽光パネルが発電した電力を効率的に充電し、パネル側の高い電圧を電流に変換してより効率的に働き、蓄電池が満充電近くになれば流す電流を弱める、などの制御をしてくれる、大変ありがたいものです。
<a href="https://www.google.co.jp/webhp?sourceid=chrome-instant&amp;rlz=1C5CHFA_enJP716JP716&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=MPPT+%E3%83%81%E3%83%A3%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9">ググるとわかります</a>が、結構な種類が販売されているので、どれにするかとても悩みます。</p>
<h1>Tristar社製TS-MPPT-60という製品</h1>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" rel="noopener">ソーラーチャージコントローラー TS-MPPT-60 Morningstar社　桐生保証有　日本語取扱い説明書付き</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> Morningstar社     </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-60%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-60%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<p>我が家の場合は <strong>Ethernet経由で発電状況などの情報を取得できるか？</strong> が重要だったので、選択肢はとても少ないんですが、それを抜きにしてもTS-MPPTシリーズが謳う97%という高い充電効率は魅力でした。
個人でも手が出る価格帯の太陽光チャージコントローラの中で、この情報取得機能について明記している機種って、意外と少ないんですよね…。
自分で電流電圧センサー付けてゴリゴリ作る選択肢も、あるにはあるんですが、正直めんどくさい。
HTTP経由で、さらに贅沢言えば何かしらのAPIを介して情報取得できるとなお良し。
という厳しい条件をクリアしたチャージコントローラが、TS-MPPT-60です。
日本で買うと、為替レートや中間マージンのせいか、10万は軽く超えちゃうんですが、US Amazonで直接買うと$539です。意外と安い。</p>
<h1>どんな情報を見ることができるか？</h1>
<p>TS-MPPT-60のIPを直接ブラウザでアクセスすると、特に何も設定しなくても以下のような情報が見ることができます。
太陽光パネルの電圧、電流量、温度、蓄電池の電圧… などなど。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/21084348354/in/photolist-CL3zyx-CcvcJD-BNuqff-CAsaUh-CxtY59-CxtXYC-CEHXvh-AY6TH1-z1bEKN-CH2B1k-CmFNjJ-BhzG4u-BhzG4E-AWJfMt-Bs1xBS-BLBX74-BAGPD4-BBWRry-AF8vJc-AF2jAd-BvfFKk-AF2joE-B531Kt-BvfFGK-BvfFBe-AF2j9m-AEa1Kn-BzauU3-BrNAYs-B61UQE-AYDeoF-BoR1wC-AsQ6Up-BqfarD-AM3iJR-AJJ5aH-AJHS4t-B4Wf7y-AQ6io9-zUoNJp-yMASPQ-z5cuqn-z5ZNJF-yMz7HN-y89Ncu-y6sNuu-wKrseb-wv9kkw-wvgGtv-vQJMrb" title="TS-MPPT_browser"><img src="https://c1.staticflickr.com/1/639/21084348354_7f6ebd887a_c.jpg" width="800" height="570" alt="TS-MPPT_browser"></a>
過去84日分の履歴も。
<a data-flickr-embed="true" href="https://www.flickr.com/gp/29110932@N07/8mr18V" title="TS-MPPT-60 履歴情報"><img src="https://c1.staticflickr.com/3/2887/33085381264_139a838af7_c.jpg" width="800" height="577" alt="TS-MPPT-60 履歴情報"></a>
ただ、肝心のAPIに関する情報が見当たりません。説明書にも…。</p>
<h1>APIはどこへ？</h1>
<p>TS-MPPT-60が提供するAPIはどうなっているのか？
残念ながら、一朝一夕にはいきませんでした。
TS-MPPT-60は、その情報を表示するためのHTMやjsをブラウザに送りつけてくるので、それを解析することで、とあるcgiをインタフェースに情報取得していることがわかるんですね。
ただそのインタフェースが返す情報が非常にlow levelなので、仕様をある程度理解した上で計算してやる必要がありました。
その計算を勝手にしてくれるPythonパッケージを<a href="https://github.com/dodo5522/tsmppt60_driver">github</a>や<a href="https://pypi.python.org/pypi/tsmppt60-driver">PyPI</a>に公開しているので、興味のある方はご参考に。
例えば以下のように実行することで、TS-MPPT-60の充電状況、ヒートシンクの温度等を取得できます。</p>
<pre><code class="python">from tsmppt60_driver import SystemStatus
print(SystemStatus("192.168.1.20").get())
{'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 18097.9},
 'Array Current': {'group': 'Array', 'unit': 'A', 'value': 1.4},
 'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 53.41},
 'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 23.93},
 'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': 3.2},
 'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', ...},
 'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 237.0},
 'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 28.6}}
</code></pre>
<h1>まとめ</h1>
<p>APIとして情報取得する必要のない方にも、TS-MPPT-60はお勧めです。
巨大なヒートシンクを備えた、でかい図体にビビりますが、それも高効率な電圧→電流変換の際に生じる熱を発散するためです。
最大60Aもの大電流を得ることができるため、TS-MPPT-<strong>60</strong>という名が付いているわけで、そこまでの電流いらないって方は、TS-MPPT-30や45といった下位機種も出ているので、そちらをチェック。
価格もより手頃になりますしね。</p>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KSZZMXC%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51p3qjpwj1L._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KSZZMXC%2Fref%3Dnosim" target="_blank" rel="noopener">ソーラーチャージコントローラー　TS-MPPT-30　桐生保証有　日本語取扱い説明書付</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> Morningstar     </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-30%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-30%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041NSXM4%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041NSXM4%2Fref%3Dnosim" target="_blank" rel="noopener">ソーラーチャージコントローラー TS-MPPT-45 Morningstar社 桐生保証有　日本語取扱い説明書付き</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> Morningstar社（アメリカ）     </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-45%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-45%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<p>ただし、TS-MPPT-30/45にはEthernet端子が付いていない、つまり先ほど述べたような情報取得や表示機能を備えていないので、ご注意を。
次回は太陽光パネルについて書こうと思います。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1464</wp:post_id>
		<wp:post_date><![CDATA[2017-04-09 14:00:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-09 05:00:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-select-charge-controller]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:60:"https://c1.staticflickr.com/1/591/22619744243_069a6bfac8.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">こちら</a>で紹介している、賃貸アパートの庭に作ったオフグリッドシステム。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/gp/29110932@N07/d62W0t" title="IMG_6866"><img src="https://c1.staticflickr.com/1/591/22619744243_069a6bfac8.jpg" width="500" height="375" alt="IMG_6866"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>オフグリッドシステム制作にあたって、重要な部品は以下の4点です。</p>

<ul>
<li>太陽光パネル</li>
<li>チャージコントローラ</li>
<li>蓄電池</li>
<li>直流->交流インバータ または直流->直流コンバータ</li>
</ul>

<h1 id="">チャージコントローラとは？</h1>

<p>その中でも中核を担うチャージコントーラという機器。</p>

<p>太陽光パネルが発電した電力を効率的に充電し、パネル側の高い電圧を電流に変換してより効率的に働き、蓄電池が満充電近くになれば流す電流を弱める、などの制御をしてくれる、大変ありがたいものです。</p>

<p><a href="https://www.google.co.jp/webhp?sourceid=chrome-instant&amp;rlz=1C5CHFA_enJP716JP716&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=MPPT+%E3%83%81%E3%83%A3%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9">ググるとわかります</a>が、結構な種類が販売されているので、どれにするかとても悩みます。</p>

<h1 id="tristartsmppt60">Tristar社製TS-MPPT-60という製品</h1>

<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" >ソーラーチャージコントローラー TS-MPPT-60 Morningstar社　桐生保証有　日本語取扱い説明書付き</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> Morningstar社     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-60%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-60%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>我が家の場合は <strong>Ethernet経由で発電状況などの情報を取得できるか？</strong> が重要だったので、選択肢はとても少ないんですが、それを抜きにしてもTS-MPPTシリーズが謳う97%という高い充電効率は魅力でした。</p>

<p>個人でも手が出る価格帯の太陽光チャージコントローラの中で、この情報取得機能について明記している機種って、意外と少ないんですよね…。</p>

<p>自分で電流電圧センサー付けてゴリゴリ作る選択肢も、あるにはあるんですが、正直めんどくさい。</p>

<p>HTTP経由で、さらに贅沢言えば何かしらのAPIを介して情報取得できるとなお良し。</p>

<p>という厳しい条件をクリアしたチャージコントローラが、TS-MPPT-60です。</p>

<p>日本で買うと、為替レートや中間マージンのせいか、10万は軽く超えちゃうんですが、US Amazonで直接買うと$539です。意外と安い。</p>

<h1 id="">どんな情報を見ることができるか？</h1>

<p>TS-MPPT-60のIPを直接ブラウザでアクセスすると、特に何も設定しなくても以下のような情報が見ることができます。</p>

<p>太陽光パネルの電圧、電流量、温度、蓄電池の電圧… などなど。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/21084348354/in/photolist-CL3zyx-CcvcJD-BNuqff-CAsaUh-CxtY59-CxtXYC-CEHXvh-AY6TH1-z1bEKN-CH2B1k-CmFNjJ-BhzG4u-BhzG4E-AWJfMt-Bs1xBS-BLBX74-BAGPD4-BBWRry-AF8vJc-AF2jAd-BvfFKk-AF2joE-B531Kt-BvfFGK-BvfFBe-AF2j9m-AEa1Kn-BzauU3-BrNAYs-B61UQE-AYDeoF-BoR1wC-AsQ6Up-BqfarD-AM3iJR-AJJ5aH-AJHS4t-B4Wf7y-AQ6io9-zUoNJp-yMASPQ-z5cuqn-z5ZNJF-yMz7HN-y89Ncu-y6sNuu-wKrseb-wv9kkw-wvgGtv-vQJMrb" title="TS-MPPT_browser"><img src="https://c1.staticflickr.com/1/639/21084348354_7f6ebd887a_c.jpg" width="800" height="570" alt="TS-MPPT_browser"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>過去84日分の履歴も。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/gp/29110932@N07/8mr18V" title="TS-MPPT-60 履歴情報"><img src="https://c1.staticflickr.com/3/2887/33085381264_139a838af7_c.jpg" width="800" height="577" alt="TS-MPPT-60 履歴情報"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>ただ、肝心のAPIに関する情報が見当たりません。説明書にも…。</p>

<h1 id="api">APIはどこへ？</h1>

<p>TS-MPPT-60が提供するAPIはどうなっているのか？</p>

<p>残念ながら、一朝一夕にはいきませんでした。</p>

<p>TS-MPPT-60は、その情報を表示するためのHTMやjsをブラウザに送りつけてくるので、それを解析することで、とあるcgiをインタフェースに情報取得していることがわかるんですね。</p>

<p>ただそのインタフェースが返す情報が非常にlow levelなので、仕様をある程度理解した上で計算してやる必要がありました。</p>

<p>その計算を勝手にしてくれるPythonパッケージを<a href="https://github.com/dodo5522/tsmppt60_driver">github</a>や<a href="https://pypi.python.org/pypi/tsmppt60-driver">PyPI</a>に公開しているので、興味のある方はご参考に。</p>

<p>例えば以下のように実行することで、TS-MPPT-60の充電状況、ヒートシンクの温度等を取得できます。</p>

<pre><code class="language-python">from tsmppt60_driver import SystemStatus

print(SystemStatus("192.168.1.20").get())

{'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 18097.9},
 'Array Current': {'group': 'Array', 'unit': 'A', 'value': 1.4},
 'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 53.41},
 'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 23.93},
 'Charge Current': {'group': 'Battery', '
unit': 'A', 'value': 3.2},
 'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', ...},
 'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 237.0},
 'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 28.6}}
</code></pre>

<h1 id="">まとめ</h1>

<p>APIとして情報取得する必要のない方にも、TS-MPPT-60はお勧めです。</p>

<p>巨大なヒートシンクを備えた、でかい図体にビビりますが、それも高効率な電圧→電流変換の際に生じる熱を発散するためです。</p>

<p>最大60Aもの大電流を得ることができるため、TS-MPPT-<strong>60</strong>という名が付いているわけで、そこまでの電流いらないって方は、TS-MPPT-30や45といった下位機種も出ているので、そちらをチェック。</p>

<p>価格もより手頃になりますしね。</p>

<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KSZZMXC%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/51p3qjpwj1L._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00KSZZMXC%2Fref%3Dnosim" target="_blank" >ソーラーチャージコントローラー　TS-MPPT-30　桐生保証有　日本語取扱い説明書付</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> Morningstar     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-30%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-30%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041NSXM4%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041NSXM4%2Fref%3Dnosim" target="_blank" >ソーラーチャージコントローラー TS-MPPT-45 Morningstar社 桐生保証有　日本語取扱い説明書付き</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;"> Morningstar社（アメリカ）     </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-45%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-45%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>

<p>ただし、TS-MPPT-30/45にはEthernet端子が付いていない、つまり先ほど述べたような情報取得や表示機能を備えていないので、ご注意を。</p>

<p>次回は太陽光パネルについて書こうと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1465]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947999967]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722638233]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3192]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2747]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3325]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[まだ電力会社で消耗してるの？ 太陽光オフグリッドシステムの作りかた。]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://tech.uribou.tokyo/how_to_make_diy_offgrid/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.90.238.75]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-14 00:38:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-13 15:38:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] チャージコントローラ1　→詳細はこちら [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>192</wp:comment_id>
			<wp:comment_author><![CDATA[Rejestracja na Binance US]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[15027175@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/pl/join?ref=DB40ITMB</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.95]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-27 15:48:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-27 06:48:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>太陽光チャージコントローラTS-MPPT-60の発電状況取得Pythonパッケージを作ってみた</title>
		<link>https://tech.blog.uribou.me/python-driver-for-tsmppt60/</link>
		<pubDate>Sun, 01 Jan 2017 18:10:09 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-driver-for-tsmppt60/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>これはなに？</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">自作した自家発電機</a>で、発電状態を監視するシステムの根幹部分をどうやって作ったか、の記録。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>コントローラがブラウザに返すhtml/jsをリバースして作ったのだけど、念のためコントローラメーカーのエンジニアに問い合わせてOK頂いたので、安心して公開できる。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>まずはチャージコントローラ選別</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>「発電状況を外部から取得できるコントローラ」って意外と少ない。少なくとも個人で手が出る価格帯の範囲では。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>外部から取得できないなら、センサー類を自前で揃えて自作するしかないのだけど、家電が使える容量のシステムだと流す電流量が多いので、それに耐えるセンサーとなるとまた難しい。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>そこで、このTristar社製チャージコントローラ TS-MPPT-60。</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>10万円程度のお値段で、Ethernetポートを備えている上HTTP経由でバッテリ電圧、太陽光パネル電圧、充電流量、放電流量、ヒートシンク温度に至るまで、様々な情報を得ることができる、お得な製品。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"width":123,"height":160,"linkDestination":"custom"} -->
<figure class="wp-block-image is-resized"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank" rel="noreferrer noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/31bdqgXUG2L._SL160_.jpg" alt="" width="123" height="160" /></a><figcaption><a rel="noreferrer noopener" href="http://af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0041O2KPY%2Fref%3Dnosim" target="_blank">ソーラーチャージコントローラー TS-MPPT-60 Morningstar社　桐生保証有　日本語取扱い説明書付き</a> posted with <a rel="noreferrer noopener" href="http://kaereba.com/" target="_blank">カエレバ</a> Morningstar社 <a rel="noreferrer noopener" href="http://af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-60%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank">Amazon</a><a rel="noreferrer noopener" href="http://af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-60%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank">楽天市場</a></figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>この情報を収集するための手段としてPythonパッケージ化したライブラリを用意し、データを収集して、最終的にはクラウドデータベースに記録して可視化したい、というわけ。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Tristar社製 TS-MPPT-60 API仕様</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>TS-MPPT-60から得る情報や、その取得方法の仕様は<a href="http://support.morningstarcorp.com/wp-content/uploads/2014/07/TSMPPT.APP_.Modbus.EN_.10.2.pdf">TriStar-MPPT Modbus specification document</a>を見れば分かるよと、Tristar社のエンジニアの方が教えてくれた。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>けど、結構な文量な上、まさに「仕様書」って感じで読みづらい。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ならば、ブラウザ経由でチャージコントローラにアクセスした際に参照するJavascriptソースを解析した方が、目的達成には近道。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>のはず。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>発電状況取得方法の検証</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>ということで、まずは普通にブラウザで表示されるフロントエンドの解析をしてみることに。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>ChromeのDevelopper Toolsを使う</h3>
<!-- /wp:heading -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://farm1.staticflickr.com/639/21084348354_cf74e29137_o_d.png" alt="web_tsmppt60.png" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>ブラウザで取得できる情報は以下のとおり。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>TS-MPTT-60が何かしらのAPIを提供しているはずなので、ChromeのDevelopper Toolを使ってhtml/jsを抜き出して眺めてみる。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>index.html</h3>
<!-- /wp:heading -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://farm1.staticflickr.com/669/21519120200_59e27a8c41_o_d.png" alt="web_tsmppt60_elem_battery.png" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Battery項目に着目。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>battery voltageの値は、fD0というname属性がついたform要素内にある、input要素のlblcurrentValue属性に対して、誰かが属性値を設定していると思われる。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>index.htmlヘッダでloadしているliveview.jsを見ると、ページ読み込み完了イベントでLVInit()をコールしていたので、その辺りを深堀りする。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>liveview.js</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>jsをfD0でgrepしてみると、ScaledValueDisplayClassを発見。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ただ、できる限り転送量を減らすためか、全ての変数がABCDE…等のアルファベット１文字で宣言されており、とてもreadableとは呼べないコード…。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>以下に引用するjsコードは全て、引数名をそれなりの意味を込めた名前に修正した。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>LVInit()</h4>
<!-- /wp:heading -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">var rowsToUpdate=new Array();
var UPDATE_FREQ_SECS=5;
var Vb=new ScaledValueDisplayClass(MBID,38,""V"",""fD0"",""Battery Voltage"",1);
var VbT=new ScaledValueDisplayClass(MBID,51,""V"",""fD1"",""Target Voltage"",1);
var IbC=new ScaledValueDisplayClass(MBID,39,""A"",""fD2"",""Charge Current"",1);
...</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>上記のように各要素のクラスインスタンスを生成し、LVInit()でrowsToUpdate配列に格納し、一定時間毎に全ての要素を更新するようになっている。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">function LVInit(){
    ShowMenu();
    Factors.Init();
    rowsToUpdate[rowsToUpdate.length]=Vb;
    rowsToUpdate[rowsToUpdate.length]=VbT;
    rowsToUpdate[rowsToUpdate.length]=IbC;
    ...
    intervalHandle=setInterval(updateAllLVText,100)
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":4} -->
<h4>ScaledValueDisplayClass</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>先のコードと、index.htmlに記述された要素や属性と合わせて読むと、fD0フォームのlblDataName属性が付いたinput要素に対してはそのままlblNameを、lblcurrentValue属性が付いたinput要素に対してはGetScaledValue()が返す値を格納して表示するようになっている。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">function ScaledValueDisplayClass(MBID, MBaddress, ScaleFactor, FormName, LabelName, Register){
    this.MBID=MBID;
    this.MBaddress=MBaddress;
    this.frmName=FormName;
    this.lblName=LabelName;
    this.ScaleFactor=ScaleFactor;
    this.updateLVText=function(){
        try{
            document.forms[this.frmName].elements.lblDataName.value = this.lblName.toString();
            document.forms[this.frmName].elements.lblcurrentValue.value = GetScaledValue(this.MBID, this.MBaddress, this.ScaleFactor, Register).toString() + "" "" + this.ScaleFactor.toString();
            return 1
        }
        catch(G){
            return 0
        }
    }
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":4} -->
<h4>GetScaledValue()</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>そのGetScaledValue()が以下。[V]、[A]、[W]、[Ah]、[kWh]、それぞれの単位に応じた計算アルゴリズムが見て取れる。<br>計算元の生データはMBJSReadModbusInts()で取得できるらしい。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">function GetScaledValue(MBID, MBaddress, ScaleFactor, Register){
    var rawValue = 0;
    rawValue = MBJSReadModbusInts(MBP, MBID.toString(), MBaddress.toString(), Register);
    if(Register &gt; 1){
        var values = rawValue.split(""#"");
        rawValue = (parseInt(values[0]) * 65536) + parseInt(values[1])
    }
    else{
        rawValue &lt;&gt;= 16
    }
    if(ScaleFactor.toString() == ""V""){
        return((rawValue * Factors.VScale) / 32768 / 10).toFixed(2)
    }
    else{
        if(ScaleFactor.toString() == ""A""){
            return((rawValue*Factors.IScale) / 32768 / 10).toFixed(1)
        }
        else{
            if(ScaleFactor.toString() == ""W""){
                return((rawValue * Factors.IScale * Factors.VScale) / 131072 / 100).toFixed(0)
            }
            else{
                if(ScaleFactor.toString() == ""Ah""){
                    return(rawValue * 0.1).toFixed(1)
                }
                else{
                    if(ScaleFactor.toString() == ""kWh""){
                        return(rawValue).toFixed(0)
                    }
                    else{
                        return(rawValue).toFixed(2)
                    }
                }
            }
        }
    }
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>utilities.js</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>MBJSReadModbusInts()</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>そのMBJSReadModbusInts()が以下。ここで ""#"" で区切った値をreturnするので、GetScaledValue()側で ""#"" でsplitした上でulong値に計算し直す処理があるわけですな。<br>さらにMBJSReadCSV()に降りてみる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">function MBJSReadModbusInts(MBPVAL, MBIDVAL, MBaddress, Register){
    var rawValueGotByCgi = MBJSReadCSV(MBPVAL, MBIDVAL, MBaddress, Register);
    var valuesGotByCgi = rawValueGotByCgi.split("","");
    var idxMax = valuesGotByCgi[2];
    var idxValue = 3;
    var retValueString = """";
    var retValueShort;
    while(idxValue &lt; parseInt(idxMax) + 2){
        retValueShort = (parseInt(valuesGotByCgi[idxValue++]) * 256);
        retValueShort += parseInt(valuesGotByCgi[idxValue++]);
        if(idxValue &gt; 8);
    var addressLow = encodeURIComponent(parseInt(MBaddress) &amp; 255);
    var registerHigh = encodeURIComponent(parseInt(Register) &gt;&gt; 8);
    var registerLow = encodeURIComponent(parseInt(Register) &amp; 255);
    ajax.open(""GET"", ""MBCSV.cgi?ID="" + id + ""&amp;F="" + field + ""&amp;AHI="" + addressHigh + ""&amp;ALO="" + addressLow + ""&amp;RHI="" + registerHigh + ""&amp;RLO="" + registerLow, IsAsync);
    ajax.send(null);
    if(!IsAsync){
        response = ajax.responseText;
    }
    return response;
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>発電状況を取得するPythonパッケージ</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>そういったPythonモジュールを作成し、<a href="https://github.com/dodo5522/tsmppt60_driver">github</a>に置きました。<br><a href="https://pypi.python.org/pypi/tsmppt60-driver/0.1.3">PyPI</a>にも公開しているので、ご興味ある方は<code>pip install</code>してみてください。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>簡単な使い方紹介</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>pipコマンドでインストールして、ヘルプ表示すれば使い方もわかるようになってます。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ pip install tsmppt60_driver</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">In [1]: import tsmppt60_driver as ts
In [2]: ts.SystemStatus?
Init signature: ts.SystemStatus(host)
Docstring: This is class to get the system status of TS-MPPT-60. Use this like below.
print(SystemStatus(""192.168.1.20"").get())
{'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 18097.9}, 'Array Current': {'group': 'Array', 'unit': 'A', 'value': 1.4}, 'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 53.41}, 'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 23.93}, 'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': 3.2}, 'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', ...}, 'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 237.0}, 'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 28.6}}

The above data is limited information. You can disable the limitter like below.
print(SystemStatus(""192.168.1.20"", False).get())
{'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 18097.8}, 'Array Current': {'group': 'Array', 'unit': 'A', 'value': 1.3}, 'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 53.41}, 'Battery Temperature': {'group': 'Temperature', 'unit': 'C', ...}, 'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 24.01}, 'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': 3.2}, 'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', ...}, 'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 237.0}, 'Output Power': {'group': 'Battery', 'unit': 'W', 'value': 76.0}, 'Sweep Pmax': {'group': 'Array', 'unit': 'W', 'value': 73.0}, 'Sweep Vmp': {'group': 'Array', 'unit': 'V', 'value': 53.41}, 'Sweep Voc': {'group': 'Array', 'unit': 'V', 'value': 60.05}, 'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 28.6}}
Init docstring: Initialize class object.
Keyword arguments: host -- TS-MPPT-60 host address like ""192.168.1.20""
File: ~/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/tsmppt60_driver/__init__.py Type: type</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>実際にやってみるとこうなります。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">In [1]: import tsmppt60_driver as ts
In [3]: d = ts.SystemStatus(""192.168.1.20"")
In [4]: d.get()
Out[4]: {'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 32885.7}, 'Array Current': {'group': 'Array', 'unit': 'A', 'value': 0.0}, 'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 0.3900146484375}, 'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 23.631591796875}, 'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': -0.09521484375}, 'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', 'value': 11}, 'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 604}, 'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 0.0}}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>まとめ</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>API仕様を読むより、実装されたjsクライアントを読んだ方が早いっすね。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1540</wp:post_id>
		<wp:post_date><![CDATA[2017-01-02 03:10:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-01-01 18:10:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-driver-for-tsmppt60]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/how_to_make_diy_offgrid/">自作した自家発電機</a>の状態を監視するシステムの根幹部分をどうやって作ったか、の記録。</p>
<p>コントローラがブラウザに返すhtml/jsをリバースして作ったんですが、一応メーカのエンジニアに問い合わせてOK頂いたので、安心して公開することにします。</p>
<h1 id="">まずはチャージコントローラ選別</h1>
<p>「発電状況を外部から取得できるコントローラ」って、意外と少ないんです。少なくとも個人で手が出る価格帯の範囲では。</p>
<p>外部から取得できないなら、センサー類を自前で揃えて自作するしかないのだけど、家電が使える容量のシステムだと流す電流量が多いので、それに耐えるセンサーとなると…　コストが嵩むことになります。そもそも入手できないかも…。</p>
<p>そこでこのTristar社製チャージコントローラTS-MPPT-60です。</p>
<p>日本円で１０万円程度にも関わらず、標準でEthernetポートを備えている上、HTTP経由でバッテリ電圧、太陽光パネル電圧、充電流量、放電流量、ヒートシンク温度に至るまで様々な情報を得ることができる、お得感満載な製品です。</p>
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0059VJ268%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/31SZpSOC0pL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB0059VJ268%2Fref%3Dnosim" target="_blank" >太陽電池充放電コントローラー　TS-MPPT-60</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DTS-MPPT-60%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazonで調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FTS-MPPT-60%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>
<p>この情報を収集する手段を用意し、収集したデータを<a href="https://personal.xively.com/">Xively</a>といったクラウド上のデータベースに記録してグラフ化したい、というわけです。</p>
<h1 id="tristartsmppt60api">Tristar社製 TS-MPPT-60 API仕様</h1>
<p>TS-MPPT-60から得る情報や、その取得方法の仕様は<a href="http://support.morningstarcorp.com/wp-content/uploads/2014/07/TSMPPT.APP_.Modbus.EN_.10.2.pdf">TriStar-MPPT Modbus specification document</a>を見れば分かるよと、Tristar社のエンジニアの方が教えてくれたんですが… 結構な文量な上、まさに「仕様書」って感じで読みづらい。</p>
<p>ならば、ブラウザ経由でチャージコントローラにアクセスした際に参照するJavascriptソースを解析した方が、目的達成には近道。</p>
<p>のはず。</p>
<h1 id="">発電状況取得方法の検証</h1>
<p>ということで、まずは普通にブラウザで表示されるフロントエンドの解析をしてみることに。</p>
<h2 id="chromedeveloppertools">ChromeのDevelopper Toolsを使う</h2>
<p>ブラウザで取得できる情報は以下。
<img src="https://farm1.staticflickr.com/639/21084348354_cf74e29137_o_d.png" alt="web_tsmppt60.png" /></p>
<p>ブラウザで表示できるということは、TS-MPTT-60が何かしらのAPIを提供しているはす。</p>
<p>ChromeのDevelopper Toolを使ってHTML/CSS/JSを引っこ抜いて眺めてみました。</p>
<h2 id="indexhtml">index.html</h2>
<p>HTML5をまともに勉強したことがなかったんですが、関数名や変数名を追っていけば、何を言っているのかは大体わかるもの。</p>
<p>Battery項目に着目する。Chromeのデベロッパツールを使って見てみると、battery voltageの値は、fD0というname属性がついたform要素内にある、input要素のlblcurrentValue属性に対して、誰かが属性値を設定しているはず。</p>
<p><img src="https://farm1.staticflickr.com/669/21519120200_59e27a8c41_o_d.png" alt="web_tsmppt60_elem_battery.png" /></p>
<p>index.htmlのヘッダを見てみると、以下のようにJavaScriptを読み込んでいる。また、ホームページの読み込み完了イベント発生時にLVInit()をコールするようになっている。</p>
<pre><code class="language-html:index.html">    &lt;head&gt;
        &lt;meta http-equiv="content-type" content="text/html; charset=UTF-8"&gt;&lt;meta name="TriStarMPPT60Live" content=""&gt;
        &lt;title&gt;TriStar MPPT - Live Data&lt;/title&gt;
        &lt;link href="favicon.ico" rel="shortcut icon" type="image/x-icon"&gt;
        &lt;link href="ss.css" rel="stylesheet" type="text/css"&gt;
        &lt;script type="text/javascript" src="MBID.js"&gt;&lt;/script&gt;
        &lt;script type="text/javascript" src="utilities.js"&gt;&lt;/script&gt;
        &lt;script type="text/javascript" src="liveview.js"&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body onload="LVInit()"&gt;
    ...
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h2 id="liveviewjs">liveview.js</h2>
<p>jsファイルをfD0でgrepしてみると、ScaledValueDisplayClassを発見。ただ、できる限り転送量を減らすためか、改行もスペースもなし、ABCDE…等のアルファベット１文字で全ての変数が宣言されており、とてもreadableとは呼べないコード…。</p>
<p>なので、以下に引用するjsコードは全て、引数名をそれなりの意味を込めた名前に修正してみた。</p>
<h3 id="lvinit">LVInit()</h3>
<pre><code class="language-javascript:liveview.js">var rowsToUpdate=new Array();
var UPDATE_FREQ_SECS=5;
var Vb=new ScaledValueDisplayClass(MBID,38,"V","fD0","Battery Voltage",1);
var VbT=new ScaledValueDisplayClass(MBID,51,"V","fD1","Target Voltage",1);
var IbC=new ScaledValueDisplayClass(MBID,39,"A","fD2","Charge Current",1);
...
</code></pre>
<p>上記のように各要素のクラスインスタンスを生成し、LVInit()でrowsToUpdate配列に格納し、一定時間毎に全ての要素を更新するようになっている。</p>
<pre><code class="language-javascript:liveview.js">function LVInit(){
    ShowMenu();
    Factors.Init();
    rowsToUpdate[rowsToUpdate.length]=Vb;
    rowsToUpdate[rowsToUpdate.length]=VbT;
    rowsToUpdate[rowsToUpdate.length]=IbC;
    ...
    intervalHandle=setInterval(updateAllLVText,100)
}
</code></pre>
<h3 id="scaledvaluedisplayclass">ScaledValueDisplayClass</h3>
<p>先のコードと、index.htmlに記述された要素や属性と合わせて読むと、fD0フォームのlblDataName属性が付いたinput要素に対してはそのままlblNameを、lblcurrentValue属性が付いたinput要素に対してはGetScaledValue()が返す値を格納して表示するようになっている。</p>
<pre><code class="language-javascript:liveview.js">function ScaledValueDisplayClass(MBID, MBaddress, ScaleFactor, FormName, LabelName, Register){
    this.MBID=MBID;
    this.MBaddress=MBaddress;
    this.frmName=FormName;
    this.lblName=LabelName;
    this.ScaleFactor=ScaleFactor;
    this.updateLVText=function(){
        try{
            document.forms[this.frmName].elements.lblDataName.value = this.lblName.toString();
            document.forms[this.frmName].elements.lblcurrentValue.value = GetScaledValue(this.MBID, this.MBaddress, this.ScaleFactor, Register).toString() + " " + this.ScaleFactor.toString();
            return 1
        }
        catch(G){
            return 0
        }
    }
}
</code></pre>
<h3 id="getscaledvalue">GetScaledValue()</h3>
<p>そのGetScaledValue()が以下。[V]、[A]、[W]、[Ah]、[kWh]、それぞれの単位に応じた計算アルゴリズムが見て取れる。</p>
<p>計算元の生データはMBJSReadModbusInts()で取得できるらしい。</p>
<pre><code class="language-javascript:liveview.js">function GetScaledValue(MBID, MBaddress, ScaleFactor, Register){
    var rawValue = 0;
    rawValue = MBJSReadModbusInts(MBP, MBID.toString(), MBaddress.toString(), Register);
    if(Register &gt; 1){
        var values = rawValue.split("#");
        rawValue = (parseInt(values[0]) * 65536) + parseInt(values[1])
    }
    else{
        rawValue &lt;&lt;= 16;
        rawValue &gt;&gt;= 16
    }
    if(ScaleFactor.toString() == "V"){
        return((rawValue * Factors.VScale) / 32768 / 10).toFixed(2)
    }
    else{
        if(ScaleFactor.toString() == "A"){
            return((rawValue*Factors.IScale) / 32768 / 10).toFixed(1)
        }
        else{
            if(ScaleFactor.toString() == "W"){
                return((rawValue * Factors.IScale * Factors.VScale) / 131072 / 100).toFixed(0)
            }
            else{
                if(ScaleFactor.toString() == "Ah"){
                    return(rawValue * 0.1).toFixed(1)
                }
                else{
                    if(ScaleFactor.toString() == "kWh"){
                        return(rawValue).toFixed(0)
                    }
                    else{
                        return(rawValue).toFixed(2)
                    }
                }
            }
        }
    }
}
</code></pre>
<h2 id="utilitiesjs">utilities.js</h2>
<h3 id="mbjsreadmodbusints">MBJSReadModbusInts()</h3>
<p>そのMBJSReadModbusInts()が以下。ここで "#" で区切った値をreturnするので、GetScaledValue()側で "#" でsplitした上でulong値に計算し直す処理があるわけですな。</p>
<p>さらにMBJSReadCSV()に降りてみる。</p>
<pre><code class="language-javascript:utilities.js">function MBJSReadModbusInts(MBPVAL, MBIDVAL, MBaddress, Register){
    var rawValueGotByCgi = MBJSReadCSV(MBPVAL, MBIDVAL, MBaddress, Register);
    var valuesGotByCgi = rawValueGotByCgi.split(",");
    var idxMax = valuesGotByCgi[2];
    var idxValue = 3;
    var retValueString = "";
    var retValueShort;
    while(idxValue &lt; parseInt(idxMax) + 2){
        retValueShort = (parseInt(valuesGotByCgi[idxValue++]) * 256);
        retValueShort += parseInt(valuesGotByCgi[idxValue++]);
        if(idxValue &lt; parseInt(idxMax) + 2){
            retValueString += retValueShort.toString() + "#";
        }
        else{
            retValueString += retValueShort.toString();
        }
    }
    return retValueString;
}
</code></pre>
<h3 id="mbjsreadmodbusintsajaxget">MBJSReadModbusInts(), ajaxget()</h3>
<p>ここまできてやっと、<code>MBCSV.cgi</code>経由でデータを<code>ajaxget</code>するコードに辿り着きました。</p>
<p><code>ajaxget</code>ってことは、ページ更新せずにデータのみ取得するんでしょうね。多分。</p>
<p>ここまで分かれば、後はPythonのrequestsモジュールでMBCSV.cgiにget requestして取った値を元に、計算方法を真似れば良い。</p>
<pre><code class="language-javascript:utilities.js">function MBJSReadCSV(MBPVAL, MBIDVAL, MBaddress, Register){
    return ajaxget(MBIDVAL, MBaddress, Register, 4, false)
}
function ajaxget(MBPVAL, MBaddress, Register, Field, IsAsync){
    var ajax = new ajaxRequest();
    var response = "";
    var id = encodeURIComponent(MBPVAL);
    var field = encodeURIComponent(Field);
    var addressHigh = encodeURIComponent(parseInt(MBaddress) &gt;&gt; 8);
    var addressLow = encodeURIComponent(parseInt(MBaddress) &amp; 255);
    var registerHigh = encodeURIComponent(parseInt(Register) &gt;&gt; 8);
    var registerLow = encodeURIComponent(parseInt(Register) &amp; 255);
    ajax.open("GET", "MBCSV.cgi?ID=" + id + "&amp;F=" + field + "&amp;AHI=" + addressHigh + "&amp;ALO=" + addressLow + "&amp;RHI=" + registerHigh + "&amp;RLO=" + registerLow, IsAsync);
    ajax.send(null);
    if(!IsAsync){
        response = ajax.responseText;
    }
    return response;
}
</code></pre>
<h1 id="python">発電状況を取得するPythonパッケージ</h1>
<p>そういったPythonモジュールを作成し、<a href="https://github.com/dodo5522/tsmppt60_driver">github</a>に置きました。</p>
<p><a href="https://pypi.python.org/pypi/tsmppt60-driver/0.1.3">PyPI</a>にも公開しているので、ご興味ある方は<code>pip install</code>してみてください。</p>
<h2 id="">簡単な使い方紹介</h2>
<p>pipコマンドでインストールして、</p>
<pre><code class="language-bash">$ pip install tsmppt60_driver
</code></pre>
<p>ヘルプ表示すれば使い方もわかるようになってます。</p>
<pre><code class="language-python">In [1]: import tsmppt60_driver as ts
In [2]: ts.SystemStatus?
Init signature: ts.SystemStatus(host)
Docstring:
This is class to get the system status of TS-MPPT-60. Use this like below.
    print(SystemStatus("192.168.1.20").get())
    {'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 18097.9},
     'Array Current': {'group': 'Array', 'unit': 'A', 'value': 1.4},
     'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 53.41},
     'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 23.93},
     'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': 3.2},
     'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', ...},
     'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 237.0},
     'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 28.6}}
The above data is limited information. You can disable the limitter
like below.
    print(SystemStatus("192.168.1.20", False).get())
    {'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 18097.8},
     'Array Current': {'group': 'Array', 'unit': 'A', 'value': 1.3},
     'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 53.41},
     'Battery Temperature': {'group': 'Temperature', 'unit': 'C', ...},
     'Battery Voltage': {'group': 'Battery', 'unit': 'V', 'value': 24.01},
     'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': 3.2},
     'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', ...},
     'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 237.0},
     'Output Power': {'group': 'Battery', 'unit': 'W', 'value': 76.0},
     'Sweep Pmax': {'group': 'Array', 'unit': 'W', 'value': 73.0},
     'Sweep Vmp': {'group': 'Array', 'unit': 'V', 'value': 53.41},
     'Sweep Voc': {'group': 'Array', 'unit': 'V', 'value': 60.05},
     'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 28.6}}
Init docstring:
Initialize class object.
Keyword arguments:
host -- TS-MPPT-60 host address like "192.168.1.20"
File:           ~/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/tsmppt60_driver/__init__.py
Type:           type
</code></pre>
<p>実際にやってみるとこうなります。</p>
<pre><code class="language-python">In [1]: import tsmppt60_driver as ts
In [3]: d = ts.SystemStatus("192.168.1.20")
In [4]: d.get()
Out[4]:
{'Amp Hours': {'group': 'Counter', 'unit': 'Ah', 'value': 32885.7},
 'Array Current': {'group': 'Array', 'unit': 'A', 'value': 0.0},
 'Array Voltage': {'group': 'Array', 'unit': 'V', 'value': 0.3900146484375},
 'Battery Voltage': {'group': 'Battery',
  'unit': 'V',
  'value': 23.631591796875},
 'Charge Current': {'group': 'Battery', 'unit': 'A', 'value': -0.09521484375},
 'Heat Sink Temperature': {'group': 'Temperature', 'unit': 'C', 'value': 11},
 'Kilowatt Hours': {'group': 'Counter', 'unit': 'kWh', 'value': 604},
 'Target Voltage': {'group': 'Battery', 'unit': 'V', 'value': 0.0}}
</code></pre>
<h1 id="">まとめ</h1>
<p>言語が違っても、その言語をほぼ勉強していなくても、意外と読み解けるもんですね。</p>
<p>英文法をある程度理解していて、パラダイムがよほど違ってなければ、ほとんど似たようなもんだから、そりゃそうか。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[太陽光チャージコントローラTS-MPPT-60の発電状況取得Pythonパッケージを作ってみた]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[太陽光チャージコントローラTS-MPPT-60がHTTTP由で発電状況が取得できるAPIが用意されており、その仕様もあるのだけど難解なので、jsクライアント実装をハックしてPythonパッケージにした。その軌跡の記録。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[太陽光,発電,オフグリッド,solar,offgrid]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5952610530]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1668]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519254]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3192]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3193]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3191]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3194]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3197]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>222</wp:comment_id>
			<wp:comment_author><![CDATA[binance registrazione]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[24864918@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/it/join?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.116]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-16 14:12:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-16 05:12:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>学習計画を立てる（未）</title>
		<link>https://tech.blog.uribou.me/study-items/</link>
		<pubDate>Fri, 30 Dec 2016 13:16:08 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/study-items/</guid>
		<description></description>
		<content:encoded><![CDATA[ただのメモ書きです。
だいぶ溜まってるな・・・。
<h1>画像処理、機械学習</h1>
<h2>OpenCV</h2>
<ul>
<li><a href="https://www.pro-s.co.jp/engineerblog/opencv/post_6202.html">OpenCVで物体検出器を作る</a></li>
</ul>
<h2>Python</h2>
<ul>
<li><a href="http://pyconjp.connpass.com/event/39164/presentation/?utm_campaign=new_event_links_to_group_member&amp;utm_source=notifications&amp;utm_medium=email&amp;utm_content=detail_btn">Pycon 野球データを使った解析、MicroPython</a></li>
<li><a href="http://www.sejuku.net/blog/11551">Pythonでよく使われる機械学習ライブラリ</a></li>
</ul>
<h1>技法</h1>
<h2>UML</h2>
<ul>
<li><a href="http://www.ogis-ri.co.jp/otc/hiroba/technical/JavaWorld_UML/chap2/">Javaで学ぶUML class図</a></li>
</ul>
<h2>デザインパターン</h2>
<ul>
<li><a href="http://www.techscore.com/tech/DesignPattern/index.html/">Javaで学ぶデザインパターン</a></li>
<li><a href="http://codeiq.hatenablog.com/entry/2013/08/26/155959">完全コンストラクタパターン</a></li>
</ul>
<h1>言語</h1>
<h2>HTML5</h2>
<ul>
<li><a href="http://dotinstall.com/lessons/basic_html_v3">HTML入門</a></li>
<li><a href="http://www.w3schools.com/css/">CSS school</a></li>
<li>color_zilla<a href=""></a></li>
</ul>
<h2>C++</h2>
<ul>
<li><a href="http://www002.upp.so-net.ne.jp/ys_oota/effec/chapter3.htm">EffectiveC++入門</a></li>
<li><a href="http://www7b.biglobe.ne.jp/~robe/cpphtml/index.html">ロベールのC++教室</a></li>
</ul>
<h2>C</h2>
<ul>
<li><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B01E51LA4Y/tensaieffort-22/">Unity 2D/3Dゲームプログラミング入門</a></li>
<li><a href="http://www.kumei.ne.jp/c_lang/form/form_03.htm">猫でもわかる</a></li>
</ul>
<h2>Python</h2>
<ul>
<li><a href="https://github.com/windschord/celery-doc-ja/blob/master/README.rst">Celery タスクキュー</a></li>
<li><a href="http://d.hatena.ne.jp/moriyoshi/touch/20091214/1260779899">boost::python</a></li>
<li><a href="http://kuni255.blogspot.jp/2013/08/python-com.html">pywin32</a></li>
<li><a href="http://python.keicode.com/advanced/">PythonからWin32APIを呼び出す他</a></li>
<li><a href="http://study-flask.readthedocs.io/ja/latest/02.html">Flaskチュートリアル</a></li>
<li><a href="http://gamepro.blog.jp/python/pygame/introduction">PyGame</a></li>
<li><a href="https://realpython.com/blog/python/primer-on-jinja-templating/">Jinja2</a></li>
<li>asyncio
<ul>
<li><a href="http://qiita.com/icoxfog417/items/07cbf5110ca82629aca0">Pythonにおける非同期処理: asyncio逆引きリファレンス</a></li>
<li><a href="http://postd.cc/python-generators-coroutines-native-coroutines-and-async-await/">Pythonのジェネレータ、コルーチン、ネイティブコルーチン、そしてasync/await</a></li>
<li><a href="http://postd.cc/fast-scraping-in-python-with-asyncio/">asyncioを用いたpythonの高速なスクレイピング</a></li>
</ul></li>
</ul>
<h1>副業</h1>
<h2>ブログ術</h2>
<ul>
<li><a href="https://note.mu/sukimeshi/m/m40bbe7d41756">サラリーマンが月35万稼ぐ方法</a></li>
<li><a href="http://www.naturegifu.com/?p=711#orzSNS">マーケティング</a></li>
</ul>
<h2>資格</h2>
<ul>
<li><a href="http://www.toshoku.or.jp/shikaku/">食品衛生責任者</a></li>
<li><a href="http://tenohira.kyoto-art.ac.jp/gakushi/?utm_source=facebook&amp;utm_medium=display&amp;utm_content=img003_txt001&amp;utm_campaign=2016_autumn_tenohira">芸術大学</a></li>
<li><a href="">ペットシッター</a></li>
<li><a href="">LPIC Level3</a></li>
<li><a href="">Python技術者認定</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1621</wp:post_id>
		<wp:post_date><![CDATA[2016-12-30 22:16:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-30 13:16:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[study-items]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e8%82%b2"><![CDATA[教育]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>ただのメモ書きです。</p>
<p>だいぶ溜まってるな・・・。</p>
<h1 id="">画像処理、機械学習</h1>
<h2 id="opencv">OpenCV</h2>
<ul>
<li><a href="https://www.pro-s.co.jp/engineerblog/opencv/post_6202.html">OpenCVで物体検出器を作る</a></li>
</ul>
<h2 id="python">Python</h2>
<ul>
<li><a href="http://pyconjp.connpass.com/event/39164/presentation/?utm_campaign=new_event_links_to_group_member&amp;utm_source=notifications&amp;utm_medium=email&amp;utm_content=detail_btn">Pycon 野球データを使った解析、MicroPython</a></li>
<li><a href="http://www.sejuku.net/blog/11551">Pythonでよく使われる機械学習ライブラリ</a></li>
</ul>
<h1 id="">技法</h1>
<h2 id="uml">UML</h2>
<ul>
<li><a href="http://www.ogis-ri.co.jp/otc/hiroba/technical/JavaWorld_UML/chap2/">Javaで学ぶUML class図</a></li>
</ul>
<h2 id="">デザインパターン</h2>
<ul>
<li><a href="http://www.techscore.com/tech/DesignPattern/index.html/">Javaで学ぶデザインパターン</a></li>
<li><a href="http://codeiq.hatenablog.com/entry/2013/08/26/155959">完全コンストラクタパターン</a></li>
</ul>
<h1 id="">言語</h1>
<h2 id="html5">HTML5</h2>
<ul>
<li><a href="http://dotinstall.com/lessons/basic_html_v3">HTML入門</a></li>
<li><a href="http://www.w3schools.com/css/">CSS school</a></li>
<li>color_zilla<a href=""></a></li>
</ul>
<h2 id="c">C++</h2>
<ul>
<li><a href="http://www002.upp.so-net.ne.jp/ys_oota/effec/chapter3.htm">EffectiveC++入門</a></li>
<li><a href="http://www7b.biglobe.ne.jp/~robe/cpphtml/index.html">ロベールのC++教室</a></li>
</ul>
<h2 id="c">C</h2>
<ul>
<li><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B01E51LA4Y/tensaieffort-22/">Unity 2D/3Dゲームプログラミング入門</a></li>
<li><a href="http://www.kumei.ne.jp/c_lang/form/form_03.htm">猫でもわかる</a></li>
</ul>
<h2 id="python">Python</h2>
<ul>
<li><a href="https://github.com/windschord/celery-doc-ja/blob/master/README.rst">Celery タスクキュー</a></li>
<li><a href="http://d.hatena.ne.jp/moriyoshi/touch/20091214/1260779899">boost::python</a></li>
<li><a href="http://kuni255.blogspot.jp/2013/08/python-com.html">pywin32</a></li>
<li><a href="http://python.keicode.com/advanced/">PythonからWin32APIを呼び出す他</a></li>
<li><a href="http://study-flask.readthedocs.io/ja/latest/02.html">Flaskチュートリアル</a></li>
<li><a href="http://gamepro.blog.jp/python/pygame/introduction">PyGame</a></li>
<li><a href="https://realpython.com/blog/python/primer-on-jinja-templating/">Jinja2</a></li>
<li>asyncio
<ul><li><a href="http://qiita.com/icoxfog417/items/07cbf5110ca82629aca0">Pythonにおける非同期処理: asyncio逆引きリファレンス</a></li>
<li><a href="http://postd.cc/python-generators-coroutines-native-coroutines-and-async-await/">Pythonのジェネレータ、コルーチン、ネイティブコルーチン、そしてasync/await</a></li>
<li><a href="http://postd.cc/fast-scraping-in-python-with-asyncio/">asyncioを用いたpythonの高速なスクレイピング</a></li></ul></li>
</ul>
<h1 id="">副業</h1>
<h2 id="">ブログ術</h2>
<ul>
<li><a href="https://note.mu/sukimeshi/m/m40bbe7d41756">サラリーマンが月35万稼ぐ方法</a></li>
<li><a href="http://www.naturegifu.com/?p=711#orzSNS">マーケティング</a></li>
</ul>
<h2 id="">資格</h2>
<ul>
<li><a href="http://www.toshoku.or.jp/shikaku/">食品衛生責任者</a></li>
<li><a href="http://tenohira.kyoto-art.ac.jp/gakushi/?utm_source=facebook&amp;utm_medium=display&amp;utm_content=img003_txt001&amp;utm_campaign=2016_autumn_tenohira">芸術大学</a></li>
<li><a href="">ペットシッター</a></li>
<li><a href="">LPIC Level3</a></li>
<li><a href="">Python技術者認定</a></li>
</ul>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989653983]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505216]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>池田勇人さんによる「新しい働き方」勉強会。近い将来「他社」より「機械」との差別化を迫られる未来。</title>
		<link>https://tech.blog.uribou.me/korekarahata-she-yoriji-jie-tonochai-bie-hua-wotu-rukotoninaru/</link>
		<pubDate>Sat, 10 Dec 2016 18:11:32 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/korekarahata-she-yoriji-jie-tonochai-bie-hua-wotu-rukotoninaru/</guid>
		<description></description>
		<content:encoded><![CDATA[社長繋がりで開催する運びとなった、池田勇人さんによる「新しい働き方」勉強会。
開催場所は静岡県の掛川にある、これまた社長出資のお店でした。
池田勇人さんのブログに、すごい情報量の勉強会資料が惜しみなくアップされているので、ぜひ一読を。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">資料アップしました。/ エンジニア派遣会社「リツアン」の野中社長がイーロン・マスク知らなかったので、掛川で講演をしてきました。 : まだ東京で消耗してるの？ <a href="https://t.co/c58QnqWnvK">https://t.co/c58QnqWnvK</a> <a href="https://t.co/w6TjbXW2Ps">pic.twitter.com/w6TjbXW2Ps</a></p>&mdash; イケダハヤト (@IHayato) <a href="https://twitter.com/IHayato/status/807354221372862464">2016年12月9日</a></blockquote>

ここで得た学びは多すぎて書き出し切れないので、特に強く印象に残ったキーワードを軸にしたトピックを挙げます。
<p style="font-size:2em"><strong>made by human</strong></p>
機械と比較して作業が遅く、不正確で、長時間労働できない人に代わって、機械がモノやサービスを提供するのが当たり前の未来になるのは確実。
実際、既に<a href="http://thebridge.jp/2016/06/amazon-is-just-beginning-to-use-robots-in-its-warehouses-and-theyre-already-making-a-huge-difference-pickupnews">倉庫番</a>や物流、<a href="https://theo.blue/?gclid=Cj0KEQiA7K7CBRCrwt26v5uHs98BEiQA0JzsZwNHRVdyNZPUC8-MK2wj_vNIYjviAvUSC38PvqvYAM0aArgB8P8HAQ">資産運用</a>まで人工知能が活用されている世の中。
機械と比較して生産性が著しく低い人間は、<strong style="font-size:2em">社会に「新しい価値」を生み出す</strong>必要があると。
今では "made in Japan" や "made in China" のように使われている言葉が、 "made by machine" や "made by human" に置き換わっていくイメージですね。
人口知能が人間の知能を上回るのは意外と早く、近い将来訪れる。
なぜなら、<strong style="font-size:2em">人工知能が人工知能を生み出すサイクルにより、爆発的に技術が進む</strong>ことになるから。
実際には、既に人工知能が新画像圧縮アルゴリズムを組む段階まで来ている模様。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">JPEGを超える画像圧縮を人工知能で実現、Googleが手法を開発 <a href="https://t.co/NPHB5cAfr7">https://t.co/NPHB5cAfr7</a> <a href="https://twitter.com/nikkeibpITpro">@nikkeibpITpro</a>さんから</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/807776215574556672">2016年12月11日</a></blockquote>

新技術の採用スピードは加速してってますよー　を示した、Harvard Business Reviewの記事。とてもわかりやすいグラフ<a href="https://hbr.org/2013/11/the-pace-of-technology-adoption-is-speeding-up">CONSUMPTION SPREADS FASTER TODAY</a>が掲載されています。
<h1>まとめ</h1>
今更ながら、勉強会で紹介のあったこれらの本を読み漁っています。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009QW63BI%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/41zfJkI6OtL._SL320_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009QW63BI%2Fref%3Dnosim" target="_blank" rel="noopener">シンギュラリティは近い―人類が生命を超越するとき[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">レイ・カーツワイル NHK出版     </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009QW63BI%2F" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4140811676%2F" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                                    </div></div><div class="booklink-footer"></div></div></div>
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4622077531%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="http://ecx.images-amazon.com/images/I/412qYLe5q%2BL._SL320_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4622077531%2Fref%3Dnosim" target="_blank" rel="noopener">テクニウム――テクノロジーはどこへ向かうのか?</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">ケヴィン・ケリー みすず書房 2014-06-20    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4622077531%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2583e%2583N%2583j%2583E%2583%2580%2581%255C%2581%255C%2583e%2583N%2583m%2583%258D%2583W%2581%255B%2582%25CD%2582%25C7%2582%25B1%2582%25D6%258C%25FC%2582%25A9%2582%25A4%2582%25CC%2582%25A9%253F%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" rel="noopener">Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12800560%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=" target="_blank" rel="noopener">楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div><div class="shoplinkseven"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=932&amp;pc_id=1188&amp;pl_id=12456&amp;url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D4-62-207753-4%2520%257C%25204-622-07753-4%2520%257C%25204-6220-7753-4%2520%257C%25204-62207-753-4%2520%257C%25204-622077-53-4%2520%257C%25204-6220775-3-4" target="_blank" rel="noopener">7net<img></a></div>                           </div></div><div class="booklink-footer"></div></div></div>
人口知能が人間の知能を上回る<strong>特異点</strong>、特定の分野では既に実現しているのが現実。
今はその導入部分を知ったに過ぎないので、さてこれからどう具体的なアクションに落とし込んで行こうか。考えていきたいと思います。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1625</wp:post_id>
		<wp:post_date><![CDATA[2016-12-11 03:11:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-10 18:11:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[korekarahata-she-yoriji-jie-tonochai-bie-hua-wotu-rukotoninaru]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="dong-kifang"><![CDATA[働き方]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e3%81%8d%e6%96%b9"><![CDATA[生き方]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"http://ecx.images-amazon.com/images/I/41zfJkI6OtL._SL320_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>社長繋がりで開催する運びとなった、池田勇人さんによる「新しい働き方」勉強会。</p>

<p>開催場所は静岡県の掛川にある、これまた社長出資のお店でした。</p>

<p>池田勇人さんのブログに、すごい情報量の勉強会資料が惜しみなくアップされているので、ぜひ一読を。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">資料アップしました。/ エンジニア派遣会社「リツアン」の野中社長がイーロン・マスク知らなかったので、掛川で講演をしてきました。 : まだ東京で消耗してるの？ <a href="https://t.co/c58QnqWnvK">https://t.co/c58QnqWnvK</a> <a href="https://t.co/w6TjbXW2Ps">pic.twitter.com/w6TjbXW2Ps</a></p>&mdash; イケダハヤト (@IHayato) <a href="https://twitter.com/IHayato/status/807354221372862464">2016年12月9日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>ここで得た学びは多すぎて書き出し切れないので、特に強く印象に残ったキーワードを軸にしたトピックを挙げます。</p>

<p style="font-size:2em"><strong>made by human</strong></p>

<p>機械と比較して作業が遅く、不正確で、長時間労働できない人に代わって、機械がモノやサービスを提供するのが当たり前の未来になるのは確実。</p>

<p>実際、既に<a href="http://thebridge.jp/2016/06/amazon-is-just-beginning-to-use-robots-in-its-warehouses-and-theyre-already-making-a-huge-difference-pickupnews">倉庫番</a>や物流、<a href="https://theo.blue/?gclid=Cj0KEQiA7K7CBRCrwt26v5uHs98BEiQA0JzsZwNHRVdyNZPUC8-MK2wj_vNIYjviAvUSC38PvqvYAM0aArgB8P8HAQ">資産運用</a>まで人工知能が活用されている世の中。</p>

<p>機械と比較して生産性が著しく低い人間は、<strong style="font-size:2em">社会に「新しい価値」を生み出す</strong>必要があると。</p>

<p>今では "made in Japan" や "made in China" のように使われている言葉が、 "made by machine" や "made by human" に置き換わっていくイメージですね。</p>

<p>人口知能が人間の知能を上回るのは意外と早く、近い将来訪れる。</p>

<p>なぜなら、<strong style="font-size:2em">人工知能が人工知能を生み出すサイクルにより、爆発的に技術が進む</strong>ことになるから。</p>

<p>実際には、既に人工知能が新画像圧縮アルゴリズムを組む段階まで来ている模様。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">JPEGを超える画像圧縮を人工知能で実現、Googleが手法を開発 <a href="https://t.co/NPHB5cAfr7">https://t.co/NPHB5cAfr7</a> <a href="https://twitter.com/nikkeibpITpro">@nikkeibpITpro</a>さんから</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/807776215574556672">2016年12月11日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>新技術の採用スピードは加速してってますよー　を示した、Harvard Business Reviewの記事。とてもわかりやすいグラフ<a href="https://hbr.org/2013/11/the-pace-of-technology-adoption-is-speeding-up">CONSUMPTION SPREADS FASTER TODAY</a>が掲載されています。</p>

<h1 id="">まとめ</h1>

<p>今更ながら、勉強会で紹介のあったこれらの本を読み漁っています。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009QW63BI%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/41zfJkI6OtL._SL320_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009QW63BI%2Fref%3Dnosim" target="_blank" >シンギュラリティは近い―人類が生命を超越するとき[Kindle版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">レイ・カーツワイル NHK出版     </div><div class="booklink-link2"><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB009QW63BI%2F" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4140811676%2F" target="_blank" >Amazon[書籍版]</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>                                                    </div></div><div class="booklink-footer"></div></div></div>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4622077531%2Fref%3Dnosim" target="_blank" ><img src="http://ecx.images-amazon.com/images/I/412qYLe5q%2BL._SL320_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4622077531%2Fref%3Dnosim" target="_blank" >テクニウム――テクノロジーはどこへ向かうのか?</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">ケヴィン・ケリー みすず書房 2014-06-20    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4622077531%2Fref%3Dnosim" target="_blank" >Amazon</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkkindle"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%2583e%2583N%2583j%2583E%2583%2580%2581%255C%2581%255C%2583e%2583N%2583m%2583%258D%2583W%2581%255B%2582%25CD%2582%25C7%2582%25B1%2582%25D6%258C%25FC%2582%25A9%2582%25A4%2582%25CC%2582%25A9%253F%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dnode%253D2275256051" target="_blank" >Kindle</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12800560%2F" target="_blank" >楽天ブックス</a><img s
rc="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkrakukobo"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=56&pc_id=56&pl_id=637&s_v=b5Rz2P0601xu&url=" target="_blank" >楽天kobo</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=56&pc_id=56&pl_id=637" width="1" height="1" style="border:none;"></div><div class="shoplinkseven"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=932&pc_id=1188&pl_id=12456&url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D4-62-207753-4%2520%257C%25204-622-07753-4%2520%257C%25204-6220-7753-4%2520%257C%25204-62207-753-4%2520%257C%25204-622077-53-4%2520%257C%25204-6220775-3-4" target="_blank" >7net<img?src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=932&pc_id=1188&pl_id=12456"?width="1"?height="1"?style="border:none;"></a></div>                            </div></div><div class="booklink-footer"></div></div></div>

<p>人口知能が人間の知能を上回る<strong>特異点</strong>、特定の分野では既に実現しているのが現実。</p>

<p>今はその導入部分を知ったに過ぎないので、さてこれからどう具体的なアクションに落とし込んで行こうか。考えていきたいと思います。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6037304523]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722505215]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>184</wp:comment_id>
			<wp:comment_author><![CDATA[注册以获取100 USDT]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[61219871@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/zh-CN/register?ref=OMM3XK51</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-23 13:40:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-23 04:40:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>243</wp:comment_id>
			<wp:comment_author><![CDATA[Gii thiu binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[11440191@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/vi/register?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.152]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-05 09:02:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-05 00:02:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>264</wp:comment_id>
			<wp:comment_author><![CDATA[registro en Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[84504200@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/es/register-person?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.162]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-29 15:47:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-29 06:47:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>買ってはいけない太陽光チャージコントローラ。</title>
		<link>https://tech.blog.uribou.me/not-recomended-charge-controller/</link>
		<pubDate>Fri, 30 Dec 2016 17:23:14 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/not-recomended-charge-controller/</guid>
		<description></description>
		<content:encoded><![CDATA[12V/24Vを自動認識してくれる上、驚くほど安いので試しに買ってみたのが、このチャージコントローラ。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01FVQOH2Y%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51Oq56secfL._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01FVQOH2Y%2Fref%3Dnosim" target="_blank" rel="noopener">Anself 10A12V/24V ソーラーパネル用 チャージコントローラー オートレギュレータ バッテリーシステム 過充電 保護　LCDディスプレイ</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Anself     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D10A%252012V%252F24V%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%2520%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazonで調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F10A%252012V%252F24V%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%2520%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
蓄電池の電圧をデジタル表示してくれるインジケータ付きなのはとても便利で、実際、とらんじしょん昭島主催のオフグリッド映画上映会ではとても重宝しました。

<a data-flickr-embed="true" data-footer="true" href="https://www.flickr.com/photos/29110932@N07/30153190701/in/album-72157675024942155/" title="蓄電池やグリッド対インバータの説明を、NPO法人 非電化地域に蓄電池を贈る会 代表鈴木さんより。"><img src="https://c6.staticflickr.com/6/5289/30153190701_7f8e7b222c_z.jpg" width="640" height="425" alt="蓄電池やグリッド対インバータの説明を、NPO法人 非電化地域に蓄電池を贈る会 代表鈴木さんより。"></a>
が、普段の蓄電に使用するには不向きであることが判明。
きっかけは<a href="http://blog.rinka-blossom.com/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/">車のダッシュボードに設置した蓄電システム</a>の、曇天時の状況。
<span style="font-size:1.5em">ちょっと信じがたい事態</span>が起きたのでした…。
<h1>このチャージコントローラが持つ問題点</h1>
<h2>チャージコントローラ自体の電力消費がデカすぎる</h2>
曇天続きだと発電できるほどの太陽光が降り注いでくれないので、チャージコントローラ自身と、負荷側（スマホ充電器とかですね）が消費するだけになってしまいます。
チャージコントローラには過放電防止機能が付いているんですが、その機能でカットできるのは負荷側のみで、自分自身の消費電力はカットしようがありません。
ので、何が起きるかというと、<span style="font-size:1.5em">チャージコントローラが蓄電池の容量全て使い切ってしまう！</span>のです。
蓄電池の寿命を延ばすため、通常は容量の半分程度に留めるべきなのに、本当に全部使い切ってしまうんですよね…。
曇天が5日ほど続いたある日見ると、チャージコントローラのインジケータが6[V]程度を示していました。
蓄電池容量は24[V] 24[Ah]。
ほぼ全て使い切ったとみなして、チャージコントローラ自体の消費電流量がどの程度なのか、計算して見ると、以下の通りです。
<pre><code>1000 [mA/A] x 24 [Ah] / (24 [h] x 5日) = 200 [mA]
</code></pre>
え…　<strong style="font-size:1.5em">200[mA]</strong>？？
どんなに行っても数十[mA]程度だろうと思っていたのに、誤差ありまくりの概算とはいえ、この消費量は驚きでした…。
<h2>蓄電池を消費しきった後の充電時動作がひどい</h2>
そんなわけで、自己消費で蓄電池を使い切ってしまう、困ったチャージコントローラ。
太陽光パネルを複数接続して一気に蓄電池を充電しようとしたところ、このチャージコントローラを使うと、また別の問題が発生しました。
一旦消費仕切ってしまった蓄電池の電圧6[V]から、本来の24[V]まで充電して回復させようとすると、チャージコントローラはこのシステムが12[V]であると勘違いして、14[V]付近で充電を止めようとします。
にも関わらず、もっと行けそうだ！と思うのか、<strong style="font-size:1.5em">LEDインジケータや液晶がパタパタと明滅を繰り返す</strong>という、奇妙な状態に陥ります。
もうこのチャージコントローラを使うのは金輪際やめよう…。
<h1>まとめ</h1>
一時的な用途ならいいんですが、普段の生活で使うものは、本体の消費電力が明記されていないチャージコントローラを使用すべきではないですね。
PWM方式なら、電菱さんのチャージコントローラを使いましょう。
消費電力はなんと、<strong style="font-size:2em">公称値1[mA]</strong>です。
<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51Mo4Zme35L._SL160_.jpg" style="border: none" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" rel="noopener">電菱　太陽電池充放電コントローラー　Solar Amp B　10A/12V　SA-BA10</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258010A%252F12V%25E3%2580%2580SA-BA10%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazonで調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258010A%252F12V%25E3%2580%2580SA-BA10%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場で調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer"></div></div></div>
12V/24V兼用ではないですが、例のインジケータパタパタ問題があったりするので、きっちり専用のものを使い分けた方が良いですね。
兼用でもスイッチで切り替え可能な製品とか。
とにかく、ちょっとくらい高くても信頼の置ける、できるだけ詳細なスペックを公開している製品を購入しましょう。
って、当たり前の話に落ち着いてしまった。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1628</wp:post_id>
		<wp:post_date><![CDATA[2016-12-31 02:23:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-30 17:23:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[not-recomended-charge-controller]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="post_tag" nicename="ohuguritudo"><![CDATA[オフグリッド]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
		<category domain="category" nicename="%e9%9b%bb%e6%b0%97%e5%b7%a5%e4%ba%8b"><![CDATA[電気工事]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:72:"https://images-fe.ssl-images-amazon.com/images/I/51Oq56secfL._SL160_.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>12V/24Vを自動認識してくれる上、驚くほど安いので試しに買ってみたのが、このチャージコントローラ。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01FVQOH2Y%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/51Oq56secfL._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB01FVQOH2Y%2Fref%3Dnosim" target="_blank" >Anself 10A12V/24V ソーラーパネル用 チャージコントローラー オートレギュレータ バッテリーシステム 過充電 保護　LCDディスプレイ</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> Anself     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D10A%252012V%252F24V%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%2520%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazonで調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F10A%252012V%252F24V%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%2520%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%258D%25E3%2583%25AB%25E7%2594%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>蓄電池の電圧をデジタル表示してくれるインジケータ付きなのはとても便利で、実際、とらんじしょん昭島主催のオフグリッド映画上映会ではとても重宝しました。</p>

<iframe src="https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fttakishima%2Fposts%2F347327868938739&width=500" width="500" height="664" style="border:none;overflow:hidden" scrolling="no" frameborder="0" allowTransparency="true"></iframe>

<p><a data-flickr-embed="true" data-footer="true"  href="https://www.flickr.com/photos/29110932@N07/30153190701/in/album-72157675024942155/" title="蓄電池やグリッド対インバータの説明を、NPO法人 非電化地域に蓄電池を贈る会 代表鈴木さんより。"><img src="https://c6.staticflickr.com/6/5289/30153190701_7f8e7b222c_z.jpg" width="640" height="425" alt="蓄電池やグリッド対インバータの説明を、NPO法人 非電化地域に蓄電池を贈る会 代表鈴木さんより。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>が、普段の蓄電に使用するには不向きであることが判明。</p>

<p>きっかけは<a href="http://blog.rinka-blossom.com/che-nodatusiyubodoha-tai-yang-guang-fa-dian-nizui-shi/">車のダッシュボードに設置した蓄電システム</a>の、曇天時の状況。</p>

<p><span style="font-size:1.5em;">ちょっと信じがたい事態</span>が起きたのでした…。</p>

<h1 id="">このチャージコントローラが持つ問題点</h1>

<h2 id="">チャージコントローラ自体の電力消費がデカすぎる</h2>

<p>曇天続きだと発電できるほどの太陽光が降り注いでくれないので、チャージコントローラ自身と、負荷側（スマホ充電器とかですね）が消費するだけになってしまいます。</p>

<p>チャージコントローラには過放電防止機能が付いているんですが、その機能でカットできるのは負荷側のみで、自分自身の消費電力はカットしようがありません。</p>

<p>ので、何が起きるかというと、<span style="font-size:1.5em;">チャージコントローラが蓄電池の容量全て使い切ってしまう！</span>のです。</p>

<p>蓄電池の寿命を延ばすため、通常は容量の半分程度に留めるべきなのに、本当に全部使い切ってしまうんですよね…。</p>

<p>曇天が5日ほど続いたある日見ると、チャージコントローラのインジケータが6[V]程度を示していました。</p>

<p>蓄電池容量は24[V] 24[Ah]。</p>

<p>ほぼ全て使い切ったとみなして、チャージコントローラ自体の消費電流量がどの程度なのか、計算して見ると、以下の通りです。</p>

<pre><code>1000 [mA/A] x 24 [Ah] / (24 [h] x 5日) = 200 [mA]  
</code></pre>

<p>え…　<strong style="font-size:1.5em;">200[mA]</strong>？？</p>

<p>どんなに行っても数十[mA]程度だろうと思っていたのに、誤差ありまくりの概算とはいえ、この消費量は驚きでした…。</p>

<h2 id="">蓄電池を消費しきった後の充電時動作がひどい</h2>

<p>そんなわけで、自己消費で蓄電池を使い切ってしまう、困ったチャージコントローラ。</p>

<p>太陽光パネルを複数接続して一気に蓄電池を充電しようとしたところ、このチャージコントローラを使うと、また別の問題が発生しました。</p>

<p>一旦消費仕切ってしまった蓄電池の電圧6[V]から、本来の24[V]まで充電して回復させようとすると、チャージコントローラはこのシステムが12[V]であると勘違いして、14[V]付近で充電を止めようとします。</p>

<p>にも関わらず、もっと行けそうだ！と思うのか、<strong style="font-size:1.5em;">LEDインジケータや液晶がパタパタと明滅を繰り返す</strong>という、奇妙な状態に陥ります。</p>

<p>もうこのチャージコントローラを使うのは金輪際やめよう…。</p>

<h1 id="">まとめ</h1>

<p>一時的な用途ならいいんですが、普段の生活で使うものは、本体の消費電力が明記されていないチャージコントローラを使用すべきではないですね。</p>

<p>PWM方式なら、電菱さんのチャージコントローラを使いましょう。</p>

<p>消費電力はなんと、<strong style="font-size:2em;">公称値1[mA]</strong>です。</p>

<div class="cstmreba"><div class="kaerebalink-box"><div class="kaerebalink-image"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/51Mo4Zme35L._SL160_.jpg" style="border: none;" /></a><img src="http://i.af.moshimo.com/af/i/im
pression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info"><div class="kaerebalink-name"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00C74LVAU%2Fref%3Dnosim" target="_blank" >電菱　太陽電池充放電コントローラー　Solar Amp B　10A/12V　SA-BA10</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail"> 電菱     </div><div class="kaerebalink-link1"><div class="shoplinkamazon"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258010A%252F12V%25E3%2580%2580SA-BA10%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazonで調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten"><a href="http://c.af.moshimo.com/af/c/click?a_id=607108&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E9%259B%25BB%25E8%258F%25B1%25E3%2580%2580%25E5%25A4%25AA%25E9%2599%25BD%25E9%259B%25BB%25E6%25B1%25A0%25E5%2585%2585%25E6%2594%25BE%25E9%259B%25BB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2580Solar%2520Amp%2520B%25E3%2580%258010A%252F12V%25E3%2580%2580SA-BA10%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場で調べる</a><img src="http://i.af.moshimo.com/af/i/impression?a_id=607108&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer"></div></div></div>

<p>12V/24V兼用ではないですが、例のインジケータパタパタ問題があったりするので、きっちり専用のものを使い分けた方が良いですね。</p>

<p>兼用でもスイッチで切り替え可能な製品とか。</p>

<p>とにかく、ちょっとくらい高くても信頼の置ける、できるだけ詳細なスペックを公開している製品を購入しましょう。</p>

<p>って、当たり前の話に落ち着いてしまった。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1629]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947823546]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722638232]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Chariot Lab. Lab.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chariothiwasa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[133.203.167.64]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-04-12 21:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-04-12 12:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[はじめまして、Chariotと申します。
私も、初めて使ったチャージコントローラの自己消費電流には不満だたっため、チャージコントローラの低消費電流化の研究をしています。
本業は、私もプログラマですが、PHPしかできません。
よろしければ、クラウドファンディングのプロジェクトを公開しているので、見に来てください。
https://camp-fire.jp/projects/view/62728]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[3851583125]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Chariot Lab. Lab.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chariothiwasa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[60.33.150.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-03-05 09:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-03-05 00:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[こんにちは。
私のクラウドファンディングのプロジェクトの活動報告で紹介させていただきました。
https://camp-fire.jp/projects/127975/activities/74990
去年より大幅にパワーアップし、クラウドファンディングの新しいプロジェクトを始めております。
是非見に来てください。]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[4364346528]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[安藤敬資]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dodo5522@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[153.249.45.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-03-06 09:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-03-06 00:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ご紹介ありがとうございます。
自己消費電流85μA…攻めましたね。電菱の10分の1未満とは。]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>3</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[4364346528]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[4365885868]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>Python asyncioのソースを眺めていて、すっかり忘れていた &#039;*&#039; (アスタリスク) 1個が示す意味。</title>
		<link>https://tech.blog.uribou.me/python-single-asterisks-meaning/</link>
		<pubDate>Mon, 02 Jan 2017 14:23:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-single-asterisks-meaning/</guid>
		<description></description>
		<content:encoded><![CDATA[これです。
<code>__init__</code>の引数に '*' (アスタリスク) が1個、ポツンとありますよね。
<pre><code class="python">class Queue:
    """A queue, useful for coordinating producer and consumer coroutines.
    ...
    """
    def __init__(self, maxsize=0, *, loop=None):
        if loop is None:
            self._loop = events.get_event_loop()
        else:
            self._loop = loop
        self._maxsize = maxsize
        # Futures.
        self._getters = collections.deque()
        # Futures.
        self._putters = collections.deque()
        self._unfinished_tasks = 0
        self._finished = locks.Event(loop=self._loop)
        self._finished.set()
        self._init(maxsize)
</code></pre>
可変長引数ではないし…　これは何だったっけ…　と、Google先生にキーワードを投げかけてみるも、なかなか見つからず。
最終的にこのキーワードで見つかりました。
<blockquote>
  python asterisk single only
</blockquote>
出てきた結果がこれ。
<strong style="font-size:2em"><a href="http://stackoverflow.com/questions/14301967/python-bare-asterisk-in-function-argument">Python bare asterisk in function argument - Stack Overflow</a></strong>
なるほど、bare asteriskと表現するのね…。
気になる回答は以下。
<blockquote>
  Bare * is used to force the caller to use named arguments - so you cannot define a function with * as an argument when you have no following keyword arguments.
  See this answer or Python 3 documentation for more details.
</blockquote>
要するに、
<blockquote>
  '*'は、その後ろの引数に名前付きを強制したいときに使うんだよ。Python 3の公式ドキュメントを見てみ。
</blockquote>
ということらしい。
ああ、しまった…　確かに以前、Python 2-&gt;3の変更点を舐めた時に、<a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions">確かに見た</a>わ。
以下、公式ドキュメント。
<blockquote>
  Parameters after * or *identifier are keyword-only parameters and may only be passed used keyword arguments.
</blockquote>
実際に試した結果が以下。確かに。
<pre><code class="python">In [1]: def hoge(a, *, b=1):
   ...:     pass
   ...:
In [2]: hoge(1)
In [3]: hoge(1, 2)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-3-6045bbdcc16a&gt; in &lt;module&gt;()
----&gt; 1 hoge(1, 2)
TypeError: hoge() takes 1 positional argument but 2 were given
</code></pre>
<pre><code class="python">In [4]: def hoge(a, b=1):
   ...:     pass
   ...:
In [5]: hoge(1)
In [6]: hoge(1,2)
In [7]:
</code></pre>
教訓。
学んだことは普段からアウトプットしないと、あっという間に忘れるんですね。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1631</wp:post_id>
		<wp:post_date><![CDATA[2017-01-02 23:23:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-01-02 14:23:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-single-asterisks-meaning]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>これです。</p>
<p><code>__init__</code>の引数に '*' (アスタリスク) が1個、ポツンとありますよね。</p>
<pre><code class="language-python">class Queue:
    """A queue, useful for coordinating producer and consumer coroutines.
    ...
    """
    def __init__(self, maxsize=0, *, loop=None):
        if loop is None:
            self._loop = events.get_event_loop()
        else:
            self._loop = loop
        self._maxsize = maxsize
        # Futures.
        self._getters = collections.deque()
        # Futures.
        self._putters = collections.deque()
        self._unfinished_tasks = 0
        self._finished = locks.Event(loop=self._loop)
        self._finished.set()
        self._init(maxsize)
</code></pre>
<p>可変長引数ではないし…　これは何だったっけ…　と、Google先生にキーワードを投げかけてみるも、なかなか見つからず。</p>
<p>最終的にこのキーワードで見つかりました。</p>
<blockquote>
  <p>python asterisk single only</p>
</blockquote>
<p>出てきた結果がこれ。</p>
<p><strong style="font-size:2em"><a href="http://stackoverflow.com/questions/14301967/python-bare-asterisk-in-function-argument">Python bare asterisk in function argument - Stack Overflow</a></strong></p>
<p>なるほど、bare asteriskと表現するのね…。</p>
<p>気になる回答は以下。</p>
<blockquote>
  <p>Bare * is used to force the caller to use named arguments - so you cannot define a function with * as an argument when you have no following keyword arguments.</p>
  <p>See this answer or Python 3 documentation for more details.</p>
</blockquote>
<p>要するに、</p>
<blockquote>
  <p>'*'は、その後ろの引数に名前付きを強制したいときに使うんだよ。Python 3の公式ドキュメントを見てみ。</p>
</blockquote>
<p>ということらしい。</p>
<p>ああ、しまった…　確かに以前、Python 2->3の変更点を舐めた時に、<a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions">確かに見た</a>わ。</p>
<p>以下、公式ドキュメント。</p>
<blockquote>
  <p>Parameters after * or *identifier are keyword-only parameters and may only be passed used keyword arguments.</p>
</blockquote>
<p>実際に試した結果が以下。確かに。</p>
<pre><code class="language-python">In [1]: def hoge(a, *, b=1):
   ...:     pass
   ...:
In [2]: hoge(1)
In [3]: hoge(1, 2)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-3-6045bbdcc16a&gt; in &lt;module&gt;()
----&gt; 1 hoge(1, 2)
TypeError: hoge() takes 1 positional argument but 2 were given
</code></pre>
<pre><code class="language-python">In [4]: def hoge(a, b=1):
   ...:     pass
   ...:
In [5]: hoge(1)
In [6]: hoge(1,2)
In [7]:
</code></pre>
<p>教訓。</p>
<p>学んだことは普段からアウトプットしないと、あっという間に忘れるんですね。。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5955482572]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620242]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>matplotlibをOSXのpyenv仮想環境下で使用するには。</title>
		<link>https://tech.blog.uribou.me/matplotlib-on-pyenv-on-osx/</link>
		<pubDate>Mon, 06 Feb 2017 12:59:43 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/matplotlib-on-pyenv-on-osx/</guid>
		<description></description>
		<content:encoded><![CDATA[matplotlibを使いたかっただけなのに、まさかトラブるとは思っていませんでした…。
ちょと前まで普通に使えていたはずなのですが、そういえば<a href="">SSD換装後にOSXを再インストール</a>して以降、使った覚えがない。
pyenv環境下でmatplotlibを使用するためには色々と下準備が必要ということを今更知り、とりあえず解決したので、その備忘録です。
<h2>import matplotlibでいきなり警告</h2>
<code>pip install matplotlib</code>は何事もなく成功するのですが、<code>import matplotlib</code>でおもむろに警告が出力されます。
が、これは問題ありません。
フォントのキャッシュを作ってるのでしばし待てと。
OSX再インストール前にも表示されたかどうかは…　うーん、記憶にない。
<pre><code class="python">In [11]: import matplotlib.pyplot as plt
/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')
/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')
</code></pre>
<h2>そしてRuntimeError</h2>
フォントキャッシュ作成を待つこと数分の後、出ました、エラー。
<pre><code class="python">RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more information on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Working with Matplotlib in Virtual environments' in the Matplotlib FAQ
</code></pre>
仮想環境下でmatplotlib使うには、どうも何か下準備が必要そうです。
Matplotlib FAQを見ろとあったので、ググってみたところ、ありました。
<ul>
<li><a href="http://matplotlib.org/faq/virtualenv_faq.html">Working with Matplotlib in Virtual environments</a></li>
</ul>
matplotlibの問題ではないと前置きした上で（そこ強調するよね）、GUIフレームワークとのインタラクションのためにおまじないが必要なのだそう。
OSXの場合は、以下のリンクを参照してくださいとのこと。
しっかりpyenv環境下での対処法が記載されています。
<ul>
<li><a href="http://matplotlib.org/faq/osx_framework.html#short-version">Working with Matplotlib on OSX</a></li>
</ul>
<pre><code class="bash">PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install x.x.x
</code></pre>
<h2>RuntimeError解決方法</h2>
<code>--enable-framework</code>オプションを有効にした上でインストールせよとのこと。
やってみます。
<pre><code class="bash">moca:python $ PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 3.5.1
Downloading Python-3.5.1.tgz...
-&gt; https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz
Installing Python-3.5.1...
Installed Python-3.5.1 to /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1
moca:python $ pyenv global 3.5.1
moca:python $ pip install ipython matplotlib
Collecting ipython
  Downloading ipython-5.2.2-py3-none-any.whl (749kB)
    100% |________________________________| 749kB 377kB/s
...
</code></pre>
インストールは普通に完了したので、必要なパッケージをインストールします。
<pre><code class="python">moca:python $ ipython
Python 3.5.1 (default, Feb  7 2017, 06:25:06)
Type "copyright", "credits" or "license" for more information.
IPython 5.2.2 -- An enhanced Interactive Python.
?         -&gt; Introduction and overview of IPython's features.
%quickref -&gt; Quick reference.
help      -&gt; Python's own help system.
object?   -&gt; Details about 'object', use 'object??' for extra details.
In [1]: import matplotlib.pyplot as plt
In [6]: png = plt.imread("/Users/takashi/Downloads/auth_ssl.png")
In [7]: plt.imshow(png)
Out[7]: &lt;matplotlib.image.AxesImage at 0x10a825588&gt;
</code></pre>
エラーなく動きました…　が、<code>imshow</code>した後にウィンドウが表示されるはずが、何も表示されない…。
ipython notebookでブラウザ表示できればいいか…。
<h2>まとめ</h2>
とりあえず、<code>RuntimeError</code>なしにpyenv環境下でmatplotlibが使えるようになりました。
<code>plt.imsave()</code>すれば、バッファ上に確保した画像データをpngファイルに吐き出すこともできたので、当面は問題なさそうです。
<pre><code class="python">In [7]: plt.imsave("/Users/takashi/temp.png", png)
In [8]:
Do you really want to exit ([y]/n)? y
moca:python $ open /Users/takashi/temp.png
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1633</wp:post_id>
		<wp:post_date><![CDATA[2017-02-06 21:59:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-02-06 12:59:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[matplotlib-on-pyenv-on-osx]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="%e5%8f%af%e8%a6%96%e5%8c%96"><![CDATA[可視化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>matplotlibを使いたかっただけなのに、まさかトラブるとは思っていませんでした…。</p>
<p>ちょと前まで普通に使えていたはずなのですが、そういえば<a href="">SSD換装後にOSXを再インストール</a>して以降、使った覚えがない。</p>
<p>pyenv環境下でmatplotlibを使用するためには色々と下準備が必要ということを今更知り、とりあえず解決したので、その備忘録です。</p>
<h2 id="importmatplotlib">import matplotlibでいきなり警告</h2>
<p><code>pip install matplotlib</code>は何事もなく成功するのですが、<code>import matplotlib</code>でおもむろに警告が出力されます。</p>
<p>が、これは問題ありません。</p>
<p>フォントのキャッシュを作ってるのでしばし待てと。</p>
<p>OSX再インストール前にも表示されたかどうかは…　うーん、記憶にない。</p>
<pre><code class="language-python">In [11]: import matplotlib.pyplot as plt
/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')
/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/lib/python3.5/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')
</code></pre>
<h2 id="runtimeerror">そしてRuntimeError</h2>
<p>フォントキャッシュ作成を待つこと数分の後、出ました、エラー。</p>
<pre><code class="language-python">RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more information on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Working with Matplotlib in Virtual environments' in the Matplotlib FAQ
</code></pre>
<p>仮想環境下でmatplotlib使うには、どうも何か下準備が必要そうです。</p>
<p>Matplotlib FAQを見ろとあったので、ググってみたところ、ありました。</p>
<ul>
<li><a href="http://matplotlib.org/faq/virtualenv_faq.html">Working with Matplotlib in Virtual environments</a></li>
</ul>
<p>matplotlibの問題ではないと前置きした上で（そこ強調するよね）、GUIフレームワークとのインタラクションのためにおまじないが必要なのだそう。</p>
<p>OSXの場合は、以下のリンクを参照してくださいとのこと。</p>
<p>しっかりpyenv環境下での対処法が記載されています。</p>
<ul>
<li><a href="http://matplotlib.org/faq/osx_framework.html#short-version">Working with Matplotlib on OSX</a></li>
</ul>
<pre><code class="language-bash">PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install x.x.x
</code></pre>
<h2 id="runtimeerror">RuntimeError解決方法</h2>
<p><code>--enable-framework</code>オプションを有効にした上でインストールせよとのこと。</p>
<p>やってみます。</p>
<pre><code class="language-bash">moca:python $ PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 3.5.1
Downloading Python-3.5.1.tgz...
-&gt; https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz
Installing Python-3.5.1...
Installed Python-3.5.1 to /Users/takashi/.anyenv/envs/pyenv/versions/3.5.1
moca:python $ pyenv global 3.5.1
moca:python $ pip install ipython matplotlib
Collecting ipython
  Downloading ipython-5.2.2-py3-none-any.whl (749kB)
    100% |________________________________| 749kB 377kB/s
...
</code></pre>
<p>インストールは普通に完了したので、必要なパッケージをインストールします。</p>
<pre><code class="language-python">moca:python $ ipython
Python 3.5.1 (default, Feb  7 2017, 06:25:06)
Type "copyright", "credits" or "license" for more information.
IPython 5.2.2 -- An enhanced Interactive Python.
?         -&gt; Introduction and overview of IPython's features.
%quickref -&gt; Quick reference.
help      -&gt; Python's own help system.
object?   -&gt; Details about 'object', use 'object??' for extra details.
In [1]: import matplotlib.pyplot as plt
In [6]: png = plt.imread("/Users/takashi/Downloads/auth_ssl.png")
In [7]: plt.imshow(png)
Out[7]: &lt;matplotlib.image.AxesImage at 0x10a825588&gt;
</code></pre>
<p>エラーなく動きました…　が、<code>imshow</code>した後にウィンドウが表示されるはずが、何も表示されない…。</p>
<p>ipython notebookでブラウザ表示できればいいか…。</p>
<h2 id="">まとめ</h2>
<p>とりあえず、<code>RuntimeError</code>なしにpyenv環境下でmatplotlibが使えるようになりました。</p>
<p><code>plt.imsave()</code>すれば、バッファ上に確保した画像データをpngファイルに吐き出すこともできたので、当面は問題なさそうです。</p>
<pre><code class="language-python">In [7]: plt.imsave("/Users/takashi/temp.png", png)
In [8]:
Do you really want to exit ([y]/n)? y
moca:python $ open /Users/takashi/temp.png
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5953166416]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519254]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>MNIST手書き文字機械学習。TensorFlowチュートリアルの前に、scikit-learnのSVMで復習する。</title>
		<link>https://tech.blog.uribou.me/mnist-with-sklearn-svm/</link>
		<pubDate>Thu, 16 Feb 2017 18:08:15 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/mnist-with-sklearn-svm/</guid>
		<description></description>
		<content:encoded><![CDATA[TensorFlowを手持ちのMacにインストールしてチュートリアルを写経...する前に、まずは復習がてらscikit-learnのSVMを使って分類してみようと思います。
久々ですっかり忘れてきているもので。
<h1>MNIST手書き文字イメージデータのダウンロード</h1>
<a href="http://yann.lecun.com/exdb/mnist/">THE MNIST DATABASE</a>からトレーニング用とテスト用の手書きイメージデータをダウンロードしましょう。
以下４つです。
<ul>
<li>train-images-idx3-ubyte.gz:  training set images (9912422 bytes) </li>
<li>train-labels-idx1-ubyte.gz:  training set labels (28881 bytes) </li>
<li>t10k-images-idx3-ubyte.gz:   test set images (1648877 bytes) </li>
<li>t10k-labels-idx1-ubyte.gz:   test set labels (4542 bytes)</li>
</ul>
手で落としてgunzipしてもいいんですが、せっかくなのでpythonで書いてみます。
<h1>MNIST手書きイメージデータを扱うためだけのクラス</h1>
ダウンロードしてgzip伸長する関数を書くと、こうなります。
…最初メモリを節約しようとgeneratorで書いたんですが、データ数が多すぎて処理が重くなったのでやめました^^;
代わりに、流行り？のasyncioを使います。

<h1>MNIST手書き文字イメージデータのDataFrame化</h1>
先ほどのクラスを使えば、手書き文字イメージデータをDataFrame化するのは簡単です。
[code lang=python]
from mnist_dl import MnistWrapper
m = MnistWrapper()
train = m.get_train()
test = m.get_test()
images = test[0]
labels = test[1]
[/code]
このようにすれば、imagesとlabelsはすでにpandas.DataFrame化されています。楽ちん。
念のためデータの内容を確認すると、こんな感じです。
[code lang=python]
In [201]: images.shape
Out[201]: (10000, 784)
In [18]: images.loc[0].values.reshape(28, 28)
Out[18]:
array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,  84, 185, 159, 151,  60,  36,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0, 222, 254, 254, 254, 254, 241, 198,
        198, 198, 198, 198, 198, 198, 198, 170,  52,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,  67, 114,  72, 114, 163, 227, 254,
        225, 254, 254, 254, 250, 229, 254, 254, 140,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  17,  66,
         14,  67,  67,  67,  59,  21, 236, 254, 106,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,  83, 253, 209,  18,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,  22, 233, 255,  83,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0, 129, 254, 238,  44,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,  59, 249, 254,  62,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0, 133, 254, 187,   5,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   9, 205, 248,  58,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0, 126, 254, 182,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,  75, 251, 240,  57,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
         19, 221, 254, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,
        203, 254, 219,  35,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  38,
        254, 254,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31, 224,
        254, 115,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 254,
        254,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61, 242, 254,
        254,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 121, 254, 254,
        219,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 121, 254, 207,
         18,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0]])
[/code]
画像ファイルとして書き出すこともできます。
[code lang=python]
import matplotlib.pyplot as plt
plt.imsave(&quot;five.png&quot;, images.loc[0].values.reshape(28, 28))
[/code]
小さ。
<img src="https://farm3.staticflickr.com/2838/32782582632_7a35a623b5_o_d.png" alt="" />
<h1>SVM（Support Vector Machine）を使った分類</h1>
あとはSVMで分類するだけ。…と言っても、手持ちのMacでは性能が低くて、数時間かけても処理が終わらない…。
<img src="https://farm3.staticflickr.com/2584/32052025003_c6bd3a8716_z_d.jpg" alt="" />
ので、データ量を1/10に絞ってあります。
[code lang=python]
from sklearn import svm
svc = svm.SVC()
# 学習
fit = svc.fit(train[0].loc[:6000].values, train[1].loc[:6000].values)
# 予測
predicted = svc.predict(test[0].values)
[/code]
<h1>惨敗の正答率</h1>
サンプル数を削りすぎたのか…？ パラメータを振るなり色々試してみないと分かりませんが、とにかく酷い結果…。
正答率は2割未満。
[code lang=python]
for i in range(0, 1000, 100):
     print(&quot;{}-{}: {:.2f}&quot;.format(i, i+100, metrics.accuracy_score(svc.predict(test[0].loc[i : i+100].values), test[1].loc[i : i+100].values)))
0-100: 0.14
100-200: 0.14
200-300: 0.13
300-400: 0.16
400-500: 0.10
500-600: 0.06
600-700: 0.12
700-800: 0.15
800-900: 0.12
900-1000: 0.16
[/code]
そもそも何かを根本的に間違えたか？と、念のため学習用のデータで試した結果がこちら。
[code lang=python]
for i in range(5900, 6500, 100):
     print(&quot;{}-{}: {:.2f}&quot;.format(i, i+100, metrics.accuracy_score(svc.predict(_train.images.loc[i : i+100].values), _train.labels.loc[i : i+100].values)))
5900-6000: 1.00
6000-6100: 0.12
6100-6200: 0.13
6200-6300: 0.11
6300-6400: 0.12
6400-6500: 0.11
[/code]
学習用データを1/10に削った境目で、綺麗に正答率が激減してますね…。
<a href="http://blog.rinka-blossom.com/mnist-with-sklearn-svm-2/">次回</a>に続く。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1634</wp:post_id>
		<wp:post_date><![CDATA[2017-02-17 03:08:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-02-16 18:08:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mnist-with-sklearn-svm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>TensorFlowを手持ちのMacにインストールしてチュートリアルを写経...する前に、まずは復習がてらscikit-learnのSVMを使って分類してみようと思います。</p>
<p>久々ですっかり忘れてきているもので。</p>
<h1 id="mnist">MNIST手書き文字イメージデータのダウンロード</h1>
<p><a href="http://yann.lecun.com/exdb/mnist/">THE MNIST DATABASE</a>からトレーニング用とテスト用の手書きイメージデータをダウンロードしましょう。</p>
<p>以下４つです。</p>
<ul>
<li>train-images-idx3-ubyte.gz:  training set images (9912422 bytes) </li>
<li>train-labels-idx1-ubyte.gz:  training set labels (28881 bytes) </li>
<li>t10k-images-idx3-ubyte.gz:   test set images (1648877 bytes) </li>
<li>t10k-labels-idx1-ubyte.gz:   test set labels (4542 bytes)</li>
</ul>
<p>手で落としてgunzipしてもいいんですが、せっかくなのでpythonで書いてみます。</p>
<h1 id="mnist">MNIST手書きイメージデータを扱うためだけのクラス</h1>
<p>ダウンロードしてgzip伸長する関数を書くと、こうなります。</p>
<p>…最初メモリを節約しようとgeneratorで書いたんですが、データ数が多すぎて処理が重くなったのでやめました^^;</p>
<p>代わりに、流行り？のasyncioを使います。</p>
<script src="https://gist.github.com/dodo5522/95bf80671adf94a309fceb7f2b029a68.js"></script>
<h1 id="mnistdataframe">MNIST手書き文字イメージデータのDataFrame化</h1>
<p>先ほどのクラスを使えば、手書き文字イメージデータをDataFrame化するのは簡単です。</p>
<pre><code class="language-python">from mnist_dl import MnistWrapper
m = MnistWrapper()
train = m.get_train()
test = m.get_test()
images = test[0]
labels = test[1]
</code></pre>
<p>このようにすれば、imagesとlabelsはすでにpandas.DataFrame化されています。楽ちん。</p>
<p>念のためデータの内容を確認すると、こんな感じです。</p>
<pre><code class="language-python">In [201]: images.shape
Out[201]: (10000, 784)
In [18]: images.loc[0].values.reshape(28, 28)
Out[18]:
array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,  84, 185, 159, 151,  60,  36,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0, 222, 254, 254, 254, 254, 241, 198,
        198, 198, 198, 198, 198, 198, 198, 170,  52,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,  67, 114,  72, 114, 163, 227, 254,
        225, 254, 254, 254, 250, 229, 254, 254, 140,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  17,  66,
         14,  67,  67,  67,  59,  21, 236, 254, 106,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,  83, 253, 209,  18,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,  22, 233, 255,  83,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0, 129, 254, 238,  44,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,  59, 249, 254,  62,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0, 133, 254, 187,   5,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   9, 205, 248,  58,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0, 126, 254, 182,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,  75, 251, 240,  57,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
         19, 221, 254, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,
        203, 254, 219,  35,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  38,
        254, 254,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31, 224,
        254, 115,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 254,
        254,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61, 242, 254,
        254,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 121, 254, 254,
        219,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 121, 254, 207,
         18,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0]])
</code></pre>
<p>画像ファイルとして書き出すこともできます。</p>
<pre><code class="language-python">import matplotlib.pyplot as plt
plt.imsave("five.png", images.loc[0].values.reshape(28, 28))
</code></pre>
<p>小さ。</p>
<p><img src="https://farm3.staticflickr.com/2838/32782582632_7a35a623b5_o_d.png" alt="" /></p>
<h1 id="svmsupportvectormachine">SVM（Support Vector Machine）を使った分類</h1>
<p>あとはSVMで分類するだけ。…と言っても、手持ちのMacでは性能が低くて、数時間かけても処理が終わらない…。</p>
<p><img src="https://farm3.staticflickr.com/2584/32052025003_c6bd3a8716_z_d.jpg" alt="" /></p>
<p>ので、データ量を1/10に絞ってあります。</p>
<pre><code class="language-python">from sklearn import svm
svc = svm.SVC()
# 学習
fit = svc.fit(train[0].loc[:6000].values, train[1].loc[:6000].values)
# 予測
predicted = svc.predict(test[0].values)
</code></pre>
<h1 id="">惨敗の正答率</h1>
<p>サンプル数を削りすぎたのか…？ パラメータを振るなり色々試してみないと分かりませんが、とにかく酷い結果…。</p>
<p>正答率は2割未満。</p>
<pre><code class="language-python">for i in range(0, 1000, 100):
     print("{}-{}: {:.2f}".format(i, i+100, metrics.accuracy_score(svc.predict(test[0].loc[i : i+100].values), test[1].loc[i : i+100].values)))
0-100: 0.14
100-200: 0.14
200-300: 0.13
300-400: 0.16
400-500: 0.10
500-600: 0.06
600-700: 0.12
700-800: 0.15
800-900: 0.12
900-1000: 0.16
</code></pre>
<p>そもそも何かを根本的に間違えたか？と、念のため学習用のデータで試した結果がこちら。</p>
<pre><code class="language-python">for i in range(5900, 6500, 100):
     print("{}-{}: {:.2f}".format(i, i+100, metrics.accuracy_score(svc.predict(_train.images.loc[i : i+100].values), _train.labels.loc[i : i+100].values)))
5900-6000: 1.00
6000-6100: 0.12
6100-6200: 0.13
6200-6300: 0.11
6300-6400: 0.12
6400-6500: 0.11
</code></pre>
<p>学習用データを1/10に削った境目で、綺麗に正答率が激減してますね…。</p>
<p><a href="http://blog.rinka-blossom.com/mnist-with-sklearn-svm-2/">次回</a>に続く。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm3.staticflickr.com/2838/32782582632_7a35a623b5_o_d.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942719147]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519255]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>166</wp:comment_id>
			<wp:comment_author><![CDATA[www.binance.com sign up]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[5683492@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/en/join?ref=W0BCQMF1</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-13 23:10:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-13 14:10:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>PHP開発環境を整備しとこうと思ったら、anyenv最高だと思ったけど、OSX環境でうまくいかず泣きをみている件。</title>
		<link>https://tech.blog.uribou.me/php-on-anyenv/</link>
		<pubDate>Tue, 14 Feb 2017 16:31:34 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/php-on-anyenv/</guid>
		<description></description>
		<content:encoded><![CDATA[知っとくと後々便利そうだと思い、最近いじり始めたPHP。
ブラウザで手軽に実行できるのはいいのだけど、デバッガないのかな？とググってみたら、やっぱりありました。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">phpにもデバッガが同梱されていたとは知らなんだ。<br />PHP 5.6 に採用されるデバッガ phpdbg  を使ってみた <a href="https://t.co/xtMIFKtR4U">https://t.co/xtMIFKtR4U</a> <a href="https://twitter.com/shin1x1">@shin1x1</a>さんから</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/831637134133977088">2017年2月14日</a></blockquote>

PHP5.6以降は実行環境に同梱されているんですね。
ということで、OSX環境といえばbrewで・・・　とコマンド打つ前に立ち止まり、そういえばpyenvやrbenv、ndenvがあるくらいならphpenvもあるんじゃ？　と思ってコマンド打ってみると、やっぱりありました。
anyenv便利。
<pre><code class="bash">bash-3.2$ anyenv install -l
Available **envs:
  Renv
  crenv
  denv
  erlenv
  exenv
  goenv
  hsenv
  jenv
  luaenv
  ndenv
  nenv
  nodenv
  phpenv    &lt;- !
  plenv
  pyenv
  rbenv
  sbtenv
  scalaenv
bash-3.2$ anyenv install phpenv
/var/folders/rz/f7770vgx54g24s5pxkrxqlm00000gn/T/phpenv.20170215074922.16799 ~/Development/study/udemy/Webエンシ_ニア講座/07_MySQL
Cloning https://github.com/laprasdrum/phpenv.git...
Cloning into 'phpenv'...
bash-3.2$ exec -l $SHELL
bash-3.2$ phpenv install -l
...
  5.6.30
  5.6.3
  5.6.4
  5.6.5
  5.6.6
  5.6.7
  5.6.8
  5.6.9
  5.6snapshot
  7.0.0
  7.0.10
  7.0.11
  7.0.12
  7.0.13
  7.0.14
  7.0.15
  7.0.1
  7.0.2
  7.0.3
  7.0.4
  7.0.5
  7.0.6
  7.0.7
  7.0.8
  7.0.9
  7.0snapshot
  7.1.0
  7.1.1
  7.1snapshot
  master
</code></pre>
とりあえず5.6系の最新と、7.0系の最新を入れておこう。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">PHP 5.6.x から PHP 7.0.x の変更点。下位互換性のない変更が結構ある様子。エラーが例外に変換されたとか。<a href="https://t.co/KOzzCPWhja">https://t.co/KOzzCPWhja</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/831639266673336320">2017年2月14日</a></blockquote>

・・・ところが、意気揚々と5.6.9をインストールしようとすると、こんなエラーが発生。
<pre><code class="bash">$ phpenv install 5.6.9
[Info]: Loaded extension plugin
[Info]: Loaded apc Plugin.
[Info]: Loaded composer Plugin.
[Info]: Loaded github Plugin.
[Info]: Loaded uprofiler Plugin.
[Info]: Loaded xdebug Plugin.
[Info]: Loaded xhprof Plugin.
[Info]: Loaded zendopcache Plugin.
[Info]: php.ini-production gets used as php.ini
[Info]: Building 5.6.9 into /Users/takashi/.anyenv/envs/phpenv/versions/5.6.9
[Downloading]: https://secure.php.net/distributions/php-5.6.9.tar.bz2
[Preparing]: /var/tmp/php-build/source/5.6.9
-----------------
|  BUILD ERROR  |
-----------------
Here are the last 10 lines from the log:
-----------------------------------------
configure: WARNING: This bison version is not supported for regeneration of the Zend/PHP parsers (found: 2.3, min: 204, excluded: 3.0).
configure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.
configure: error: mcrypt.h not found. Please reinstall libmcrypt.
-----------------------------------------
The full Log is available at '/tmp/php-build.5.6.9.20170215080359.log'.
[Warn]: Aborting build.
</code></pre>
libmcryptが足りんとな。
brewですぐに見つかったのでインストール。
<pre><code class="bash">$ brew install mcrypt
</code></pre>
これにて、PHPも無事インストール…　できませんでした。
<pre><code class="bash">$ phpenv install 5.6.9
[Info]: Loaded extension plugin
[Info]: Loaded apc Plugin.
[Info]: Loaded composer Plugin.
[Info]: Loaded github Plugin.
[Info]: Loaded uprofiler Plugin.
[Info]: Loaded xdebug Plugin.
[Info]: Loaded xhprof Plugin.
[Info]: Loaded zendopcache Plugin.
[Info]: php.ini-production gets used as php.ini
[Info]: Building 5.6.9 into /Users/takashi/.anyenv/envs/phpenv/versions/5.6.9
[Skipping]: Already downloaded and extracted https://secure.php.net/distributions/php-5.6.9.tar.bz2
[Preparing]: /var/tmp/php-build/source/5.6.9
[Compiling]: /var/tmp/php-build/source/5.6.9
-----------------
|  BUILD ERROR  |
-----------------
Here are the last 10 lines from the log:
-----------------------------------------
                 int (* _Nullable)(void *));
                                        ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/stdio.h:475:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/var/tmp/php-build/source/5.6.9/ext/openssl/openssl.c:44:10: fatal error: 'openssl/evp.h' file not found
#include &lt;openssl/evp.h&gt;
         ^
324 warnings and 1 error generated.
make: *** [ext/openssl/openssl.lo] Error 1
-----------------------------------------
The full Log is available at '/tmp/php-build.5.6.9.20170215101310.log'.
[Warn]: Aborting build.
</code></pre>
今度はopensslか… と、またbrewのお世話になろうとしたら、opensslは既存のものがすでに最新だよと警告される。
<pre><code class="bash">$ brew install openssl
Warning: openssl is a keg-only and another version is linked to opt.
Use `brew install --force` if you want to install this version
$ brew upgrade openssl
Error: openssl 1.0.2k already installed
</code></pre>
ググってみると、どうもXcodeのcliツール関連っぽいので、とりあえずXcodeを立ち上げてみると…　なにやらコンポーネントがインストールされました。スクリーンショット取るの忘れた…。
なかなかphpdbgを使うところまでたどり着かない・・・。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1635</wp:post_id>
		<wp:post_date><![CDATA[2017-02-15 01:31:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-02-14 16:31:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php-on-anyenv]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>知っとくと後々便利そうだと思い、最近いじり始めたPHP。</p>
<p>ブラウザで手軽に実行できるのはいいのだけど、デバッガないのかな？とググってみたら、やっぱりありました。</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">phpにもデバッガが同梱されていたとは知らなんだ。<br>PHP 5.6 に採用されるデバッガ phpdbg  を使ってみた <a href="https://t.co/xtMIFKtR4U">https://t.co/xtMIFKtR4U</a> <a href="https://twitter.com/shin1x1">@shin1x1</a>さんから</p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/831637134133977088">2017年2月14日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>PHP5.6以降は実行環境に同梱されているんですね。</p>
<p>ということで、OSX環境といえばbrewで・・・　とコマンド打つ前に立ち止まり、そういえばpyenvやrbenv、ndenvがあるくらいならphpenvもあるんじゃ？　と思ってコマンド打ってみると、やっぱりありました。</p>
<p>anyenv便利。</p>
<pre><code class="language-bash">bash-3.2$ anyenv install -l
Available **envs:
  Renv
  crenv
  denv
  erlenv
  exenv
  goenv
  hsenv
  jenv
  luaenv
  ndenv
  nenv
  nodenv
  phpenv    &lt;- !
  plenv
  pyenv
  rbenv
  sbtenv
  scalaenv
bash-3.2$ anyenv install phpenv
/var/folders/rz/f7770vgx54g24s5pxkrxqlm00000gn/T/phpenv.20170215074922.16799 ~/Development/study/udemy/Webエンシ_ニア講座/07_MySQL
Cloning https://github.com/laprasdrum/phpenv.git...
Cloning into 'phpenv'...
bash-3.2$ exec -l $SHELL
bash-3.2$ phpenv install -l
...
  5.6.30
  5.6.3
  5.6.4
  5.6.5
  5.6.6
  5.6.7
  5.6.8
  5.6.9
  5.6snapshot
  7.0.0
  7.0.10
  7.0.11
  7.0.12
  7.0.13
  7.0.14
  7.0.15
  7.0.1
  7.0.2
  7.0.3
  7.0.4
  7.0.5
  7.0.6
  7.0.7
  7.0.8
  7.0.9
  7.0snapshot
  7.1.0
  7.1.1
  7.1snapshot
  master
</code></pre>
<p>とりあえず5.6系の最新と、7.0系の最新を入れておこう。</p>
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">PHP 5.6.x から PHP 7.0.x の変更点。下位互換性のない変更が結構ある様子。エラーが例外に変換されたとか。<a href="https://t.co/KOzzCPWhja">https://t.co/KOzzCPWhja</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/831639266673336320">2017年2月14日</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>・・・ところが、意気揚々と5.6.9をインストールしようとすると、こんなエラーが発生。</p>
<pre><code class="language-bash">$ phpenv install 5.6.9
[Info]: Loaded extension plugin
[Info]: Loaded apc Plugin.
[Info]: Loaded composer Plugin.
[Info]: Loaded github Plugin.
[Info]: Loaded uprofiler Plugin.
[Info]: Loaded xdebug Plugin.
[Info]: Loaded xhprof Plugin.
[Info]: Loaded zendopcache Plugin.
[Info]: php.ini-production gets used as php.ini
[Info]: Building 5.6.9 into /Users/takashi/.anyenv/envs/phpenv/versions/5.6.9
[Downloading]: https://secure.php.net/distributions/php-5.6.9.tar.bz2
[Preparing]: /var/tmp/php-build/source/5.6.9
-----------------
|  BUILD ERROR  |
-----------------
Here are the last 10 lines from the log:
-----------------------------------------
configure: WARNING: This bison version is not supported for regeneration of the Zend/PHP parsers (found: 2.3, min: 204, excluded: 3.0).
configure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.
configure: error: mcrypt.h not found. Please reinstall libmcrypt.
-----------------------------------------
The full Log is available at '/tmp/php-build.5.6.9.20170215080359.log'.
[Warn]: Aborting build.
</code></pre>
<p>libmcryptが足りんとな。</p>
<p>brewですぐに見つかったのでインストール。</p>
<pre><code class="language-bash">$ brew install mcrypt
</code></pre>
<p>これにて、PHPも無事インストール…　できませんでした。</p>
<pre><code class="language-bash">$ phpenv install 5.6.9
[Info]: Loaded extension plugin
[Info]: Loaded apc Plugin.
[Info]: Loaded composer Plugin.
[Info]: Loaded github Plugin.
[Info]: Loaded uprofiler Plugin.
[Info]: Loaded xdebug Plugin.
[Info]: Loaded xhprof Plugin.
[Info]: Loaded zendopcache Plugin.
[Info]: php.ini-production gets used as php.ini
[Info]: Building 5.6.9 into /Users/takashi/.anyenv/envs/phpenv/versions/5.6.9
[Skipping]: Already downloaded and extracted https://secure.php.net/distributions/php-5.6.9.tar.bz2
[Preparing]: /var/tmp/php-build/source/5.6.9
[Compiling]: /var/tmp/php-build/source/5.6.9
-----------------
|  BUILD ERROR  |
-----------------
Here are the last 10 lines from the log:
-----------------------------------------
                 int (* _Nullable)(void *));
                                        ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/stdio.h:475:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/var/tmp/php-build/source/5.6.9/ext/openssl/openssl.c:44:10: fatal error: 'openssl/evp.h' file not found
#include &lt;openssl/evp.h&gt;
         ^
324 warnings and 1 error generated.
make: *** [ext/openssl/openssl.lo] Error 1
-----------------------------------------
The full Log is available at '/tmp/php-build.5.6.9.20170215101310.log'.
[Warn]: Aborting build.
</code></pre>
<p>今度はopensslか… と、またbrewのお世話になろうとしたら、opensslは既存のものがすでに最新だよと警告される。</p>
<pre><code class="language-bash">$ brew install openssl
Warning: openssl is a keg-only and another version is linked to opt.
Use `brew install --force` if you want to install this version
$ brew upgrade openssl
Error: openssl 1.0.2k already installed
</code></pre>
<p>ググってみると、どうもXcodeのcliツール関連っぽいので、とりあえずXcodeを立ち上げてみると…　なにやらコンポーネントがインストールされました。スクリーンショット取るの忘れた…。</p>
<p>なかなかphpdbgを使うところまでたどり着かない・・・。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942272852]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447167]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>204</wp:comment_id>
			<wp:comment_author><![CDATA[binance-ны ашуы шн тркелу]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[35165430@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/kz/join?ref=T7KCZASX</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.190]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-03 10:50:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-03 01:50:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>MNIST手書き文字機械学習。TensorFlowチュートリアルの前に、scikit-learnのSVMで復習する。その２。</title>
		<link>https://tech.blog.uribou.me/mnist-with-sklearn-svm-2/</link>
		<pubDate>Thu, 16 Feb 2017 18:10:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/mnist-with-sklearn-svm-2/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.rinka-blossom.com/mnist-with-sklearn-svm/">前回</a>惨敗の正答率だった、SVMによるMNIST手書き文字分類。
まずはscikit-learn付属のデータセットで復習してみることにする。
<h1>scikit-learn付属の手書き文字データセットは解像度がひどい</h1>
こんな感じで試してみると、
[code lang=python]
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
d = load_digits()
X_train, X_test, y_train, y_test = train_test_split(d.data, d.target, train_size=0.8)
svc = SVC()
f = svc.fit(X_train, y_train)
score = accuracy_score(f.predict(X_test), y_test)
print(score)
[/code]
正答率は、0.467。
低！
…って、ここまで荒い手書き文字で正しい回答を得るのは、無理あるんじゃ…。
<img src="https://farm1.staticflickr.com/320/32826230346_e8aec079cc_o_d.png" alt="" /> <img src="https://farm3.staticflickr.com/2838/32782582632_7a35a623b5_o_d.png" alt="" />
SVMを責められないと個人的には思う。
<h1>kernel typeを変えてみる</h1>
でもちょっとだけ、SVCのパラメータを変えて試してみると、意外と正答率が上がったりします。
docstringを見ると、とりあえずkernel typeだけでも変えて試してみたくなった。
[code lang=text]
Init signature: SVC(C=1.0, kernel=&#039;rbf&#039;, degree=3, gamma=&#039;auto&#039;, coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_
Docstring:
C-Support Vector Classification.
The implementation is based on libsvm. The fit time complexity
is more than quadratic with the number of samples which makes it hard
to scale to dataset with more than a couple of 10000 samples.
Parameters
----------
C : float, optional (default=1.0)
Penalty parameter C of the error term.
kernel : string, optional (default=&#039;rbf&#039;)
Specifies the kernel type to be used in the algorithm.
It must be one of &#039;linear&#039;, &#039;poly&#039;, &#039;rbf&#039;, &#039;sigmoid&#039;, &#039;precomputed&#039; or
a callable.
If none is given, &#039;rbf&#039; will be used. If a callable is given it is
used to pre-compute the kernel matrix from data matrices; that matrix
should be an array of shape ``(n_samples, n_samples)``.
[/code]
ということで試してみました。
[python]
ps = [accuracy_score(SVC(kernel=kernel).fit(X_train, y_train).predict(X_test), y_test) for kernel in ['linear', 'poly', 'rbf', 'sigmoid']]
for i, kernel in enumerate(['linear', 'poly', 'rbf', 'sigmoid']):
    print(kernel + &quot;: &quot; + str(ps[i]))
[/python]
結果は以下の通り。
[bash]
linear: 0.966666666667
poly: 0.977777777778
rbf: 0.427777777778
sigmoid: 0.0888888888889
[/bash]
デフォルトのrbfよりも、linearやpolyの方がはるかに高い正答率。
kernel typeを変えて前回の復習をもう一回やってみるか…。
<a href="">次回</a>に続く。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1636</wp:post_id>
		<wp:post_date><![CDATA[2017-02-17 03:10:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-02-16 18:10:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mnist-with-sklearn-svm-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="ji-jie-xue-xi"><![CDATA[機械学習]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><br><br> <br />
<a href="http://blog.rinka-blossom.com/mnist-with-sklearn-svm/">前回</a>惨敗の正答率だった、SVMによるMNIST手書き文字分類。</p>
<p>まずはscikit-learn付属のデータセットで復習してみることにする。</p>
<h1 id="scikitlearn">scikit-learn付属の手書き文字データセットは解像度がひどい</h1>
<p>こんな感じで試してみると、</p>
<pre><code class="language-python">from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
d = load_digits()
X_train, X_test, y_train, y_test = train_test_split(d.data, d.target, train_size=0.8)
svc = SVC()
f = svc.fit(X_train, y_train)
score = accuracy_score(f.predict(X_test), y_test)
print(score)
</code></pre>
<p>正答率は、0.467。</p>
<p>低！</p>
<p>…って、ここまで荒い手書き文字で正しい回答を得るのは、無理あるんじゃ…。</p>
<p>これの正解は「１」、SVMの予測は「５」。</p>
<p><img src="/content/images/2017/02/test.png" alt="" /></p>
<p>SVMを責められないと個人的には思う。</p>
<h1 id="kerneltype">kernel typeを変えてみる</h1>
<p>でもちょっとだけ、SVCのパラメータを変えて試してみると、意外と正答率が上がったりします。</p>
<p>docstringを見ると、とりあえずkernel typeだけでも変えて試してみたくなった。</p>
<pre><code>Init signature: SVC(C=1.0, kernel='rbf', degree=3, gamma='auto', coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_
Docstring:
C-Support Vector Classification.
The implementation is based on libsvm. The fit time complexity
is more than quadratic with the number of samples which makes it hard
to scale to dataset with more than a couple of 10000 samples.
Parameters
----------
C : float, optional (default=1.0)
    Penalty parameter C of the error term.
kernel : string, optional (default='rbf')
     Specifies the kernel type to be used in the algorithm.
     It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or
     a callable.
     If none is given, 'rbf' will be used. If a callable is given it is
     used to pre-compute the kernel matrix from data matrices; that matrix
     should be an array of shape ``(n_samples, n_samples)``.
</code></pre>
<p>ということで試してみました。</p>
<pre><code class="language-python">ps = [accuracy_score(SVC(kernel=kernel).fit(X_train, y_train).predict(X_test), y_test) for kernel in ['linear', 'poly', 'rbf', 'sigmoid']]
for i, kernel in enumerate(['linear', 'poly', 'rbf', 'sigmoid']):
    print(kernel + ": " + str(ps[i]))
</code></pre>
<p>結果は以下の通り。</p>
<blockquote>
  <p>linear: 0.966666666667 <br />
  poly: 0.977777777778 <br />
  rbf: 0.427777777778 <br />
  sigmoid: 0.0888888888889  </p>
</blockquote>
<p>デフォルトのrbfよりも、linearやpolyの方がはるかに高い正答率。</p>
<p>kernel typeを変えて前回の復習をもう一回やってみるか…。</p>
<p><a href="">次回</a>に続く。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:65:"https://farm1.staticflickr.com/320/32826230346_e8aec079cc_o_d.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5943533654]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519255]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>185</wp:comment_id>
			<wp:comment_author><![CDATA[binance odkazov'y bonus]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[97818618@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/sk/join?ref=FIHEGIZ8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-24 02:19:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-23 17:19:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>287</wp:comment_id>
			<wp:comment_author><![CDATA[binance Registrace]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[4846083@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/cs/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-22 08:23:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-21 23:23:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>遊びながらプログラミングに必要な考え方が身につくロボット玩具、Cubettoが我が家に来ました。</title>
		<link>https://tech.blog.uribou.me/learning-programing-with-cubetto/</link>
		<pubDate>Fri, 14 Apr 2017 13:42:24 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/learning-programing-with-cubetto/</guid>
		<description></description>
		<content:encoded><![CDATA[遊ぶだけ遊んで、すっかり遅くなってしまったロボット玩具Cubettoレポート。
KickstarterにCubettoプロジェクトが公開された2016年3月に、思わずポチってしまいました。
その後、たった半年程度で、工場で量産開始した旨の連絡があり、自分の支援金が役に立てたのかと思うと、感慨深かったです。
<ul>
<li><a href="http://blog.rinka-blossom.com/cubetto-production-line-is-officially-rolling/">木製ロボット玩具、Cubettoが工場生産開始！</a></li>
</ul>
<h1>どこで売ってる？</h1>
いつのまにかプリモトイズ日本販売総代理店までできてました。勢いあるな…。
日本語対応した本家HPで普通に購入できます。
もちろん日本円で、29,600円（税込31,968円）となっています。
<a href="https://www.primotoys.jp/shop/" target="_blank" rel="noopener"><img src="https://www.primotoys.jp/wp-content/uploads/2016/03/cubetto.jpg"></a>
<h1>春夏号ベビモで紹介されたCubetto</h1>
さて、そんな希少価値感があったCubettoですが、今では普通に購入できるようです。
さすがにヨドバシで買うような手軽さではないようですが。
というのも、春夏号ベビモで紹介されているのです。
<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB06XHSDLTH%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/61wJF-t1CjL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info"><div class="booklink-name"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB06XHSDLTH%2Fref%3Dnosim" target="_blank" rel="noopener">Baby-mo(ベビモ) 2017年 04 月春夏号 [雑誌][Kindle版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Baby-mo編集部 主婦の友社 2017-03-15    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="//moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DBaby-mo%2528%2583x%2583r%2583%2582%2529%25202017%2594N%252004%2520%258C%258E%258Ft%2589%25C4%258D%2586%2520%255B%258EG%258E%258F%255D%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dsearch-alias%253Dstripbooks" target="_blank" rel="noopener">Amazon[書籍版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div>                                                  </div></div><div class="booklink-footer"></div></div></div>
そのページがこちら。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/33884323166/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="春夏号ベビモで紹介されたcubetto。正直3歳から学べるというのは無理あるけど。"><img src="https://c1.staticflickr.com/3/2862/33884323166_8942a985c2.jpg" width="375" height="500" alt="春夏号ベビモで紹介されたcubetto。正直3歳から学べるというのは無理あるけど。"></a>
正直3歳から学べるというのは無理がある気もしますが…4歳のウチの子でもちょっと遊び方の理解が怪しいので。
…教え方が悪いという可能性も高いですが。
<h1>Cubettoと戯れる我が家の4歳児</h1>
同梱されているCubetto専用マップを走らせるのもいいんですが、自分で好きな地図を作るのも良いです。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/32570216253/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="DSC_1441"><img src="https://c1.staticflickr.com/4/3670/32570216253_b4ac1f79d9.jpg" width="500" height="332" alt="DSC_1441"></a>
専用のブロックを操作盤にはめ込んで、ロボットの動きをプログラミングしていきます。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/30773737523/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="子供用プログラミング体験玩具ロボット、cubettoが届く。"><img src="https://c1.staticflickr.com/1/238/30773737523_a6099656aa.jpg" width="375" height="500" alt="子供用プログラミング体験玩具ロボット、cubettoが届く。"></a>
こちらの動画は、同梱されていたCubetto専用マップで実際に動かしてみた様子。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/31583600955/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="子供用プログラミング体験玩具ロボット、cubettoが届く。"><img src="https://c1.staticflickr.com/1/264/31583600955_5a0055c5d7.jpg" width="500" height="281" alt="子供用プログラミング体験玩具ロボット、cubettoが届く。"></a>
<h1>Cubettoの活用法</h1>
2020年から、小学校での必修教科として導入されることが決定しているプログラミング。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">３歳から遊べる英国生まれのプログラミングのおもちゃ『キュベット』日本でのオンライン発売を開始！キュベットは、読み書きができる前の子どもでも遊べ、スクリーンを使わずにコーディングの基礎を学べる初めての製品だ。｜ロボスタ <a href="https://t.co/xxxHBHYTH9">https://t.co/xxxHBHYTH9</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/851104038783299588">2017年4月9日</a></blockquote>

<blockquote>
  文字の読み書きができるようになる前の子どもでも、手を使う楽しい遊びを通じて、コーディングの基礎、すなわち「目的達成のために問題を読み解き、物事を順序立てて論理的に考える力」を身につけていくことが可能になる。
  キュベットは、読み書きができる前の子どもでも遊べ、スクリーンを使わずにコーディングの基礎を学べる初めての製品だ。
  試作品の段階から注目を集めており、2016年、Kickstarterにて子どもの教育とIT技術を融合させたEdTech（エドテック）プロジェクトとしてはクラウドファンディング史上最高額となる160万ドルを90ヶ国以上から集め、世界各国から非常に高い期待を寄せられていることを証明した。
</blockquote>
にも関わらず、日本ではそこまで知名度なさそうな雰囲気。
Twitterで検索しても、シェアしている人はそのほとんどが日本国外の方々。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">&quot;知識の伝達だけではなく…才能の開花を手伝うアーティストのような姿勢&quot;／自分が遊びたい / “ASCII.jp：Cubetto――木製がポイントのプログラミングおもちゃ (1/2)｜松村太郎の「西海岸から見る&quot;it&quot;トレンド」” <a href="https://t.co/HHyLK1POee">https://t.co/HHyLK1POee</a></p>&mdash; soup1 (@_soup1) <a href="https://twitter.com/_soup1/status/850240666802180096">2017年4月7日</a></blockquote>

こちらはカルタ？をCubettoとコラボしている例。なるほど。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Loving watching <a href="https://twitter.com/hashtag/sd79learn?src=hash">#sd79learn</a> learners learning with Cubetto! <a href="https://twitter.com/primotoys">@primotoys</a> <a href="https://twitter.com/hashtag/cubetto?src=hash">#cubetto</a> <a href="https://t.co/6y4Hz9zC0i">pic.twitter.com/6y4Hz9zC0i</a></p>&mdash; |*LisaRead*| (@LisaRead) <a href="https://twitter.com/LisaRead/status/846776108741607424">2017年3月28日</a></blockquote>

これはCubettoで世界旅行する活用事例。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Using coding that we learned from Cubetto to &#039;travel&#039; to Meteghan, Nova Scotia! <a href="https://twitter.com/mrssaramartin">@mrssaramartin</a> <a href="https://twitter.com/Liz_Kane_">@Liz_Kane_</a> <a href="https://twitter.com/verenanz">@verenanz</a> <a href="https://t.co/J6BBZcbF4o">pic.twitter.com/J6BBZcbF4o</a></p>&mdash; Tori Page (@2MmePage) <a href="https://twitter.com/2MmePage/status/850213576727908352">2017年4月7日</a></blockquote>

小さい頃からプログラミングに触れるのは、これからの時代、様々な面で良いことだと思うので、こういったネタも集めていこうと思いました。
そもそも、せっかく我が家に来たCubettoがあまり活用できていないことに、Twitterで検索した活用事例を見て思い知りました・・・。
もっと活用しよう。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1642</wp:post_id>
		<wp:post_date><![CDATA[2017-04-14 22:42:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-14 13:42:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[learning-programing-with-cubetto]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
		<category domain="post_tag" nicename="zhi-yu"><![CDATA[知育]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:63:"https://www.primotoys.jp/wp-content/uploads/2016/03/cubetto.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>遊ぶだけ遊んで、すっかり遅くなってしまったロボット玩具Cubettoレポート。</p>

<p>KickstarterにCubettoプロジェクトが公開された2016年3月に、思わずポチってしまいました。</p>

<p>その後、たった半年程度で、工場で量産開始した旨の連絡があり、自分の支援金が役に立てたのかと思うと、感慨深かったです。</p>

<ul>
<li><a href="http://blog.rinka-blossom.com/cubetto-production-line-is-officially-rolling/">木製ロボット玩具、Cubettoが工場生産開始！</a></li>
</ul>

<h1 id="">どこで売ってる？</h1>

<p>いつのまにかプリモトイズ日本販売総代理店までできてました。勢いあるな…。</p>

<p>日本語対応した本家HPで普通に購入できます。</p>

<p>もちろん日本円で、29,600円（税込31,968円）となっています。</p>

<p><a href="https://www.primotoys.jp/shop/" frameborder="0" target="_blank"><img src="https://www.primotoys.jp/wp-content/uploads/2016/03/cubetto.jpg"></a></p>

<h1 id="cubetto">春夏号ベビモで紹介されたCubetto</h1>

<p>さて、そんな希少価値感があったCubettoですが、今では普通に購入できるようです。</p>

<p>さすがにヨドバシで買うような手軽さではないようですが。</p>

<p>というのも、春夏号ベビモで紹介されているのです。</p>

<div class="cstmreba"><div class="booklink-box"><div class="booklink-image"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB06XHSDLTH%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/61wJF-t1CjL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="booklink-info"><div class="booklink-name"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB06XHSDLTH%2Fref%3Dnosim" target="_blank" >Baby-mo(ベビモ) 2017年 04 月春夏号 [雑誌][Kindle版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="booklink-powered-date">posted with <a href="http://yomereba.com" rel="nofollow" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail">Baby-mo編集部 主婦の友社 2017-03-15    </div><div class="booklink-link2"><div class="shoplinkamazon"><a href="//moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DBaby-mo%2528%2583x%2583r%2583%2582%2529%25202017%2594N%252004%2520%258C%258E%258Ft%2589%25C4%258D%2586%2520%255B%258EG%258E%258F%255D%26__mk_ja_JP%3D%2583J%2583%255E%2583J%2583i%26url%3Dsearch-alias%253Dstripbooks" target="_blank" >Amazon[書籍版]</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div>                                                    </div></div><div class="booklink-footer"></div></div></div>

<p>そのページがこちら。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/33884323166/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="春夏号ベビモで紹介されたcubetto。正直3歳から学べるというのは無理あるけど。"><img src="https://c1.staticflickr.com/3/2862/33884323166_8942a985c2.jpg" width="375" height="500" alt="春夏号ベビモで紹介されたcubetto。正直3歳から学べるというのは無理あるけど。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>正直3歳から学べるというのは無理がある気もしますが…4歳のウチの子でもちょっと遊び方の理解が怪しいので。</p>

<p>…教え方が悪いという可能性も高いですが。</p>

<h1 id="cubetto4">Cubettoと戯れる我が家の4歳児</h1>

<p>同梱されているCubetto専用マップを走らせるのもいいんですが、自分で好きな地図を作るのも良いです。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/32570216253/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="DSC_1441"><img src="https://c1.staticflickr.com/4/3670/32570216253_b4ac1f79d9.jpg" width="500" height="332" alt="DSC_1441"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>専用のブロックを操作盤にはめ込んで、ロボットの動きをプログラミングしていきます。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/30773737523/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="子供用プログラミング体験玩具ロボット、cubettoが届く。"><img src="https://c1.staticflickr.com/1/238/30773737523_a6099656aa.jpg" width="375" height="500" alt="子供用プログラミング体験玩具ロボット、cubettoが届く。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>こちらの動画は、同梱されていたCubetto専用マップで実際に動かしてみた様子。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/31583600955/in/photolist-TCf1Lo-RzA9Fy-RC7SyD-RzA9ns-RC7SpF-RzzZXG-SELAnc-SCifmY-Q7Wdd4-NTnCLn-NTntBF-NTns2r-Py3tFj-PTYdqE-Q7VRB4-PWF4or-PWF32i-Q7VGsH-NTneap-PTY9WW-NTnbyH-NQzmhL-PWETRR-Py3g95-Py3e2j-NQz5Bh-PTY3LQ-Py3bNm-Py3auE-PTXYMN-NQz9YJ-NTmVyc-PWEGqp" title="子供用プログラミング体験玩具ロボット、cubettoが届く。"><img src="https://c1.staticflickr.com/1/264/31583600955_5a0055c5d7.jpg" width="500" height="281" alt="子供用プログラミング体験玩具ロボット、cubettoが届く。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<h1 id="cubetto">Cubettoの活用法</h1>

<p>2020年から、小学校での必修教科として導入されることが決定しているプログラミング。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">３歳から遊べる英国生まれのプログラミングのおもちゃ『キュベット』日本でのオンライン発売を開始！キュベットは、読み書きができる前の子どもでも遊べ、スクリーンを使わずにコーディングの基礎を学べる初めての製品だ。｜ロボスタ <a href="https://t.co/xxxHBHYTH9">https://t.co/xxxHBHYTH9</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/851104038783299588">2017年4月9日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote>
  <p>文字の読み書きができるようになる前の子どもでも、手を使う楽しい遊びを通じて、コーディングの基礎、すなわち「目的達成のために問題を読み解き、物事を順序立てて論理的に考える力」を身につけていくことが可能になる。</p>
  
  <p>キュベットは、読み書きができる前の子どもでも遊べ、スクリーンを使わずにコーディングの基礎を学べる初めての製品だ。</p>
  
  <p>試作品の段
階から注目を集めており、2016年、Kickstarterにて子どもの教育とIT技術を融合させたEdTech（エドテック）プロジェクトとしてはクラウドファンディング史上最高額となる160万ドルを90ヶ国以上から集め、世界各国から非常に高い期待を寄せられていることを証明した。</p>
</blockquote>

<p>にも関わらず、日本ではそこまで知名度なさそうな雰囲気。</p>

<p>Twitterで検索しても、シェアしている人はそのほとんどが日本国外の方々。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">&quot;知識の伝達だけではなく…才能の開花を手伝うアーティストのような姿勢&quot;／自分が遊びたい / “ASCII.jp：Cubetto――木製がポイントのプログラミングおもちゃ (1/2)｜松村太郎の「西海岸から見る&quot;it&quot;トレンド」” <a href="https://t.co/HHyLK1POee">https://t.co/HHyLK1POee</a></p>&mdash; soup1 (@_soup1) <a href="https://twitter.com/_soup1/status/850240666802180096">2017年4月7日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>こちらはカルタ？をCubettoとコラボしている例。なるほど。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Loving watching <a href="https://twitter.com/hashtag/sd79learn?src=hash">#sd79learn</a> learners learning with Cubetto! <a href="https://twitter.com/primotoys">@primotoys</a> <a href="https://twitter.com/hashtag/cubetto?src=hash">#cubetto</a> <a href="https://t.co/6y4Hz9zC0i">pic.twitter.com/6y4Hz9zC0i</a></p>&mdash; |*LisaRead*| (@LisaRead) <a href="https://twitter.com/LisaRead/status/846776108741607424">2017年3月28日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>これはCubettoで世界旅行する活用事例。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Using coding that we learned from Cubetto to &#39;travel&#39; to Meteghan, Nova Scotia! <a href="https://twitter.com/mrssaramartin">@mrssaramartin</a> <a href="https://twitter.com/Liz_Kane_">@Liz_Kane_</a> <a href="https://twitter.com/verenanz">@verenanz</a> <a href="https://t.co/J6BBZcbF4o">pic.twitter.com/J6BBZcbF4o</a></p>&mdash; Tori Page (@2MmePage) <a href="https://twitter.com/2MmePage/status/850213576727908352">2017年4月7日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>小さい頃からプログラミングに触れるのは、これからの時代、様々な面で良いことだと思うので、こういったネタも集めていこうと思いました。</p>

<p>そもそも、せっかく我が家に来たCubettoがあまり活用できていないことに、Twitterで検索した活用事例を見て思い知りました・・・。</p>

<p>もっと活用しよう。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1643]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949750183]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620244]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>250</wp:comment_id>
			<wp:comment_author><![CDATA[binance коды]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[34835522@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/kz/register?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.79]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-09 09:21:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-09 00:21:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>266</wp:comment_id>
			<wp:comment_author><![CDATA[binance pierakstīsanās bonuss]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[69785173@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/lv/register?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.73]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-06 01:24:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-05 16:24:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>275</wp:comment_id>
			<wp:comment_author><![CDATA[Crea un account binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[81333516@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/it/join?ref=DB40ITMB</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.149]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-05 16:19:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-05 07:19:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>春になって活動開始したキウイ。自動水やり機の出番が近い？</title>
		<link>https://tech.blog.uribou.me/change-to-use-automatic-watering-machine/</link>
		<pubDate>Sat, 15 Apr 2017 04:30:59 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/change-to-use-automatic-watering-machine/</guid>
		<description></description>
		<content:encoded><![CDATA[冬は全て落葉してしまい、それを見ていた嫁は完全に諦めていたという、庭の鉢に植えたキウイ。
たぶん大丈夫なはずと諦めずに水やりと、時々追肥していた自分。
それに応えるかのように、４月になったとたんに活動を再開。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/33206415234/in/dateposted/" title="春。庭のキウイが目覚めました。"><img src="https://c1.staticflickr.com/4/3938/33206415234_72d75ba9bc.jpg" width="500" height="332" alt="春。庭のキウイが目覚めました。"></a>
葉が開きました！
そして、その葉をさっそくむしり取ろうとする１歳の娘。ヤメロ。
キウイには雌と雄があるので、実を収穫するにはそれぞれ１本育てる必要があります。
こちらが雌。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/33664197800/in/photostream/" title="庭のキウイ。雌です。"><img src="https://c1.staticflickr.com/4/3936/33664197800_d912f8dbc7.jpg" width="500" height="332" alt="庭のキウイ。雌です。"></a>
で、雄。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/33664200190/in/photostream/" title="庭のキウイ。雄です。"><img src="https://c1.staticflickr.com/4/3936/33664200190_a8dcf50362.jpg" width="500" height="332" alt="庭のキウイ。雄です。"></a>
今の時点では見分けがつかないので、もしかすると逆かも。
花粉が出て来そうな雰囲気で、見るだけで鼻がムズムズしてくる…。
鉢植えで育てているので、水不足が心配なところ。
数年前に作った自動水やり機の出番が近いかもしれない…。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">庭に植えたキウイが活動開始してきたので、いよいよコレの出番かな…？<br />家庭菜園の土の乾燥状態等をリモート監視する（将来的には自動水まき機能付加の予定） on <a href="https://twitter.com/Qiita">@Qiita</a> <a href="https://t.co/F5BtnBpoor">https://t.co/F5BtnBpoor</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/853234875691814913">2017年4月15日</a></blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1644</wp:post_id>
		<wp:post_date><![CDATA[2017-04-15 13:30:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-15 04:30:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[change-to-use-automatic-watering-machine]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="jia-ting-cai-yuan"><![CDATA[家庭菜園]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%a6%e8%87%aa%e8%b6%b3"><![CDATA[自給自足]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:61:"https://c1.staticflickr.com/4/3938/33206415234_72d75ba9bc.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>冬は全て落葉してしまい、それを見ていた嫁は完全に諦めていたという、庭の鉢に植えたキウイ。</p>

<p>たぶん大丈夫なはずと諦めずに水やりと、時々追肥していた自分。</p>

<p>それに応えるかのように、４月になったとたんに活動を再開。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/33206415234/in/dateposted/" title="春。庭のキウイが目覚めました。"><img src="https://c1.staticflickr.com/4/3938/33206415234_72d75ba9bc.jpg" width="500" height="332" alt="春。庭のキウイが目覚めました。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>葉が開きました！</p>

<p>そして、その葉をさっそくむしり取ろうとする１歳の娘。ヤメロ。</p>

<p>キウイには雌と雄があるので、実を収穫するにはそれぞれ１本育てる必要があります。</p>

<p>こちらが雌。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/33664197800/in/photostream/" title="庭のキウイ。雌です。"><img src="https://c1.staticflickr.com/4/3936/33664197800_d912f8dbc7.jpg" width="500" height="332" alt="庭のキウイ。雌です。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>で、雄。</p>

<p><a data-flickr-embed="true"  href="https://www.flickr.com/photos/29110932@N07/33664200190/in/photostream/" title="庭のキウイ。雄です。"><img src="https://c1.staticflickr.com/4/3936/33664200190_a8dcf50362.jpg" width="500" height="332" alt="庭のキウイ。雄です。"></a><script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<p>今の時点では見分けがつかないので、もしかすると逆かも。</p>

<p>花粉が出て来そうな雰囲気で、見るだけで鼻がムズムズしてくる…。</p>

<p>鉢植えで育てているので、水不足が心配なところ。</p>

<p>数年前に作った自動水やり機の出番が近いかもしれない…。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">庭に植えたキウイが活動開始してきたので、いよいよコレの出番かな…？<br>家庭菜園の土の乾燥状態等をリモート監視する（将来的には自動水まき機能付加の予定） on <a href="https://twitter.com/Qiita">@Qiita</a> <a href="https://t.co/F5BtnBpoor">https://t.co/F5BtnBpoor</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/853234875691814913">2017年4月15日</a></blockquote>  

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949780023]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722519257]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>200</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[64238956@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ar-BH/register?ref=V3MG69RO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.78]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-01 07:19:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-31 22:19:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Python製WebアプリフレームワークFlaskが思っていたよりパワフルで深い。</title>
		<link>https://tech.blog.uribou.me/python-web-application-framework-flask-pluggable-view/</link>
		<pubDate>Sat, 27 May 2017 18:48:32 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-web-application-framework-flask-pluggable-view/</guid>
		<description></description>
		<content:encoded><![CDATA[せっかくPython始めたのでWebアプリの一つでも作ってみたいと思い、この本を読みながらFlaskの使い方を勉強していたんですが、正直扱いづらいなぁ・・・と感じていました。
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51sRmBNqesL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" rel="noopener">Pythonプロフェッショナルプログラミング 第2版</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px">株式会社ビープラウド 秀和システム 2015-05-21    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
ちょっと規模が大きくなると、Viewを機能ごとに複数のソースファイルに分けたり、機能ごとにテストを組みたくなってきて。
デコレータで手軽にroute設定できるのは利点なんですが、このappインスタンスを複数ファイルから参照するのは何か嫌だし。
<pre><code class="python">from flask import Flask
app = Flask("hoge")
@app.route('/users/')
def show_users(page):
    users = User.query.all()
    return render_template('users.html', users=users)
if __name__ = "__main__":
    app.run(host="0.0.0.0", port=80)
</code></pre>
何かもっと綺麗な書き方があるはずだと思ってFlaskの公式ドキュメントをみていたら、やっぱりありました。
<a href="http://flask.pocoo.org/docs/0.12/views/">Flask 0.7以降でサポートされたPluggable View</a>というものがあります。
<blockquote>
  ビュー関数の代わりにDjangoのクラスベースの汎用ビューにインスパイアされた拡張可能なビューが導入されています。<br />
  主な目的として、カスタマイズ可能な拡張可能なビューを使って、実装の一部分を置き換えることができます。
</blockquote>
公式ページのサンプルそのままですが、下のように<code>View</code>を継承したクラスを作っておいて、appインスタンスに<code>add_url_rule</code>すればいいんですね。これはいい！
<pre><code class="python">from flask.views import View
class ShowUsers(View):
    methods = ['GET', 'POST']
    def dispatch_request(self):
        users = User.query.all()
        return render_template('users.html', objects=users)
app.add_url_rule('/users/', view_func=ShowUsers.as_view('show_users'))
</code></pre>
Viewクラスがサポートするmethodを指定することも可能ですが、この書き方はいまいちな気が・・・
という方向けに、<code>MethodView</code>クラスがあります。
これは対応するmethod名（小文字）をオーバーライドしてやれば、そのmethodに対応した関数がマップされるというものです。
<pre><code class="python">from flask.views import MethodView
class UserAPI(MethodView):
    def get(self):
        users = User.query.all()
        ...
    def post(self):
        user = User.from_form_data(request.form)
        ...
app.add_url_rule('/users/', view_func=UserAPI.as_view('users'))
</code></pre>
これならViewクラスごとにテストが書けるので、メンテナンス性も良いですね。
現在制作中のちょっとしたWebアプリは、上記View/MethodViewに置き換えました。
後から機能を付け足しやすくなって、いい感じです。
まだ使ったことがない方は、ぜひ試してみてください。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1645</wp:post_id>
		<wp:post_date><![CDATA[2017-05-28 03:48:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-27 18:48:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-web-application-framework-flask-pluggable-view]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>せっかくPython始めたのでWebアプリの一つでも作ってみたいと思い、この本を読みながらFlaskの使い方を勉強していたんですが、正直扱いづらいなぁ・・・と感じていました。</p>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/51sRmBNqesL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" >Pythonプロフェッショナルプログラミング 第2版</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;">株式会社ビープラウド 秀和システム 2015-05-21    </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<p>ちょっと規模が大きくなると、Viewを機能ごとに複数のソースファイルに分けたり、機能ごとにテストを組みたくなってきて。</p>
<p>デコレータで手軽にroute設定できるのは利点なんですが、このappインスタンスを複数ファイルから参照するのは何か嫌だし。</p>
<pre><code class="language-python">from flask import Flask
app = Flask("hoge")
@app.route('/users/')
def show_users(page):
    users = User.query.all()
    return render_template('users.html', users=users)
if __name__ = "__main__":
    app.run(host="0.0.0.0", port=80)
</code></pre>
<p>何かもっと綺麗な書き方があるはずだと思ってFlaskの公式ドキュメントをみていたら、やっぱりありました。</p>
<p><a href="http://flask.pocoo.org/docs/0.12/views/">Flask 0.7以降でサポートされたPluggable View</a>というものがあります。</p>
<blockquote>
  <p>ビュー関数の代わりにDjangoのクラスベースの汎用ビューにインスパイアされた拡張可能なビューが導入されています。 <br />
  主な目的として、カスタマイズ可能な拡張可能なビューを使って、実装の一部分を置き換えることができます。</p>
</blockquote>
<p>公式ページのサンプルそのままですが、下のように<code>View</code>を継承したクラスを作っておいて、appインスタンスに<code>add_url_rule</code>すればいいんですね。これはいい！</p>
<pre><code class="language-python">from flask.views import View
class ShowUsers(View):
    methods = ['GET', 'POST']
    def dispatch_request(self):
        users = User.query.all()
        return render_template('users.html', objects=users)
app.add_url_rule('/users/', view_func=ShowUsers.as_view('show_users'))
</code></pre>
<p>Viewクラスがサポートするmethodを指定することも可能ですが、この書き方はいまいちな気が・・・</p>
<p>という方向けに、<code>MethodView</code>クラスがあります。</p>
<p>これは対応するmethod名（小文字）をオーバーライドしてやれば、そのmethodに対応した関数がマップされるというものです。</p>
<pre><code class="language-python">from flask.views import MethodView
class UserAPI(MethodView):
    def get(self):
        users = User.query.all()
        ...
    def post(self):
        user = User.from_form_data(request.form)
        ...
app.add_url_rule('/users/', view_func=UserAPI.as_view('users'))
</code></pre>
<p>これならViewクラスごとにテストが書けるので、メンテナンス性も良いですね。</p>
<p>現在制作中のちょっとしたWebアプリは、上記View/MethodViewに置き換えました。</p>
<p>後から機能を付け足しやすくなって、いい感じです。</p>
<p>まだ使ったことがない方は、ぜひ試してみてください。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5942583781]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620245]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>183</wp:comment_id>
			<wp:comment_author><![CDATA[binance Konto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[54080936@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/de-CH/register?ref=V3MG69RO</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.101]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-21 17:19:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-21 08:19:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Python製WebアプリフレームワークFlaskとお供することが多いSQLAlchemyを使ったWHERE句のOR指定方法の注意点。</title>
		<link>https://tech.blog.uribou.me/python-web-application-framework-flask-with-sqlalchemy-where-with-or/</link>
		<pubDate>Sat, 27 May 2017 19:12:55 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/python-web-application-framework-flask-with-sqlalchemy-where-with-or/</guid>
		<description></description>
		<content:encoded><![CDATA[一時期Djangoを触っていて挫折して、その後Bottleを弄ってたらあまりにシンプルすぎるフレームワークでやること多すぎて挫折して、Flaskに流れ着いたところ。
けっこう良い気がします、Flask。
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51sRmBNqesL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" rel="noopener">Pythonプロフェッショナルプログラミング 第2版</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px">株式会社ビープラウド 秀和システム 2015-05-21    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
でも今回は、Flaskではなくて、MySQLとの繋ぎに使っているSQLAlchemyについて。
<h1>SQLAlchemyでSELECT ... WHERE ... OR/ANDするには</h1>
SQLAlchemy経由でquery実行する際のWHERE句のORやANDでデータを引っ張る方法は、以下の公式ドキュメントで詳細に解説されている。
英語だけど。
<ul>
<li><a href="http://docs.sqlalchemy.org/en/latest/core/tutorial.html">SQL Expression Language Tutorial</a>
<ul>
<li>Selecting</li>
<li>Conjunctions</li>
</ul></li>
</ul>
特にWHERE句で使用する<code>WHERE clause</code>クラスのor/andオペレータについて、以下のように具体的に記載されている。
ふつーに<code>|</code>や<code>&amp;</code>を指定すればいいらしい。
<blockquote>
  So that looks a lot better, we added an expression to our <code>select()</code> which had the effect of adding <code>WHERE users.id = addresses.user_id</code> to our statement, and our results were managed down so that the join of users and addresses rows made sense. But let’s look at that expression? It’s using just a Python equality operator between two different Column objects. It should be clear that something is up. Saying <code>1 == 1</code> produces True, and <code>1 == 2</code> produces <code>False</code>, not a WHERE clause. So lets see exactly what that expression is doing:
</blockquote>
実際にやってみると、結果は確かに<code>True</code>や<code>False</code>でなくてオブジェクトが返ってくる。
[code lang=python]
(Pdb) self._db.User.c.id_ == self._db.Profile.c.userId
&lt;sqlalchemy.sql.elements.BinaryExpression object at 0x10d460eb8&gt;
(Pdb) type(self._db.User.c.id_ == self._db.Profile.c.userId)
&lt;class &#039;sqlalchemy.sql.elements.BinaryExpression&#039;&gt;
(Pdb) type(self._db.User.c.id_)
&lt;class &#039;sqlalchemy.sql.schema.Column&#039;&gt;
[/code]
<code>c</code>メンバは<code>sqlalchemy.sql.schema.Column</code>クラス。C++みたく、なんらかのオペレータがオーバーライドされているはず。
と思って<code>dir()</code>したら、そのまんまなメソッド発見。
[code lang=python]
(Pdb) for i in dir(self._db.User.c.id_): print(i)
__and__
...
__or__
[/code]
なるほど。
[code lang=python]
In [115]: sqlalchemy.sql.schema.Column.__or__??
Signature: sqlalchemy.sql.schema.Column.__or__(self, other)
Source:
    def __or__(self, other):
        &quot;&quot;&quot;Implement the ``|`` operator.
        When used with SQL expressions, results in an
        OR operation, equivalent to
        :func:`~.expression.or_`, that is::
            a | b
        is equivalent to::
            from sqlalchemy import or_
            or_(a, b)
        Care should be taken when using ``|`` regarding
        operator precedence; the ``|`` operator has the highest precedence.
        The operands should be enclosed in parenthesis if they contain
        further sub expressions::
            (a == 2) | (b == 4)
        &quot;&quot;&quot;
        return self.operate(or_, other)
[/code]
ということで、公式チュートリアルの通り、例えばWHERE+ORしてデータを引っ張るには以下のようにすれば良い。
[code lang=python]
    filter_ = None
    if user_ids:
        import pdb; pdb.set_trace()  # for debug
        filter_ = self._db.User.c.id_ == user_ids[0]
        for user_id in user_ids[1:]:
            filter_ |= self._db.User.c.id_ == user_id
    joined_query = self._db.User.join(self._db.Profile, self._db.User.c.id_ == self._db.Profile.c.userId)
    joined_query = joined_query.join(self._db.UsersAbility, self._db.User.c.id_ == self._db.UsersAbility.c.userId)
    joined_query = joined_query.join(self._db.Ability, self._db.UsersAbility.c.abilityId == self._db.Ability.c.id_)
    selected_query = joined_query.select()
    # if filter_:  # not operated... why?
    if filter_ is not None:
        selected_query = selected_query.where(filter_)
    executed = selected_query.with_only_columns(db_columns).execute()
    for record in executed.fetchall():
        yield record
[/code]
例えば<code>user_ids = [1,2,3]</code>として、上記コードの<code>set_trace()</code>辺りで<code>filter_</code>をダンプしてみると下記の通りで、想定通りのSQL queryが実行されそうな雰囲気。
[code lang=python]
(Pdb) str(filter_)
&#039;&quot;User&quot;.id_ = :id__1 OR &quot;User&quot;.id_ = :id__2 OR &quot;User&quot;.id_ = :id__3&#039;
[/code]
雰囲気だけでなく、もちろん<code>fetchall()</code>結果も想定通りのデータが返る。
<h1>注意点</h1>
<code>filter_</code>周辺で回りくどいことをしているのは、両方とも<code>sqlalchemy.sql.schema.Column</code>オブジェクトとした上でないと<code>__or__</code>メソッドが動作しないため。
例えば初期値として数値オブジェクトが入ってたりすると、想定通りに動作しない。ってまぁ当たり前なんだけど。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1651</wp:post_id>
		<wp:post_date><![CDATA[2017-05-28 04:12:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-27 19:12:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-web-application-framework-flask-with-sqlalchemy-where-with-or]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p>一時期Djangoを触っていて挫折して、その後Bottleを弄ってたらあまりにシンプルすぎるフレームワークでやること多すぎて挫折して、Flaskに流れ着いたところ。</p>
<p>けっこう良い気がします、Flask。</p>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;/zoom: 1;overflow: hidden;"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0;"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" ><img src="https://images-fe.ssl-images-amazon.com/images/I/51sRmBNqesL._SL160_.jpg" style="border: none;" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="kaerebalink-info" style="line-height:120%;/zoom: 1;overflow: hidden;"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB00XZTYMG6%2Fref%3Dnosim" target="_blank" >Pythonプロフェッショナルプログラミング 第2版</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px;">株式会社ビープラウド 秀和システム 2015-05-21    </div><div class="kaerebalink-link1" style="margin-top:10px;"><div class="shoplinkamazon" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&p_id=170&pc_id=185&pl_id=4062&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3DPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" >Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&p_id=170&pc_id=185&pl_id=4062" width="1" height="1" style="border:none;"></div><div class="shoplinkrakuten" style="margin:5px 0"><a href="//af.moshimo.com/af/c/click?a_id=602828&p_id=54&pc_id=54&pl_id=616&s_v=b5Rz2P0601xu&url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FPython%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" >楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&p_id=54&pc_id=54&pl_id=616" width="1" height="1" style="border:none;"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<p>でも今回は、Flaskではなくて、MySQLとの繋ぎに使っているSQLAlchemyについて。</p>
<h1 id="sqlalchemyselectwhereorand">SQLAlchemyでSELECT ... WHERE ... OR/ANDするには</h1>
<p>SQLAlchemy経由でquery実行する際のWHERE句のORやANDでデータを引っ張る方法は、以下の公式ドキュメントで詳細に解説されている。</p>
<p>英語だけど。</p>
<ul>
<li><a href="http://docs.sqlalchemy.org/en/latest/core/tutorial.html">SQL Expression Language Tutorial</a>
<ul><li>Selecting</li>
<li>Conjunctions</li></ul></li>
</ul>
<p>特にWHERE句で使用する<code>WHERE clause</code>クラスのor/andオペレータについて、以下のように具体的に記載されている。</p>
<p>ふつーに<code>|</code>や<code>&amp;</code>を指定すればいいらしい。</p>
<blockquote>
  <p>So that looks a lot better, we added an expression to our <code>select()</code> which had the effect of adding <code>WHERE users.id = addresses.user_id</code> to our statement, and our results were managed down so that the join of users and addresses rows made sense. But let’s look at that expression? It’s using just a Python equality operator between two different Column objects. It should be clear that something is up. Saying <code>1 == 1</code> produces True, and <code>1 == 2</code> produces <code>False</code>, not a WHERE clause. So lets see exactly what that expression is doing:</p>
</blockquote>
<p>実際にやってみると、結果は確かに<code>True</code>や<code>False</code>でなくてオブジェクトが返ってくる。</p>
<pre><code class="language-python">(Pdb) self._db.User.c.id_ == self._db.Profile.c.userId
&lt;sqlalchemy.sql.elements.BinaryExpression object at 0x10d460eb8&gt;
(Pdb) type(self._db.User.c.id_ == self._db.Profile.c.userId)
&lt;class 'sqlalchemy.sql.elements.BinaryExpression'&gt;
(Pdb) type(self._db.User.c.id_)
&lt;class 'sqlalchemy.sql.schema.Column'&gt;
</code></pre>
<p><code>c</code>メンバは<code>sqlalchemy.sql.schema.Column</code>クラス。C++みたく、なんらかのオペレータがオーバーライドされているはず。</p>
<p>と思って<code>dir()</code>したら、そのまんまなメソッド発見。</p>
<pre><code class="language-python">(Pdb) for i in dir(self._db.User.c.id_): print(i)
__and__
...
__or__
</code></pre>
<p>なるほど。</p>
<pre><code class="language-python">In [115]: sqlalchemy.sql.schema.Column.__or__??
Signature: sqlalchemy.sql.schema.Column.__or__(self, other)
Source:
    def __or__(self, other):
        """Implement the ``|`` operator.
        When used with SQL expressions, results in an
        OR operation, equivalent to
        :func:`~.expression.or_`, that is::
            a | b
        is equivalent to::
            from sqlalchemy import or_
            or_(a, b)
        Care should be taken when using ``|`` regarding
        operator precedence; the ``|`` operator has the highest precedence.
        The operands should be enclosed in parenthesis if they contain
        further sub expressions::
            (a == 2) | (b == 4)
        """
        return self.operate(or_, other)
</code></pre>
<p>ということで、公式チュートリアルの通り、例えばWHERE+ORしてデータを引っ張るには以下のようにすれば良い。</p>
<pre><code class="language-python">    filter_ = None
    if user_ids:
        import pdb; pdb.set_trace()  # for debug
        filter_ = self._db.User.c.id_ == user_ids[0]
        for user_id in user_ids[1:]:
            filter_ |= self._db.User.c.id_ == user_id
    joined_query = self._db.User.join(self._db.Profile, self._db.User.c.id_ == self._db.Profile.c.userId)
    joined_query = joined_query.join(self._db.UsersAbility, self._db.User.c.id_ == self._db.UsersAbility.c.userId)
    joined_query = joined_query.join(self._db.Ability, self._db.UsersAbility.c.abilityId == self._db.Ability.c.id_)
    selected_query = joined_query.select()
    # if filter_:  # not operated... why?
    if filter_ is not None:
        selected_query = selected_query.where(filter_)
    executed = selected_query.with_only_columns(db_columns).execute()
    for record in executed.fetchall():
        yield record
</code></pre>
<p>例えば<code>user_ids = [1,2,3]</code>として、上記コードの<code>set_trace()</code>辺りで<code>filter_</code>をダンプしてみると下記の通りで、想定通りのSQL queryが実行されそうな雰囲気。</p>
<pre><code class="language-python">(Pdb) str(filter_)
'"User".id_ = :id__1 OR "User".id_ = :id__2 OR "User".id_ = :id__3'
</code></pre>
<p>雰囲気だけでなく、もちろん<code>fetchall()</code>結果も想定通りのデータが返る。</p>
<h1 id="">注意点</h1>
<p><code>filter_</code>周辺で回りくどいことをしているのは、両方とも<code>sqlalchemy.sql.schema.Column</code>オブジェクトとした上でないと<code>__or__</code>メソッドが動作しないため。</p>
<p>例えば初期値として数値オブジェクトが入ってたりすると、想定通りに動作しない。ってまぁ当たり前なんだけど。</p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5947133726]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533642]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>GhostからWordpressへ （２） 〜ドメイン切り替え準備〜</title>
		<link>https://tech.blog.uribou.me/ghost_to_wordpress_switching_domain/</link>
		<pubDate>Wed, 14 Jun 2017 12:36:14 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1692</guid>
		<description></description>
		<content:encoded><![CDATA[
[前回](http://tech.uribou.tokyo/ghost_to_wordpress_plan/)の続き **旧ドメインのTTL（Time To Live）を最少にして、各地に散らばったDNSキャッシュ書き換え間隔が置き換わるのを待つ編** です。
さて唐突ですが、
## ドメインとは？
ドメインとは、お名前.com とかで購入できる、インターネット上の自分だけの住所を示すアレです。
<p align="center"><a href="//af.moshimo.com/af/c/click?a_id=783832&amp;p_id=109&amp;pc_id=109&amp;pl_id=2552&amp;guid=ON" target="_blank" rel="nofollow noopener"><img src="//image.moshimo.com/af-img/0045/000000002552.gif" width="250" height="250" style="border:none"></a><img src="//i.moshimo.com/af/i/impression?a_id=783832&amp;p_id=109&amp;pc_id=109&amp;pl_id=2552" width="1" height="1" style="border:none"></p>
このブログでいうところの **uribou.tokyo** ですね。
住所なので、他とかぶる名前を取得することは当然できません。
不動産と同じで、人気（知名度）のあるキーワードは早々に買われてしまうので、実際に使うのは先でもとりあえず買っておくといいのかも・・・？
実際、自分は当初 **[uribou.jp](http://www.uribou.jp)** を取ろうとしたんですが、茨城県桜川市真壁町にある、とってもお洒落な旅館が取得されていたので買えませんでした。・・・ここ泊まってみたい。
&gt; 見晴らしの丘 真壁 『うり坊』は茨城県桜川市にあります。重要伝統建築物群保存地区指定に選定された『真壁町』。まだまだ知られていないこの街の外れに 『うり坊』はあります。ちょっと高台で見晴らしは抜群です。隠れ家のように佇む当館を是非一度ご利用くださいませ。現在は期間を限定して営業しております。是非お問い合わせくださいませ。
![見晴らしの丘うり坊](https://farm5.staticflickr.com/4223/35309769036_d8d5c7bdaf_z_d.jpg)
話が逸れましたがそういうことで、価格も手頃な.tokyoを買うことにしました。
.tokyo ドメインは比較的新しいせいか、.comや.jp等と比較して安い上、人気ありそうなキーワードも意外と空いてます。
ドメイン | 1年目 | 2年目以降
------------- | -------------
.tokyo | 99円 | 920円
.com | 1円 | 1280円
.jp | 1円 | 2840円
**※上記価格は2017/6/16時点です**
一応[メリットデメリット？](https://www.qript.co.jp/blog/business/3196/)を見た上で購入しましょう。
## TTLとは？
ドメインは、それに紐づいたIPアドレスと対応付けたデータベースとして、DNS（Domain Name System）サーバが管理しています。
ネットワーク的に近場のDNSサーバ（インターネット回線のプロバイダ）が、目的のドメインのDNSサーバに問い合わせ、結果を保持（キャッシュ）しておく仕組みになっています。
アクセスしたいドメインに紐づいたIPアドレスって頻繁に変わるものではないので、アクセスするたびにDNSサーバに問い合わせてたら効率悪いので、DNSサーバは大抵キャッシュサーバも兼ねているわけです。
その結果をキャッシュしておく期間がTTL（Time To Live：生存期間）です。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">IPが変わるたび、TTL(Time To Live。 生存時間)の間、アクセスできない人が出てきますね。 IPが頻繁に変わる可能性があるなら機会損失大かも。 <a href="https://twitter.com/taka222">@taka222</a> ダイナミックDNSって固定IPに比べて決定的な欠点てあるのかな？</p>&mdash; 大澤日出男 (@ohsour) <a href="https://twitter.com/ohsour/status/7018192150">2009年12月25日</a></blockquote>

↑これはDDNS（Dynamic DNS）に関する話ですが、TTLをいじろうとしている理由は同じで、機会損失期間を最小にするためです。
例えばTTLを１分に設定しておけば、DNSのキャッシュ情報の寿命が１分で切れるので、１分毎にDNSサーバへ問い合わせが発生します。
なので、切り替え時にアクセス不可となる時間は最大でも１分に限定されるわけです。
## TTL設定方法
ということで、ようやくTTL設定の具体例を示します。
お名前.comで購入したドメインなので、お名前.comの管理画面で行います。
### ネームサーバーの設定
お名前.comの管理画面にログインした後、ネームサーバの設定で **DNS関連機能の設定** に行きましょう。
![ネームサーバの設定](https://c1.staticflickr.com/5/4208/35163577002_4532e4e9f3_o.png)
### ドメインの選択
所有しているドメイン一覧が表示されます。
切り替えようとしているドメインを選択後、次へ。
![所有しているドメイン一覧](https://c1.staticflickr.com/5/4284/34943004960_a33deca288_o.png)
### DNSレコード設定
**DNSレコード設定を利用する** 横の設定ボタンを押しましょう。
![DNSレコード設定を選択](https://c1.staticflickr.com/5/4233/35163577182_0fec5745b4_b.jpg)
### TTL設定
やっと本題。
お名前.comのTTLはデフォルトで3600秒に設定されているので、
![旧ドメインのTTLデフォルト](https://c1.staticflickr.com/5/4263/35163577492_37d31509e8_b.jpg)
これを最小時間の60秒に設定します。
60秒未満に設定しようとすると「設定できないよ」と注意されます。
![旧ドメインのTTLを最小設定に](https://c1.staticflickr.com/5/4275/35200692521_e2847510bc_b.jpg)
あとは次へ次へ…と進んでいけば無事設定完了です　が、忘れてはならないのが、 **ここで設定した瞬間に、変更後のTTL時間でDNS問い合わせが発生するわけではない** ということです。
変更前のTTLは3600秒だったので、世界中のDNSサーバはそれに従って3600秒の間はキャッシュ情報を使い、問い合わせは発生しません。
3600秒後にキャッシュの生存期間が終了し、初めて新しいTTL設定60秒が有効になります。
ということで、 **TTL設定後は、変更前のTTL時間だけ待つ** のをお忘れなく。
## そもそも、TTL設定は必要なの？
[前回](http://tech.uribou.tokyo/ghost_to_wordpress_plan/)も触れた通り、目的は **新ドメインへの移行** です。
てことは、旧ドメインのブログにアクセスしたら新ドメインのブログに[301リダイレクト](https://www.seohacks.net/basic/terms/301_redirect/)すれば良いだけで、DNSサーバのTTLをいじる必要なんてないじゃん。
&gt; 301リダイレクトは、URLが恒久的に変更された場合に用いられる転送処理のステータスコードです。
&gt; （中略）
&gt; 301リダイレクトによって転送される場合、検索エンジンは転送前のURLが持っていた被リンク等の評価を、転送先のURLに引き継がせます。
という指摘をもらいそうなので言い訳しておくと…。
もちろん当初想定はこれでしたが、旧ブログがnodejsのGhost、それを稼働させたVPSの選択ミス、さらには管理者のスキル不足が重なり、そう簡単にはいきませんでした…。
詳細はGhostからWordpressへ（４）に書く予定なので、そちらをご覧ください。
取り急ぎ、こんな顛末です。
* **理想のステップ**
1. *新ドメインでブログ立ち上げ*
2. *旧ドメインのブログのデータを新ブログにインポート*
3. *旧ドメインのサーバを新ドメインへのリダイレクト専用サーバにする*
4. *旧ブログへのアクセスは新ブログへリダイレクトされる*
* **実際のステップ**
1. *新ドメインでブログ立ち上げ*
2. *旧ドメインのブログのデータを新ブログにインポート*
3. *リダイレクト専用サーバを新規立ち上げ*
4. *旧ドメインをリダイレクト専用サーバに割り当てる*
5. *リダイレクト専用サーバへのアクセスは新ブログへリダイレクトされる*
そんなわけで、上記 **実際のステップ** の4.をするための下準備が今回の記事です。
長くなりそうだ・・・。
次回へ続く。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1692</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 21:36:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:36:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ghost_to_wordpress_switching_domain]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ghost"><![CDATA[ghost]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%96%e3%83%ad%e3%82%b0"><![CDATA[ブログ]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:48:"//image.moshimo.com/af-img/0045/000000002552.gif";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5949273014]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634489]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>296</wp:comment_id>
			<wp:comment_author><![CDATA[binance Sign Up]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[7172972@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/en/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.10]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-27 21:47:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-27 12:47:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>SQLAlchemy OperationalError (2006, &#034;MySQL server has gone away (BrokenPipeError(32, &#039;Broken pipe&#039;))&#034; を解決する</title>
		<link>https://tech.blog.uribou.me/sqlalchemy_operationerror_mysql_gone_away/</link>
		<pubDate>Mon, 19 Jun 2017 21:18:37 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1797</guid>
		<description></description>
		<content:encoded><![CDATA[
SQLAlchemy経由でMySQL読み書きするWebアプリを作ったのだけど、時間を空けてアクセスした時、たまに掲題のエラーで接続できない状態に陥る。
mysql serverを再起動しても復帰せず、gunicorn経由起動のサーバアプリを再起動すると復帰する。
MySQL server gone awayと言ってるけど、SQLAlchemyとのセッション的な何かが切れたのでは、と予想。
## とりあえずググる
参考にした記事は以下。
* [Python: SQLAlchemy で 'MySQL server has gone away' になる問題を解決する](http://blog.amedama.jp/entry/2015/08/15/133322)
&gt; 上記のエラーは MySQL とのコネクションがタイムアウトを起こした状態で
 SQLAlchemy が SQL 文を発行したときに発生する。 対策については、MySQL とのコネクションがタイムアウトを起こさないように、一定時間毎にコネクションを張り直す設定を SQLAlchemy に行えば良い。
まんま書いてあった。
ただし、以下の記事を見ると解決できなかった？ようにも見える。
* [SQLAlchemyの OperationalError: MySQL Connection not available エラー](http://aroundthedistance.hatenadiary.jp/entry/2015/04/27/121230)
&gt; wait_timeoutは最後に接続したコネクションの生き残ることができる秒数っぽい。だんだん良く分からなくなってきたので、connect_timeout,interactive_timeout,wait_timeoutを1日設定(86400秒)に設定し、pool_recycleを3600秒に変更した。
以下はSQLAlchemy公式ドキュメント。
* [Setting Pool Recycle](http://docs.sqlalchemy.org/en/latest/core/pooling.html#setting-pool-recycle)
公式ドキュメントも言っているので、とりあえず`pool_recycle`を設定し、MySQLのtimeout設定に合わせて変更して様子を見ることにする。
## MySQLのwait_timeout設定を確認する
自分のmysql設定を見たところ、`wait_timeout`は以下の通り8時間に設定されている。
```
mysql&gt; show global variables like "wait_timeout";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| wait_timeout  | 28800 |
+---------------+-------+
```
## SQLAlchemyの`create_engine`で`pool_recycle`を指定する
MySQL設定は上記の通りなので、SQLAlchemyは半分の4時間=14400秒に設定し、MySQLがtimeoutする前にSQLAlchemyがrecycleするように設定。
```diff
@@ -57,7 +57,8 @@ def __new__(
              engine = create_engine(
                  "mysql+pymysql://{USER}:{PASSWORD}@{SERVER}:{PORT}/{DB}?charset=utf8".format(
                      USER=user,
                      PASSWORD=password,
                      SERVER=server,
                      PORT=port,
 -                    DB=db)) if url is None else create_engine(url)
 +                    DB=db),
 +                pool_recycle=14400) if url is None else create_engine(url)
              cls.__db_meta = MetaData(bind=engine)
              cls.__db_meta.reflect()
```
## 結果どうなったかというと・・・
無事、解決したようです。
8時間以上間をあけてアクセスしても正常動作していることを確認。
## おまけ
pool_recycleを設定しても解決できなかった場合は以下の記事を参考にevent listenerを設定してみるつもりだったが、解決したのでお蔵入り。
念のためメモを残しておく。
* [Python SQLAlchemy - “MySQL server has gone away"](https://stackoverflow.com/questions/18054224/python-sqlalchemy-mysql-server-has-gone-away)
&gt; There was a talk about this, and this doc describes the problem pretty nicely, so I used their recommended approach to handle such errors: http://discorporate.us/jek/talks/SQLAlchemy-EuroPython2010.pdf
```python
from sqlalchemy import create_engine, event
from sqlalchemy.exc import DisconnectionError
def checkout_listener(dbapi_con, con_record, con_proxy):
    try:
        try:
            dbapi_con.ping(False)
        except TypeError:
            dbapi_con.ping()
    except dbapi_con.OperationalError as exc:
        if exc.args[0] in (2006, 2013, 2014, 2045, 2055):
            raise DisconnectionError()
        else:
            raise
db_engine = create_engine(DATABASE_CONNECTION_INFO,
                          pool_size=100,
                          pool_recycle=3600)
event.listen(db_engine, 'checkout', checkout_listener)
```
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1797</wp:post_id>
		<wp:post_date><![CDATA[2017-06-20 06:18:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-19 21:18:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sqlalchemy_operationerror_mysql_gone_away]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="sqlalchemy"><![CDATA[sqlalchemy]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5940947041]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533643]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[Crea account personale]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[44093962@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/it/join?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.148]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-29 23:37:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-29 14:37:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>236</wp:comment_id>
			<wp:comment_author><![CDATA[^Inregistrare Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[9206780@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/ro/join?ref=S5H7X3LP</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.195]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-29 13:38:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-29 04:38:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Windowsライセンス購入不要。IE11動作確認用VMを使ってみた。</title>
		<link>https://tech.blog.uribou.me/free_vm_with_ie/</link>
		<pubDate>Thu, 29 Jun 2017 23:37:41 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1834</guid>
		<description></description>
		<content:encoded><![CDATA[のんびりと開発中のWebアプリ。
まとまった機能を実装したら時々リリースしてるんですが、数少ない利用者の方から 「ローディングアイコンが消えてくれず、コンテンツが見れない」 と連絡あり。
はて…　と思いましたが、すぐに思い当たりました。
Web業界に疎いのでうっかり忘れていた、 **悪名高いIE** での動作確認。
でも残念ながら、我が家にはWindowsパソコンがない！
## BootCamp経由でWindowsを起動すれば…
メインに使っているのはMacBookAirなので、BootCamp入れてWindowsを起動すればいいんですが…
動作確認のたびにMacを再起動するのは正直めんどい。
のでパス。
## VMでWindowsを起動すれば…
Mac使いながら動作確認したい時だけVM起動すれば良いので、理想的。
でもそのためにWindowsをインストールするのは正直めんどい。
## MS提供のIE動作確認用VMを使えばよい
MSさん、こんな有り難いものを公式に提供してくれていたんですね。
感謝…　はしてるんですが、なんか微妙。
むしろ、モダンブラウザは軒並み対応しているJS構文に対応しないIEを撲滅して欲しい…。
といっても始まらないので、以下からVMを落とします。
**[Test Microsoft Edge and versions of IE8 through IE11 using free virtual machines you download and manage locally.](https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/)**
プルダウンメニューから目的のブツを選択してください。
![select_vm](https://user-images.githubusercontent.com/1362607/27688376-53faf98e-5d15-11e7-979c-d8ab5b949c0d.png)
VMの種類を選択できます。お好みに応じて選んでください。
![select_platform](https://user-images.githubusercontent.com/1362607/27688375-53f40e94-5d15-11e7-926d-b029dbc32809.png)
ネットワークカードなどの設定は適当にいじった上で起動すると…
無事IEが起動！
早速デベロッパモードにして、Webアプリが動作しない原因を探ります。
![dev_mode](https://user-images.githubusercontent.com/1362607/27688519-c8b40022-5d15-11e7-80aa-7da0aff6c271.png)
あっという間に原因発見。セミコロンがない？？
![missing_semicolon](https://user-images.githubusercontent.com/1362607/27688521-c8c07b86-5d15-11e7-9050-14631b806306.png)
ソースを見るとごく一般的なfor文。もしや・・・
![source](https://user-images.githubusercontent.com/1362607/27688520-c8ba7c22-5d15-11e7-80aa-593225c06baa.png)
あー、そういうこと。
**[for...of ステートメント (JavaScript)](https://msdn.microsoft.com/ja-jp/library/dn858238(v=vs.94).aspx)**
&gt; Quirks、Internet Explorer 6 標準、Internet Explorer 7 標準、Internet Explorer 8 標準、Internet Explorer 9 標準、Internet Explorer 10 標準、および Internet Explorer 11 標準の各ドキュメント モードでサポートされません。Windows 8.1 ではサポートされません。
はい、普通にカウンタをインクリメントするfor文で書きます。
## VMのライセンス有効期限
もちろん永久無料で使えるわけはなく、90日で使えなくなるのでご注意を。
&gt; These virtual machines expire after 90 days.
当然ながら、あくまでテスト用ってことですね。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1834</wp:post_id>
		<wp:post_date><![CDATA[2017-06-30 08:37:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-29 23:37:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[free_vm_with_ie]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5952444184]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1974]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577291]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Amazon Cloud Driveをコマンド操作できるacdcliが、動作不能に陥る。困った。</title>
		<link>https://tech.blog.uribou.me/acdcli_404_error/</link>
		<pubDate>Fri, 07 Jul 2017 19:47:25 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1907</guid>
		<description></description>
		<content:encoded><![CDATA[Amazon Prime会員入会後、[活用しているAmazon Cloud Drive](http://tech.uribou.tokyo/amazonkuraudodoraibunikomandodeakusesusurufang-fa/)。
写真なら、Rawデータだろうが容量無制限でアップロード可能だから、活用しない手はない。
さらに、ブラウザを介さずにファイルのアップロード、ダウンロード、同期、マウントできてしまう、とても便利な`acdcli`というツールがあります。
我が家ではJenkinsさんが写真整理をするたびに、このツールを使ってAmazon Cloud Driveに自動バックアップしています。
## `acdcli`が404エラーを吐いて止まる
それがいつの間にか404エラーを吐いていました。
![](https://farm5.staticflickr.com/4263/34962016454_5eab44a343_z_d.jpg)
![](https://farm5.staticflickr.com/4279/35632984672_1727014c12_z_d.jpg)
ビルド失敗メール送るようにせんとなぁ…。
ハテなぜだろう？と調べてみました。
## 原因は２段階認証
エラーを吐くようになった日付を見てみると、どうも２段階認証を有効化したことが原因と思われます。
[Amazonの2段階認証](https://www.amazon.co.jp/gp/help/customer/display.html?nodeId=201962400)
&gt; 2段階認証は、信頼済みでない端末からサインインする場合に、パスワードに加えてセキュリティコードの入力が必要になる機能です。お使いのアカウントで2段階認証を有効にした場合、端末を登録する際に、追加のセキュリティコードを入力する必要があります。
でも、試しに元に戻してもacdcliのエラーは解消されないんですよね。
それならと`acdcli init`からやり直し、oauth_dataを取得しようとすると、なんと認証ページが404 not found。
![](https://farm5.staticflickr.com/4238/35670449081_0424956810_z_d.jpg)
ツール側の問題にやっと気づく。
## Upcoming Appspot OAuth proxy switch の文字に心踊るも…
acdcliって今もメンテ続いてるんだろうか…　と[github](https://github.com/yadayada/acd_cli#recent-changes)を覗いてみると、**0.3.3 upcoming Appspot OAuth proxy switch**の文字が！
betaだけどgithub最新コードで試してみました。
結論から言うと、諸事情によりうまくいかないんですけどね。
### 既存の`acdcli`をアンインストールする
`pip`コマンドで調べてみると、2015年時点の最新バージョン 0.3.2 のままです。
![](https://farm5.staticflickr.com/4290/34961884104_a357401035_z_d.jpg)
これをアンインストールします。
![](https://farm5.staticflickr.com/4257/34961883884_81a4ec4983_z_d.jpg)
### github最新の`acdcli`をインストールする
以下のように`pip install git+https://github.com/yadayada/acd_cli.git`コマンドで、githubのmaster HEADの`acdcli`をインストールします。
![](https://farm5.staticflickr.com/4216/34961883864_5e2878bf36_z_d.jpg)
現在のところbeta版の扱いなのでご注意ください。
### Amazon Cloud Drive認証成功するも…
あとは従来と同じ、`acdcli init`コマンドを実行し、アクセストークンを生成します。
![](https://farm5.staticflickr.com/4232/35670042911_b2cd7d58f0_z_d.jpg)
Enterキー入力すると、ブラウザ経由でAmazonの認証画面が起動します。
![](https://farm5.staticflickr.com/4206/35761632396_a08af54d58_z_d.jpg)
サインインすると、acdcli 0.3.2には無かった２段階認証画面が！
![](https://farm5.staticflickr.com/4211/34961883684_925e3c8cc7_z_d.jpg)
登録済みの携帯端末にメッセージで認証コードが送られるので入力し、OKボタンを押すと、oauth.jsonファイルのダウンロードを開始します。
![](https://farm5.staticflickr.com/4285/34961883994_eca4b9e5f6_z_d.jpg)
acdcli 0.3.2時点と比較してキャッシュファイル名が変わりましたが、コードを見ると上記ファイル名で間違いないので、そのままのファイル名称でキャッシュディレクトリに配置します。
Linux（Ubuntu）のacdcliキャッシュディレクトリは `~/.cache/acd_cli` 、OSXなら `~/Library/Caches/acd_cli/.` です。
・・・と、ここまで順調だったのに、結局`acdcli`コマンドは以下のエラーを吐いて動作しません。
![](https://farm5.staticflickr.com/4213/35803244575_558651f5f1_z_d.jpg)
&gt; Error getting endpoint data. Response: {"message":"Rate exceeded"}
## 解決策（今のところなし）
[AWSのDeveloper Guide](http://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/DNSLimitations.html)に**Amazon Route 53 API リクエストの頻度**として記載があるけど、これのことかな・・・？よくわからず。
`acdcli`のgithubに[issue](https://github.com/yadayada/acd_cli/issues/572)として提起されており、すでに色々と議論されていました。
上記チケットで困っている方々も、別サービスへの移行を考えているとか。。
うーん、どうしよう。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1907</wp:post_id>
		<wp:post_date><![CDATA[2017-07-08 04:47:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 19:47:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[acdcli_404_error]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="acdcli"><![CDATA[acdcli]]></category>
		<category domain="post_tag" nicename="amazon"><![CDATA[amazon]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="xie-zhen"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="zi-dong-hua"><![CDATA[自動化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_57c8d0c5bfd29bf9d6b79d6964c829b0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5974205218]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[acdcli_404]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722634490]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>252</wp:comment_id>
			<wp:comment_author><![CDATA[creación de cuenta en Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[29273535@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/es/join?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.79]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-10 01:37:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-09 16:37:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>写真をflickrに自動アップロードして、月ごとのアルバムを自動作成する方法（導入編）</title>
		<link>https://tech.blog.uribou.me/python_flickrapi_1/</link>
		<pubDate>Mon, 10 Jul 2017 23:32:53 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1936</guid>
		<description></description>
		<content:encoded><![CDATA[
我が家は写真好き。
iPhone（夫婦２台）、ミラーレス一眼（嫁所有）、フルサイズ一眼、防水コンデジ（長女所有）、さらにはフルHDカムも。
それぞれが撮影した静止画や動画を個々に管理してたんじゃ手間もストレージも無駄に食うだけ…。
ということで、[BitTorrentSyncやJenkinsを駆使して](http://tech.uribou.tokyo/recommend-diy-server-description/)、一つのファイルサーバに撮影日ごとのディレクトリを自動的に掘って振り分けた上、RAWデータ込みで[Amazon Cloud Storageに自動バックアップしています](http://tech.uribou.tokyo/xie-zhen-detabatukuatupuniamazon-cloud-drivewoshi-ukotonomerituto/)。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">快適!全部入りメディアサーバ自作のススメ。<br /> 超低消費電力なARMマイコンLinuxサーバとして活用できるRaspberry Pi。 我が家では、既に販売終了している初代のRaspberry Pi 1 Mode... <a href="https://t.co/Jx4QNq4j13">https://t.co/Jx4QNq4j13</a></p>&mdash; webdesignStatio (@webdesignStatio) <a href="https://twitter.com/webdesignStatio/status/802981621448085504">2016年11月27日</a></blockquote>

アップした写真はAmazon経由で見れるんですが、あくまでプライベートな空間で、SNS共有に使える雰囲気ではない。
なので、JPEGはflickrにもアップして、ついでに月ごとのアルバムも自動生成してしまいたい。Pythonで。
## そもそもflickrとは
flickrとは、写真共有SNSです。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Today’s for all the dads out there. <a href="https://twitter.com/hashtag/HappyFathersDay?src=hash">#HappyFathersDay</a> What&#039;s your favorite memory with your dad? <a href="https://t.co/bGhSlD6fPC">https://t.co/bGhSlD6fPC</a> <a href="https://t.co/ItfVM78Smh">pic.twitter.com/ItfVM78Smh</a></p>&mdash; Flickr (@Flickr) <a href="https://twitter.com/Flickr/status/876425017692741634">2017年6月18日</a></blockquote>

似て非なるサービスにGoogle Photosがありますが、オリジナル画質のままアップロードできるflickrが好きで、今も愛用しています。
Google Photsには、AIを活用した面白機能がたくさんあるようで、興味はあるんですが、リサイズされちゃうのは嫌だなぁ…。
## flickr APIを使う
昨今APIを公開しないWebサービスの方が少なく、flickrさんも[APIを公開](https://www.flickr.com/services/api/)しています。
これを使えば、先ほどの願いは簡単に実現できてしまいます。
## flickr APIとは
flickrのアカウントを作り、マイページで色々な操作ができると思います。
写真をアップしたり、タイトルを変更したり、タグをつけたりアルバム作ったり…。
そういった操作がAPIとして用意されており、以下のように[一覧にまとめて公開されています](https://www.flickr.com/services/api/)。
![](https://farm5.staticflickr.com/4255/35017831634_cbf6722567_z_d.jpg)
例えば、 **写真をアップした後、月ごとにアルバム（photoset）を作成して、アップした写真をそこに追加する** 機能が欲しいので、flickrが公開している下記のAPIを組み合わせて実行すれば、ChromeやIEなどのブラウザで画面見ながら日付などの情報を入力したり、マウスをぽちぽちクリックしたり、といった操作が不要になるわけです。
### Photo Upload API
その名の通り、写真をアップロードすることができます。
![](https://farm5.staticflickr.com/4230/35906994895_dea771237c_z_d.jpg)
### Photoset Create API
アルバムを作成する機能です。
flickrではアルバムをphotosetと呼びます。
![](https://farm5.staticflickr.com/4261/35866333376_db8bacd064_z_d.jpg)
## Pythonのflickr APIラッパーを使う（次回）
flickr APIを直接叩くのって、実は意外とめんどくさいんです。
OAuthのフロー通りに、長ったらしい引数付きURLを叩く必要があるので…。
そんな[flickr APIをより簡単に叩けるようにしたライブラリ](https://www.flickr.com/services/api/)が、数多く公開されています。
Python flickrapiパッケージも、そのうちの一つです。
[次回](http://tech.uribou.tokyo/python_flickrapi_2/)はPython flickrapiパッケージを使って、具体的なコードを交えて紹介します。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1936</wp:post_id>
		<wp:post_date><![CDATA[2017-07-11 08:32:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-10 23:32:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python_flickrapi_1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flickr"><![CDATA[flickr]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="zi-dong-hua"><![CDATA[自動化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8af499e91c2d1a9c20350ac6f3ef7c17]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5979288586]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1966]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533644]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>写真をflickrに自動アップロードして、月ごとにアルバムを自動作成する方法（実装編）</title>
		<link>https://tech.blog.uribou.me/python_flickrapi_2/</link>
		<pubDate>Fri, 14 Jul 2017 22:37:13 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1963</guid>
		<description></description>
		<content:encoded><![CDATA[
[前回は、flickrに写真を自動アップロードするプログラムの概要](http://tech.uribou.tokyo/python_flickrapi_1/)を紹介しました。
今回はその実装編です。
<blockquote class="twitter-tweet" data-lang="ja">
<p dir="ltr" lang="ja">写真を <a href="https://twitter.com/hashtag/flickr?src=hash">#flickr</a> に自動アップロードして、月ごとにアルバムを自動作成するプログラムを <a href="https://twitter.com/hashtag/Python?src=hash">#Python</a> で書いてみます。<a href="https://t.co/EqojKkqMmD">https://t.co/EqojKkqMmD</a></p>
— takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/886003060002050048">2017年7月14日</a></blockquote>

## Pythonでflickr APIを使うまでの流れ
[flickr API公式ページにAPI Kitsとして紹介](https://www.flickr.com/services/api/)されている[flickrapi](https://stuvel.eu/flickrapi-doc/2-calling.html)を使うと、flickr APIを使ったプログラムがPythonで簡単に書けてしまいます。
ただし、API keyやSecret keyの取得など、初回のみブラウザとPythonコンソールとを行ったり来たりする必要があってややこしいので、全体の流れをアクティビティ図にしました。
![](https://farm5.staticflickr.com/4236/35056866054_0662bd8c2c_o_d.png)
この図に沿って説明していきます。
### ブラウザ操作： API keyとSecret keyの取得
flickrアカウントを持っているだけでは、APIを使うことができません。
API keyとSecret keyを発行しましょう。
[flickrのCreate an Appページ](https://www.flickr.com/services/apps/create/apply/)で必要事項を記入し、submitすることで、keyを発行することができます。
NON-COMMERCIAL（非営利目的）であれば、難しい質問は特にないので迷うことはありません。
発行したkeyは <del datetime="2017-07-19T11:40:42+00:00">どうせ覚えられないので</del> 忘れないようにメモを取っておきましょう。
### Python操作： Read/Writeアクセストークンを取得する
先ほど発行したAPI keyとSecret keyを使って、ReadまたはWriteアクセストークンを取得します。
ReadとWrite、どちらの権限が必要かは、使用したいAPIによって異なります。
例えば[flickr.contacts.getList](https://www.flickr.com/services/api/flickr.contacts.getList.html) APIは **This method requires authentication with 'read' permission.** という記載があり、Read権限が必要であることがわかります。
そして[upload](https://www.flickr.com/services/api/upload.api.html) APIは **This method requires authentication with 'write' permission.** の通り、Write権限が必要であることがわかります。
以下のように、api.auth_url()に与えるキーワード引数permsを必要に応じて指定してください。
<code data-gist-id="73dc07a0fb71af75dc81c07984126179" data-gist-line="140-152" data-gist-highlight-line="145"></code>
### Python操作： flickrに写真をアップロードする
flickrに写真をアップロードしてみます。
<code data-gist-id="73dc07a0fb71af75dc81c07984126179" data-gist-line="62-84"></code>
たったこれだけのコードで、path_to_photoが示す写真をflickrにアップロードできてしまいます。
各キーワード引数の意味は[flickrapi公式ドキュメントに記載されている通り](https://stuvel.eu/flickrapi-doc/4-uploading.html#flickr-upload)なんですが、一応説明しておくと、
| キーワード引数 | 意味 |
| ------------- | ------------- |
| filename | アップロードしたい写真ファイルのパス。 |
| title | アップロード後にflickr上に表示されるタイトル。ファイル名を指定しています。 |
| is_private | 一般公開する写真はアップロード後に手動で選択することにしたため、Trueとします。 |
他にもtagを指定できたりと色々あるんですが、ここでは必要最小限の設定でアップロードすることにしています。
### Python操作： アップロードした写真をphotosetに追加する
見苦しいコードですが… というか、ほとんどコメント。
すでにphotosetタイトルが存在すれば、今回アップロードした写真をそこへ追加し、存在しなければ新規作成するようにしています。
<code data-gist-id="73dc07a0fb71af75dc81c07984126179" data-gist-line="87-132"></code>
flickr.photosets.create() や flickr.photosets.addPhoto() に与えるキーワード引数の意味は、[flick API公式ドキュメント](https://www.flickr.com/services/api/)を参照してください。
例えば[flickr.photosets.create](https://www.flickr.com/services/api/flickr.photosets.create.html)であれば、以下の通りです。
| キーワード引数 | 必須？ | 意味 |
| --- |:---:| --- |
| api_key | 必須だけど不要 | 最初に取得した API key を指定します。<br /> **必須と言いながら、Pythonのflickrapiを使っている場合は不要です。** |
| title | 必須 | photoset タイトルを文字列で指定します。|
| description | 必須ではない | photoset の概要を文字列で指定します。 |
| primary_photo_id | 必須 | photoset の代表となる写真のIDを指定します。 |
flickr.photosets.create() を呼ぶ祭、API keyが必要そうに見えるんですが、実は不要です。
[Pythonのflickrapi公式ドキュメント](
https://stuvel.eu/flickrapi-doc/2-calling.html?highlight=create#calling-api-functions)にも記載されている通り、FlickrAPIオブジェクトが既に内部に抱えているので、個別のAPIコール時に指定する必要ありません。
これで無事、写真をflickrにアップロードしつつ、その写真の撮影日に応じてphotosetを自動生成した上で、そのphotosetに写真を追加することができました。
## まとめ
写真のアップロードまでは本当に簡単。
photosetを作ってそこに写真を追加しようとすると、ちょっと面倒なことをするハメになって、意外と時間がかかってしまいました…。
同じタイトルのphotosetを複数作ることが可能なため、flickr.photosets.createする前に同じタイトルのphotosetがないかチェックする必要があります。
既存のphotosetがあるなら勝手にそこへaddPhotoしてくれると思っていたら、そうではないんですね。
それと、後で気づきましたが、[flickrapiの戻り値を、扱いやすいjsonや、parse済みのPythonオブジェクトで返してくれる設定](https://stuvel.eu/flickrapi-doc/2-calling.html?highlight=create#response-format-json)があるんですね。
そのうち直そう…。
今回紹介したコードは[こちら](https://gist.github.com/dodo5522/73dc07a0fb71af75dc81c07984126179)にpush済みなので、ぜひ使ってみてください。
[argparse](http://tech.uribou.tokyo/python-argparsenoshi-ifang/)を使っているので、その解説ページなんかも併せてどうぞ。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1963</wp:post_id>
		<wp:post_date><![CDATA[2017-07-15 07:37:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-14 22:37:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python_flickrapi_2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flickr"><![CDATA[flickr]]></category>
		<category domain="post_tag" nicename="plantuml"><![CDATA[plantuml]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="zi-dong-hua"><![CDATA[自動化]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1966]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[5989689740]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b1277db10be9b70b8e66630a850f0758]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c3b86ba9bcb657fd8e056c331339bc5e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_da7cb73b891deb240f316752ac68a3ec]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4d7df728f15c83e49cca83c6afb80b44]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722533646]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[Binance Buksan ang Account]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[60948228@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ph/register?ref=YY80CKRN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.145.78]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-01 23:48:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-01 14:48:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you be more specific about the content of your article? After reading it, I still have some doubts. Hope you can help me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>262</wp:comment_id>
			<wp:comment_author><![CDATA[binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[26651617@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/ar-BH/register-person?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.11]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-22 14:27:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-22 05:27:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>小学生向けに、Pythonプログラミングの楽しさをRaspberryPiで体験してもらう作戦練り上げ中</title>
		<link>https://tech.blog.uribou.me/python-programming-for-children-with-robot/</link>
		<pubDate>Tue, 01 Aug 2017 23:24:18 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2077</guid>
		<description></description>
		<content:encoded><![CDATA[
ご近所の友人から **子供向けにプログラミングを教えて！** と頼まれ、いずれ自分の子供にも教えることになるわけだし、試しにやってみようと、作戦を練っています。
## 講習対象者の事前情報
友人から聞いた情報は以下の通り。
* 小学生男児向け
* 以前、親と一緒にIchigoJamで簡単なゲームを作った（LCD画面で何かが動き回るようなもの）
* Lチカも体験したが、あまり興味を示さなかった
## 講習内容を考えてみる
事前情報を受けて、画面上に図や絵を表示したり、何らかの計算結果を示しても興味を示しそうにないな… そりゃそうか。
そもそも自分の少年時代を思い返してみると、ミニ四駆が大好きだったなぁ。
ということで友人に聞いてみると、**IchigoJam体験でモーターは使わなかったし、本人も動く物が好き**とのことで、モーター制御プログラミング体験講習に決定ヽ(´▽｀)/
世間ではROS（Robot Operating System）なるものが話題のようですが…
<div class="booklink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="booklink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4822239292%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51RIz4wkCyL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="booklink-info" style="line-height:120%;overflow: hidden"><div class="booklink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4822239292%2Fref%3Dnosim" target="_blank" rel="noopener">Raspberry Piで学ぶ ROSロボット入門</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="booklink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://yomereba.com" rel="nofollow noopener" target="_blank">ヨメレバ</a></div></div><div class="booklink-detail" style="margin-bottom:5px">上田 隆一 日経BP社 2017-03-30    </div><div class="booklink-link2" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2F4822239292%2Fref%3Dnosim" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=56&amp;pc_id=56&amp;pl_id=637&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F14729751%2F" target="_blank" rel="noopener">楽天ブックス</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=56&amp;pc_id=56&amp;pl_id=637" width="1" height="1" style="border:none"></div>                        	  	  	  	</div></div><div class="booklink-footer" style="clear: left"></div></div>
ROS関連の勉強不足と、そもそも自分もモーター制御初体験な上、準備期間も2週間程度しかないので、某社製のTA7291Pを使い、単純なPWM制御で[Cubetto](http://tech.uribou.tokyo/learning-programing-with-cubetto/)風な動きをPythonで書いてみることにしました。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">Waves in the tech industry: from Kickstarter to the wonderful Cubetto <a href="https://twitter.com/hashtag/programming?src=hash">#programming</a> toy.  <a href="https://t.co/ux95KdgXdT">https://t.co/ux95KdgXdT</a> <a href="https://twitter.com/hashtag/code?src=hash">#code</a> <a href="https://twitter.com/hashtag/FutureReady?src=hash">#FutureReady</a> <a href="https://twitter.com/hashtag/child?src=hash">#child</a> <a href="https://t.co/9WlDbEooDm">pic.twitter.com/9WlDbEooDm</a></p>&mdash; Julia Pappas (@AskJuliaPappas) <a href="https://twitter.com/AskJuliaPappas/status/892842445725192192">2017年8月2日</a></blockquote>

## モーター制御Pythonコード
とりあえず書いてみましたが、実はまだTA7291Pやモーターが手元にないので、実動作を確認できてません。
ピン出力電圧をテスターで測ると、狙い通りの動作をしてくれそうではありますが、左右の車輪に別個のモーターを取り付ける形になるので、二つを正確なタイミングで制御するにはひと工夫必要になります。
今回はそこまでやりませんけどね。
以下がそのやっつけコードの抜粋。関数を並べればその通りに動くようにしてみました。
<code data-gist-id="eb2f4b844ae88753f6bfa864084096b7" data-gist-line="80-102" data-gist-file="main.py"></code>
そのドライバ部分。これも抜粋。無駄にコンテキストマネージャ対応してみました。
TA7291P向けですけど、使い方はあまり変わらないので、多分DRV8871でも動きます。
<code data-gist-id="eb2f4b844ae88753f6bfa864084096b7" data-gist-line="1-50" data-gist-file="motor.py"></code>
## 必要な部品
オシロも欲しいんですが、その前に部品を揃えなければ。
モータードライバTA7291Pは[秋月電子](http://akizukidenshi.com/catalog/default.aspx)で購入できます。（[東芝の公式サイト](http://toshiba.semicon-storage.com/jp/product/linear/motordriver/detail.TA7291P.html)を見ると、生産終了予定みたいですね…）
他はほぼアマゾンで揃えてしまいました。
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001Q119AC%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/41ZpZB8%2Bg2L._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001Q119AC%2Fref%3Dnosim" target="_blank" rel="noopener">タミヤ 楽しい工作シリーズ No.97 ツインモーターギヤーボックス (70097)</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> タミヤ 2009-06-23    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 0 no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.97%2520%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 -50px no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.97%2520%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VZHRXG%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/51Uycg8kAHL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VZHRXG%2Fref%3Dnosim" target="_blank" rel="noopener">タミヤ 楽しい工作シリーズ No.157 ユニバーサルプレート 2枚セット (70157)</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> タミヤ 2009-06-23    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 0 no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.157%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 -50px no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.157%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VZHRUY%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/41WeYQtWpwL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VZHRUY%2Fref%3Dnosim" target="_blank" rel="noopener">タミヤ 楽しい工作シリーズ No.111 スポーツタイヤ 56mm径 (70111)</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> タミヤ 2009-06-23    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 0 no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.111%2520%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 -50px no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.111%2520%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
<div class="kaerebalink-box" style="text-align:left;padding-bottom:20px;font-size:small;overflow: hidden"><div class="kaerebalink-image" style="float:left;margin:0 15px 10px 0"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VZHRW2%2Fref%3Dnosim" target="_blank" rel="noopener"><img src="https://images-fe.ssl-images-amazon.com/images/I/41cXXGjRYDL._SL160_.jpg" style="border: none" /></a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="kaerebalink-info" style="line-height:120%;overflow: hidden"><div class="kaerebalink-name" style="margin-bottom:10px;line-height:120%"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fexec%2Fobidos%2FASIN%2FB001VZHRW2%2Fref%3Dnosim" target="_blank" rel="noopener">タミヤ 楽しい工作シリーズ No.144 ボールキャスター 2セット入 (70144)</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"><div class="kaerebalink-powered-date" style="font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%">posted with <a href="http://kaereba.com" rel="nofollow noopener" target="_blank">カエレバ</a></div></div><div class="kaerebalink-detail" style="margin-bottom:5px"> タミヤ 2009-06-23    </div><div class="kaerebalink-link1" style="margin-top:10px"><div class="shoplinkamazon" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 0 no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fsearch%3Fkeywords%3D%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.144%26__mk_ja_JP%3D%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A" target="_blank" rel="noopener">Amazon</a><img src="//i.moshimo.com/af/i/impression?a_id=602830&amp;p_id=170&amp;pc_id=185&amp;pl_id=4062" width="1" height="1" style="border:none"></div><div class="shoplinkrakuten" style="margin-right:5px;background: url('http://img.yomereba.com/kl.gif') 0 -50px no-repeat;padding: 2px 0 2px 18px"><a href="//af.moshimo.com/af/c/click?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616&amp;s_v=b5Rz2P0601xu&amp;url=http%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2F%25E3%2582%25BF%25E3%2583%259F%25E3%2583%25A4%2520%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584%25E5%25B7%25A5%25E4%25BD%259C%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520No.144%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0" target="_blank" rel="noopener">楽天市場</a><img src="//i.moshimo.com/af/i/impression?a_id=602828&amp;p_id=54&amp;pc_id=54&amp;pl_id=616" width="1" height="1" style="border:none"></div></div></div><div class="booklink-footer" style="clear: left"></div></div>
## 次回
ブツが届いたら、実動作を確認します。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2077</wp:post_id>
		<wp:post_date><![CDATA[2017-08-02 08:24:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-01 23:24:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-programming-for-children-with-robot]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%ac%e3%82%b8%e3%82%a7%e3%83%83%e3%83%88"><![CDATA[ガジェット]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%97%e3%83%ad%e3%82%b0%e3%83%a9%e3%83%9f%e3%83%b3%e3%82%b0%e6%95%99%e8%82%b2"><![CDATA[プログラミング教育]]></category>
		<category domain="post_tag" nicename="robotuto"><![CDATA[ロボット]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://farm5.staticflickr.com/4367/35942617900_de78fc3744_z_d.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6034291135]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648892]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Ubuntu server 14.04.5 → 16.04.3 アップグレード失敗で途方に暮れる → ufwのバグ回避対応であっさり解決＼(^o^)／</title>
		<link>https://tech.blog.uribou.me/ubuntu_upgrade_to_16/</link>
		<pubDate>Wed, 23 Aug 2017 21:56:56 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2110</guid>
		<description></description>
		<content:encoded><![CDATA[
[自作サーバ](http://tech.uribou.tokyo/recommend-diy-server-description/)のUbuntu serverが`14.04.5`と古いので、重い腰を上げてアップグレードすることにしました。
詳細は省きますが、`apt`を実行しまくった後に、決死の思いで`sudo do-release-upgrade`を実行します。
## 恐れていたエラー発生
…すると、なにやらエラーが発生。（実際はもっと大量のエラーを吐いたんですが、最終的に解決に寄与したログのみ以下に示します）
```
処理中にエラーが発生しました:
 hostname
 udev
 apache2
 grub-common
 grub2-common
 grub-pc-bin
 grub-pc
 plymouth
 mountall
 initscripts
 ifupdown
 dbus
 upstart
 friendly-recovery
 plymouth-theme-ubuntu-text
 ufw
 apport
 rpcbind
 nfs-common
 nfs-kernel-server
 nginx-common
 nginx-core
 nginx
 openssh-server
 unattended-upgrades
 pcscd
 grub-gfxpayload-lists
E: Sub-process /usr/bin/dpkg returned an error code (1)
パッケージをインストールできませんでした。復旧を試みています:
ufw (0.35-0ubuntu2) を設定しています ...
mv: '/lib/ufw/user.rules' と '/etc/ufw/user.rules' は同じファイルです
dpkg: パッケージ ufw の処理中にエラーが発生しました (--configure):
 サブプロセス インストール済みの post-installation スクリプト はエラー終了ステータス 1 を返しました
```
頭から一つ一つ`sudo aptitude install xxx`して解決策を探りました。
`hostname`でエラーって…それでよく動いていられるな、と思いながら。
* 参考サイト
    * [Debian(Ubuntu) apt-get upgrade の「E: 未解決の依存関係です。」ではまったら](https://server-setting.info/debian/apt-get-upgrade-error-loop.html)
## パッケージインストール処理を止めていた犯人を特定
犯人は [UFW](https://help.ubuntu.com/community/UFW) でした。
&gt; UFW - Uncomplicated Firewall
The default firewall configuration tool for Ubuntu is ufw. Developed to ease iptables firewall configuration, ufw provides a user friendly way to create an IPv4 or IPv6 host-based firewall. By default UFW is disabled.
地道に`aptitude`で確認作業を続けていると、ufwで「mv: '/lib/ufw/user.rules' と '/etc/ufw/user.rules' は同じファイルです」というログを発見！
```bash
[takashi@espresso:~]$ sudo aptitude install -f ufw
以下の新規パッケージがインストールされます:
  ufw
0 個のパッケージを更新、 1 個を新たにインストール、 0 個を削除予定、796 個が更新されていない。
アーカイブ 149 k バイト中 0  バイトを取得する必要があります。 展開後に 838 k バイトのディスク領域が新たに消費されます。
Preconfiguring packages ...
以前に未選択のパッケージ ufw を選択しています。
(データベースを読み込んでいます ... 現在 199383 個のファイルとディレクトリがインストールされています。)
.../ufw_0.35-0ubuntu2_all.deb を展開する準備をしています ...
ufw (0.35-0ubuntu2) を展開しています...
ureadahead (0.100.0-19) のトリガを処理しています ...
man-db (2.6.7.1-1ubuntu1) のトリガを処理しています ...
ufw (0.35-0ubuntu2) を設定しています ...
mv: '/lib/ufw/user.rules' と '/etc/ufw/user.rules' は同じファイルです
dpkg: パッケージ ufw の処理中にエラーが発生しました (--configure):
 サブプロセス インストール済みの post-installation スクリプト はエラー終了ステータス 1 を返しました
処理中にエラーが発生しました:
 ufw
```
この問題はバグとして報告されてました。
* [package ufw 0.35-0ubuntu2 failed to install/upgrade: subprocess installed post-installation script returned error exit status 1](https://bugs.launchpad.net/ubuntu/+source/ufw/+bug/1578032)
&gt; No. *If* the /lib/ufw/user*.rules files are already symlinks to the files in /etc/ufw, then this is how you can resolve this:
&gt;
&gt; $ sudo rm -f /lib/ufw/user*.rules # remove the existing symlinks
&gt; $ sudo mv /etc/ufw/user*.rules /lib/ufw # move your real user files back to /lib/ufw
&gt; $ sudo apt-get -f install # let ufw perform its upgrade procedure and let apt finish whatever it was doing before
上記の通りに回避策を実行した後に、`sudo apt-get upgrade`を実行すると…
```
（略）
libgnome2-common (2.32.1-5ubuntu1) を設定しています ...
libgnomevfs2-common (1:2.24.4-6.1ubuntu1) を設定しています ...
libgnomevfs2-0:amd64 (1:2.24.4-6.1ubuntu1) を設定しています ...
libgdk-pixbuf2.0-0:amd64 (2.32.2-1ubuntu1.2) のトリガを処理しています ...
ureadahead (0.100.0-19) のトリガを処理しています ...
libc-bin (2.23-0ubuntu9) のトリガを処理しています ...
resolvconf (1.78ubuntu4) のトリガを処理しています ...
ca-certificates (20160104ubuntu1) のトリガを処理しています ...
Updating certificates in /etc/ssl/certs...
0 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d...
done.
```
<span class="bold-red">doneキター！！！</span>
仕上げに、中断していた`sudo apt-get upgrade`を実行すると…
```
（略）
Certificate added: OU=GlobalSign ECC Root CA - R4, O=GlobalSign, CN=GlobalSign
Certificate added: OU=GlobalSign ECC Root CA - R5, O=GlobalSign, CN=GlobalSign
Certificate added: C=US, O=IdenTrust, CN=IdenTrust Commercial Root CA 1
Certificate added: C=US, O=IdenTrust, CN=IdenTrust Public Sector Root CA 1
Certificate added: C=CH, O=WISeKey, OU=OISTE Foundation Endorsed, CN=OISTE WISeKey Global Root GB CA
Certificate added: C=DE, O=Deutscher Sparkassen Verlag GmbH, OU=S-TRUST Certification Services, CN=S-TRUST Universal Root CA
Certificate added: C=NL, O=Staat der Nederlanden, CN=Staat der Nederlanden EV Root CA
Certificate added: C=NL, O=Staat der Nederlanden, CN=Staat der Nederlanden Root CA - G3
Certificate added: C=TR, L=Ankara, O=TÜRKTRUST Bilgi İletişim ve Bilişim Güvenliği Hizmetleri A.Ş., CN=TÜRKTRUST Elektronik Sertifika Hizmet Sağlayıcısı H5
Certificate added: C=TR, L=Ankara, O=TÜRKTRUST Bilgi İletişim ve Bilişim Güvenliği Hizmetleri A.Ş., CN=TÜRKTRUST Elektronik Sertifika Hizmet Sağlayıcısı H6
Certificate added: C=US, S=New Jersey, L=Jersey City, O=The USERTRUST Network, CN=USERTrust ECC Certification Authority
Certificate added: C=US, S=New Jersey, L=Jersey City, O=The USERTRUST Network, CN=USERTrust RSA Certification Authority
173 new root certificates were added to your trust store.
Import process completed.
Done
done.
```
<span class="bold-red">こちらもdoneキター！！！</span>
無事、16.04.3 LTSへのアップグレードを果たしたのでした。
## まとめ
サーバ管理は地味な作業が多いけど、諦めないことが大事。
サーバ管理に限った話じゃないか。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2110</wp:post_id>
		<wp:post_date><![CDATA[2017-08-24 06:56:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-23 21:56:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu_upgrade_to_16]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="%e3%83%8e%e3%82%a6%e3%83%8f%e3%82%a6"><![CDATA[ノウハウ]]></category>
		<category domain="post_tag" nicename="%e5%a4%b1%e6%95%97"><![CDATA[失敗]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_523b31f25a66bebd721d46bdc6c8ae05]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3800072a34e8c6b5f2165aebf93f40c5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6090453158]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722663162]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>副業初仕事、Canon製レーザープリンタをプリントサーバ化する。</title>
		<link>https://tech.blog.uribou.me/how-to-setup-print-server/</link>
		<pubDate>Sun, 03 Sep 2017 23:18:47 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2134</guid>
		<description></description>
		<content:encoded><![CDATA[
とある動物病院の検査室に設置されている、USB接続のCanon製レーザープリンタをプリントサーバ化したい、WindowsとmacOS双方からプリントしたい、というご要望。
検査機制御用PCとプリンタが微妙に離れた位置に設置されており、動線を阻害してしまう。
依頼元の動物病院院長、すでにこんな製品を購入済み。準備早…。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">【対応評価情報更新】C-6600GB、C-6700WGの対応機種に対応OSが追加されました。<br />機種: Canon LBP6300、imageRUNNER ADVANCE C3320F他<a href="https://t.co/aT9Sfx5C9P">https://t.co/aT9Sfx5C9P</a> <a href="https://t.co/yaqvCVW4Qv">pic.twitter.com/yaqvCVW4Qv</a></p>&mdash; サイレックス・テクノロジー株式会社 (@silex_marcom) <a href="https://twitter.com/silex_marcom/status/718327867822706688">2016年4月8日</a></blockquote>

## C-6600GB 提供ツール
なぜかドライバCDやマニュアルを紛失していたので、[製品公式ページ](http://www.silex.jp/support/old/c6600gb.html)を辿って[ドライバ、ツール、マニュアル](http://www.silex.jp/sys/download_list1.html?product_category=6&amp;product_name=326&amp;button=%E8%A1%A8%E7%A4%BA)を入手しました。
この製品に用意されたドライバやツールを、自分の目的に合わせてインストールしないといけません。
提供ツールは２種類。
1. Device Server Setup
2. SX Virtual Link
### Device Server Setup
手動IP設定においてC-6800GBのIPアドレスを設定するためのツール。
今回はWiFiルータがDHCPサーバを兼ねるので不要。
### SX Virtual Link
Windows/macOS混在環境において必須。SXはサイレックスの略称かな。
各OS用ツールが存在するので各々インストールする必要があります。
## 動作確認
試しに自前のmacOS/Windows10を入れたMBAにツールをインストールし、環境設定してみると…
* Windows/macOS共にネットワーク越しにUSB機器（マウス、マスストレージ）を認識、使用可能であることを確認
* USB接続のCanon製プリンタは手持ちがなく、未確認
*Virtual Link* という名前のツールが示す通り、USBポートを無線ネットワーク化するためのガジェットですね。
使用環境がWindowsのみならStandard TCP/IPポート経由で印刷可能なプリントサーバにすることも可能で、便利なんですが…
今回はmacOSからも印刷したいという要望なので、しょうがない。
## 設置作業
* 使用する全てのマシンにSX Virtual Linkとプリンタドライバをインストール
* SX Virtual Linkツールの使い方レクチャー
といったところで、およそ2時間程度で無事稼働、作業完了しました。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2134</wp:post_id>
		<wp:post_date><![CDATA[2017-09-04 08:18:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-03 23:18:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-setup-print-server]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e5%83%8d%e3%81%8d%e6%96%b9"><![CDATA[働き方]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://www.silex.jp/images/products/printserver/c6600gb_pt.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_78ba635e8822eebb06f7336eaa6a5d0b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a77d15edcc5b05cb468b59263bd44dfc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6134032825]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548384]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Pythonで書いたflickr uploaderのバグ修正</title>
		<link>https://tech.blog.uribou.me/gist-bugfix-flickruploader-stat/</link>
		<pubDate>Mon, 09 Oct 2017 01:50:27 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2162</guid>
		<description></description>
		<content:encoded><![CDATA[以前作ったflickr uplaoderスクリプト。
<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">写真を <a href="https://twitter.com/hashtag/flickr?src=hash&amp;ref_src=twsrc%5Etfw">#flickr</a> に自動アップロードして、月ごとにアルバムを自動作成する方法の <a href="https://twitter.com/hashtag/python?src=hash&amp;ref_src=twsrc%5Etfw">#python</a> 実装例。<a href="https://t.co/WB8Mie3yGw">https://t.co/WB8Mie3yGw</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/887866506855370752?ref_src=twsrc%5Etfw">2017年7月20日</a></blockquote>

flickrサイト上ではphotoset生成できているのに、関数がエラーを吐く…　なんでだと思ったら恥ずかしいバグこさえていたので修正しました。
<a data-flickr-embed="true" href="https://www.flickr.com/photos/29110932@N07/37535047246/in/dateposted/" title="アホなバグ"><img src="https://farm5.staticflickr.com/4444/37535047246_bbce3f4140_z.jpg" width="640" height="225" alt="アホなバグ"></a>
これで快適。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2162</wp:post_id>
		<wp:post_date><![CDATA[2017-10-09 10:50:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-09 01:50:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gist-bugfix-flickruploader-stat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flickr"><![CDATA[flickr]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="xie-zhen"><![CDATA[写真]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://farm5.staticflickr.com/4444/37535047246_bbce3f4140_z_d.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[gist-bugfix-flickruploader]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6200833637]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722577288]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>SONYハンディカムHDR-PJ760で撮影したAVCHD動画を自動的にチャプタ毎分割するには（１）</title>
		<link>https://tech.blog.uribou.me/split-avchd-movie-automatically/</link>
		<pubDate>Mon, 12 Mar 2018 17:57:19 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2171</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">AVCHD形式で録画した子供達の成長記録mtsファイルを、録画した単位で自動的に切り出したいのだけど、自前でMPLファイルをパースしてffmpegやavconvに食わせてやるしかないのだろうか。<a href="https://t.co/WsX39f2bZM">https://t.co/WsX39f2bZM</a></p>&mdash; takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/971537166961553408?ref_src=twsrc%5Etfw">2018年3月8日</a></blockquote>


やりたいことは、SONYハンディカムHDR-PJ760で撮影したAVCHD動画をチャプタ毎分割すること。それだけ。
MTSファイルそのものを分割したり結合したりトランスコードしたり、といったことは[ffmpeg](https://trac.ffmpeg.org/wiki/Map)を使えば可能なんだけど、手持ちのハンディカムで撮影した動画の中身を見ると、そう単純ではない。
撮影後のSDカードの中身はこんな感じ。
```
takashi@espresso:/media/sdcard$ tree
.
├── AVF_INFO
│   ├── AVIN0001.BNP
│   ├── AVIN0001.INP
│   ├── AVIN0001.INT
│   └── PRV00001.BIN
├── DCIM
│   └── 100MSDCF
│       └── DSC00007.JPG
├── PRIVATE
│   ├── AVCHD
│   │   └── BDMV
│   │       ├── CLIPINF
│   │       │   ├── 00000.CPI
│   │       │   ├── 00001.CPI
...
│   │       │   └── 00103.CPI
│   │       ├── INDEX.BDM
│   │       ├── MOVIEOBJ.BDM
│   │       ├── PLAYLIST
│   │       │   └── 00000.MPL
│   │       └── STREAM
│   │           ├── 00000.MTS
│   │           ├── 00001.MTS
│   │           ├── 00002.MTS
│   │           ├── 00003.MTS
│   │           ├── 00004.MTS
...
│   │           ├── 00102.MTS
│   │           └── 00103.MTS
│   └── SONY
│       └── SONYCARD.IND
└── System Volume Information
    ├── IndexerVolumeGuid
    └── WPSettings.dat
```
確かにMTSファイルが格納されているが、ハンディカムのメニューで不要な動画を消す等の操作をすると、連番のMTSファイルが撮影した時系列に並んでくれないことがある。
更にFATファイルシステムの制約から、一連の動画が複数の2GBファイルに分割されていることもある。
単純に `for F in $(*.MTS); do ffmpeg -i ${F} ...; done` とかしてしまうと時系列に並んでないわ場面の途中で分割されまくってるわで、もう悲惨。
[tsMuxeR](https://www.videohelp.com/software/tsMuxeR)でGUI上で*.MPLファイルを読み込めば、正しく並んだMTSファイルを結合/分割して出力できるのだけど、<span class="bold-red"><span class="bold">GUIではなくてコマンドラインでやりたい！</span></span>
なぜなら、SDカードを挿すだけでJenkinsにその辺り全部やってほしいから。
・・・と、[tsMuxeR](https://www.videohelp.com/software/tsMuxeR)で落としたtarファイルを解いてみたら、普通にありますね、コマンドライン版ぽいのが。GUIが付いてない方。
<img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/03/tsmuxergui.png" alt="" width="100%" class="alignnone size-medium wp-image-2194" />
--helpオプションつけても何も出てこないので[ネットを漁ってみる](http://forum.doom9.org/archive/index.php/t-142559.html)と、どうもGUI版のWindow下部に表示されるメタデータを.metaファイルとして保存して指定するといいみたい。
<img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/03/tsmuxergui-1.png" alt="" width="100%" class="alignnone size-medium wp-image-2196" />
このメタデータとチャプタ情報をGUI表示させずにコマンドラインで取得するにはどうすれば良いのだろうか・・・。
<img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/03/chapters.png" alt="" width="100%" class="alignnone size-medium wp-image-2198" />
未だ解決していないので、[次回へ続きます](http://tech.uribou.tokyo/split-avchd-movie-automatically2/)。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2171</wp:post_id>
		<wp:post_date><![CDATA[2018-03-13 02:57:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-12 17:57:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[split-avchd-movie-automatically]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="avchd"><![CDATA[AVCHD]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="tsmuxer"><![CDATA[tsMuxeR]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6542115050]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722677711]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>286</wp:comment_id>
			<wp:comment_author><![CDATA[abrir uma conta na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[77319410@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/pt-PT/register?ref=S5H7X3LP</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.250]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-21 22:50:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-21 13:50:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>SONYハンディカムHDR-PJ760で撮影したAVCHD動画を自動的にチャプタ毎分割するには（２）</title>
		<link>https://tech.blog.uribou.me/split-avchd-movie-automatically2/</link>
		<pubDate>Mon, 26 Mar 2018 14:29:07 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2203</guid>
		<description></description>
		<content:encoded><![CDATA[
[前回](http://tech.uribou.tokyo/split-avchd-movie-automatically/)の続き。
tsMuxeRコマンドライン版は[ここ](https://code.launchpad.net/~robert-tari/tsmuxer/trunk)から入手できます。
ソースを探していたのに、checkoutしてみたらバイナリのtar ballだったんですけどね・・・。
```bash
$ sudo apt install bzr
$ bzr checkout https://launchpad.net/tsmuxer/trunk tsmuxer
$ cd txmuxer
$ tree
.
├── data
│   └── usr
│       ├── bin
│       │   └── tsmuxer.tar.gz
│       └── share
│           ├── applications
│           │   └── tsmuxer.desktop
│           └── tsmuxer
│               └── tsmuxer.svg
└── debian
    ├── changelog
    ├── compat
    ├── control
    ├── copyright
    ├── install
    ├── postinst
    ├── postrm
    ├── rules
    └── source
        ├── format
        └── include-binaries
8 directories, 13 files
```
とりあえず、上記tar ballを解いて適当なbinディレクトリに放り込むか、PATHを通しましょう。
tsMuxeRコマンドライン版のオンラインヘルプは[ここ](http://forum.doom9.org/showthread.php?t=142559)にありました。
そこそこ文量があって読む気が萎えるんですが、要点は最初の数行に書いてあります。
```
How to use tsMuxeR from the command line:
-----------------------------------------
We need to create a file with the extension .meta. This file lists the files you want to multiplex.
In the first line of meta file can be specified additional parameters that apply to all tracks. In this case the line should begin with the word MUXOPT.
The following lines indicate a list of tracks and their parameters.
The format is as follows:
<code>, , 
Parameters are comma separated. Each parameter indicates the name and value.
Example META file:
V_MPEG4/ISO/AVC, D:\media\test\stream.h264, fps=25
A_AC3, D:\media\test\stream.ac3, timeshift=-10000ms
In this example one AC3 audio stream and one H264 video stream are multiplexed.
```
映像や音声を別コーデックで再エンコードすることはできませんが、metaファイルに豊富なオプションを記載してやることで、MUXし直したり切り出したりすることが可能です。
心配なのは、タイトルにもある通り、 **AVCHDの切り出しが自動的に行えるか否か** 。
結論から言うと、簡単なスクリプトを書くことで実現できそうです。
## tsMuxeRコマンドラインオプションを調べる
なんでか知らんけど、txMuxeRコマンドは--helpオプションないんですね。
```
$ tsMuxeR --help
Network Optix tsMuxeR.  Version 2.6.11. www.networkoptix.com
```
引数何も与えずに実行するとヘルプ表示します。
```
$ tsMuxeR
Network Optix tsMuxeR.  Version 2.6.11. www.networkoptix.com
tsMuxeR is  simple  program to  mux video to  TS/M2TS files or create BD disks.
tsMuxeR does not use external filters (codecs).
Examples:
    tsMuxeR 
    tsMuxeR  
tsMuxeR can be run in track detection mode or muxing mode. If run tsMuxeR  with
only  one argument  then tsMuxeR  display  input track information  required to
construct  meta  file.  If run tsMuxeR  with two arguments tsMuxeR start muxing
or demuxing process.
```
media file nameのみを引数に与えると、track detection modeで動作すると。
media file nameと言うからにはMTSファイルを与えれば認識するんでしょうけど、ここで試しにPLAYLISTファイルを与えてみると・・・
```
$ tsMuxeR /media/sdcard/PRIVATE/AVCHD/BDMV/PLAYLIST/00000.MPL | grep -A 5 Track
Track ID:    4113
Stream type: H.264
Stream ID:   V_MPEG4/ISO/AVC
Stream info: Profile: High@4.2  Resolution: 1920:1080p  Frame rate: 59.9401
Stream lang:
Track ID:    4352
Stream type: AC3
Stream ID:   A_AC3
Stream info: Bitrate: 448Kbps Sample Rate: 48KHz Channels: 5.1
Stream lang:
Track ID:    4608
Stream type: PGS
Stream ID:   S_HDMV/PGS
Stream info: Presentation Graphic Stream #0 Resolution: 1920:1080 Frame rate: 59.9401
Stream lang:
```
認識しましたね！
プレイリスト中のチャプタらしい情報も取得できます。
```
$ tsMuxeR /media/sdcard/PRIVATE/AVCHD/BDMV/PLAYLIST/00000.MPL | grep -A 3 -B 1 Duration | head -n 20
File #00000 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00003.MTS
Duration: 00:00:45.545
start-time: 45751
Marks: 00:00:00.000
File #00001 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00000.MTS
Duration: 00:01:45.605
start-time: 45751
Marks: 00:00:45.545
File #00002 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00001.MTS
Duration: 00:00:29.028
start-time: 45751
Marks: 00:02:31.150
File #00003 name=/media/sdcard/PRIVATE/AVCHD/BDMV/STREAM/00002.MTS
Duration: 00:02:02.622
start-time: 45751
Marks: 00:03:00.179
```
再び、[次回](http://tech.uribou.tokyo/split-avchd-movie-automatically3/)に続きます。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2203</wp:post_id>
		<wp:post_date><![CDATA[2018-03-26 23:29:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-26 14:29:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[split-avchd-movie-automatically2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6579660526]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591162]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>glibcのrealloc実装、こうなってたのね</title>
		<link>https://tech.blog.uribou.me/glibc-realloc-impl/</link>
		<pubDate>Sun, 26 Aug 2018 20:50:08 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2253</guid>
		<description></description>
		<content:encoded><![CDATA[[gfm]
`realloc`は`glibc`というオープンソースのライブラリ内部に実装された関数なので、そのソースコードがインターネット上に公開されています。
オリジナルは[こちら](http://sourceware.org/git/?p=glibc.git)ですが、扱いやすいようにgithubにforkした人がいるようなので、有り難く[github](https://github.com/lattera/glibc/blob/895ef79e04a953cac1493863bcae29ad85657ee1/malloc/malloc.c#L536)の方を参考にさせてもらいましょう。
関数ヘッダ（関数の仕様の概略をコメントで記述したもの）には以下の記述があります。
&gt;  If space is not available, realloc returns null, errno is set (if on
&gt;  ANSI) and **p is NOT freed**.
&gt;
&gt;   if n is for fewer bytes than already held by p, the newly unused
&gt;  space is lopped off and **freed if possible**.  Unless the #define
&gt;  REALLOC_ZERO_BYTES_FREES is set, realloc with a size argument of
&gt;  zero (re)allocates a minimum-sized chunk.
**p is NOT freed** と **freed if possible** の辺りに着目しながら、`libc`の`realloc`関数本体のコード[__libc_realloc (void *oldmem, size_t bytes)](https://github.com/lattera/glibc/blob/895ef79e04a953cac1493863bcae29ad85657ee1/malloc/malloc.c#L3113)を読んでみましょう。この関数の実装を一字一句理解する必要はなく、今回知りたいことの要点だけ調べれば良いです。
関数ヘッダにも書いてあることですが、以下のように面白いことがわかります。
- [reallocの第一引数に0(NULL)を指定した場合はmallocと同じ動作をする](https://github.com/lattera/glibc/blob/895ef79e04a953cac1493863bcae29ad85657ee1/malloc/malloc.c#L3132)
- [reallocは、内部でmallocして新しい領域を確保し、reallocの第一引数に指定されたポインタが示す領域のデータをコピーしている](https://github.com/lattera/glibc/blob/895ef79e04a953cac1493863bcae29ad85657ee1/malloc/malloc.c#L3194)
- [上記コピー処理した後、reallocの第一引数に指定されたポインタが示す領域をunmapして解放しているが、エラーした場合はunmapせずに終了している](https://github.com/lattera/glibc/blob/895ef79e04a953cac1493863bcae29ad85657ee1/malloc/malloc.c#L3199)
ということで、[こちら(cppreference.com)](https://en.cppreference.com/w/c/memory/realloc)の Example に記載されているコードのように、reallocがエラーとなった場合は、前回のバッファポインタを取っておいて、ちゃんとfreeしてあげないといけないようです。
[/gfm]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2253</wp:post_id>
		<wp:post_date><![CDATA[2018-08-27 05:50:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-26 20:50:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[glibc-realloc-impl]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="glibc"><![CDATA[glibc]]></category>
		<category domain="post_tag" nicename="oss"><![CDATA[OSS]]></category>
		<category domain="post_tag" nicename="realloc"><![CDATA[realloc]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6875961358]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591164]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>293</wp:comment_id>
			<wp:comment_author><![CDATA[binance referral bonus]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[6779342@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/en/register?ref=S5H7X3LP</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.32]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-26 04:48:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-25 19:48:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing. I read many of your blog posts, cool, your blog is very good.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>使いづらいArduino IDEを脱却する！公式ツール arduino-cli リリース</title>
		<link>https://tech.blog.uribou.me/arduino-cli-trial/</link>
		<pubDate>Sun, 02 Sep 2018 16:43:30 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2255</guid>
		<description></description>
		<content:encoded><![CDATA[[gfm]
Arduino IDEのエディタが使いづらくてしょうがないと思っている人は自分だけではないはず。
[Arduino Makefile](https://github.com/sudar/Arduino-Makefile)という非公式ツールを`git submodule`した上で簡単なMakefileを書けば、自分好みのテキストエディタを使うことができて、且つ`make upload`で実機への書き込みもできる。
ただ、`submodule`したりMekefile書いたりと、ちょっとだけ面倒な作業が玉に瑕。
## arduino-cli来ました
何かのニュースでarduino-cliという公式ツールがリリースされるという情報を目にしました。
[/gfm]
<blockquote class="twitter-tweet" data-lang="ja"><p lang="en" dir="ltr">arduino-cli is an all-in-one solution that provides builder, boards/library manager, uploader, discovery and many other tools needed to use any Arduino compatible board and platforms:<a href="https://t.co/wL4DI10Wlt">https://t.co/wL4DI10Wlt</a></p>&mdash; Chema Fdez Varela (@jmfvarela) <a href="https://twitter.com/jmfvarela/status/1033696129844699136?ref_src=twsrc%5Etfw">2018年8月26日</a></blockquote>

[gfm]
**これでMakefileを書く必要もなくなるではないか！**
と思い、早速インストール。go環境があると、インストールがとても楽。
## anyenv/goenv 導入
rbenvやpyenv同様、goにもgoenvという仮想環境構築ツールが存在します。
そんな`**env`系ツールをまとめたフロントエンド的なツール[anyenv](https://github.com/riywo/anyenv)を使用して、まずはgoenvをインストールします。
```
$ anyenv install -l
Available **envs:
  crenv
  denv
  erlenv
  exenv
  goenv
  hsenv
  jenv
  luaenv
  ndenv
  nenv
  nodenv
  phpenv
  plenv
  pyenv
  rbenv
  Renv
  sbtenv
  scalaenv
  swiftenv
$ anyenv install goenv
```
goenvでgoの最新版をインストールした上で、とりあえずglobalなgoを最新版に設定します。
```
$ goenv install -l | tail
  1.10rc2
  1.10.1
  1.10.2
  1.10.3
  1.10.4
  1.11.0
  1.11beta2
  1.11beta3
  1.11rc1
  1.11rc2
$ goenv install 1.11.0
$ goenv global 1.11.0
```
## arduino-cli導入
[公式なarduino-cli github](https://github.com/arduino/arduino-cli)に記載されている手順の通りにインストールしていきます。
```
You should have a recent Go compiler installed.
Run go get -u github.com/arduino/arduino-cli
The arduino-cli executable will be produced in $GOPATH/bin/arduino-cli
```
まずはGOPATHとPATH環境変数設定。以下のようにarduino開発環境用の設定を追加します。
```
$ cat /etc/profile.d/arduino.sh
export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"
```
goenv設定でgoコマンドは使えるようになっているはずなので、以下コマンドでarduino-cliをインストール。
```
go get -u github.com/arduino/arduino-cli
```
成功すると、以下のように`${GOPATH}/bin`下に実行ファイルが生成されているはず。
```
$ tree ~/go/ -L 3
/home/takashi7ando/go/
├── bin
│   └── arduino-cli
└── src
    └── github.com
        └── arduino
```
## arduino-cliコマンド動作確認
まずは実行してみましょう。
```
$ arduino-cli -h
Arduino Command Line Interface (arduino-cli).
Usage:
  arduino-cli [command]
Examples:
  arduino-cli  [flags...]
Available Commands:
  board         Arduino board commands.
  compile       Compiles Arduino sketches.
  config        Arduino Configuration Commands.
  core          Arduino Core operations.
  help          Help about any command
  lib           Arduino commands about libraries.
  sketch        Arduino CLI Sketch Commands.
  upload        Upload Arduino sketches.
  version       Shows version number of arduino CLI.
Flags:
      --config-file string   The custom config file (if not specified ./.cli-config.yml will be used).
      --debug                Enables debug output (super verbose, used to debug the CLI).
      --format string        The output format, can be [text|json]. (default "text")
  -h, --help                 help for arduino-cli
Use "arduino-cli [command] --help" for more information about a command.
```
[githubのREADME](https://github.com/arduino/arduino-cli)を見ると、ボード選択、3rd partyライブラリの検索からインストール、ビルド、書き込みまで一通りのことが実行可能ぽい。
## VS codeの設定例
最近使う機会が増えてきたVS codeのtasks.jsonからarduino-cliを叩くように設定してみた。
```
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "arduino compile",
            "type": "shell",
            "command": "arduino-cli",
            "args": [
                "compile"
            ]
        },
        {
            "label": "arduino upload",
            "type": "shell",
            "command": "arduino-cli",
            "args": [
                "upload",
                "-p",
                "/dev/ttyACM0"
            ]
        }
    ]
}
```
Run Taskを選択し、
<img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/09/Selection_052.png" alt="" width="957" height="231" class="aligncenter size-full wp-image-2269" />
設定したlabelのタスクを実行すると、
<img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/09/Selection_053.png" alt="" width="960" height="234" class="aligncenter size-full wp-image-2268" />
無事コマンドが実行された。
<img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/09/Selection_054.png" alt="" width="742" height="154" class="aligncenter size-full wp-image-2274" />
## 実機での動作確認
次回にて（後回し）。
[/gfm]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2255</wp:post_id>
		<wp:post_date><![CDATA[2018-09-03 01:43:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-02 16:43:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[arduino-cli-trial]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://upload.wikimedia.org/wikipedia/commons/8/87/Arduino_Logo.svg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[6889259554]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722648888]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>エンジニアのための法律勉強会 #14『民法改正と開発業務委託契約』 @コワーキングスペース茅場町 Co-Edo（コエド）</title>
		<link>https://tech.blog.uribou.me/study-law-for-engineer-14/</link>
		<pubDate>Wed, 14 Nov 2018 10:20:09 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2282</guid>
		<description></description>
		<content:encoded><![CDATA[去年あたりから業務委託による副業エンジニアを始めたことで、法律についてちょっとは真面目に専門家の話を聞いておいた方が良いでしょう。ということで、勉強会に参加しました。
講師は東大法学部卒業された<a href="https://www.facebook.com/rnojima">野島 梨恵</a>氏（<a href="http://www.ynmlaw.com/">東京山王法律事務所</a>）
北海道は離婚案件が絶えないらしい。大丈夫か北海道？
<h1>民法上の請負、委任とは</h1>
<a href="http://www.houko.com/00/01/M29/089.HTM">民法</a>上、業務委託契約が定められているわけではない。業務委託による業務とは、ほぼ委任である。該当する民法の条文は請負。
<blockquote>第九節 請負 （請負）
第六三二条 請負は、当事者の一方がある仕事を完成することを約し、相手方がその仕事の結果に対してその報酬を支払うことを約することによって、その効力を生ずる。</blockquote>
民法上、システム開発契約が民法上最も近いのはどれか？
→請負であろう
最近は判例が積み重なり、どうも違うのでは、となってきた。
仕事の完成と引き渡しが<strong>請負</strong>なので、完成していないものにお金を払わなくてもよい、となってしまう。更には、以下の瑕疵担保責任に関して、直近大きく変わる予定となっている。
<blockquote>（請負人の担保責任）
第六三四条 仕事の目的物に瑕疵があるときは、注文者は、請負人に対し、相当の期間を定めて、その瑕疵の修補を請求することができる。ただし、瑕疵が重要でない場合において、その修補に過分の費用を要するときは、この限りでない。</blockquote>
委任とは？
<blockquote>第十節 委任
（委任）
第六四三条 委任は、当事者の一方が法律行為をすることを相手方に委託し、相手方がこれを承諾することによって、その効力を生ずる。</blockquote>
一生懸命やるけども、完成するかどうかは問わない。要は真面目にやれということ。信頼関係が原則。ただし、原則無償。なので、ちゃんと金もらう契約を明記しないと法的には踏み倒せる。
システム開発においては、当初は委任契約で、固まってきたら請負で契約しましょう、というところも多い。
<h1>契約書がなぜ必要か？</h1>
いざ揉め事になった際に、立証するための情報として契約書（証拠）が必要。証拠がないと裁判所も審議できない。
裁判沙汰になったとき、必要なのは<strong>手持ちの証拠</strong>、ただそれだけ。
日本においては書面による証拠が重要。録音もあった方が良いが、あくまで補助的な役割。録音のみに頼るのはよくない。友人知人の証言もあてにしない。
個人なのか法人なのか。例えば、覚書や契約書に取締役個人のサインやハンコがあっても、その人が属する会社としての責任が生じるとは限らない。
納期が変わったらメールで済ませず、可能な限り覚書として残す。そういうこといちいちできません、な場合は事ある毎に議事録に残るように発言する等の工夫が必要。
契約書に損害賠償額の請求について記載があった場合、額を制限できるか？発注側受注側双方にとってとても難しい。
<span style="font-size: 20px"><strong>契約書を読まない、というのは論外</strong></span>です。そりゃそうだ。
<h1>請負契約の今とこれから</h1>
<blockquote>新５６２条（売買における追完請求権）
引き渡された目的物が種類、品質、または数量に関して契約の内容に適合しな いものであるときは、買主は売り主に対し、目的物の修補、代替物の引渡し又 は不足分の引渡しによる履行の追完を請求することができる。ただし、売主は 買主に不相当な負担を課するものでないときは、買主が請求した方法と異なる 方法による履行の追完をすることができる。</blockquote>
<strong>瑕疵→契約の内容の不適合</strong> と、言い方が変わった。
<blockquote>新５６３条（買主の代金減額請求権）
前条に規定する場合において、買主が相当の期間を定めて履行の追完を催促し その期間内に履行の追完がない時は、買主は、その不適合の程度に応じて代金 の減額を請求することができる。</blockquote>
この条文はこれまでなく、新しい。
瑕疵担保期間はどれくらい？原則として「瑕疵を知ってから１年」という厄介なもの。引き渡されてから５年までに気づかないとダメよ、という文言を契約書に追加する対策をした方が良い。大きくは下記２点。
<ol>
 	<li>「瑕疵」の変化</li>
 	<li>「瑕疵担保責任」の変化～寿命、修補、減額請求</li>
</ol>
契約の趣旨に合っているか、をどう判断するか。今後の課題。
<h1>委任契約の今とこれから</h1>
<blockquote>現６４８条
受任者は、特約がなければ、委任者に対して報酬を請求することができない。 受任者は、報酬を受けるべき場合には、委任事務を履行した後でなければ、こ れを請求することができない。ただし、期間によって報酬を定めたときは、第 624 条第 2 項の規定を準用する。 委任が受任者の責めに帰することができない事由によって履行の中途で終了し たときは、受任者は、既にした履行の割合に応じて報酬を請求することができ る。</blockquote>
これまでは無償が前提の条文だったのが、
<blockquote>新６４８条の２
委任事務の履行により得られる成果に対して報酬を支払うことを約した場合に おいて、その成果が引き渡しを要求するときは、報酬は、その成果の引渡しと 同時に、支払わなければならない。</blockquote>
このように請負的な、完成した場合の条文が追加された。
<h1>なんで今改正するの？</h1>
120年近く、大して改正してこなかった民法（第四編　親族を除く）を、今回大改正する。当時のフランスやドイツの民法をパクりつつイヤイヤ作ったもの。自分たちにとって使いやすいかは考えていない。
作成当時の状況とは全く違うので、さすがに変えましょうとなった。民法改正の法案が通ったのが2017年、施行されるのが2020年。
<h1>まとめ</h1>
契約書に記載した、合意した内容に関しては、民法よりもそちらが優先される。
契約書は自由に設計できる。当事者双方が達成したいことをきちんと設計すべき。理想は、法律に関する知識がなくとも理解できる契約内容にしようね。
とても楽しく生々しい実例を交えた内容で、飽きさせない講義内容でしたw 次回も来よう。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2282</wp:post_id>
		<wp:post_date><![CDATA[2018-11-14 19:20:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-14 10:20:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[study-law-for-engineer-14]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e3%83%95%e3%83%aa%e3%83%bc%e3%83%a9%e3%83%b3%e3%82%b9"><![CDATA[フリーランス]]></category>
		<category domain="category" nicename="%e6%b3%95%e5%be%8b"><![CDATA[法律]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_294c998e9cb335ad20765d0150ded1d3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2291]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7044016906]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548387]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>176</wp:comment_id>
			<wp:comment_author><![CDATA[Bonus d'inscription à Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[23781117@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/fr/register?ref=VDVEQ78S</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-19 03:53:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-18 18:53:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Material-UI, Keen, chart.jsでSingle Page Applicationを作りながらReactを学ぶ</title>
		<link>https://tech.blog.uribou.me/learn-react-with-materialui-01/</link>
		<pubDate>Fri, 23 Nov 2018 22:37:40 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2297</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>はじめに</h1>
主に組み込みソフトウェア開発を生業としているため、フロントエンド開発には縁がなかったのですが、ここ１年仕事でNode.jsを触ってきたためフロントエンド開発にも興味が出てきて、Udemyの教材を買って黙々とtry &amp; errorしました。
<blockquote class="twitter-tweet" data-lang="ja">
<p dir="ltr" lang="ja">自分のような <a href="https://twitter.com/hashtag/React?src=hash&amp;ref_src=twsrc%5Etfw">#React</a> 初心者が手っ取り早く学ぶにはお勧めの教材 <a href="https://twitter.com/udemy?ref_src=twsrc%5Etfw">@Udemy</a> 。とはいえ、この動画を見て手を動かすだけではもちろんダメで、それなりに深掘りして調べつつtry&amp;errorしながら学習する必要はある。<a href="https://t.co/bHX62k3VYk">https://t.co/bHX62k3VYk</a></p>
— takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/1066100134683918336?ref_src=twsrc%5Etfw">2018年11月23日</a></blockquote>

この教材では、<a href="https://codesandbox.io/" target="_blank" rel="noopener noreferrer">CodeSandbox</a>を使ってオンライン上にサクッと開発環境を構築するため、ぶっちゃけシェルとかコマンドとか触ったことがなくても学習を始めることができるんですが、その辺りの知識をある程度持っている人にとってはモヤっと感が残る内容となっています。
<span style="font-size: 20px">「実際の現場ではどうやって開発始めるんだ・・・？」</span>
的な。
<del>フロントエンド開発現場未経験者が</del>その辺についても触れつつ学びながら製作した成果物とその過程を公開しようと思います。
<h1>成果物イメージ</h1>
最終的には<a href="http://geiger.uribou.tokyo/" target="_blank" rel="noopener noreferrer">こんな感じ</a>のものが出来上がります。自宅周辺の空間線量をありのままに定点観測し続けるデバイスのデータを可視化したものです。
<img class="aligncenter size-full wp-image-2314" src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2018/11/cc9719a1464da868df62a91522f0e2fb.png" alt="" width="759" height="396" />
<h1>使用する主なライブラリ、フレームワーク</h1>
センサデータを収集して永続化するバックエンド、そのデータを可視化するフロントエンドの両方をほぼJavaScriptで構成してますが、さすがにセンサ部は内部でArduinoと割り込みを使用しているので、C言語の知識も必要になります。
バックエンド側は長くなるので今回は割愛。
<h2>フロントエンド</h2>
<ul>
 	<li><a href="https://reactjs.org/" target="_blank" rel="noopener noreferrer">React</a></li>
 	<li><a href="https://material-ui.com/" target="_blank" rel="noopener noreferrer">Material-UI</a></li>
 	<li><a href="https://www.chartjs.org/" target="_blank" rel="noopener noreferrer">chart.js</a></li>
 	<li><a href="https://github.com/keen/keen-analysis.js/blob/master/README.md" target="_blank" rel="noopener noreferrer">keen-analysis.js</a></li>
</ul>
<h2>バックエンド</h2>
<ul>
 	<li><a href="https://github.com/keen/keen-tracking.js/" target="_blank" rel="noopener noreferrer">keen-tracking.js</a></li>
 	<li><a href="https://github.com/node-serialport/node-serialport" target="_blank" rel="noopener noreferrer">serialport.js</a></li>
 	<li><a href="https://www.raspberrypi.org/products/raspberry-pi-zero/" target="_blank" rel="noopener noreferrer">Raspberry Pi Zero</a></li>
 	<li><a href="https://www.sparkfun.com/products/11345" target="_blank" rel="noopener noreferrer">SEN-11345</a> (既にEOL)</li>
</ul>
<h1>Reactアプリケーション開発環境を構築する</h1>
Reactアプリケーションコードはコンパイル（トランスパイル）する必要があるため、その環境を構築する必要があります。
<h2>前提とする環境</h2>
開発環境としてのWindowsは除外。
<fieldset>macOS or Ubuntu (Unix系OSならなんでも)
bash (好みに応じて)</fieldset>
<h2>nodeをインストールする</h2>
実行環境とパッケージ管理システムがないと何も始まらないので、整備します。
2018/11/24 現在、下記の通り<a href="https://github.com/nodejs/Release#release-schedule" target="_blank" rel="noopener noreferrer">node v10がActive LTSとなっています</a>が、ここではv8を導入します。
<table>
<thead>
<tr>
<th align="center">Release</th>
<th align="center">Status</th>
<th align="center">Codename</th>
<th align="center">Initial Release</th>
<th align="center">Active LTS Start</th>
<th align="center">Maintenance LTS Start</th>
<th align="center">End-of-life</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://nodejs.org/download/release/latest-v6.x/" rel="nofollow">6.x</a></td>
<td align="center"><strong>Maintenance LTS</strong></td>
<td align="center"><a href="https://nodejs.org/download/release/latest-boron/" rel="nofollow">Boron</a></td>
<td align="center">2016-04-26</td>
<td align="center">2016-10-18</td>
<td align="center">2018-04-30</td>
<td align="center">April 2019</td>
</tr>
<tr>
<td align="center"><a href="https://nodejs.org/download/release/latest-v8.x/" rel="nofollow">8.x</a></td>
<td align="center"><strong>Active LTS</strong></td>
<td align="center"><a href="https://nodejs.org/download/release/latest-carbon/" rel="nofollow">Carbon</a></td>
<td align="center">2017-05-30</td>
<td align="center">2017-10-31</td>
<td align="center">April 2019</td>
<td align="center">December 2019<sup>1</sup></td>
</tr>
<tr>
<td align="center"><a href="https://nodejs.org/download/release/latest-v10.x/" rel="nofollow">10.x</a></td>
<td align="center"><strong>Active LTS</strong></td>
<td align="center"><a href="https://nodejs.org/download/release/latest-dubnium/" rel="nofollow">Dubnium</a></td>
<td align="center">2018-04-24</td>
<td align="center">2018-10-30</td>
<td align="center">April 2020</td>
<td align="center">April 2021</td>
</tr>
</tbody>
</table>
とはいえ、複数バージョンのnode環境を切り替えると後々便利なので、たびたび取り上げている<a href="https://github.com/riywo/anyenv" target="_blank" rel="noopener noreferrer">anyenv</a>経由でnodenvをインストールします。
<pre class="lang:sh decode:true">$ anyenv install nodenv
$ exec -l $SHELL
$ nodenv install -l | grep -E '^\s*8\.'
  ...
  8.10.0
  8.11.0
  8.11.1
  8.11.2
  8.11.3</pre>
node 8系の最新は8.11.3のようなので、これをインストールします。
<pre class="lang:sh decode:true">$ nodenv install 8.11.3</pre>
<h2>Reactアプリケーション雛形を作成する</h2>
nodeをインストールするとパッケージ管理システムnpmも勝手についてきます。まずはnpmでReactアプリケーション雛形生成コマンドをインストール、設定していきます。
<h3>Reactについておさらい</h3>
今更ですがおさらいです。
Reactは、JavaScriptでもHTMLでもない、<a href="https://reactjs.org/docs/introducing-jsx.html#embedding-expressions-in-jsx" target="_blank" rel="noopener noreferrer">JSX</a>という独自のシンタックスでコードを書く必要があります。
<pre class="lang:js decode:true">class GeigerChart extends Component {
  ...
  render() {
    const { classes } = this.props;
    return (
      &lt;div className={classes.areaChart}&gt;
        &lt;canvas ref="canvas" /&gt;
      &lt;/div&gt;
    );
  }
}</pre>
JavaScriptでもHTMLでもないということは、そのままではブラウザが解釈できないので、JSXコードをコンパイル（トランスパイル）してブラウザが解釈できる形式に変換しないといけません。
そのトランスパイル環境を自前で組むのは<a href="http://twins-tech.hatenablog.com/entry/2016/10/02/134714" target="_blank" rel="noopener noreferrer">とても大変</a>なので、create-react-appコマンドで生成した環境を展開して流用します。
<h3>create-react-appコマンドを実行する</h3>
create-react-appコマンドのインストールは簡単です。
<pre class="lang:sh decode:true">$ nodenv local 8.11.3
$ npm install -g create-react-app</pre>
オプション一覧は以下の通り。
<pre class="lang:sh decode:true">$ create-react-app --help
Usage: create-react-app &lt;project-directory&gt; [options]
Options:
  -V, --version                            output the version number
  --verbose                                print additional logs
  --info                                   print environment debug info
  --scripts-version &lt;alternative-package&gt;  use a non-standard version of react-scripts
  --use-npm
  --use-pnp
  --typescript
  -h, --help                               output usage information
    Only &lt;project-directory&gt; is required.
    A custom --scripts-version can be one of:
      - a specific npm version: 0.8.2
      - a specific npm tag: @next
      - a custom fork published on npm: my-react-scripts
      - a local path relative to the current working directory: file:../my-react-scripts
      - a .tgz archive: https://mysite.com/my-react-scripts-0.8.2.tgz
      - a .tar.gz archive: https://mysite.com/my-react-scripts-0.8.2.tar.gz
    It is not needed unless you specifically want to use a fork.
    If you have any problems, do not hesitate to file an issue:
      https://github.com/facebook/create-react-app/issues/new
</pre>
TypeScript版の雛形も生成できますが、今回は指定しません。keen-analysis.js等のライブラリに対応した型定義ファイルがなく、自前で書くのがめんどくさいので…。
<em>Only &lt;project-directory&gt; is required. </em>の通り、雛形のproject名のみ引数に指定してcreate-react-appコマンドを実行します。
<pre class="lang:sh decode:true">$ create-react-app geiger-viewer
Creating a new React app in /Users/takashi/Development/geiger-viewer.
Installing packages. This might take a couple of minutes.
Installing react, react-dom, and react-scripts...
[fsevents] Success: "/Users/takashi/Development/geiger-viewer/node_modules/fsevents/lib/binding/Release/node-v57-darwin-x64/fse.node" already installed
Pass --update-binary to reinstall or --build-from-source to recompile
+ react-scripts@2.1.1
+ react@16.6.3
+ react-dom@16.6.3
added 1768 packages in 94.867s
Initialized a git repository.
Success! Created test at /Users/takashi/Development/geiger-viewer
Inside that directory, you can run several commands:
  npm start
    Starts the development server.
  npm run build
    Bundles the app into static files for production.
  npm test
    Starts the test runner.
  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can’t go back!
We suggest that you begin by typing:
  cd test
  npm start
Happy hacking!</pre>
geiger-viewerディレクトリ下にコードと設定ファイル一式が生成されたので、確認しましょう。
<pre class="lang:sh decode:true">$ tree -L 1 geiger-viewer/
geiger-viewer/
├── README.md
├── node_modules
├── package-lock.json
├── package.json
├── public
└── src</pre>
これで雛形となるコードはできたんですが、IE等の古いブラウザを使っている人はまだまだ多いので（涙）、これに対応するための設定を追加する必要があります。
でもその設定ファイルは、現段階では隠蔽されているので、展開する必要があります。
先ほどのcreate-react-appコマンドオプション一覧に表示されていた、これですね。
<pre class="lang:sh decode:true">  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can’t go back!</pre>
やってみると、
<pre class="lang:sh decode:true">$ npm run eject
&gt; geiger-viewer@0.1.0 eject /Users/takashi/Development/geiger-viewer
&gt; react-scripts eject
? Are you sure you want to eject? This action is permanent. Yes
Ejecting...</pre>
<em>Are you sure you want to eject? This action is permanent. （後戻りできないけど本当にいいの？）</em>と聞いてくるので、yを入力します。すると…
<pre class="lang:sh decode:true ">Copying files into /Users/takashi/Development/temp/geiger-viewer
  Adding /config/env.js to the project
  Adding /config/paths.js to the project
  Adding /config/webpack.config.dev.js to the project
  Adding /config/webpack.config.prod.js to the project
  Adding /config/webpackDevServer.config.js to the project
  Adding /config/jest/cssTransform.js to the project
  Adding /config/jest/fileTransform.js to the project
  Adding /scripts/build.js to the project
  Adding /scripts/start.js to the project
  Adding /scripts/test.js to the project
Updating the dependencies
  Removing react-scripts from dependencies
  Adding @babel/core to dependencies
  Adding @svgr/webpack to dependencies
  Adding babel-core to dependencies
  Adding babel-eslint to dependencies
  Adding babel-jest to dependencies
  Adding babel-loader to dependencies
  Adding babel-plugin-named-asset-import to dependencies
  Adding babel-preset-react-app to dependencies
  Adding bfj to dependencies
  Adding case-sensitive-paths-webpack-plugin to dependencies
  Adding chalk to dependencies
  Adding css-loader to dependencies
  Adding dotenv to dependencies
  Adding dotenv-expand to dependencies
  Adding eslint to dependencies
  Adding eslint-config-react-app to dependencies
  Adding eslint-loader to dependencies
  Adding eslint-plugin-flowtype to dependencies
  Adding eslint-plugin-import to dependencies
  Adding eslint-plugin-jsx-a11y to dependencies
  Adding eslint-plugin-react to dependencies
  Adding file-loader to dependencies
  Adding fork-ts-checker-webpack-plugin-alt to dependencies
  Adding fs-extra to dependencies
  Adding html-webpack-plugin to dependencies
  Adding identity-obj-proxy to dependencies
  Adding jest to dependencies
  Adding jest-pnp-resolver to dependencies
  Adding jest-resolve to dependencies
  Adding mini-css-extract-plugin to dependencies
  Adding optimize-css-assets-webpack-plugin to dependencies
  Adding pnp-webpack-plugin to dependencies
  Adding postcss-flexbugs-fixes to dependencies
  Adding postcss-loader to dependencies
  Adding postcss-preset-env to dependencies
  Adding postcss-safe-parser to dependencies
  Adding react-app-polyfill to dependencies
  Adding react-dev-utils to dependencies
  Adding resolve to dependencies
  Adding sass-loader to dependencies
  Adding style-loader to dependencies
  Adding terser-webpack-plugin to dependencies
  Adding url-loader to dependencies
  Adding webpack to dependencies
  Adding webpack-dev-server to dependencies
  Adding webpack-manifest-plugin to dependencies
  Adding workbox-webpack-plugin to dependencies
Updating the scripts
  Replacing "react-scripts start" with "node scripts/start.js"
  Replacing "react-scripts build" with "node scripts/build.js"
  Replacing "react-scripts test" with "node scripts/test.js"
Configuring package.json
  Adding Jest configuration
  Adding Babel preset
  Adding ESLint configuration
Running npm install...
up to date in 18.573s
Ejected successfully!
Please consider sharing why you ejected in this survey:
  http://goo.gl/forms/Bi6CZjk1EqsdelXk1</pre>
webpackやbabel等のツール、ライブラリと共に、./config下に設定ファイルが展開されました。古いIEにもちゃんと対応するにはwebpackの設定ファイルを修正して<em>@babel/polyfill </em>をかけてやる必要があるんですが、長くなってきたので続きは次回。
<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2297</wp:post_id>
		<wp:post_date><![CDATA[2018-11-24 07:37:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-23 22:37:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[learn-react-with-materialui-01]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="react"><![CDATA[React]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f6039a9ac897de11619f027a5beeb584]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7067740148]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4bd8ba15cf4a5cac818ad9a0dd6572d9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:88:"http://tech.uribou.tokyo/wp-content/uploads/2018/11/cc9719a1464da868df62a91522f0e2fb.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591164]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>235</wp:comment_id>
			<wp:comment_author><![CDATA[Vytvorit bezplatn'y úcet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[47201428@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/sk/join?ref=JHQQKNKN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-29 02:35:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-28 17:35:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>フルスタックエンジニアが教える即戦力Railsエンジニア養成講座 @Udemy 学習記録: docker/docker-composeコマンドの使い方</title>
		<link>https://tech.blog.uribou.me/udemy-rails-docker-command/</link>
		<pubDate>Sat, 02 Feb 2019 03:28:59 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2332</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>課題</h1>
rubyも知らないのに、仕事でrails使うことになりました。やばい。
<h1>解決策</h1>
rubyもrailsもど素人な自分を助けてもらおうと、今回もudemyにお世話になってます。
<a href="https://www.udemy.com/share/100eFCAEQdcV1VQXo=/">フルスタックエンジニアが教える 即戦力Railsエンジニア養成講座</a>
個人的には<strong>フルスタック</strong>というワードが既に死語ではないかと感じていたりするんですが、内容はとても良いです。ruby自体素人の自分にとっては、rubyのシンタックス解説が最小限含まれてるのは有難い‥。知っている人にとっては冗長だと思いますが、そんときは飛ばせば良いだけですし。
後でもう少し整理するのだけど、以下メモ書き。rubyだけでなくdockerも素人ということがこのメモ書きからバレてしまうけど。
<h1>docker exec</h1>
railsアプリを動かすためのdockerコンテナを起動した後、
<pre class="lang:sh decode:true ">$ docker-compose up -d</pre>
起動したコンテナに後からbashログインしたいことが度々ある。そもそも仮想マシンコンテナ内部がどんな構成になってんのか覗いてみたいと思いますよね（大体普通にFHSに則ったdirectory treeを眺めるだけですが）。
とりあえず以下コマンドで、起動済みコンテナの一覧を得る。webとdbのコンテナが起動していることが分かる。
<pre class="lang:sh decode:true">$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
64dfb07beafe        5d247124df8b        "bundle exec rails s…"   17 minutes ago      Up 17 minutes       0.0.0.0:3000-&gt;3000/tcp   rails_web_1
be255fff550f        mysql:5.7           "docker-entrypoint.s…"   17 minutes ago      Up 17 minutes       3306/tcp, 33060/tcp      rails_db_1</pre>
ちょっとdbコンテナのmysqlにログインしてテーブルの中身を覗いて見たい‥と思ったときには以下コマンドで、コンテナにbashログインした後、普通にmysqlを叩く。
<pre class="lang:mysql decode:true">$ docker exec -it rails_db_1 /bin/bash
root@be255fff550f:/#
root@be255fff550f:/#　mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 5.7.24 MySQL Community Server (GPL)
mysql&gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| app_development    |
| app_test           |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
6 rows in set (0.01 sec)
mysql&gt; use app_development
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql&gt; show tables;
+---------------------------+
| Tables_in_app_development |
+---------------------------+
| ar_internal_metadata      |
| boards                    |
| schema_migrations         |
+---------------------------+
3 rows in set (0.00 sec)</pre>
describeとかしてみると、ちゃんとrailsのORマッパーが働いてくれそうな気配を感じることができる。
<pre class="lang:mysql decode:true">mysql&gt; describe boards;
+------------+--------------+------+-----+---------+----------------+
| Field      | Type         | Null | Key | Default | Extra          |
+------------+--------------+------+-----+---------+----------------+
| id         | int(11)      | NO   | PRI | NULL    | auto_increment |
| name       | varchar(255) | YES  |     | NULL    |                |
| title      | varchar(255) | YES  |     | NULL    |                |
| body       | text         | YES  |     | NULL    |                |
| created_at | datetime     | NO   |     | NULL    |                |
| updated_at | datetime     | NO   |     | NULL    |                |
+------------+--------------+------+-----+---------+----------------+
6 rows in set (0.01 sec)</pre>
コンテナ起動後にrailsコンソールを叩くこともできる。
<pre class="lang:sh decode:true  ">$ docker exec -it rails_web_1 rails c
Running via Spring preloader in process 50
Loading development environment (Rails 5.0.0.1)
irb(main):001:0&gt;</pre>
<h1>docker attach</h1>
起動済みコンテナに後からattachすることもできる。
以下コマンドで起動済みコンテナの一覧を得た後、
<pre class="lang:sh decode:true">$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
64dfb07beafe        5d247124df8b        "bundle exec rails s…"   17 minutes ago      Up 17 minutes       0.0.0.0:3000-&gt;3000/tcp   rails_web_1
be255fff550f        mysql:5.7           "docker-entrypoint.s…"   17 minutes ago      Up 17 minutes       3306/tcp, 33060/tcp      rails_db_1</pre>
attachしてみる。
<pre class="lang:sh decode:true ">$ docker attach rails_web_1</pre>
作成中のrailsアプリで何か叩くと反応する。
<pre class="lang:default decode:true ">Started POST "/boards" for 172.23.0.1 at 2019-02-02 17:43:54 +0000
Cannot render console from 172.23.0.1! Allowed networks: 127.0.0.1, ::1, 127.0.0.0/127.255.255.255
  ActiveRecord::SchemaMigration Load (15.5ms)  SELECT `schema_migrations`.* FROM `schema_migrations`
Processing by BoardsController#create as HTML
  Parameters: {"utf8"=&gt;"✓", "authenticity_token"=&gt;"YdVLdgI6BHsOB3YPJhYR9bz8OnSJacTP57J5eWvZYorXBPy6LyHulObUkO41ox8rSMOEaCX31h8Yrfk2U0x25A==", "board"=&gt;{"name"=&gt;"takashi", "title"=&gt;"hei", "body"=&gt;"hoi\r\n"}}
   (0.5ms)  BEGIN
  SQL (29.1ms)  INSERT INTO `boards` (`name`, `title`, `body`, `created_at`, `updated_at`) VALUES ('takashi', 'hei', 'hoi\r\n', '2019-02-02 17:43:56', '2019-02-02 17:43:56')
   (4.8ms)  COMMIT
From: /app/app/controllers/boards_controller.rb @ line 12 BoardsController#create:</pre>
<h1>docker attachしたコンテナから安全に抜ける</h1>
困ったのがこれ。attachした後、そのコンテナから抜けたいだけなのに、CTRL-cとかするとコンテナ自体が死んでしまう。
<pre class="lang:sh decode:true">read escape sequence
$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
4d5ff643e471        mysql:5.7           "docker-entrypoint.s…"   19 minutes ago      Up 19 minutes       3306/tcp, 33060/tcp      rails_db_1</pre>
上は、attachしたrails_web_1コンテナから抜けたかっただけなのに殺してしまった図。
<a href="https://docs.docker.com/engine/reference/commandline/attach/">dockerのヘルプ</a>を見ると、仕様通りの動作みたい。コンテナに対してSIGKILL送っちゃうんだからそりゃ死ぬよね。
<blockquote>To stop a container, use <code class="highlighter-rouge">CTRL-c</code>. This key sequence sends <code class="highlighter-rouge">SIGKILL</code> to the container. If <code class="highlighter-rouge">--sig-proxy</code> is true (the default),<code class="highlighter-rouge">CTRL-c</code> sends a <code class="highlighter-rouge">SIGINT</code> to the container.</blockquote>
もちろん、コンテナを殺さずに抜ける方法も用意されてる。
<blockquote>You can detach from a container and leave it running using the<code class="highlighter-rouge">CTRL-p CTRL-q</code> key sequence.</blockquote>
試してみよう。rails_web_1コンテナにattachした後、CTRL-p CTRL-qを入力する。
<pre class="lang:sh decode:true">read escape sequence
$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
0b2a521d54d4        rails_web           "bundle exec rails s…"   19 minutes ago      Up 19 minutes       0.0.0.0:3000-&gt;3000/tcp   rails_web_1
4d5ff643e471        mysql:5.7           "docker-entrypoint.s…"   19 minutes ago      Up 19 minutes       3306/tcp, 33060/tcp      rails_db_1</pre>
ちゃんとrails_web_1コンテナが生きてる。やった。
<h1>まとめ</h1>
シンタックスが嫌いだからと避けていたruby。
いつ何時必要になるか分からないので、喰わず嫌いせずに少しずつでも勉強してれば良かったな。
という反省から、同時進行でGoもやってたりします。きつい。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2332</wp:post_id>
		<wp:post_date><![CDATA[2019-02-02 12:28:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-02 03:28:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[udemy-rails-docker-command]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="docker"><![CDATA[docker]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_bd5d01bb9ba35b9855e5095b859af266]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2336]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7204144153]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[udemy-rails-01]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722638234]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[temp mail]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jonathan_dolor@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://upxmail.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.150.206.37]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-06 10:23:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-06 01:23:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, great post There is a problem with your website on Internet Explorer. Despite being the most popular browser, many people will not be able to view your excellent work because of this issue.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>フルスタックエンジニアが教える即戦力Railsエンジニア養成講座 @Udemy 学習記録: ERBとはなんぞ</title>
		<link>https://tech.blog.uribou.me/udemy-rails-what-is-erb/</link>
		<pubDate>Sun, 03 Feb 2019 01:00:46 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2344</guid>
		<description></description>
		<content:encoded><![CDATA[突然出てくる.erbファイル。<a href="https://puppet.com/docs/puppet/5.3/lang_template_erb.html"><strong>E</strong>mbedded <strong>R</strong>u<strong>B</strong>yの略</a>なのね。納得。
<pre class="lang:default decode:true">&lt;table class="table table-hover boards__table"&gt;
  &lt;thead class="thead-dark"&gt;
    &lt;tr&gt;
      &lt;th&gt;ID&lt;/th&gt;
      &lt;th&gt;タイトル&lt;/th&gt;
      &lt;th&gt;作成者&lt;/th&gt;
      &lt;th&gt;作成日時&lt;/th&gt;
      &lt;th&gt;更新日時&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;% @boards.each do |board| %&gt;
      &lt;tr&gt;
        &lt;th&gt;&lt;%= board.id %&gt;&lt;/th&gt;
        &lt;td&gt;&lt;%= board.title %&gt;&lt;/td&gt;
        &lt;td&gt;&lt;%= board.name %&gt;&lt;/td&gt;
        &lt;td&gt;&lt;%= board.created_at %&gt;&lt;/td&gt;
        &lt;td&gt;&lt;%= board.updated_at %&gt;&lt;/td&gt;
      &lt;/tr&gt;
    &lt;% end %&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</pre>
シンタックスは結構単純。
<ul>
 	<li><code>&lt;%= EXPRESSION %&gt;</code> — Inserts the value of an expression.
<ul>
 	<li>With <code>-%&gt;</code> — Trims the following line break.</li>
</ul>
</li>
 	<li><code>&lt;% CODE %&gt;</code> — Executes code, but does not insert a value.
<ul>
 	<li>With <code>&lt;%-</code> — Trims the preceding indentation.</li>
 	<li>With <code>-%&gt;</code> — Trims the following line break.</li>
</ul>
</li>
 	<li><code>&lt;%# COMMENT %&gt;</code> — Removed from the final output.
<ul>
 	<li>With <code>-%&gt;</code> — Trims the following line break.</li>
</ul>
</li>
 	<li><code>&lt;%%</code> or <code>%%&gt;</code> — A literal <code>&lt;%</code> or <code>%&gt;</code>, respectively.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2344</wp:post_id>
		<wp:post_date><![CDATA[2019-02-03 10:00:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-03 01:00:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[udemy-rails-what-is-erb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2d96d5300c87cce53e48d11e9f41b3d7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7205997577]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2336]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722548386]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>172</wp:comment_id>
			<wp:comment_author><![CDATA[prijava na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[62426777@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.info/sl/join?ref=W0BCQMF1</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.72]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-17 03:38:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-16 18:38:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>213</wp:comment_id>
			<wp:comment_author><![CDATA[registrovat se na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[10386901@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/cs/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.46]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-07 09:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-07 00:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>295</wp:comment_id>
			<wp:comment_author><![CDATA[binance referral]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[85835415@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/en/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.227.133.10]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-27 14:55:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-27 05:55:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>AI for Engineer @Graspy 自然言語周りの備忘録</title>
		<link>https://tech.blog.uribou.me/graspy-ai-natural-language-section-2/</link>
		<pubDate>Mon, 11 Feb 2019 05:06:46 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2349</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://graspy.jp/">Graspy</a>とは？公式ページのmeta dataを引用すると以下の通り。
<blockquote>Graspyは日本初のキャリア形成プラットフォームです。オンライン学習や著名人の勉強会を通してビジネススキルを高める「学びの場」と、企業やメンターとの交流を通した新たな価値観との「出会いの場」を提供することで「その先にある未来を掴む」ための機会を創ります。
プロフィール登録するだけで、最大20万円相当の学習カリキュラムを無料で学ぶことができます。 他にも各界の著名人が開催する勉強会に参加することができます。</blockquote>
具体的な登録方法は公式ページを見てもらうとして、普段から職務経歴書を更新し続けている人にとってはプロフィール登録にかかる手間はものの数分です。
実際に登録して500ポイント獲得し、今受けているAI for Engineerコースの内容は、入門としてとても良いと感じます。機械学習に纏わるPythonモジュールだけでなく、クラウド系の開発環境 IBM Watson や Microsoft Azure Machine Learningでの開発体験も網羅しており、やってて楽しい。
全てのプロフィール登録すると500ポイントもらえるのは、以下の受講可能コース5つ全て受けられますよ、という意味なんでしょうね。（100ポイント / コース 消費）
<h1>受講可能コース</h1>
<h2>AI for Engineer</h2>
AIエンジニアを目指す方や、より一層のスキルアップをしたいAIエンジニアの方におすすめです。
<h2>AI for Business</h2>
機械学習・ディープラーニングを学びます。 AIエンジニアを目指す方、AIに興味がある方におすすめ。
<h2>HTML/CSS</h2>
制作フロー＆ポイントを学び、簡単なWEBサイトを作成できるようになります。
<h2>Javascript</h2>
WEBサイトに、様々な動きや機能を付加する方法を学びます。
<h2>Ruby on Rails</h2>
実践的なWebアプリケーション開発を学びます。 エンジニア志望の方、体系的に学び直したい方へ。
<h1>AI for Engineerコース受講にあたっての備忘録</h1>
受講中のAI for Engineerコースですが、内容を公開するわけにはいかないので、一般的な要素の備忘録をとっておきたいと思います。
<blockquote>N-gramは文章を分割する単位です。例えば、This is a penという文章があった場合、N-gramの値が2ではThis is、is a、a penのように前後の2つの単語で文章を区切って分割します。1では単語ごと、3ではThis is a、is a penのように区切るわけです。この方法をN-gram法といいます。特に2つの単語で区切った場合はバイグラム、1つではユニグラム、3つではトリグラムといいます。</blockquote>
英語のような単語区切りにスペースを使う言語とは異なり、日本語には使うことのできないN-gram。日本語にはMecabやJanomeのような形態素解析ツールを使用するのが一般的なんだそう。
<h2>形態素解析ツールのインストール</h2>
ということで試してみました。GraspyではJanomeのみ扱ってましたが、せっかく紹介があったのでMeCabも一緒に。
<h3>MeCab</h3>
公式サイトは<a href="http://taku910.github.io/mecab/#parse">こちら</a>。以下引用。
<blockquote>MeCabは<a href="http://pine.kuee.kyoto-u.ac.jp/KU-NTT-WS-2005/"> 京都大学情報学研究科−日本電信電話株式会社コミュニケーション科学基礎研究所 共同研究ユニットプロジェクト</a>を通じて開発されたオープンソース 形態素解析エンジンです。 言語, 辞書,コーパスに依存しない汎用的な設計を 基本方針としています。 パラメータの推定に Conditional Random Fields (<a href="http://www.cis.upenn.edu/~pereira/papers/crf.pdf">CRF</a>) を用 いており, <a href="http://chasen.naist.jp/">ChaSen</a>が採用している 隠れマルコフモデルに比べ性能が向上しています。また、平均的に <a href="http://chasen.naist.jp/">ChaSen</a>, <a href="http://www.kc.t.u-tokyo.ac.jp/nl-resource/juman.html">Juman</a>, <a href="http://kakasi.namazu.org/">KAKASI</a>より高速に動作します。 ちなみに和布蕪(めかぶ)は, 作者の好物です。</blockquote>
MeCabはシステムに入れる必要があるので、macOSならbrew、Linuxならaptとか使う。Windowsは知らない。最近だとSubsystem for Linuxでaptできるのかな。
<pre class="lang:sh decode:true">$ brew search mecab mecab-ipadic
==&gt; Formulae
mecab mecab-ko mecab-unidic-extended
mecab-ipadic mecab-ko-dic
mecab-jumandic mecab-unidic
$ brew install mecab
==&gt; Downloading https://homebrew.bintray.com/bottles/mecab-0.996.high_sierra.bot
######################################################################## 100.0%
==&gt; Pouring mecab-0.996.high_sierra.bottle.3.tar.gz
&#x1f37a;  /usr/local/Cellar/mecab/0.996: 20 files, 4.2MB</pre>
そこそこ時間がかかるのでしばし待つ。
<h3>Janome</h3>
公式サイトは<a href="https://mocobeta.github.io/janome/">こちら</a>。以下引用。
<blockquote>Janome (蛇の目) は，Pure Python で書かれた，辞書内包の形態素解析器です。
依存ライブラリなしで簡単にインストールでき，アプリケーションに組み込みやすいシンプルな API を備える形態素解析ライブラリを目指しています。
内包辞書として mecab-ipadic-2.7.0-20070801 を使っています。</blockquote>
実装は違えど、辞書は同じものを使用してるんですね。インストールは普通にpipを使います。
<pre class="lang:sh decode:true">$ pip install janome</pre>
<h2>形態素解析ツールの使い方</h2>
<h3>Janome</h3>
Graspy等では<strong>「すもももももももものうち」</strong>を例題にしていたので、早口言葉をいくつか試してみました。引用元は<a href="https://hayakutikotoba.web.fc2.com/">こちら</a>の早口言葉紹介サイト。難易度１の中から、個人的によく聞くものだけ抜き出してみました。
<blockquote>
<p class="p1"><span class="s1">"生麦生米生卵",
</span><span class="s1">"老若男女",
</span><span class="s1">"赤パジャマ黄パジャマ茶パジャマ ",
</span><span class="s1">"除雪車除雪作業中",
</span><span class="s1">"隣の客はよく柿食う客だ",
</span><span class="s1">"この釘はひきぬきにくい釘だ",
</span><span class="s1">"かえるぴょこぴょこみぴょこぴょこあわせてぴょこぴょこむぴょこぴょこ",</span></p>
</blockquote>
お試しコードはこちら。
<pre class="lang:python decode:true">from janome.tokenizer import Tokenizer
import json
from pprint import PrettyPrinter
_sentences = [
  "生麦生米生卵",
  "老若男女",
  "赤パジャマ黄パジャマ茶パジャマ ",
  "除雪車除雪作業中",
  "隣の客はよく柿食う客だ",
  "この釘はひきぬきにくい釘だ",
  "かえるぴょこぴょこみぴょこぴょこあわせてぴょこぴょこむぴょこぴょこ",
]
def main():
  pp = PrettyPrinter(indent=2)
  results = []
  tokenizer = Tokenizer()
  for sentence in _sentences:
    tokens = tokenizer.tokenize(sentence)
    results.append({
      "sentence": sentence,
      "surfaces": [t.surface for t in tokens],
      "phonetics": [t.phonetic for t in tokens],
      "parts_of_speech": [t.part_of_speech for t in tokens],
    })
  pp.pprint(results)
if __name__ == '__main__':
  main()</pre>
結果は以下の通り。
<pre class="lang:js decode:true ">[ { 'parts_of_speech': [ '名詞,固有名詞,人名,姓',
                         '接頭詞,名詞接続,*,*',
                         '名詞,固有名詞,地域,国',
                         '名詞,接尾,一般,*',
                         '名詞,一般,*,*'],
    'phonetics': ['ナマムギ', 'ナマ', 'ベイ', 'セイ', 'タマゴ'],
    'sentence': '生麦生米生卵',
    'surfaces': ['生麦', '生', '米', '生', '卵']},
  { 'parts_of_speech': ['名詞,一般,*,*'],
    'phonetics': ['ローニャクナンニョ'],
    'sentence': '老若男女',
    'surfaces': ['老若男女']},
  { 'parts_of_speech': [ '名詞,一般,*,*',
                         '名詞,一般,*,*',
                         '名詞,一般,*,*',
                         '名詞,一般,*,*',
                         '名詞,一般,*,*',
                         '名詞,一般,*,*'],
    'phonetics': ['アカ', 'パジャマ', 'キ', 'パジャマ', 'チャ', 'パジャマ'],
    'sentence': '赤パジャマ黄パジャマ茶パジャマ ',
    'surfaces': ['赤', 'パジャマ', '黄', 'パジャマ', '茶', 'パジャマ']},
  { 'parts_of_speech': [ '名詞,サ変接続,*,*',
                         '名詞,接尾,一般,*',
                         '名詞,サ変接続,*,*',
                         '名詞,サ変接続,*,*',
                         '名詞,接尾,副詞可能,*'],
    'phonetics': ['ジョセツ', 'シャ', 'ジョセツ', 'サギョー', 'チュー'],
    'sentence': '除雪車除雪作業中',
    'surfaces': ['除雪', '車', '除雪', '作業', '中']},
  { 'parts_of_speech': [ '名詞,一般,*,*',
                         '助詞,連体化,*,*',
                         '名詞,一般,*,*',
                         '助詞,係助詞,*,*',
                         '副詞,一般,*,*',
                         '名詞,一般,*,*',
                         '動詞,自立,*,*',
                         '名詞,一般,*,*',
                         '助動詞,*,*,*'],
    'phonetics': ['トナリ', 'ノ', 'キャク', 'ワ', 'ヨク', 'カキ', 'クウ', 'キャク', 'ダ'],
    'sentence': '隣の客はよく柿食う客だ',
    'surfaces': ['隣', 'の', '客', 'は', 'よく', '柿', '食う', '客', 'だ']},
  { 'parts_of_speech': [ '連体詞,*,*,*',
                         '名詞,一般,*,*',
                         '助詞,係助詞,*,*',
                         '動詞,自立,*,*',
                         '形容詞,非自立,*,*',
                         '名詞,一般,*,*',
                         '助動詞,*,*,*'],
    'phonetics': ['コノ', 'クギ', 'ワ', 'ヒキヌキ', 'ニクイ', 'クギ', 'ダ'],
    'sentence': 'この釘はひきぬきにくい釘だ',
    'surfaces': ['この', '釘', 'は', 'ひきぬき', 'にくい', '釘', 'だ']},
  { 'parts_of_speech': [ '動詞,自立,*,*',
                         '副詞,一般,*,*',
                         '動詞,自立,*,*',
                         '副詞,一般,*,*',
                         '動詞,自立,*,*',
                         '助詞,接続助詞,*,*',
                         '副詞,一般,*,*',
                         '名詞,一般,*,*'],
    'phonetics': ['カエル', 'ピョコピョコ', 'ミ', 'ピョコピョコ', 'アワセ', 'テ', 'ピョコピョコ', '*'],
    'sentence': 'かえるぴょこぴょこみぴょこぴょこあわせてぴょこぴょこむぴょこぴょこ',
    'surfaces': [ 'かえる',
                  'ぴょこぴょこ',
                  'み',
                  'ぴょこぴょこ',
                  'あわせ',
                  'て',
                  'ぴょこぴょこ',
                  'むぴょこぴょこ']}]</pre>
<strong>「かえるぴょこぴょこ...」</strong>や<strong>「生麦生米生卵」</strong>のように、単語区切りが判定しづらい文は苦手そうですね。Tokenizerクラスのコンストラクタにユーザ辞書を指定できるので、精度をあげるには辞書を自作すべしってことですかね。
<h3>Mecab</h3>
mecabは標準入力から文を入力できるので、以下のようなスクリプトを書いてみました。
<pre class="lang:sh decode:true">#!/usr/bin/env bash
SENTENCES=(
  '生麦生米生卵'
  '老若男女'
  '赤パジャマ黄パジャマ茶パジャマ '
  '除雪車除雪作業中'
  '隣の客はよく柿食う客だ'
  'この釘はひきぬきにくい釘だ'
  'かえるぴょこぴょこみぴょこぴょこあわせてぴょこぴょこむぴょこぴょこ'
)
for S in ${SENTENCES[@]}
do
    echo $S:
    echo -en "$(echo $S | mecab)\n\n"
done</pre>
結果はこちら。
<pre class="lang:default decode:true ">生麦生米生卵:
生麦	名詞,固有名詞,人名,姓,*,*,生麦,ナマムギ,ナマムギ
生	接頭詞,名詞接続,*,*,*,*,生,ナマ,ナマ
米	名詞,固有名詞,地域,国,*,*,米,ベイ,ベイ
生	名詞,接尾,一般,*,*,*,生,セイ,セイ
卵	名詞,一般,*,*,*,*,卵,タマゴ,タマゴ
EOS
老若男女:
老若男女	名詞,一般,*,*,*,*,老若男女,ロウニャクナンニョ,ローニャクナンニョ
EOS
赤パジャマ黄パジャマ茶パジャマ:
赤	名詞,一般,*,*,*,*,赤,アカ,アカ
パジャマ	名詞,一般,*,*,*,*,パジャマ,パジャマ,パジャマ
黄	名詞,一般,*,*,*,*,黄,キ,キ
パジャマ	名詞,一般,*,*,*,*,パジャマ,パジャマ,パジャマ
茶	名詞,一般,*,*,*,*,茶,チャ,チャ
パジャマ	名詞,一般,*,*,*,*,パジャマ,パジャマ,パジャマ
EOS
除雪車除雪作業中:
除雪	名詞,サ変接続,*,*,*,*,除雪,ジョセツ,ジョセツ
車	名詞,接尾,一般,*,*,*,車,シャ,シャ
除雪	名詞,サ変接続,*,*,*,*,除雪,ジョセツ,ジョセツ
作業	名詞,サ変接続,*,*,*,*,作業,サギョウ,サギョー
中	名詞,接尾,副詞可能,*,*,*,中,チュウ,チュー
EOS
隣の客はよく柿食う客だ:
隣	名詞,一般,*,*,*,*,隣,トナリ,トナリ
の	助詞,連体化,*,*,*,*,の,ノ,ノ
客	名詞,一般,*,*,*,*,客,キャク,キャク
は	助詞,係助詞,*,*,*,*,は,ハ,ワ
よく	副詞,一般,*,*,*,*,よく,ヨク,ヨク
柿	名詞,一般,*,*,*,*,柿,カキ,カキ
食う	動詞,自立,*,*,五段・ワ行促音便,基本形,食う,クウ,クウ
客	名詞,一般,*,*,*,*,客,キャク,キャク
だ	助動詞,*,*,*,特殊・ダ,基本形,だ,ダ,ダ
EOS
この釘はひきぬきにくい釘だ:
この	連体詞,*,*,*,*,*,この,コノ,コノ
釘	名詞,一般,*,*,*,*,釘,クギ,クギ
は	助詞,係助詞,*,*,*,*,は,ハ,ワ
ひきぬき	動詞,自立,*,*,五段・カ行イ音便,連用形,ひきぬく,ヒキヌキ,ヒキヌキ
にくい	形容詞,非自立,*,*,形容詞・アウオ段,基本形,にくい,ニクイ,ニクイ
釘	名詞,一般,*,*,*,*,釘,クギ,クギ
だ	助動詞,*,*,*,特殊・ダ,基本形,だ,ダ,ダ
EOS
かえるぴょこぴょこみぴょこぴょこあわせてぴょこぴょこむぴょこぴょこ:
かえる	動詞,自立,*,*,一段,基本形,かえる,カエル,カエル
ぴょこぴょこ	副詞,一般,*,*,*,*,ぴょこぴょこ,ピョコピョコ,ピョコピョコ
み	動詞,自立,*,*,一段,連用形,みる,ミ,ミ
ぴょこぴょこ	副詞,一般,*,*,*,*,ぴょこぴょこ,ピョコピョコ,ピョコピョコ
あわせ	動詞,自立,*,*,一段,連用形,あわせる,アワセ,アワセ
て	助詞,接続助詞,*,*,*,*,て,テ,テ
ぴょこぴょこ	副詞,一般,*,*,*,*,ぴょこぴょこ,ピョコピョコ,ピョコピョコ
むぴょこぴょこ	名詞,一般,*,*,*,*,*
EOS</pre>
同じ辞書を使ってるだけあって、同じ結果になりました。
<h1>感想</h1>
精度が必要ならそれなりの辞書を用意した上で、助詞/助動詞を除いたtokenを説明変数として使用すれば、いい感じの精度が期待できる…のかな？機械学習を勉強するのはいいけど、まだ実用的な実装未経験なので、応用についてはそのうちまた別途ということで。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2349</wp:post_id>
		<wp:post_date><![CDATA[2019-02-11 14:06:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-11 05:06:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[graspy-ai-natural-language-section-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2354]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7224183706]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605564]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>267</wp:comment_id>
			<wp:comment_author><![CDATA[ustvarjanje racuna na binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[48663511@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/sl/join?ref=B4EPR6J0</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-08 01:56:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-07 16:56:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>古すぎるmacOSのbash…　Ubuntu相当の5.0に更新しました</title>
		<link>https://tech.blog.uribou.me/update-bash-on-macos/</link>
		<pubDate>Sat, 04 May 2019 22:24:41 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2415</guid>
		<description></description>
		<content:encoded><![CDATA[bashのcompleteコマンドオプション仕様がUbuntu 18.04のそれと異なるので、Pythonのargcompleteモジュールを使って生成したシェルスクリプトがエラー吐いて使えない…。
<h1>macOSのbashはバージョン3 (2019/05時点の最新は5)</h1>
なぜcompleteコマンドオプション仕様が異なるかというと、macOSのbashバージョンが3.x系に対して、Ubuntu等の新しめの環境では4.x以上だから。
<blockquote class="twitter-tweet" data-lang="ja">
<p dir="ltr" lang="ja">bashのcompleteコマンドオプション仕様がUbuntu 18.04と違いすぎて調べてみたら、macOSのbashはライセンス上の理由からバージョンがかなり古いという事実を今更知る。
Upgrading Bash on macOS by <a href="https://twitter.com/weibeld?ref_src=twsrc%5Etfw">@weibeld</a> <a href="https://t.co/wgW3P861AM">https://t.co/wgW3P861AM</a></p>
— takashi ando (@takashi7ando) <a href="https://twitter.com/takashi7ando/status/1124787903320608768?ref_src=twsrc%5Etfw">2019年5月4日</a></blockquote>
macOSのbashが3.xを維持しているのは下記理由から。
<blockquote>The reason that Apple includes such an old version of Bash in its operating system has to do with <strong class="markup--strong markup--p-strong">licensing</strong>. Since version 4.0 (successor of 3.2), Bash uses the <a class="markup--anchor markup--p-anchor" href="https://www.gnu.org/licenses/gpl.html" target="_blank" rel="noopener noreferrer" data-href="https://www.gnu.org/licenses/gpl.html">GNU General Public License v3 (GPLv3)</a>, which Apple does not (want to) support. You can find some discussions about this <a class="markup--anchor markup--p-anchor" href="https://www.reddit.com/r/apple/comments/7v97ls/why_doesnt_apple_use_any_gpl_v3_unix_packages_in/" target="_blank" rel="noopener noreferrer" data-href="https://www.reddit.com/r/apple/comments/7v97ls/why_doesnt_apple_use_any_gpl_v3_unix_packages_in/">here</a> and <a class="markup--anchor markup--p-anchor" href="http://meta.ath0.com/2012/02/05/apples-great-gpl-purge/" target="_blank" rel="noopener noreferrer" data-href="http://meta.ath0.com/2012/02/05/apples-great-gpl-purge/">here</a>. Version 3.2 of GNU Bash is the last version with GPLv2, which Apple accepts, and so it sticks with it.</blockquote>
some discussions about thisのリンク先を見ると、アップルがGPLv3を受け入れない理由はこれっぽいですね。そういえば前々職で似たような話が職場で問題になったな…。
<blockquote>
<p class="s1w8oh2o-10 bQeEFC">GPL v3. require the code to be modifiable. So users would have to be able to make changes and run it. Much of Apple code is signed, so Apple would have to allow users to sign or run unsigned code. Very problematic on iOS for Apple.</p>
<p class="s1w8oh2o-10 bQeEFC">Also has automatic patent licensing and Apple is very protective of its patents.</p>
</blockquote>
<h1 class="s1w8oh2o-10 bQeEFC">macOSのbashを更新する</h1>
<p class="s1w8oh2o-10 bQeEFC">更新手順は、上記のサイトを見れば全部解説されているのですが、日本語意訳として参考にしてください。</p>
<p class="s1w8oh2o-10 bQeEFC">ざっくり以下３ステップの手順になります。</p>
<ol class="postList">
 	<li id="ed16" class="graf graf--li graf-after--p"><strong class="markup--strong markup--li-strong">最新バージョンのBashをインストールする</strong></li>
 	<li id="c00f" class="graf graf--li graf--startsWithDoubleQuote graf-after--li"><strong class="markup--strong markup--li-strong">最新バージョンのBashをログインシェルとして使用可能にする</strong></li>
 	<li id="094d" class="graf graf--li graf-after--li"><strong class="markup--strong markup--li-strong">最新バージョンのBashをデフォルトシェルに設定する</strong></li>
</ol>
<h2 class="s1w8oh2o-10 bQeEFC">最新バージョンのBashをインストールする</h2>
<p class="s1w8oh2o-10 bQeEFC">Homebrew一発です。</p>
<pre class="lang:sh decode:true">$ brew install bash</pre>
上記コマンドでインストールすると、その後必要な手順を解説したログが出力されますが、とっておくのを忘れた…。
無事インストールが完了すると、/usr/local/bin下に最新バージョンのbashが入ります。
<pre class="lang:sh decode:true">$ which -a bash
/usr/local/bin/bash
/bin/bash
$ /bin/bash --version
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin17)
Copyright (C) 2007 Free Software Foundation, Inc.
$ /usr/local/bin/bash --version
GNU bash, バージョン 5.0.7(1)-release (x86_64-apple-darwin17.7.0)
Copyright (C) 2019 Free Software Foundation, Inc.
ライセンス GPLv3+: GNU GPL バージョン 3 またはそれ以降 &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.</pre>
<h2 class="s1w8oh2o-10 bQeEFC">最新バージョンのBashをログインシェルとして使用可能にする</h2>
Homebrewでインストールしたbashを/etc/shellsに追記します。
<pre class="lang:sh decode:true">$ sudo vim /etc/shells
/bin/bash
/bin/csh
/bin/ksh
/bin/sh
/bin/tcsh
/bin/zsh
/usr/local/bin/bash　← 追記</pre>
<h2 class="s1w8oh2o-10 bQeEFC">最新バージョンのBashをデフォルトシェルに設定する</h2>
<p class="s1w8oh2o-10 bQeEFC">chshコマンドを実行して、デフォルトシェルを最新bashに変更します。</p>
<blockquote>CHPASS(1) BSD General Commands Manual CHPASS(1)
NAME
chpass, chfn, chsh -- add or change user database information
SYNOPSIS
chpass [-l location] [-u authname] [-s newshell] [user]</blockquote>
実際にやってみるとこんな感じ。
<pre class="lang:sh decode:true ">$ sudo chsh -s /usr/local/bin/bash</pre>
セキュリティ上の理由から、/bin/bashを直接シンボリックリンク等で上書きできないらしい。
<h1>注意事項</h1>
シェルスクリプトを書く際には、シェバンの指定に注意すること。常に
<pre class="lang:default decode:true ">#!/usr/bin/env bash</pre>
と書く癖がついてる人は問題ないけど、普段
<pre class="lang:sh decode:true">#!/bin/bash</pre>
と書いている人は、良い機会なので改めましょう。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2415</wp:post_id>
		<wp:post_date><![CDATA[2019-05-05 07:24:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-04 22:24:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[update-bash-on-macos]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://i1.wp.com/itsfoss.com/wp-content/uploads/2019/01/bash-logo.jpg?w=800&ssl=1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7399008740]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722638233]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2814]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2815]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2816]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2817]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>157</wp:comment_id>
			<wp:comment_author><![CDATA[ฝาก10 รับ100 ทํา ยอด200ถอนได้100 ล่าสุด]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lillyray@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://women.volleybox.net/volleyball-microblog/151977</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.186.85.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-29 14:54:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-29 05:54:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was beautiful Admin. Thank you for your reflections.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>158</wp:comment_id>
			<wp:comment_author><![CDATA[Aniyah Ava Ariana Huber]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[HeavenFry@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet911.bet/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-29 16:56:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-29 07:56:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Keep up the amazing work!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[เว็บสล็อต โปร ฝาก10 บาท รับ 100]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kyleighrivers@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://women.volleybox.net/volleyball-microblog/151977</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.186.85.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-29 17:17:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-29 08:17:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You’re so awesome! I don’t believe I have read a single thing like that before. So great to find someone with some original thoughts on this topic. Really.. thank you for starting this up. This website is something that is needed on the internet, someone with a little originality!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>160</wp:comment_id>
			<wp:comment_author><![CDATA[รวม โปร สล็อต ฝาก 10 รับ 100 ล่าสุด 2021]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fatimaware@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://gist.github.com/pongsxapas777/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.186.85.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-01 19:22:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-01 10:22:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I appreciate you sharing this blog post. Thanks Again. Cool.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>161</wp:comment_id>
			<wp:comment_author><![CDATA[โปรฝาก50รับ100ถอนไม่อั้นpg]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[braxtoncase@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://gist.github.com/cobraodaiyang777/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[149.102.224.169]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-01 22:56:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-01 13:56:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just like the helpful information you provide in your articles]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>162</wp:comment_id>
			<wp:comment_author><![CDATA[ฝาก10รับ100ล่าสุด2023]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[paytonbrock@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.largus.fr/forum-auto/actus-auto/50-100-1-3-50-100-50-100/523542.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[149.102.224.169]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-01 22:57:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-01 13:57:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I’m often to blogging and i really appreciate your content. The article has actually peaks my interest. I’m going to bookmark your web site and maintain checking for brand spanking new information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>205</wp:comment_id>
			<wp:comment_author><![CDATA[ufabet911]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zoeyglass@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet911.gold/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-03 13:01:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-03 04:01:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You’re a very skilled blogger. I’ve joined your feed and look forward to seeking more of your magnificent post. Also, I’ve shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>208</wp:comment_id>
			<wp:comment_author><![CDATA[ufabet911 ทางเข้า]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kaylynnwalls@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet911.gold/ufabet911-%e0%b8%97%e0%b8%b2%e0%b8%87%e0%b9%80%e0%b8%82%e0%b9%89%e0%b8%b2/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-05 09:18:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-05 00:18:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not even understand how I ended up here, but I assumed this publish used to be great]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>212</wp:comment_id>
			<wp:comment_author><![CDATA[ufaland]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bethanymarshall@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufaland.top/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-07 06:05:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-06 21:05:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a lot to find out about this subject. I like all the points you made]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>214</wp:comment_id>
			<wp:comment_author><![CDATA[UFABET]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[neveahlyons@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet.services/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-07 12:02:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-07 03:02:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. I learn something totally new and challenging on websites]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>221</wp:comment_id>
			<wp:comment_author><![CDATA[ufabet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[leonardbryan@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet.services/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-16 09:16:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-16 00:16:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>228</wp:comment_id>
			<wp:comment_author><![CDATA[ufabet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[haroldhardin@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet.bio/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-19 21:42:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-19 12:42:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the efforts you have put in this, regards for all the great content.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>231</wp:comment_id>
			<wp:comment_author><![CDATA[ufabet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[paisleyfranklin@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ufabet.forsale/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.50.214.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-20 19:15:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-20 10:15:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You’re a very skilled blogger. I’ve joined your feed and look forward to seeking more of your magnificent post. Also, I’ve shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Pythonをtar ballからmake installする際に気をつけるべきこと</title>
		<link>https://tech.blog.uribou.me/post-2423/</link>
		<pubDate>Sat, 04 Jan 2020 02:11:07 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2423</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ubuntu 18系でのお話。
下記ライブラリをインストールしていなくても、一応make installまで可能だけれど、pipコマンドを実行したり、特定のモジュールを使おうとしてセグってハマることになる。</p>
<h1>Foreign Function Interface library</h1>
<p>make installでこんなエラーが出ました。</p>
<pre class="lang:sh decode:true ">File "/home/******/Python-3.7.3/Lib/ctypes/__init__.py", line 7, in &lt;module&gt;
from _ctypes import Union, Structure, Array
ModuleNotFoundError: No module named '_ctypes'
Makefile:1130: ターゲット 'install' のレシピで失敗しました
make: *** [install] エラー 1</pre>
<p>apt-getでもpipでもなんでもインストールしてしまえば良いのだろうけれどモジュール名が分からないのでgoogleで検索。
libffi-devのインストールで解決するとありました。
libffi-devをインストール</p>
<pre class="lang:sh decode:true "># apt install libffi-dev</pre>
<p>参考： <a href="https://qiita.com/makoto_a/items/61ff61a1b121cfa75f9c">https://qiita.com/makoto_a/items/61ff61a1b121cfa75f9c</a></p>
<h1>OpenSSLライブラリ</h1>
<p>これを入た上でビルドしないと、pipコマンド実行時に公式のpypiサイトにHTTPSで接続できず、エラーとなる。</p>
<pre class="lang:default decode:true "># apt install libssl-dev</pre>
<h1>bz2, lzmaライブラリ</h1>
<p>&nbsp;</p>
<pre class="lang:default decode:true "># apt install libbz2-dev liblzma-dev</pre>
<p>&nbsp;</p>
<h1>sqlite3ライブラリ</h1>
<p>&nbsp;</p>
<pre class="lang:sh decode:true "># apt install libsqlite3-dev</pre>
<p>&nbsp;
&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2423</wp:post_id>
		<wp:post_date><![CDATA[2020-01-04 11:11:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-01-04 02:11:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-2423]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7798107742]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722562646]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>CLIでAmazon Drive / Photosに画像ファイルをアップロードする odrive版</title>
		<link>https://tech.blog.uribou.me/acd_with_odrive/</link>
		<pubDate>Sat, 24 Aug 2019 17:51:24 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=2430</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://tech.blog.uribou.me/amazonkuraudodoraibunikomandodeakusesusurufang-fa/">以前書いた、acd_cliというCLI（GUIなしコマンド）でのAmazon Drive操作を可能にする</a>素晴らしいツールが突然使えなくなってしまい、詳しい原因を調べもせずに諦めていました。</p>
<p>今現在も使えないことに変わりないのですが、Prime会員特典であるPhoto無制限アップロードを使わない手はないので、自力で<a href="https://developer.amazon.com/ja/amazon-drive">Amazon Drive API</a>を駆使して同期するツールを作ろうかと思ったら、リンク先にある通り新規利用申請を受け付けていないとのこと。まじか。</p>
<img class="aligncenter size-full wp-image-2442" src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2019/08/b0bc28df7138aa46ae33aa371576909a.png" alt="" width="1994" height="1136" />
<p>今更ながらacd_cliが使えなくなった原因を調べてみると、以下の記事を発見しました。
<a href="https://www.reddit.com/r/DataHoarder/comments/6eebn1/amazon_banned_acd_cli_and_similiar_clients_again/">https://www.reddit.com/r/DataHoarder/comments/6eebn1/amazon_banned_acd_cli_and_similiar_clients_again/</a>
最初の一文が原因ですね。要約すると、他人のAPI keyを共有して使いまわしていたために利用規約違反でBANされたと。</p>
<blockquote>acd-cli was never unbanned, they simply used another Developers API key (with permission I believe from the developer but not Amazon) this developer sharing the API key with acd-cli was likely a Terms of Service violation</blockquote>
<p>それならacd_cliに代わるアプリケーションを探してみましょう。</p>
<h1>rclone</h1>
<p>上記の記事でも挙がっていた<a href="https://rclone.org/">rclone</a>ですが、noteに書いてある通りAmazon Drive API新規利用不可のためKeyが取得できず、使えませんね。あっけなく脱落。</p>
<blockquote>Important: rclone supports Amazon Drive only if you have your own set of API keys. Unfortunately the Amazon Drive developer program is now closed to new entries so if you don’t already have your own set of keys you will not be able to use rclone with Amazon Drive.
For the history on why rclone no longer has a set of Amazon Drive API keys see the forum.
If you happen to know anyone who works at Amazon then please ask them to re-instate rclone into the Amazon Drive developer program - thanks!</blockquote>
<h1>odrive</h1>
<p>Amazon Driveをキーワードに指定してググっていると、<a href="https://www.odrive.com/">odrive</a>というサービスを発見しました。Amazon Drive含む各種クラウドストレージサービスを統合して、ファイルの同期や共有を可能にするとのこと。クラアントアプリケーションはWindows版はもちろん、macOS/Linux版も提供されてる。これは期待できるのでは？GUI版しかないと困るのだけれど。</p>
<img class="aligncenter size-full wp-image-2448" src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2019/08/99778de584bc8cdb3e170b0ce6c47524.png" alt="" width="1106" height="802" />
<p>早速ユーザ登録してサインインしてみると、ダッシュボードの下の方にLinux Agentの文字が！（ただしBeta）</p>
<img class="aligncenter size-full wp-image-2450" src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2019/08/2defab9986b63d504406b49d9b89c453.png" alt="" width="724" height="786" />
<p>試してみた結果、これは良さそうです。以下に具体的な使い方を書きます。</p>
<h2 class="header-scroll"><strong>DOWNLOAD CLI SYNC CLIENT</strong></h2>
<p>主要なプラットフォーム向けのCLIバイナリが用意されています。フロントはPythonですね。</p>
<ul>
    <li>odrive CLI (Python): <a href="https://dl.odrive.com/odrive-py" target="_self" rel="noopener">https://dl.odrive.com/odrive-py</a></li>
    <li>odrive CLI (Linux 32bit binary): <a href="https://dl.odrive.com/odrivecli-lnx-32" target="_self" rel="noopener">https://dl.odrive.com/odrivecli-lnx-32</a></li>
    <li>odrive CLI (Linux 64bit binary): <a href="https://dl.odrive.com/odrivecli-lnx-64" target="_self" rel="noopener">https://dl.odrive.com/odrivecli-lnx-64</a></li>
    <li>odrive CLI (OS X binary): <a href="https://dl.odrive.com/odrivecli-osx" target="_self" rel="noopener">https://dl.odrive.com/odrivecli-osx</a></li>
    <li>odrive CLI (Windows binary): <a href="https://dl.odrive.com/odrivecli-win" target="_self" rel="noopener">https://dl.odrive.com/odrivecli-win</a></li>
    <li>odrive CLI (RPi/ARMv6 binary): <a href="https://dl.odrive.com/odrivecli-rpi" target="_self" rel="noopener">https://dl.odrive.com/odrivecli-rpi</a></li>
</ul>
<h2>Linux 64bit版のインストールとAgentの起動</h2>
<p><a href="https://docs.odrive.com/docs/odrive-sync-agent#section--install-sync-agent-on-linux-rpi-">Usage Guide</a>の通り、以下のコマンドを実行すればインストール完了です。</p>
<pre class="lang:sh decode:true">od="$HOME/.odrive-agent/bin" &amp;&amp; \
curl -L "http://dl.odrive.com/odrive-py" --create-dirs -o "$od/odrive.py" &amp;&amp; \
curl -L "http://dl.odrive.com/odriveagent-lnx-64" | \
tar -xvzf- -C "$od/" &amp;&amp; \
curl -L "http://dl.odrive.com/odrivecli-lnx-64" | \
tar -xvzf- -C "$od/"</pre>
<p>Usage Guideはnohupで簡易的にデーモン化してますが、start-stop-daemon使ったり、systemdの設定をした方が個人的には好み。あとで何とかしようと思います。</p>
<pre class="lang:sh decode:true">nohup "$HOME/.odrive-agent/bin/odriveagent" &gt; /dev/null 2&gt;&amp;1 &amp;</pre>
<h2>odrive CLIヘルプ</h2>
<p>主要機能は押さえてある感じがします。</p>
<pre class="lang:sh decode:true">$ python "$HOME/.odrive-agent/bin/odrive.py" -h
usage: odrive.py [-h]
                 {authenticate,mount,unmount,backup,removebackup,sync,stream,refresh,unsync,xlthreshold,encpassphrase,syncstate,status,deauthorize,emptytrash,restoretrash,shutdown}
                 ...
odrive Make Cloud Storage THE WAY IT SHOULD BE.
positional arguments:
  {authenticate,mount,unmount,backup,removebackup,sync,stream,refresh,unsync,xlthreshold,encpassphrase,syncstate,status,deauthorize,emptytrash,restoretrash,shutdown}
                        commands
    authenticate        authenticate odrive with an auth key
    mount               mount remote odrive path to a local folder
    unmount             remove a mount
    backup              backup a local folder to a remote odrive path
    removebackup        remove a backup job
    sync                sync a placeholder
    stream              stream placholder/remote file eg. stream path | app -
                        or stream to a file eg. stream path &gt; file.ext
    refresh             refresh a folder
    unsync              unsync a file or a folder
    xlthreshold         split files larger than this threshold
    encpassphrase       specify a passphrase for Encryptor folders
    syncstate           get sync status info
    status              get status info
    deauthorize         deauthorize odrive to unlink the current user and exit
    emptytrash          empty odrive trash
    restoretrash        restore odrive trash
    shutdown            shutdown odrive
optional arguments:
  -h, --help            show this help message and exit</pre>
<h2>Amazon Drive / Photoのファイル操作</h2>
<p>早速、Amazon Driveにコマンドでファイル操作を試していきます。</p>
<h3>authenticate(認証)</h3>
<p>Usage Guideに記載されている通りに、まずは認証コードをCLIツールに登録します。
&nbsp;</p>
<blockquote>Once you have signed-in, navigate to your <a href="https://www.odrive.com/account/authcodes" target="_self" rel="noopener">Authentication Codes</a> and click on “Create Auth Key” to create an auth key that you can then use to authenticate your odrive Sync Agent install.</blockquote>
<pre class="lang:sh decode:true">$ python "$HOME/.odrive-agent/bin/odrive.py" authenticate 00000000-0000-0000-0000-000000000000-00000000
Hello 安藤敬資</pre>
<p>認証に成功すると、初期状態では下記ファイル構成だったのが</p>
<pre class="lang:sh decode:true">$ tree
.odrive-agent/
└── bin
　　　   ├── odrive
  　　　 ├── odrive.py
　 　　  └── odriveagent</pre>
<p>下記のようにそれっぽいdbが生成されます。</p>
<pre class="lang:sh decode:true">$ tree
.odrive-agent/
├── bin
│   ├── odrive
│   ├── odrive.py
│   └── odriveagent
├── db
│   ├── backups
│   ├── integrations
│   ├── odrive-agent-db
│   ├── odrive-agent-id
│   ├── odrive.db
│   ├── odrive.db-shm
│   ├── odrive.db-wal
│   └── tracking.db
└── log
    ├── agent.log
    └── error.log</pre>
<h3>mount</h3>
<p>Amazon Driveをマウントしてみましょう。</p>
<pre class="lang:sh decode:true">$ sudo mkdir /mnt/odrive
$ python "$HOME/.odrive-agent/bin/odrive.py" mount /mnt/odrive /
/mnt/odrive is now synchronizing with odrive.</pre>
<p>あっさりできた。</p>
<h3>backup(アップロード)</h3>
<p>いよいよAmazon Driveへのファイルアップロード。これにはbackupサブコマンドを使います。</p>
<pre class="lang:sh decode:true">$ python "$HOME/.odrive-agent/bin/odrive.py" backup \
    /symlinks/pictures/デジカメ写真/2019/08/20190816/ \
    /Amazon\ Cloud\ Drive/写真/2019/08/</pre>
<p>できた。</p>
<img class="aligncenter size-full wp-image-2451" src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2019/08/1e242dd555bde02a2842d7ecce263d15.png" alt="" width="1376" height="1062" />
<h3>sync(ダウンロード)</h3>
<p>こちらはsyncサブコマンドをファイルごとに実行する必要があり、めんどくさいんですが問題なくできました。</p>
<pre class="lang:sh decode:true ">$ python "$HOME/.odrive-agent/bin/odrive.py" sync /mnt/odrive/Amazon\ Cloud\ Drive.cloudf
/mnt/odrive/Amazon Cloud Drive
$ python "$HOME/.odrive-agent/bin/odrive.py" sync /mnt/odrive/Amazon\ Cloud\ Drive/写真.cloudf
/mnt/odrive/Amazon Cloud Drive/写真
build@espresso:~$ python "$HOME/.odrive-agent/bin/odrive.py" sync /mnt/odrive/Amazon\ Cloud\ Drive/写真/2019.cloudf
/mnt/odrive/Amazon Cloud Drive/写真/2019
build@espresso:~$ python "$HOME/.odrive-agent/bin/odrive.py" sync /mnt/odrive/Amazon\ Cloud\ Drive/写真/2019/08
Unable to sync 08.  Please use a placeholder path.
build@espresso:~$ python "$HOME/.odrive-agent/bin/odrive.py" sync /mnt/odrive/Amazon\ Cloud\ Drive/写真/2019/08.cloudf
/mnt/odrive/Amazon Cloud Drive/写真/2019/08
build@espresso:~$ python "$HOME/.odrive-agent/bin/odrive.py" sync /mnt/odrive/Amazon\ Cloud\ Drive/写真/2019/08/20190815.cloudf
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815
$ ls  /mnt/odrive/Amazon\ Cloud\ Drive/写真/2019/08/20190815/*.cloud | while read line; do
    python "$HOME/.odrive-agent/bin/odrive.py" sync "$line"
done
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9244.JPG
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9244.NEF
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9246.JPG
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9246.NEF
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9247.JPG
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9247.NEF
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9248.JPG
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9248.NEF
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9249.JPG
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/DSC_9249.NEF
/mnt/odrive/Amazon Cloud Drive/写真/2019/08/20190815/IMG_3300.JPG</pre>
<h1>まとめ</h1>
<p>odriveで問題なし。Amazon Driveにコマンドでファイルをバックアップする程度の用途なら、odriveのFreeプランで問題ないと思います。Premiumに付いてくる付加機能は個人的には不要なので。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2430</wp:post_id>
		<wp:post_date><![CDATA[2019-08-25 02:51:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-24 17:51:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[acd_with_odrive]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="amazon"><![CDATA[amazon]]></category>
		<category domain="post_tag" nicename="odrive"><![CDATA[odrive]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b21b862720bc29e5662514a7df972de6]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_1b7d2712548c0556270db515fdb0f796]]></wp:meta_key>
		<wp:meta_value><![CDATA[    <blockquote class="reddit-card" >      <a href="https://www.reddit.com/r/DataHoarder/comments/6eebn1/amazon_banned_acd_cli_and_similiar_clients_again/?ref_source=embed&amp;ref=share">amazon banned acd_cli and similiar clients (again)</a> from      <a href="https://www.reddit.com/r/DataHoarder/">DataHoarder</a>    </blockquote>    <script async src="https://embed.redditmedia.com/widgets/platform.js" charset="UTF-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_1b7d2712548c0556270db515fdb0f796]]></wp:meta_key>
		<wp:meta_value><![CDATA[1566663773]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_cbecb625dd3c764b818281a27642a3e8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0af9c3808d138f6d25aabc716a291a34]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[7603213488]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:88:"http://tech.uribou.tokyo/wp-content/uploads/2019/08/b0bc28df7138aa46ae33aa371576909a.png";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722638233]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2730]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2729]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2731]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2732]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2733]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2735]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2736]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2737]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2739]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2442]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>182</wp:comment_id>
			<wp:comment_author><![CDATA[Dang k'y binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[68777944@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/vi/register?ref=GJY4VW8W</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.101]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-21 10:04:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-21 01:04:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point of view caught my eye and was very interesting. Thanks. I have a question for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Docker image linuxserver/wireguardでVPN構築する</title>
		<link>https://tech.blog.uribou.me/wireguard-on-docker-01/</link>
		<pubDate>Sun, 26 Jul 2020 14:50:09 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.blog.uribou.me/?p=2826</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>これは何？</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>初代RPiに構築したOpenVPNサーバを他マシンに移管したい。<br>しかし、VPN用に物理マシン用意するのもコスト的にしんどいので、仮想マシンに構築してローカルネットワークに接続したい。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>docker runする</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>linuxserver.ioがほぼweeklyでメンテしているDocker imageを発見。ありがたい。具体的な手順は以下詳細。<br><a href="https://hub.docker.com/r/linuxserver/wireguard">https://hub.docker.com/r/linuxserver/wireguard</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Docker on macOSでは使用不可</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>まずlatest imgeをpullして以下コマンドを実行、Server mode起動したいのでPEERS指定し、コンテナ生成した後にstart -aしてみると、エラー。本来であればkernel header等ダウンロード開始したはず。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""># docker run -d \
  --name=wireguard \
  --cap-add=NET_ADMIN \
  --cap-add=SYS_MODULE \
  -e PUID=1000 -e PGID=1000 \
  -e TZ=Asia/Tokyo \
  -e SERVERPORT=51820 \
  -e PEERS=1 -e PEERDNS=auto \
  -e INTERNAL_SUBNET=10.13.13.0 -p 51820:51820/udp \
  -v /tmp/wireguard:/config \
  -v /lib/modules:/lib/modules \
  --sysctl="net.ipv4.conf.all.src_valid_mark=1" \
  --restart unless-stopped \
  linuxserver/wireguard</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>手順の最初の一文に記載の通り、macOSのDockerでは動作不可。</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>This image is designed for Ubuntu and Debian based systems mainly (it works on some others, but ymmv). During container start, it will first check if the wireguard module is already installed and loaded. If not, it will then check if the kernel headers are already installed (in&nbsp;<code>/usr/src</code>) and if not, attempt to download the necessary kernel headers from the ubuntu/debian/raspbian repos; then will compile and install the kernel module.</p><cite><a href="https://github.com/linuxserver/docker-wireguard#application-setup">https://github.com/linuxserver/docker-wireguard#application-setup</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:heading {"level":3} -->
<h3>Ubuntuであっても特定のkernelバージョンでは使用不可</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Ubuntu 18.04.4 LTS上でコンテナ生成、startすると、今度はkernel headerダウンロードとビルド開始する。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>しかし、ipv6関連ソースコンパイルでエラー発生。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">**** Building the module ****
make: Entering directory '/app/wireguard-linux-compat/src'
  CC [M]  /app/wireguard-linux-compat/src/main.o
  CC [M]  /app/wireguard-linux-compat/src/noise.o
  CC [M]  /app/wireguard-linux-compat/src/device.o
  CC [M]  /app/wireguard-linux-compat/src/peer.o
  CC [M]  /app/wireguard-linux-compat/src/timers.o
  CC [M]  /app/wireguard-linux-compat/src/queueing.o
  CC [M]  /app/wireguard-linux-compat/src/send.o
  CC [M]  /app/wireguard-linux-compat/src/receive.o
  CC [M]  /app/wireguard-linux-compat/src/socket.o
  CC [M]  /app/wireguard-linux-compat/src/peerlookup.o
  CC [M]  /app/wireguard-linux-compat/src/allowedips.o
  CC [M]  /app/wireguard-linux-compat/src/ratelimiter.o
/app/wireguard-linux-compat/src/socket.c: In function ‘send6’:
/app/wireguard-linux-compat/src/socket.c:139:20: error: ‘const struct ipv6_stub’ has no member named ‘ipv6_dst_lookup_flow’; did you mean ‘ipv6_dst_lookup’?
   dst = ipv6_stub-&gt;ipv6_dst_lookup_flow(sock_net(sock), sock, &amp;fl,
                    ^~~~~~~~~~~~~~~~~~~~
                    ipv6_dst_lookup
scripts/Makefile.build:330: recipe for target '/app/wireguard-linux-compat/src/socket.o' failed
make[2]: *** [/app/wireguard-linux-compat/src/socket.o] Error 1
make[2]: *** Waiting for unfinished jobs....
Makefile:1577: recipe for target '_module_/app/wireguard-linux-compat/src' failed
make[1]: *** [_module_/app/wireguard-linux-compat/src] Error 2
Makefile:26: recipe for target 'module' failed
make: *** [module] Error 2
make: Leaving directory '/app/wireguard-linux-compat/src'
make: Entering directory '/app/wireguard-linux-compat/src'
  DEPMOD  4.15.0-96-generic
depmod -b "/" -a 4.15.0-96-generic
depmod: WARNING: could not open //lib/modules/4.15.0-96-generic/modules.order: No such file or directory
depmod: WARNING: could not open //lib/modules/4.15.0-96-generic/modules.builtin: No such file or directory</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>検索すると、wireguardのビルドで似た現象に遭遇した人多数。その中で、日本語記事は以下のみ。</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>Ubuntu 18.04.4 LTS (bionic) でカーネルが&nbsp;<code>linux-image-4.15.0-101-generic</code>&nbsp;から&nbsp;<code>linux-image-4.15.0-106-generic</code>&nbsp;に更新されたところ、&nbsp;<code>wireguard-dkms</code>&nbsp;でのカーネルモジュールのビルドが失敗して wireguard での接続ができなくなっていたので、 応急処置をして復旧しました。</p><p>wireguard が使っているカーネルの機能の一部がバックポートの影響を受けやすいらしく、 同じようなビルドの失敗が繰り返されていて、 不便なことがたまに起きていましたが、 Ubuntu 20.04 からはカーネル本体に wireguard が入っていて、&nbsp;<code>wireguard-dkms</code>&nbsp;で問題が起きることはないのと、 該当する修正差分の付近のバージョン分岐で 18.04 だけ抜けていたのが追加されたようなので、 今後は大丈夫なのではないかと思っています。</p><cite><a href="https://blog.n-z.jp/blog/2020-06-10-wireguard-dkms-error.html">https://blog.n-z.jp/blog/2020-06-10-wireguard-dkms-error.html</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>自分の環境とはkernel versionが異なるが、原因は同じと思われる。かと言ってUbuntu 20.04以降にアップグレードする気力は今はないので、取り急ぎ18.04維持でkernel関連パッケージを最新にアップグレードして再チャレンジ。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Ubuntu 18.04.4 LTS with kernel 4.15.0-112では使用可</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>少なくとも下記組み合わせのバージョンであれば使用可能。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ sudo docker image ls
REPOSITORY                       TAG                  IMAGE ID            CREATED             SIZE
linuxserver/wireguard            latest               0677df8c385b        25 hours ago        446MB
linuxserver/wireguard            v1.0.20200513-ls22   0677df8c385b        25 hours ago        446MB</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ uname -a
Linux espresso 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>以下の通り、それらしい起動ログが出力されることを確認。<code>wg0.conf</code> や、接続Client側が必要とする情報は <code>-v /tmp/wireguard:/config</code> 指定したディレクトリに生成される。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ sudo docker start -a 2986dd1d2141
[s6-init] making user provided files available at /var/run/s6/etc...exited 0.
[s6-init] ensuring user provided files have correct perms...exited 0.
[fix-attrs.d] applying ownership &amp; permissions fixes...
[fix-attrs.d] done.
[cont-init.d] executing container initialization scripts...
[cont-init.d] 01-envfile: executing... 
[cont-init.d] 01-envfile: exited 0.
[cont-init.d] 10-adduser: executing... 

-------------------------------------
          _         ()
         | |  ___   _    __
         | | / __| | |  /  \ 
         | | \__ \ | | | () |
         |_| |___/ |_|  \__/


Brought to you by linuxserver.io
-------------------------------------

To support the app dev(s) visit:
WireGuard: https://www.wireguard.com/donations/

To support LSIO projects visit:
https://www.linuxserver.io/donate/
-------------------------------------
GID/UID
-------------------------------------

User uid:    1000
User gid:    1000
-------------------------------------

[cont-init.d] 10-adduser: exited 0.
[cont-init.d] 30-config: executing... 
**** It seems the wireguard module is already active. Skipping kernel header install and module compilation. ****
**** Server mode is selected ****
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    15  100    15    0     0      9      0  0:00:01  0:00:01 --:--:--     9
**** SERVERURL var is either not set or is set to "auto", setting external IP to auto detected value of ... ****
**** External server port is set to 51820. Make sure that port is properly forwarded to port 51820 inside this container ****
**** Internal subnet is set to 10.13.13.0 ****
**** PEERDNS var is either not set or is set to "auto", setting peer DNS to 10.13.13.1 to use wireguard docker host's DNS. ****
**** No found wg0.conf found (maybe an initial install), generating 1 server and 1 peer/client confs ****
PEER 1 QR code:
[cont-init.d] 30-config: exited 0.
[cont-init.d] 99-custom-scripts: executing... 
[custom-init] no custom files found exiting...
[cont-init.d] 99-custom-scripts: exited 0.
[cont-init.d] done.
[services.d] starting services
[services.d] done.
[#] ip link add wg0 type wireguard
[#] wg setconf wg0 /dev/fd/63
[#] ip -4 address add 10.13.13.1 dev wg0
[#] ip link set mtu 1420 up dev wg0
.:53
CoreDNS-1.7.0
linux/amd64, go1.14.4, f59c03d
[#] ip -4 route add 10.13.13.2/32 dev wg0
[#] iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>iOS clientから接続する</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><code>-v /tmp/wireguard:/config</code> 指定したディレクトリに生成された接続情報を見てみると、以下のようなファイル構成であることが分かる。<code>peerX</code>は<code>-e PEERS=X</code>指定した数だけ生成される。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""># tree
.
├── coredns
│   └── Corefile
├── peer1
│   ├── peer1.conf
│   ├── peer1.png
│   ├── privatekey-peer1
│   └── publickey-peer1
├── peer2
│   ├── peer2.conf
│   ├── peer2.png
│   ├── privatekey-peer2
│   └── publickey-peer2
├── server
│   ├── privatekey-server
│   └── publickey-server
├── templates
│   ├── peer.conf
│   └── server.conf
└── wg0.conf

5 directories, 14 files</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>鍵情報やエンドポイントIPアドレス等の接続情報がQRコードPNGファイルとして生成されるので、適宜ローカルにダウンロードしてビューアで開いておき、WireGuardアプリ（<a href="https://apps.apple.com/jp/app/wireguard/id1451685025?mt=12">iOS</a>、<a href="https://play.google.com/store/apps/details?id=com.wireguard.android">Android</a>）で読み込む。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>トンネル設定に名前をつけたり、VPN設定権限確認許可したりする等、アプリの指示に従うと、以下のようにON/OFFスイッチが出現するので、ONするとVPN接続状態となる。<a href="https://apps.apple.com/us/app/wireguard/id1441195209?itscg=30200&amp;itsct=apps_box"></a></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3382,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/12/IMG_1641.png" alt="" class="wp-image-3382" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":3383,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/12/IMG_1642.png" alt="" class="wp-image-3383" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>一時的にローカルネットワーク内で確認するには、トンネル設定のエンドポイントをGlobal IPアドレスからWireGuardサーバコンテナが稼働している物理マシンのIPアドレスに変更した上で接続する。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3385,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/12/IMG_1646.png" alt="" class="wp-image-3385" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>この状態でiOSからpingしてみると、通信可能となる。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3384,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/12/IMG_1643.png" alt="" class="wp-image-3384" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>補足</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>自宅ローカルネットワークにVPN経由で接続するには、さらに別のインタフェースを設けてブリッジ接続する必要がありそうだけれど、それは追々やっていく。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>物理マシン上にWireGuard構築するのも簡単そう。<br><a href="https://www.cyberciti.biz/faq/ubuntu-20-04-set-up-wireguard-vpn-server/">https://www.cyberciti.biz/faq/ubuntu-20-04-set-up-wireguard-vpn-server/</a></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2826</wp:post_id>
		<wp:post_date><![CDATA[2020-07-26 23:50:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-26 14:50:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wireguard-on-docker-01]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="docker"><![CDATA[docker]]></category>
		<category domain="post_tag" nicename="vpn"><![CDATA[VPN]]></category>
		<category domain="post_tag" nicename="saba"><![CDATA[サーバ]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-2826]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[wireguard-on-docker]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4d722419030741f49f7e15f41ddce375]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462170]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[equidia racing 2]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[felixfrench@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://freehorseracingtv.com/live/equidia-pro-horse-racing-live-stream/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.106.84.44]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-01-01 05:41:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-12-31 20:41:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent article! We will be linking to this particularly great article on our website. Keep up the good writing.    	<a href="https://freehorseracingtv.com/live/" rel="nofollow ugc">australian horse racing live stream</a>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[bambuslot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[john.shagg25@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambuslot.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-13 12:35:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-13 03:35:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For the reason that the admin of this site is working, no uncertainty very quickly it will be renowned, due to its quality contents.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bhughes@qnsinc.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.loginbambu4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-20 06:25:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-19 21:25:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Try to slowly read the articles on this website, don't just comment, I think the posts on this page are very helpful, because I understand the intent of the author of this article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[demo slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dpo@deltapictures.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://bigchurch.xyz/pgsoft.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-20 06:27:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-19 21:27:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[demo slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[azizalyunanp@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bigchurch.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-20 07:54:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-19 22:54:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was beautiful Admin. Thank you for your reflections.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[demo slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[your.email+free.ebooks@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bigchurch.xyz/habanero.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-20 07:56:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-19 22:56:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a lot to find out about this subject. I like all the points you made]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[data keluaran hk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[u003esupport@frontapp.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/livedrawhk/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-20 11:27:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-20 02:27:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's good, but I still don't understand the purpose of this page posting, no or what and where do they get material like this.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[data toto macau]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ichanuruhaida03@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/pengeluaranmacau/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-20 11:29:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-20 02:29:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[slot demo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fulvio.cerri@virgilio.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://rebrand.ly/shell-slotdemo</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 11:03:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 02:03:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Its genuinely remarkable post, I have got much clear idea regarding from this post]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[bandar4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[robiagay9@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bandar4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 11:35:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 02:35:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I very delighted to find this internet site on bing, just what I was searching for as well saved to fav]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[slot dana]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jermaneadams1@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/slotdana/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 13:30:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 04:30:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[situs slot bank bsi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[info@meta.vn]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/slotbsi/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 13:32:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 04:32:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[result taiwan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[abc@icloud.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/datataiwan/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 14:59:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 05:59:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I’m often to blogging and i really appreciate your content. The article has actually peaks my interest. I’m going to bookmark your web site and maintain checking for brand spanking new information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[result sgp]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[danielarenas95@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/togelsingapore/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-21 19:08:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-21 10:08:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very well presented. Every quote was awesome and thanks for sharing the content. Keep sharing and keep motivating others.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[slot gacor online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ricardotavares@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/slotgacor/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-22 18:25:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-22 09:25:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was beautiful Admin. Thank you for your reflections.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ffc@eclavelo.fr]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-23 18:50:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-23 09:50:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I’m often to blogging and i really appreciate your content. The article has actually peaks my interest. I’m going to bookmark your web site and maintain checking for brand spanking new information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[dubai race live]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[julietgordon@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://freehorseracingtv.com/live/dubai-horse-racing-live-tv/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.106.84.44]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-25 23:46:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-25 14:46:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for great article. I look forward to the continuation. 	<a href="https://freehorseracingtv.com/live2/pba-live/" rel="nofollow ugc">pba live streaming</a>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[syair hk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gee13bs@yahoomail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/prediksihk/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-26 12:03:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-26 03:03:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[prediksi sdy hari ini]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jmartinez@cinema.usc.edu]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/prediksisdy/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-26 12:09:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-26 03:09:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[syair sgp omiframe]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jmorris@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/prediksisgp/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-26 15:22:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-26 06:22:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great information shared.. really enjoyed reading this post thank you author for sharing this post .. appreciated]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[prediksi toto macau]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yoga.januar@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/prediksimacau/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-27 10:27:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-27 01:27:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very informative articles or reviews at this time.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[pengeluaran kamboja]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zainab@qkq.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/togelkamboja/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-27 15:19:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-27 06:19:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty! This has been a really wonderful post. Many thanks for providing these details.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mherndon@inquirer.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bigchurch.xyz/bambu4d/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-29 21:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-29 12:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great information shared.. really enjoyed reading this post thank you author for sharing this post .. appreciated]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[togel japan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jason.ayers@verizon.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/togeljapan/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-30 14:29:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-30 05:29:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For the reason that the admin of this site is working, no uncertainty very quickly it will be renowned, due to its quality contents.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[paito china]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[salario@pesca.191.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/togelchina/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-30 14:32:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-30 05:32:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[result japan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[burchetttj@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/japan/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-30 14:39:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-30 05:39:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[demo pg soft]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[army.ncr.hqda-otsg.mbx.mods-helpdesk@mail.mil]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/pgsoft/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-30 14:49:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-30 05:49:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[result china]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[te640767@yahoo.co.id]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/china/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-30 17:03:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-30 08:03:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Its genuinely remarkable post, I have got much clear idea regarding from this post]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[takii777@kgw.enjoy.ne.jp]]></wp:comment_author_email>
			<wp:comment_author_url>https://likepodarky.news/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-30 22:05:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-30 13:05:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Try to slowly read the articles on this website, don't just comment, I think the posts on this page are very helpful, because I understand the intent of the author of this article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[slot terpercaya]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bennettadams@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/agen2023/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-02 20:59:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-02 11:59:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty! This has been a really wonderful post. Many thanks for providing these details.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Pragmatic]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[c94ed0d3-a01e-0414-8b0f-827d250b2eef@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/demo/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-04 15:17:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-04 06:17:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deborah.porter@pepperdine.edu]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/bambu4d/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-05 19:13:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-05 10:13:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just like the helpful information you provide in your articles]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[situs togel online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gochrisangie@verizon.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/togel/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-09 08:28:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-08 23:28:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like reading through a post that can make men and women think. Also, thank you for allowing me to comment!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[slot online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[contactus.fr@euro.apple.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/slotonline/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-09 08:29:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-08 23:29:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the content you share is interesting, but for me there is still something missing, because the things discussed above are not important to talk about today.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[grup togel wa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jason.ayers@attii.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/gruptogel/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-09 09:57:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-09 00:57:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Samurai4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[khadivareza.permana@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://samurai4d.site/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-09 19:40:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-09 10:40:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[demo pragmatic]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[suporte.pt@tp-link.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aao.cdmx.gob.mx/pragmatic/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-10 21:32:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-10 12:32:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For the reason that the admin of this site is working, no uncertainty very quickly it will be renowned, due to its quality contents.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[velas.ministeriopublico@tribunais.org.pt]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-12 19:29:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-12 10:29:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the efforts you have put in this, regards for all the great content.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[claudio.swissnahrin@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-18 14:21:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-18 05:21:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I very delighted to find this internet site on bing, just what I was searching for as well saved to fav]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[feelinglavoff1andahalf@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://zynogroup.in/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-22 14:01:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-22 05:01:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like reading through a post that can make men and women think. Also, thank you for allowing me to comment!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[copyright@github.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://dhlcouriers.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-23 09:48:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-23 00:48:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Its genuinely remarkable post, I have got much clear idea regarding from this post.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d RTP]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[febifernanda23@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bahalkani.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-23 22:29:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-23 13:29:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[porosh3@psu.ru]]></wp:comment_author_email>
			<wp:comment_author_url>https://thetravelleisure.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-26 17:21:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-26 08:21:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You’re a very skilled blogger. I’ve joined your feed and look forward to seeking more of your magnificent post. Also, I’ve shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sncwook@yna.co.kr]]></wp:comment_author_email>
			<wp:comment_author_url>https://businessletter.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-26 19:36:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-26 10:36:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like reading through a post that can make men and women think. Also, thank you for allowing me to comment!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Demo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[20220731025711.871999-4-sjg@chromium.org]]></wp:comment_author_email>
			<wp:comment_author_url>https://newsreport.tech/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-27 09:59:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-27 00:59:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. I learn something totally new and challenging on websites]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cassy+news@solarmora.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-28 23:38:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-28 14:38:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very well presented. Every quote was awesome and thanks for sharing the content. Keep sharing and keep motivating others.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[backlink seo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[michael.quinn@apmortgage.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://rodionow.info/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-29 16:13:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-29 07:13:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[https://sidebar.io/out?url=https://bambu4d.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[steunpuntkorteketen@ons.be]]></wp:comment_author_email>
			<wp:comment_author_url>https://bloorg.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-30 19:37:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-30 10:37:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was beautiful Admin. Thank you for your reflections.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mgr.ayb@homecenter.co.id]]></wp:comment_author_email>
			<wp:comment_author_url>https://sprintbusiness.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-01 18:19:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-01 09:19:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Try to slowly read the articles on this website, don't just comment, I think the posts on this page are very helpful, because I understand the intent of the author of this article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[beth.schumacher@antigonishcounty.ns.ca]]></wp:comment_author_email>
			<wp:comment_author_url>https://filmdizizle.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-04 20:03:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-04 11:03:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great information shared.. really enjoyed reading this post thank you author for sharing this post .. appreciated]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Aplikasi Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[datro@mofa.gov]]></wp:comment_author_email>
			<wp:comment_author_url>https://play-store.live/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-14 09:46:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-14 00:46:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i am really happy to read everthing at one place]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[stillstr@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d99.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-14 09:47:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-14 00:47:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the content you share is interesting, but for me there is still something missing, because the things discussed above are not important to talk about today.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[pragmatic demo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[comitatogenitoritulliazevi@pec.it]]></wp:comment_author_email>
			<wp:comment_author_url>http://iek-chalk.eyv.sch.gr/slotdemopragmatic/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-14 21:43:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-14 12:43:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like reading through a post that can make men and women think. Also, thank you for allowing me to comment!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gudanglapak@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://thebreastguide.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-20 14:15:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-20 05:15:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I carry on listening to the reports speak about getting free online grant applications so I have been looking around for the most excellent site to get one. Could you advise me please, where could i get some?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Daftar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ccs102115@mail.edu.tw]]></wp:comment_author_email>
			<wp:comment_author_url>http://sigroup.dothome.co.kr/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-20 17:34:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-20 08:34:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for a marvelous posting! I genuinely enjoyed reading it, you are a great author.I will always bookmark your blog and will often come back down the road. I want to encourage continue your great job, have a nice weekend!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[pengeluaran taiwan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vendite@nomeazienda.it]]></wp:comment_author_email>
			<wp:comment_author_url>http://sigroup.dothome.co.kr/datataiwan/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.118.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-05-20 17:35:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-05-20 08:35:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty! This has been a really wonderful post. Many thanks for providing these details.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Login]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[202208071845.ctqlpqto-lkp@intel.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://castration.site/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-22 11:18:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-22 02:18:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[200909091419.50496.arnd@arndb.de]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-23 05:26:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-22 20:26:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the content you share is interesting, but for me there is still something missing, because the things discussed above are not important to talk about today.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[RTP Slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[carlosg2173@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://rtpbambu4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-25 08:34:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-24 23:34:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[info@svs1916.de]]></wp:comment_author_email>
			<wp:comment_author_url>https://themoderaterepublic.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-26 02:00:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-25 17:00:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Keep working ,terrific job!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Daftar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[comunicati@deltapictures.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://extractlabsboulder.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-26 23:09:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-26 14:09:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i am really happy to read everthing at one place]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fridaseptiana.putri@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://logbk.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-27 04:49:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-26 19:49:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very helpful, Don't forget to visit my website <a href="https://logbk.net/" rel="nofollow ugc">Bambu4d</a>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lopezjc683@ecoutlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=9foJ3_wbcXI</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-29 00:30:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-28 15:30:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't forget to watch videos on the YouTube channel <a Title="BAMBU4D - SITUS TERBAIK DAN TERPERCAYA" href="https://www.youtube.com/watch?v=9foJ3_wbcXI" rel="nofollow ugc">Bambu4d</a>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[whitcomb_rob@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d99.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-30 13:22:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-30 04:22:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like this web blog very much, Its a really nice spot to read and obtain information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu Prediksi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[7.0.0.16.2.20090605110307.038260b0@wheresmymailserver.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://whoismyag.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-07-01 04:38:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-30 19:38:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For the reason that the admin of this site is working, no uncertainty very quickly it will be renowned, due to its quality contents.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jaborras@ole.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://junenco.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-07-01 09:43:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-07-01 00:43:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah bookmaking this wasn’t a risky decision outstanding post!.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[LK21]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lilprincesforever@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://nontonia.info/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-07-08 00:01:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-07-07 15:01:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You’re a very skilled blogger. I’ve joined your feed and look forward to seeking more of your magnificent post. Also, I’ve shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[Demo PG]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bar.piccadilly@libero.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://rtpbambu.live/demo-pgsoft.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-07-08 00:01:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-07-07 15:01:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the efforts you have put in this, regards for all the great content.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[Octagon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jin021149@sedaily.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://octagonlottery.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-07-26 03:59:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-07-25 18:59:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very informative articles or reviews at this time.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lelenambelas@yahoo.co.id]]></wp:comment_author_email>
			<wp:comment_author_url>https://effectgalaxy.biz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-07-29 04:34:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-07-28 19:34:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I very delighted to find this internet site on bing, just what I was searching for as well saved to fav]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Demo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[festinriberac@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://sarnakhak.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-02 09:57:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-02 00:57:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have not checked in here for some time since I thought it was getting boring, but the last few posts are great quality so I guess I’ll add you back to my daily bloglist. You deserve it my friend 🙂]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jayzsundanezzy@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://stillschool.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-05 06:36:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-04 21:36:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the content you share is interesting, but for me there is still something missing, because the things discussed above are not important to talk about today.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pete.rooney@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://aghist.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-09 10:50:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-09 01:50:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I very delighted to find this internet site on bing, just what I was searching for as well saved to fav]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cindylopez@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://coveragesite.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-12 04:54:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-11 19:54:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like this web blog very much, Its a really nice spot to read and obtain information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Demo Pragmatic]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[edmundogomez@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://slotdemo.rest/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-22 00:12:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-21 15:12:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[Demo Slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[myexample@zoho.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://slotdemo.rest/pgsoft.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-24 00:44:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-23 15:44:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I’m often to blogging and i really appreciate your content. The article has actually peaks my interest. I’m going to bookmark your web site and maintain checking for brand spanking new information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[Demo Habanero]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[0909030628j53cc0abfq6c1eef7e5e97565b@mail.gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://slotdemo.rest/habanero.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-25 05:35:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-24 20:35:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I gotta favorite this web site it seems very helpful invaluable]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[PG Soft]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sam@greengard.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://moversintorranceca.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-26 07:00:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-25 22:00:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not even understand how I ended up here, but I assumed this publish used to be great]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[PG Soft]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ben.adams@ssc.gov.jo]]></wp:comment_author_email>
			<wp:comment_author_url>https://demopg.azurefd.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-31 04:16:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-30 19:16:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Its genuinely remarkable post, I have got much clear idea regarding from this post]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[Togel Taiwan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[contato@galile.com.br]]></wp:comment_author_email>
			<wp:comment_author_url>https://datataiwan.azurefd.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-31 08:25:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-30 23:25:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[PG Soft]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dayers1@peoplepc.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://demopgsoft.rest/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-01 00:31:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-31 15:31:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[Togel SDY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thisismy_store@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://pkm-pakuwon.garutkab.go.id/storage/prediksisdy/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-01 02:02:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-31 17:02:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like reading through a post that can make men and women think. Also, thank you for allowing me to comment!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Online Resmi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[5-a333-42e1-8fdf-6712ad232719-000000@us-west-2.amazonses.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://pkm-pakuwon.garutkab.go.id/storage/slotonline/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-02 01:38:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-01 16:38:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some truly excellent info , Gladiolus I noticed this.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mattfasho1769@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d99.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-07 22:32:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-07 13:32:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah bookmaking this wasn’t a risky decision outstanding post!.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[Nolimit City]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tikaamalia629@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4drtp.rest/nolimit.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-08 23:58:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-08 14:58:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i am really happy to read everthing at one place]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[APK Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[riph_tengkleng@yahoo.co.id]]></wp:comment_author_email>
			<wp:comment_author_url>https://playstore.cam/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-10 15:25:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-10 06:25:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You’re a very skilled blogger. I’ve joined your feed and look forward to seeking more of your magnificent post. Also, I’ve shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[Prediksi SGP]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[josejimenez323@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://whoismyag.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-13 09:00:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-13 00:00:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very informative articles or reviews at this time.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[Prediksi HK Malam Ini]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ifttt@gdpr-rep.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://healthy.stpaul.gov/prediksi-hk/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-16 21:01:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-16 12:01:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some truly quality articles on this website , saved to favorites.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[Slot Gacor]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elisabethhays@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://dishut.kalteng.go.id/files/slot-online/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-17 01:07:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-16 16:07:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[Prediksi Japan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yantidek59@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://whoismyag.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-17 23:57:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-17 14:57:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very informative articles or reviews at this time.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[slot gmw]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[whitcomb6609@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4drtp.rest/gmw.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-19 18:29:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-19 09:29:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was beautiful Admin. Thank you for your reflections.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[bambu4d rtp]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[debbie.porter3@comcast.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4drtp.rest/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-25 23:42:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-25 14:42:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah bookmaking this wasn’t a risky decision outstanding post!.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[missderi.putra@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://slotdemo.rest/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-30 09:40:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-30 00:40:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's good, but I still don't understand the purpose of this page posting, no or what and where do they get material like this.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[Octagon Lottery]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mario.esposito@immobiliare.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://octagonlottery.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-06 22:04:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-06 13:04:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I need to to thank you for this fantastic read!! I definitely loved every bit of it. I have you bookmarked to check out new stuff you post?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[22@yahoo.com.tw]]></wp:comment_author_email>
			<wp:comment_author_url>https://bamboo4d.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-09 07:12:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-08 22:12:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was beautiful Admin. Thank you for your reflections.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mranani.helena@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://heylink.me/bambu4d/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-09 09:27:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-09 00:27:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a lot to find out about this subject. I like all the points you made]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Daftar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rootuser@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://snsd.info/go/vipplayer</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-19 00:02:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-18 15:02:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like this web blog very much, Its a really nice spot to read and obtain information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[salsabiilaalmuth@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.madiustangau.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-21 01:31:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-20 16:31:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for a marvelous posting! I genuinely enjoyed reading it, you are a great author.I will always bookmark your blog and will often come back down the road. I want to encourage continue your great job, have a nice weekend!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d Login]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[juniorglenn@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://slot.bio/bambu4d/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-21 07:38:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-20 22:38:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi! I’m at work surfing around your blog from my new iphone 4! Just wanted to say I love reading your blog and look forward to all your posts! Keep up the fantastic work!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[PGSoft]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rooseveltadhiputra@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://linklist.bio/demopg/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-22 03:56:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-21 18:56:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don’t commonly comment but I gotta tell thankyou for the post on this perfect one : D.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[william.jenkins3@btinternet.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://sattarkhan.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-22 21:27:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-22 12:27:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the efforts you have put in this, regards for all the great content.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[juan@andutu.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://karantin.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-22 23:44:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-22 14:44:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For the reason that the admin of this site is working, no uncertainty very quickly it will be renowned, due to its quality contents.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[info@ar.esdifferent.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://link-bambu4d.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-23 03:02:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-22 18:02:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I carry on listening to the reports speak about getting free online grant applications so I have been looking around for the most excellent site to get one. Could you advise me please, where could i get some?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[radnev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.enp-arles.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-27 18:44:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-27 09:44:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You’re a very skilled blogger. I’ve joined your feed and look forward to seeking more of your magnificent post. Also, I’ve shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[Alternatif Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ahmadpitona265@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://bambu4d.vzy.io/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.88.155.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-28 02:33:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-27 17:33:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a lot to find out about this subject. I like all the points you made]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ajay@mintleads.co]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-30 06:28:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-29 21:28:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Its genuinely remarkable post, I have got much clear idea regarding from this post.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[andresyawal@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-31 01:58:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-30 16:58:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You have noted very interesting points! ps decent web site. “Formal education will make you a living self-education will make you a fortune.” by Jim Rohn.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4D]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[DEDISUGIYANTO12@GMAIL.COM]]></wp:comment_author_email>
			<wp:comment_author_url>https://snsd.info/go/slot-online</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-10 02:36:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-09 17:36:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi! I’m at work surfing around your blog from my new iphone 4! Just wanted to say I love reading your blog and look forward to all your posts! Keep up the fantastic work!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[abductor@emirates.net.ae]]></wp:comment_author_email>
			<wp:comment_author_url>https://snsd.info/go/lexitoto</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-13 12:13:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-13 03:13:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gtnunes@tampabay.rr.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://snsd.info/go/lexitoto</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-13 19:30:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-13 10:30:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[clarissa-villarreal92@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.enp-arles.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-22 01:32:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-21 16:32:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very well presented. Every quote was awesome and thanks for sharing the content. Keep sharing and keep motivating others.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>117</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nombre@tuempresa.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-22 10:54:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-22 01:54:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. I learn something totally new and challenging on websites]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[crews.leslie@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-22 20:18:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-22 11:18:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I carry on listening to the reports speak about getting free online grant applications so I have been looking around for the most excellent site to get one. Could you advise me please, where could i get some?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nomail@mail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://indamixworldwide.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-26 05:14:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-25 20:14:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>120</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu 4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[grab.a.bargain2day@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://celebrationofseagrovepotters.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-27 23:40:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-27 14:40:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's good, but I still don't understand the purpose of this page posting, no or what and where do they get material like this.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dwight@thebookouts.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.accstore.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-11-28 16:05:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-11-28 07:05:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i am really happy to read everthing at one place]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lloydllwyd1@aol.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://heylink.me/lexitoto/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-01 16:24:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-01 07:24:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[techblissonline@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://heylink.me/lexitoto/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-01 21:34:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-01 12:34:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Try to slowly read the articles on this website, don't just comment, I think the posts on this page are very helpful, because I understand the intent of the author of this article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[info@wfaanz.org.au]]></wp:comment_author_email>
			<wp:comment_author_url>https://colneradio.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-04 09:37:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-04 00:37:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[284330-1700215200-1700226000@www.unsa-cci.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://amyhanaialiigilliom.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-06 02:58:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-05 17:58:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty! This has been a really wonderful post. Many thanks for providing these details.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[transformice@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://hueshade.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-10 16:01:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-10 07:01:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some truly quality articles on this website , saved to favorites.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[volunteer@citr.ca]]></wp:comment_author_email>
			<wp:comment_author_url>https://hueshade.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-11 09:12:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-11 00:12:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I need to to thank you for this fantastic read!! I definitely loved every bit of it. I have you bookmarked to check out new stuff you post?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[melrer@orange.fr]]></wp:comment_author_email>
			<wp:comment_author_url>https://cavawinery.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-12 11:40:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-12 02:40:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>129</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[leyther@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://gitvconnect.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-17 00:15:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-16 15:15:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>130</wp:comment_id>
			<wp:comment_author><![CDATA[Situs Slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[scott.vogel@newsday.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://datafiz.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-20 00:59:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-19 15:59:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very well presented. Every quote was awesome and thanks for sharing the content. Keep sharing and keep motivating others.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>131</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[haimka@wallashops.co.il]]></wp:comment_author_email>
			<wp:comment_author_url>https://rareheadlines.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.119.96.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-23 02:00:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-22 17:00:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not even know how I ended up here, but I thought this post was great. I don’t know who you are but definitely you’re going to a famous blogger if you aren’t already 😉 Cheers!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>132</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[contact@whoissecure.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://rtplexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-12-28 23:03:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-12-28 14:03:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to all, for the reason that I am genuinely keen of reading this website’s post to be updated on a regular basis. It carries pleasant stuff.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ymail_123456@yahoo.co.jp]]></wp:comment_author_email>
			<wp:comment_author_url>https://apklexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-03 22:17:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-03 13:17:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello colleagues, how is everything, and what you want]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>134</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yegyfabsbafzvnu+@lunn.ch]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-09 21:14:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-09 12:14:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I very delighted to find this internet site on bing, just what I was searching for as well saved to fav]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>135</wp:comment_id>
			<wp:comment_author><![CDATA[RTP Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[info@yversy.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://rtpbambu4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-15 05:27:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-14 20:27:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>136</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fc@bnext.com.tw]]></wp:comment_author_email>
			<wp:comment_author_url>https://rtpbambu4d.xyz/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-16 00:12:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-15 15:12:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great wordpress blog here.. It’s hard to find quality writing like yours these days. I really appreciate people like you! take care]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>137</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[expert@sultangroup.org]]></wp:comment_author_email>
			<wp:comment_author_url>https://joviapartments.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-18 06:29:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-17 21:29:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly appreciate your technique of writing a blog. I added it to my bookmark site list and will]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>138</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jacob.pedersen@thomsonreuters.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://joviapartments.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-19 01:57:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-18 16:57:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>139</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d RTP]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[benadams62982@netzero.net]]></wp:comment_author_email>
			<wp:comment_author_url>https://snsd.info/go/rtpbambu4d</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-19 08:12:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-18 23:12:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some truly quality articles on this website , saved to favorites.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>140</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[goblincafepisa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://collectif12.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-22 08:54:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-21 23:54:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have not checked in here for some time since I thought it was getting boring, but the last few posts are great quality so I guess I’ll add you back to my daily bloglist. You deserve it my friend 🙂]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>141</wp:comment_id>
			<wp:comment_author><![CDATA[RTP Slot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[a.carleo@alice.it]]></wp:comment_author_email>
			<wp:comment_author_url>https://snsd.info/go/rtpbambu4d</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-22 13:19:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-22 04:19:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>142</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pierre.c@yahoo.fr]]></wp:comment_author_email>
			<wp:comment_author_url>https://collectif12.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-25 15:09:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-25 06:09:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I appreciate you sharing this blog post. Thanks Again. Cool.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>143</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ismiqq87@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://montecristoriverlodge.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-26 10:47:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-26 01:47:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very well presented. Every quote was awesome and thanks for sharing the content. Keep sharing and keep motivating others.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[Togel Online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[evanellyhutagalung@rocketmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://visitbandung.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-30 06:22:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-29 21:22:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dead indited articles, Really enjoyed looking through.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>145</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[oleprim@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://innovateactivate.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-30 10:07:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-30 01:07:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I carry on listening to the reports speak about getting free online grant applications so I have been looking around for the most excellent site to get one. Could you advise me please, where could i get some?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>146</wp:comment_id>
			<wp:comment_author><![CDATA[Togel Online]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jordanjobs24@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://visitbandung.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-31 01:34:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-30 16:34:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>147</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[logan@allthedifferences.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://montecristoriverlodge.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-01 01:57:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-31 16:57:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Keep working ,terrific job!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>148</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[davide@ayburistour.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://asteroidsnear.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-03 09:55:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-03 00:55:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like reading through a post that can make men and women think. Also, thank you for allowing me to comment!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>150</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[u003enewsletterunsubscribe@hotel.de]]></wp:comment_author_email>
			<wp:comment_author_url>https://innovateactivate.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-07 09:46:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-07 00:46:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>151</wp:comment_id>
			<wp:comment_author><![CDATA[Bambu4d]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rcgomez2012@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://asteroidsnear.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-13 16:38:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-13 07:38:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some truly quality articles on this website , saved to favorites.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>152</wp:comment_id>
			<wp:comment_author><![CDATA[Lexi Toto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[trishafedewa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-23 06:18:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-22 21:18:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>153</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[416994.1674847272046.javamail.zimbra@markwbutt.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-24 02:44:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-23 17:44:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[actually awesome in support of me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>154</wp:comment_id>
			<wp:comment_author><![CDATA[Lexi Toto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bobdenison@wideband.net.au]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-27 01:25:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-26 16:25:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool that really helps, thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[Lexi Toto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rachmat.setiaji17@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-27 21:47:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-27 12:47:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the content you share is interesting, but for me there is still something missing, because the things discussed above are not important to talk about today.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>156</wp:comment_id>
			<wp:comment_author><![CDATA[Situs Togel]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[office@fokusek.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://viralbanyumas.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.176.139.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-02-29 02:12:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-02-28 17:12:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not even understand how I ended up here, but I assumed this publish used to be great]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[carol_vandyke@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.178.126.148]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-18 03:54:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-17 18:54:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i am really happy to read everthing at one place]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>239</wp:comment_id>
			<wp:comment_author><![CDATA[Prediksi SDY Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[samshofner@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.page/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-02 11:21:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-02 02:21:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great information shared.. really enjoyed reading this post thank you author for sharing this post .. appreciated]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>240</wp:comment_id>
			<wp:comment_author><![CDATA[Prediksi SGP Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[test@test.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.page/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-03 07:20:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-02 22:20:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>246</wp:comment_id>
			<wp:comment_author><![CDATA[Prediksi Togel Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[DWINANTO.HERMAWAN@GMAIL.COM]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.page/?page=livedraw-togel</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-06 08:57:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-05 23:57:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the efforts you have put in this, regards for all the great content.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>251</wp:comment_id>
			<wp:comment_author><![CDATA[Live Draw Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kingdom_child85@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.page/?page=livedraw-togel</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-09 14:04:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-09 05:04:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a lot to find out about this subject. I like all the points you made]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>253</wp:comment_id>
			<wp:comment_author><![CDATA[Data Result Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[MEIRISFARA@GMAIL.COM]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.page/?page=prediksi-togel</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-10 03:58:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-09 18:58:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i am really happy to read everthing at one place]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>256</wp:comment_id>
			<wp:comment_author><![CDATA[RTP Slot Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[joel.bueno5@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://rtp.lexitoto.page/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-13 23:32:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-13 14:32:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[naturally like your web site however you need to take a look at the spelling on several of your posts. A number of them are rife with spelling problems and I find it very bothersome to tell the truth on the other hand I will surely come again again.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>257</wp:comment_id>
			<wp:comment_author><![CDATA[Jadwal Togel Lexitoto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zeeshan223742@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://lexitoto.page/?page=prediksi-togel</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-15 21:08:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-15 12:08:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Keep working ,terrific job!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>261</wp:comment_id>
			<wp:comment_author><![CDATA[Vietnam]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[res.axel@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://vietnamlottery.asia/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.212.147.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-21 09:10:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-21 00:10:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post! We will be linking to this particularly great post on our site. Keep up the great writing]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>284</wp:comment_id>
			<wp:comment_author><![CDATA[Binance注册]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[75540297@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/zh-CN/register?ref=P9L9FQKY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[116.11.144.49]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-20 16:41:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-20 07:41:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>294</wp:comment_id>
			<wp:comment_author><![CDATA[Bonus de parrainage Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[87389474@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/fr/register-person?ref=OMM3XK51</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.88.105]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-27 00:30:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-26 15:30:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>ESP32-WROOM-32 UART1の正しい使い方</title>
		<link>https://tech.blog.uribou.me/available-esp32-uart-ports/</link>
		<pubDate>Sun, 16 Aug 2020 13:55:49 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.blog.uribou.me/?p=2857</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2><strong>UART1はあるけど使用不可</strong>という勘違い</h2>
<!-- /wp:heading -->

<p>ESP32-WROOM-32は、UART0/1/2の3つが使えるはずだったけど、<a href="https://esp32.com/viewtopic.php?t=1457#:~:text=I%20am%20debugging%20ESP32%20with,reset%20pin%20of%20the%20sensor.">ESP32のUART1 RXD/TXDピン周りが内部Flash用に占有されているから使用不可</a>と知り、<a href="https://www.espressif.com/sites/default/files/documentation/esp32-wroom-32_datasheet_en.pdf" data-wplink-edit="true">公式のdatasheet</a>にも以下記載があったので、勝手に <strong>UART1はあっても使用不可</strong> なんだと勘違いしてた。</p>
<p>しかし、本文にもある通り <strong>普通のGPIOとしては使えませんよ</strong> と言っているに過ぎず、 <strong>UART1が使えない</strong> とは言っていない。</p>
<p>結論から言うと、もちろんUART1は使える。</p>

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>ESP32-WROOM-32 integrates a 4 MB SPI flash, which is connected to GPIO6, GPIO7, GPIO8, GPIO9, GPIO10 and GPIO11. These six pins cannot be used as regular GPIOs.</p><cite><a href="https://www.espressif.com/sites/default/files/documentation/esp32-wroom-32_datasheet_en.pdf">esp32-wroom-32_datasheet_en.pdf</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:heading -->
<h2>UART1の使い方</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>いきなり結論から言うと、以下のようにすれば、UART1のTX/RXピンをデフォルトピン以外に割り当てて使用することが可能。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>以下例はUART1のデフォルトのRX/TXピンをGPIO26/27に変更して使用している。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">void setup(void) {
    Serial1.begin(115200, SERIAL_8N1, 26, 27);
}

void loop(void) {
    Serial1.println("hoge");
    Serial1.flush();
    delay(1000);
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>UART1周辺情報の確認</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>まずはdatasheetを確認。以下のようにU1RXD/TXD/RTS/CTSがそれぞれGPIO9/10/11/6にアサインされている。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>公式datasheet記載の通りデフォルトのU1* ピンは全てGPIOとして使用不可なので、どうにかして別のピンに割り当てる必要がある。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2892,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/08/スクリーンショット-2020-08-16-20.24.43-1024x581.png" alt="" class="wp-image-2892" /><figcaption><a href="https://www.espressif.com/sites/default/files/documentation/esp32-wroom-32_datasheet_en.pdf">esp32-wroom-32_datasheet_en.pdf</a> 2.2 Pin Description</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>HardwareSerial クラス定義</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>以降のコードはArduino Framework使用を前提とする。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><em>framework-arduinoespressif32/cores/esp32/HardwareSerial.h</em> を確認すると、以下のようなクラス定義となっている。<em>begin()</em> の <em>rxPin/txPin</em> にGPIO9/10以外のピンを指定すれば良さそうに思える。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>が、その前に <em>HardwareSerial</em> コンストラクタ引数 <em>uart_nr</em> が気になる…。なんだこれ。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">class HardwareSerial: public Stream
{
public:
    HardwareSerial(int uart_nr);

    void begin(unsigned long baud, uint32_t config=SERIAL_8N1, int8_t rxPin=-1, int8_t txPin=-1, bool invert=false, unsigned long timeout_ms = 20000UL);
    ...
};</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>HardwareSerial コンストラクタ実装</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>コンストラクタや <em>begin()</em> は<em> framework-arduinoespressif32/cores/esp32/HardwareSerial.cpp </em>に実装されている。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><em>HardwareSerial Serialx(1);</em> のように自前でインスタンス作っても良いが、<em>Serial1(1)</em> インスタンスに対してそのまま <em>begin() </em>しても良いことがわかる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">#ifndef RX1
#define RX1 9
#endif

#ifndef TX1
#define TX1 10
#endif

#ifndef RX2
#define RX2 16
#endif

#ifndef TX2
#define TX2 17
#endif

#if !defined(NO_GLOBAL_INSTANCES) &amp;&amp; !defined(NO_GLOBAL_SERIAL)
HardwareSerial Serial(0);
HardwareSerial Serial1(1);
HardwareSerial Serial2(2);
#endif

HardwareSerial::HardwareSerial(int uart_nr) : _uart_nr(uart_nr), _uart(NULL) {}

void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, int8_t txPin, bool invert, unsigned long timeout_ms)
{
    if(0 &gt; _uart_nr || _uart_nr &gt; 2) {
        log_e("Serial number is invalid, please use 0, 1 or 2");
        return;
    }
    if(_uart) {
        end();
    }
    if(_uart_nr == 0 &amp;&amp; rxPin &lt; 0 &amp;&amp; txPin &lt; 0) {
        rxPin = 3;
        txPin = 1;
    }
    if(_uart_nr == 1 &amp;&amp; rxPin &lt; 0 &amp;&amp; txPin &lt; 0) {
        rxPin = RX1;
        txPin = TX1;
    }
    if(_uart_nr == 2 &amp;&amp; rxPin &lt; 0 &amp;&amp; txPin &lt; 0) {
        rxPin = RX2;
        txPin = TX2;
    }

    _uart = uartBegin(_uart_nr, baud ? baud : 9600, config, rxPin, txPin, 256, invert);
    ...
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>HardwareSerial::uartBegin() 実装</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>更にFrameworkのコードを遡っていくと、ピンのアサインは以下のように実装されている。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><em>pinMode()</em> の <em>INPUT</em> や <em>OUTPUT</em> や割り込みなど、必要な設定は全て実装されていることがわかる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">uart_t* uartBegin(uint8_t uart_nr, uint32_t baudrate, uint32_t config, int8_t rxPin, int8_t txPin, uint16_t queueLen, bool inverted)
{
    ...
    if(rxPin != -1) {
        uartAttachRx(uart, rxPin, inverted);
    }

    if(txPin != -1) {
        uartAttachTx(uart, txPin, inverted);
    }
}

void uartAttachRx(uart_t* uart, uint8_t rxPin, bool inverted)
{
    if(uart == NULL || rxPin &gt; 39) {
        return;
    }
    pinMode(rxPin, INPUT);
    pinMatrixInAttach(rxPin, UART_RXD_IDX(uart-&gt;num), inverted);
    uartEnableInterrupt(uart);
}

void uartAttachTx(uart_t* uart, uint8_t txPin, bool inverted)
{
    if(uart == NULL || txPin &gt; 39) {
        return;
    }
    pinMode(txPin, OUTPUT);
    pinMatrixOutAttach(txPin, UART_TXD_IDX(uart-&gt;num), inverted, false);
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>まとめ</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>公式ドキュメントとFrameworkのコードはちゃんと読もう。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2857</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 22:55:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-16 13:55:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[available-esp32-uart-ports]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
		<category domain="post_tag" nicename="esp32"><![CDATA[ESP32]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[ESP32-WROOM-32 UART1の正しい使い方]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[ESP32-WROOM-32は、UART0/1/2の3つが使えるはずだったけど、ESP32のUART1 RXD/TXDピン周りが内部Flash用に占有されているから使用不可と知り、公式のdatasheetにも以下記載があったので、勝手に UART1はあっても使用不可 なんだと勘違いしてた。

しかし、本文にもある通り 普通のGPIOとしては使えませんよ と言っているに過ぎず、 UART1が使えない とは言っていない。

結論から言うと、もちろんUART1は使える。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[ESP32,UART,Arduino,Framework]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[2881]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447165]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[Vytvorit bezplatn'y úcet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[53485634@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/sk/register-person?ref=UM6SMJM3</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.84.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-14 01:17:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-13 16:17:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>OSXでRaspberry Pi用カーネルモジュールをコンパイルするには。</title>
		<link>https://tech.blog.uribou.me/osxderaspberry-piyong-kanerumoziyuruwokonpairusuruniha/</link>
		<pubDate>Wed, 14 Oct 2020 02:38:23 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1590</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://tech.blog.uribou.me/raspberry-pi-zero-in-stock/">Raspberry Pi Zero</a>は、まだ届きません。待ち遠しい…。
待ってる間に開発環境をOSXで整備しときます。
Raspberry Pi (raspbian)にはgccも含まれているので、実機上でカーネルもカーネルモジュールもコンパイルできてしまうんですけどね。</p>
<pre><code class="bash">tmp $ gcc --version
gcc (Debian 4.6.3-14+rpi1) 4.6.3
Copyright (C) 2011 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</code></pre>
<p>が、もちろん非力なCPUとメモリなので、PC上でコンパイルしたい。
で、調べたら<a href="http://www.welzels.de/blog/en/arm-cross-compiling-with-mac-os-x/comment-page-1/">ARM Cross Compiling with Mac OS X</a>にOSX用インストーラがアップされていました。linaroってあるけど、linaroがOSXバイナリも提供してるんだろうか…？</p>
<h1>Raspberry Pi用toolchainのインストール</h1>
<p>とりあえず、上記サイトから以下のいずれかをダウンロードして解凍します。</p>
<ul>
<li>arm-linux-gnueabihf-raspbian 4.8 2014.04 for Mac OS X (2308)</li>
<li>arm-linux-gnueabihf-raspbian 4.9 2014.05 for Mac OS X (5485)</li>
</ul>
<p>すると、拡張子が.macのインストーラが生成されるので、ダブルクリックして実行します。
その際、セキュリティ設定が開発元情報ないとインストール許しません状態になっている、セキュリティ意識の高い方は、今回に限り緩めてもらって、<strong>「このまま開く」</strong>ボタンを押してください。</p>
<img src="https://farm9.staticflickr.com/8813/28758234530_ddaace103b_z_d.jpg" alt="" />
<p>あとは「続ける」ボタンを連打するだけ。</p>
<img src="https://farm9.staticflickr.com/8409/28939017062_df4bb53df0_z_d.jpg" alt="" />
<p>インストールが完了したら、<code>~/.bash_profile</code>とか編集して<code>/usr/local/linaro/arm-linux-gnueabihf-raspbian/bin</code>にパスを通しましょう。</p>
<pre><code class="bash">$ cat ~/.bash_profile
export PATH="/usr/local/linaro/arm-linux-gnueabihf-raspbian/bin:$PATH"
</code></pre>
<h1>Raspberry Piカーネルソースの取得とコンパイル</h1>
<p><a href="https://www.raspberrypi.org/documentation/linux/kernel/building.md">Raspberry Pi公式ページ</a>まんまですが、toolchainさえインストールしてパス通しちゃえば、以下のようにしてコンパイル可能です。</p>
<pre><code class="bash">$ git clone --depth=1 https://github.com/raspberrypi/linux rpi_kernel
$ cd rpi_kernel
$ KERNEL=kernel
$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcmrpi_defconfig
$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage modules dtbs
</code></pre>
<p><a href="http://blog.ebiken.me/how-to-linux-char-dev/">http://blog.ebiken.me/how-to-linux-char-dev/</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1590</wp:post_id>
		<wp:post_date><![CDATA[2020-10-14 11:38:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-14 02:38:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[osxderaspberry-piyong-kanerumoziyuruwokonpairusuruniha]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="raspberrypi"><![CDATA[RaspberryPi]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="dian-zi-gong-zuo"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:66:"https://farm9.staticflickr.com/8813/28758234530_ddaace103b_z_d.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/raspberry-pi-zero-in-stock/">Raspberry Pi Zero</a>は、まだ届きません。待ち遠しい…。</p>

<p>待ってる間に開発環境をOSXで整備しときます。</p>

<p>Raspberry Pi (raspbian)にはgccも含まれているので、実機上でカーネルもカーネルモジュールもコンパイルできてしまうんですけどね。</p>

<pre><code class="language-bash">tmp $ gcc --version  
gcc (Debian 4.6.3-14+rpi1) 4.6.3  
Copyright (C) 2011 Free Software Foundation, Inc.  
This is free software; see the source for copying conditions.  There is NO  
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
</code></pre>

<p>が、もちろん非力なCPUとメモリなので、PC上でコンパイルしたい。</p>

<p>で、調べたら<a href="http://www.welzels.de/blog/en/arm-cross-compiling-with-mac-os-x/comment-page-1/">ARM Cross Compiling with Mac OS X</a>にOSX用インストーラがアップされていました。linaroってあるけど、linaroがOSXバイナリも提供してるんだろうか…？</p>

<h1 id="raspberrypitoolchain">Raspberry Pi用toolchainのインストール</h1>

<p>とりあえず、上記サイトから以下のいずれかをダウンロードして解凍します。</p>

<ul>
<li>arm-linux-gnueabihf-raspbian 4.8 2014.04 for Mac OS X (2308)</li>
<li>arm-linux-gnueabihf-raspbian 4.9 2014.05 for Mac OS X (5485)</li>
</ul>

<p>すると、拡張子が.macのインストーラが生成されるので、ダブルクリックして実行します。</p>

<p>その際、セキュリティ設定が開発元情報ないとインストール許しません状態になっている、セキュリティ意識の高い方は、今回に限り緩めてもらって、<strong>「このまま開く」</strong>ボタンを押してください。</p>

<p><img src="https://farm9.staticflickr.com/8813/28758234530_ddaace103b_z_d.jpg" alt="" /></p>

<p>あとは「続ける」ボタンを連打するだけ。</p>

<p><img src="https://farm9.staticflickr.com/8409/28939017062_df4bb53df0_z_d.jpg" alt="" /></p>

<p>インストールが完了したら、<code>~/.bash_profile</code>とか編集して<code>/usr/local/linaro/arm-linux-gnueabihf-raspbian/bin</code>にパスを通しましょう。</p>

<pre><code class="language-bash">$ cat ~/.bash_profile
export PATH="/usr/local/linaro/arm-linux-gnueabihf-raspbian/bin:$PATH"  
</code></pre>

<h1 id="raspberrypi">Raspberry Piカーネルソースの取得とコンパイル</h1>

<p><a href="https://www.raspberrypi.org/documentation/linux/kernel/building.md">Raspberry Pi公式ページ</a>まんまですが、toolchainさえインストールしてパス通しちゃえば、以下のようにしてコンパイル可能です。</p>

<pre><code class="language-bash">$ git clone --depth=1 https://github.com/raspberrypi/linux rpi_kernel
$ cd rpi_kernel
$ KERNEL=kernel
$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcmrpi_defconfig
$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage modules dtbs
</code></pre>

<p><a href="http://blog.ebiken.me/how-to-linux-char-dev/">http://blog.ebiken.me/how-to-linux-char-dev/</a></p>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3319]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3320]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-02-24]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722591162]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3437]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Flaskテスト環境構築は（勉強不足による）ハマりポイント多し。</title>
		<link>https://tech.blog.uribou.me/flask-testing-hamari/</link>
		<pubDate>Wed, 14 Oct 2020 02:38:57 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.uribou.tokyo/?p=1647</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://tech.blog.uribou.me/python-web-application-framework-flask-pluggable-view/">前回</a>、<code>View</code>や<code>MethodView</code>クラスを使って実装を始めたアプリのUIをテストしたい。
と思って、Flaskの<a href="http://flask.pocoo.org/docs/dev/testing/#accessing-and-modifying-sessions">Testing Flask Applications</a>を見ながら実装するも、ハマるハマる。</p>
<h1>sessionに格納した情報を元に動作する関数のテストってどうやるの？</h1>
<p>こうやるんだそうです。</p>
<pre><code class="python">from flask import Flask, session
app = Flask("hoge")
with app.test_client() as c:
    c.get('/login')
    assert session['foo'] == 42
</code></pre>
<p>でも実行してみるとこんなエラーをraiseしてくれちゃいます。なんやこれ。</p>
<pre><code class="bash">bash-3.2$ nosetests
E..
======================================================================
ERROR: test_get (test_api_account.TestAccountApi)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/takashi/Development/necco/test/test_api_account.py", line 59, in test_get
    with c.session_transaction() as ses:
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/Python.framework/Versions/3.5/lib/python3.5/contextlib.py", line 59, in __enter__
    return next(self.gen)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/envs/necco/lib/python3.5/site-packages/flask/testing.py", line 92, in session_transaction
    raise RuntimeError('Session backend did not open a session. '
RuntimeError: Session backend did not open a session. Check the configuration
----------------------------------------------------------------------
Ran 3 tests in 1.200s
FAILED (errors=1)
bash-3.2$ exit
exit
shell returned 1
</code></pre>
<p>ググってみると、Stackoverflowにありがたい記事発見。</p>
<ul>
<li><a href="http://stackoverflow.com/questions/21486400/how-to-test-session-in-flask-resource">How to test session in flask resource</a></li>
</ul>
<blockquote>
  If you did not set a custom app.session_interface, then you forgot to set a secret key
</blockquote>
<p>「SECRET_KEYの設定してないんじゃないの？」というご指摘。あ、確かに。
設定してみると、しっかり動きました。</p>
<h1><code>session</code>を予めログイン済み状態にしてテストしたい</h1>
<pre><code class="python">from flask import Flask
app = Flask("hoge")
with app.test_client() as c:
    with c.session_transaction() as sess:
        sess['username'] = 'hoge_user'
    c.get()
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1647</wp:post_id>
		<wp:post_date><![CDATA[2020-10-14 11:38:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-14 02:38:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[flask-testing-hamari]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="post_tag" nicename="puroguramingu"><![CDATA[プログラミング]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_nelioefi_first_image]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_html_content]]></wp:meta_key>
		<wp:meta_value><![CDATA[<p><a href="http://blog.rinka-blossom.com/python-web-application-framework-flask-pluggable-view/">前回</a>、<code>View</code>や<code>MethodView</code>クラスを使って実装を始めたアプリのUIをテストしたい。</p>

<p>と思って、Flaskの<a href="http://flask.pocoo.org/docs/dev/testing/#accessing-and-modifying-sessions">Testing Flask Applications</a>を見ながら実装するも、ハマるハマる。</p>

<h1 id="session"><code>session</code>に格納した情報を元に動作する関数のテストってどうやるの？</h1>

<p>こうやるんだそうです。</p>

<pre><code class="language-python">from flask import Flask, session  
app = Flask("hoge")

with app.test_client() as c:  
    c.get('/login')
    assert session['foo'] == 42
</code></pre>

<p>でも実行してみるとこんなエラーをraiseしてくれちゃいます。なんやこれ。</p>

<pre><code class="language-bash">bash-3.2$ nosetests  
E..  
======================================================================
ERROR: test_get (test_api_account.TestAccountApi)  
----------------------------------------------------------------------
Traceback (most recent call last):  
  File "/Users/takashi/Development/necco/test/test_api_account.py", line 59, in test_get
    with c.session_transaction() as ses:
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/Python.framework/Versions/3.5/lib/python3.5/contextlib.py", line 59, in __enter__
    return next(self.gen)
  File "/Users/takashi/.anyenv/envs/pyenv/versions/3.5.1/envs/necco/lib/python3.5/site-packages/flask/testing.py", line 92, in session_transaction
    raise RuntimeError('Session backend did not open a session. '
RuntimeError: Session backend did not open a session. Check the configuration

----------------------------------------------------------------------
Ran 3 tests in 1.200s

FAILED (errors=1)  
bash-3.2$ exit  
exit

shell returned 1  
</code></pre>

<p>ググってみると、Stackoverflowにありがたい記事発見。</p>

<ul>
<li><a href="http://stackoverflow.com/questions/21486400/how-to-test-session-in-flask-resource">How to test session in flask resource</a></li>
</ul>

<blockquote>
  <p>If you did not set a custom app.session_interface, then you forgot to set a secret key</p>
</blockquote>

<p>「SECRET_KEYの設定してないんじゃないの？」というご指摘。あ、確かに。</p>

<p>設定してみると、しっかり動きました。</p>

<h1 id="session"><code>session</code>を予めログイン済み状態にしてテストしたい</h1>

<pre><code class="language-python">from flask import Flask  
app = Flask("hoge")

with app.test_client() as c:  
    with c.session_transaction() as sess:
        sess['username'] = 'hoge_user'
    c.get()
</code></pre>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3322]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[3324]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-02-24]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722620243]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>258</wp:comment_id>
			<wp:comment_author><![CDATA[Реферальный код binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[14510219@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.binance.com/ru-UA/register?ref=V2H9AFPY</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.21.89.145]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-18 09:34:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-18 00:34:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your sharing. I am worried that I lack creative ideas. It is your article that makes me full of hope. Thank you. But, I have a question, can you help me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>djangoによる太陽光発電状況モニタリングシステム構築 (1)</title>
		<link>https://tech.blog.uribou.me/django-web-monitoring-solar-1/</link>
		<pubDate>Sun, 04 Oct 2020 02:02:04 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">http://tech.blog.uribou.me/?p=3107</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>これはなに？</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>以前作ったオフグリッドシステムの発電状況監視システムが、keen.io利用コスト増大によりストップしていたので、それを再開すべく自前でデータストレージとAPIサーバを用意してしまおうという試みの軌跡。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>今のところざっくり以下構成を予定。今回は1.Django applicationの構築。</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Django application<ul><li><strong>Rest Frameworkを利用してAPIを作る (今ここ)</strong></li></ul></li><li>AWS EC2,RDS,...<ul><li>Django applicationを稼働させる</li></ul></li><li>Logger application<ul><li>自宅で稼働中の<a href="http://tech.blog.uribou.me/python-driver-for-tsmppt60/">TS-MPPT60</a>が頑張る</li></ul></li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>まずは環境整備</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="http://tech.blog.uribou.me/anyenvhuan-jing-gou-zhu-dehamatuta/">anyenv</a>経由で入れたpyenvで最新（に近い）Pythonをインストールして使う。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">anyenv install pyenv
pyenv install -l | grep -E '^\s*\d' | tail
  3.8.0
  3.8-dev
  3.8.1
  3.8.2
  3.8.3
  3.8.4
  3.8.5
  3.9.0rc1
  3.9-dev
  3.10-dev

pyenv install 3.8.5
pyenv local 3.8.5</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>またはシステムにインストールされたPythonでpipenvを入れて、それ経由で最新（に近い）Pythonをインストールして使うでも良い。npmぽいパッケージ管理ができて便利なので、こちらの方がおすすめ。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ついでにDjangoやREST framework、Lint系ツールも入れておく。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">pyenv local system
pip3 install pipenv
pipenv --python 3.8.5
pipenv install django~=3.1
pipenv install djangorestframework~=3.11
pipenv install --dev autopep8 flake8</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>ここまでくると、pipenvコマンドがPipfileとPipfile.lockが生成されているはず。両方ともgit管理しておき、特にPipfile.lockがあると後で他の開発環境に移行した際に、</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">pipenv sync</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>とするだけで依存パッケージインストールなどが完了するので、おすすめ。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>また、Pipfileの最後に以下のようなコマンドを登録しておくと後々便利。これはnodeのnpmで言うところのpackage.jsonに定義するscriptsと同じなんだけど、こちらの<a href="https://qiita.com/y-tsutsu/items/54c10e0b2c6b565c887a">Qiita記事</a>が詳しい。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">[scripts]
lint = "flake8 ."</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Django project雛形作成</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>まずはprojectの雛形を作る。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">django-admin startproject solar_web_monitor .</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>上記コマンドを実行すると、以下ファイル群が生成されるので、漏れなくgit管理下に置く。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""> manage.py                     |  22 +++++++++++++++
 solar_web_monitor/__init__.py |   0
 solar_web_monitor/asgi.py     |  16 +++++++++++
 solar_web_monitor/settings.py | 120 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 solar_web_monitor/urls.py     |  21 ++++++++++++++
 solar_web_monitor/wsgi.py     |  16 +++++++++++
 6 files changed, 195 insertions(+)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>デフォルトでは言語が英語、TimeZoneがUTCとなっているため、これをそれぞれ日本語と東京に変更する。変更するファイルはプロジェクト下のsettings.pyで、今回で言うとsolar_web_monitor/settings.pyの下記変数にあたる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">LANGUAGE_CODE = 'ja'
TIME_ZONE = 'Asia/Tokyo'</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Django application雛形作成</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>次にProject配下にapplication雛形を作る。ここではとりあえずstorageアプリケーションとした。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">python manage.py startapp storage</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>今回生成されたファイル群も漏れなくgit管理下に置く。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""> storage/__init__.py            | 0
 storage/admin.py               | 3 +++
 storage/apps.py                | 5 +++++
 storage/migrations/__init__.py | 0
 storage/models.py              | 3 +++
 storage/tests.py               | 3 +++
 storage/views.py               | 3 +++
 8 files changed, 18 insertions(+)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>作成したapplicationをprojectに登録する必要がある。具体的には、追加したstorage applicaitonのapps.pyに宣言された<code>StorageConfig</code>クラスへのパス <code>'storage.apps.StorageConfig'</code> を、プロジェクト配下solar_web_monitor/settings.pyの下記変数に追加する。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storage.apps.StorageConfig',
]</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>INSTALLED_APPSとは？</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Django documentationによると以下の通りで、application configuration classを一元管理するリストということみたい。</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><em>A list of strings designating all applications that are enabled in this Django installation. Each string should be a dotted Python path to:</em><br>* <em>an application configuration class (preferred), or</em><br>* <em>a package containing an application.</em><br><br><strong>Use the application registry for introspection</strong><br>Your code should never access&nbsp;<a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-INSTALLED_APPS"><code>INSTALLED_APPS</code></a>&nbsp;directly. Use&nbsp;<a href="https://docs.djangoproject.com/en/3.1/ref/applications/#django.apps.apps"><code>django.apps.apps</code></a>&nbsp;instead.<br><strong>Application names and labels must be unique in&nbsp;</strong><a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-INSTALLED_APPS"><code>INSTALLED_APPS</code></a><br>Application&nbsp;<a href="https://docs.djangoproject.com/en/3.1/ref/applications/#django.apps.AppConfig.name"><code>names</code></a>&nbsp;— the dotted Python path to the application package — must be unique. There is no way to include the same application twice, short of duplicating its code under another name.<br>Application&nbsp;<a href="https://docs.djangoproject.com/en/3.1/ref/applications/#django.apps.AppConfig.label"><code>labels</code></a>&nbsp;— by default the final part of the name — must be unique too. For example, you can’t include both&nbsp;<code>django.contrib.auth</code>&nbsp;and&nbsp;<code>myproject.auth</code>. However, you can relabel an application with a custom configuration that defines a different&nbsp;<a href="https://docs.djangoproject.com/en/3.1/ref/applications/#django.apps.AppConfig.label"><code>label</code></a>.<br><br>These rules apply regardless of whether&nbsp;<a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-INSTALLED_APPS"><code>INSTALLED_APPS</code></a>&nbsp;references application configuration classes or application packages.</p><cite><a href="https://docs.djangoproject.com/en/3.1/ref/settings/#installed-apps" target="_blank" rel="noreferrer noopener" aria-label=" (新しいタブで開く)">https://docs.djangoproject.com/en/3.1/ref/settings/#installed-apps</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>今回追加したstorage applicaitonのapps.pyを覗いてみると、以下のようになっており、</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">from django.apps import AppConfig


class StorageConfig(AppConfig):
    name = 'storage'</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>AppConfigの型情報は以下の通りで、python manage.py startappコマンドで生成した雛形はnameのみオーバーライドしている模様。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">class AppConfig:
    name: str = ...
    module: Optional[Any] = ...
    apps: Optional[Apps] = ...
    label: str = ...
    verbose_name: str = ...
    path: str = ...
    models_module: Optional[str] = ...
    models: Dict[str, Type[Model]] = ...
    def __init__(self, app_name: str, app_module: Optional[Any]) -&gt; None: ...
    @classmethod
    def create(cls, entry: str) -&gt; AppConfig: ...
    def get_model(self, model_name: str, require_ready: bool = ...) -&gt; Type[Model]: ...
    def get_models(self, include_auto_created: bool = ..., include_swapped: bool = ...) -&gt; Iterator[Type[Model]]: ...
    def import_models(self) -&gt; None: ...
    def ready(self) -&gt; None: ...</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>AppConfigクラスの詳細はDjango documentationのApplicationsに記載されている。For application authorsには<code>verbose_name</code>などをオーバーライドして使用する旨が、For application usersにはINSTALLED_APPSにConfigurationを追加する旨が、それぞれ記載されている。</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><strong>For application users</strong><br>If you’re using “Rock ’n’ roll” in a project called <code>anthology</code>, but you want it to show up as “Jazz Manouche” instead, you can provide your own configuration:<br>...<br><br><strong>For application authors</strong><br>If you’re creating a pluggable app called “Rock ’n’ roll”, here’s how you would provide a proper name for the admin:<br>...</p><cite><a href="https://docs.djangoproject.com/en/3.1/ref/applications/">https://docs.djangoproject.com/en/3.1/ref/applications/</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:heading {"level":3} -->
<h3>動作確認</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>とりあえずサーバとして起動することが可能。以下のように起動して、ブラウザで<a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a>にアクセスしてみると…</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ pipenv shell
$ python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).

You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
October 11, 2020 - 08:28:04
Django version 3.1.2, using settings 'solar_web_monitor.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>こうなる。もちろん、このapplicationはまだ何もできない。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3302,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/10/django_template-1024x972.png" alt="" class="wp-image-3302" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Django application管理者の作成</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>先ほど起動したDjango applicationは、バックにDBを持たないので管理者も何もないため、まずは管理ユーザを作成する。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Migration実行</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>runserverコマンド実行時の以下ログが示すように、まずはMigration (DBを作成)する必要がある。</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>以下コマンドでMigrationを実行する。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>このコマンドは、solar_web_monitor/settings.pyのDATABASES設定に従い、DB tableを作成する。デフォルトのBackendはSQLite3、生成先はBASE_DIR下の db.sqlite3 となっているので、Migration実行後にlsコマンド等で確認すると db.sqlite3 ファイルが確認できる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ ls db.*
db.sqlite3</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>試しに db.sqplite3 の中身を覗いてみると、以下のようにMigration実行済みログが記録されていたりする。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ sqlite3 db.sqlite3
sqlite&gt; .tables
auth_group                  auth_user_user_permissions
auth_group_permissions      django_admin_log          
auth_permission             django_content_type       
auth_user                   django_migrations         
auth_user_groups            django_session            
sqlite&gt; select * from django_migrations;
1|contenttypes|0001_initial|2020-10-10 23:53:54.822684
2|auth|0001_initial|2020-10-10 23:53:54.837731
3|admin|0001_initial|2020-10-10 23:53:54.850714
4|admin|0002_logentry_remove_auto_add|2020-10-10 23:53:54.865741
5|admin|0003_logentry_add_action_flag_choices|2020-10-10 23:53:54.899030
6|contenttypes|0002_remove_content_type_name|2020-10-10 23:53:54.921581
7|auth|0002_alter_permission_name_max_length|2020-10-10 23:53:54.935835
8|auth|0003_alter_user_email_max_length|2020-10-10 23:53:54.950635
9|auth|0004_alter_user_username_opts|2020-10-10 23:53:54.965674
10|auth|0005_alter_user_last_login_null|2020-10-10 23:53:54.979275
11|auth|0006_require_contenttypes_0002|2020-10-10 23:53:54.981283
12|auth|0007_alter_validators_add_error_messages|2020-10-10 23:53:54.992594
13|auth|0008_alter_user_username_max_length|2020-10-10 23:53:55.002950
14|auth|0009_alter_user_last_name_max_length|2020-10-10 23:53:55.013722
15|auth|0010_alter_group_name_max_length|2020-10-10 23:53:55.024352
16|auth|0011_update_proxy_permissions|2020-10-10 23:53:55.032315
17|auth|0012_alter_user_first_name_max_length|2020-10-10 23:53:55.043150
18|sessions|0001_initial|2020-10-10 23:53:55.046499</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>createsuperuserコマンド実行</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>以下コマンドを実行すると、管理ユーザを作成できる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ python manage.py createsuperuser
ユーザー名 (leave blank to use 'takashi'): 
メールアドレス: xxx@example.com
Password: 
Password (again): 
Superuser created successfully.</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>これも同様にdb.sqlite3に記録されていることがわかる。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ sqlite3 db.sqlite3 
SQLite version 3.28.0 2019-04-15 14:49:49
Enter ".help" for usage hints.        
sqlite&gt; select * from auth_user;
1|pbkdf2_sha256$216000$1DWvvuuF0y4R$ZQsZUSU9QBdZlcQPZ/lKigkkS6ccJqu1DJn1RhhPIt4=||1|takashi||xxx@example.com|1|1|2020-10-11 00:13:57.001539|</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>動作確認</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>ここまでで、Django applicationの管理画面にログインすることができる。試しに以下ログのURLに admin/login を加え、 <a href="http://127.0.0.1:8000/admin/login/">http://127.0.0.1:8000/admin/login/</a> にアクセスしてみると、</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
October 11, 2020 - 09:19:03
Django version 3.1.2, using settings 'solar_web_monitor.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>こうなる。createsuperuser コマンド実行時に指定したユーザ名とパスワードを入力してログインすると、</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3313,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/10/django_admin-1024x892.png" alt="" class="wp-image-3313" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>こうなる。ユーザやグループの設定といった基本操作しかできない。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3314,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://tech.blog.uribou.me/wp-content/uploads/sites/2/2020/10/django_admin_login-1024x1012.png" alt="" class="wp-image-3314" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>まとめ</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>長くなってきたので、続きはまた次回。<br>次はModel（DBのTable、というよりRecordの定義のようなものと理解している）を作成してMigrationまでしたい。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3107</wp:post_id>
		<wp:post_date><![CDATA[2020-10-04 11:02:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-04 02:02:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[django-web-monitoring-solar-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
		<category domain="category" nicename="%e9%9b%bb%e5%ad%90%e5%b7%a5%e4%bd%9c"><![CDATA[電子工作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[djangoによる太陽光発電状況モニタリングシステム構築]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[太陽光,発電,オフグリッド,solar,energy,offgrid]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1968]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-3107]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722462171]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>273</wp:comment_id>
			<wp:comment_author><![CDATA[Referal Binance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[81881002@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/id/register?ref=JHQQKNKN</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.142.221.77]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-27 18:23:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-27 09:23:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your article helped me a lot, is there any more related content? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>NURO光 + RTX830でVPNが使えるようにする</title>
		<link>https://tech.blog.uribou.me/nuro-rtx830/</link>
		<pubDate>Sat, 26 Feb 2022 06:57:37 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">https://tech.blog.uribou.me/?p=3480</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>前置き</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>我が家にNURO光が来た！</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>本来はルータ不要（RTX830ある）、WiFi不要（メッシュある）、モデムだけ欲しかったんだけど…　一体型のみ利用可なので、しぶしぶミニマム仕様のSGP200Wを選び、昨日無事設置完了。ルータ直結時の速度計測は700Mbps超えていて、速度面は大満足。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3544,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-26-22.44.45-1-1024x676.png" alt="" class="wp-image-3544" /><figcaption><a href="https://fast.com/ja/">https://fast.com/ja/</a></figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>速度面は満足だが、外部から自宅へのL2TP/IPsec接続環境は捨て難いので、維持したい。でも、SGP200W内部のモデムをRTX830に直結することはできない。さて、どうするか…。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>参考サイトの情報を見ると、どうやらRTX830をDMZに割り当てて、外部からのアクセスをRTX830に向けることで、VPN接続環境を実現できるらしい。早速試してみると、無事VPN接続することができた。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>その設定手順を忘れないうちにメモしておく。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>ネットワーク構成</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>取り急ぎ、簡易的にネットワーク構成を書き出してみた。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">インターネット
└── (x.x.x.x @WAN) SGP200W (192.168.2.1 @LAN)
                       ├── (192.168.2.2 @WAN) RTX830 (192.168.1.1 @LAN)
                       │                         ├── (192.168.1.x @LAN) WN-DX1300GNEX (メッシュWiFi)
                       │                         └── (192.168.1.x @LAN) Samba, Jenkinsなど
                       └── (192.168.2.x @LAN) FireTV ドングルなど</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>SGP200W (<code>192.168.2.0/24</code>)、RTX830 (<code>192.168.1.0/24</code>) 共に、DPCHサーバ機能を有したまま運用する。速度優先機器は前者、外部からVPN接続して制御したい機器は後者に配置する。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>上記構成でメッシュWiFi APに接続、速度計測すると、50〜70Mbps程度しか出ない。SGP200Wに直結すれば、700Mbps程度出る。計測は<a href="https://fast.com/ja/">FastCOM powered by NETFLIX</a>で実施した。FireTVドングルを<code>192.168.2.x</code>下に接続したのはこれが理由。(宅内配線のLANケーブルがCAT5以下っぽいな…)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>念のため、以下に全機器のスループット理論値をメモしておく。</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://www.nuro.jp/article/router/#:~:text=%E3%81%BF%E3%81%BE%E3%81%97%E3%82%87%E3%81%86%E3%80%82-,NURO%20%E5%85%89%E3%81%AEONU%EF%BC%88%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC%EF%BC%89%E6%AF%94%E8%BC%83,-%E3%81%BE%E3%81%9A%E3%81%AF%E3%80%81%E4%BB%A5%E4%B8%8B%E3%81%AE">SGP200W</a> 有線2Gbps, 無線1.3Gbps</li><li><a href="https://network.yamaha.com/products/routers/rtx830/index">RTX830</a> 有線2Gbps (VPN 1Gbps)</li><li><a href="https://www.iodata.jp/product/network/wnlan/wn-dx1300gnex/#:~:text=WN%2DDX1300GNEX%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA%E3%81%AFIEEE802,%E6%B8%88%E3%81%BF%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%83%A2%E3%83%87%E3%83%AB%E3%81%A7%E3%81%99%E3%80%82">WN-DX1300GNEX</a> 無線867Mbps</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>設定手順</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>一旦、既存の<code>192.168.1.0/24</code>下にあるPCでブラウザ起動し、RTX830管理画面　<code><a href="http://192.168.1.1">http://192.168.1.1</a></code> でWAN側のMACアドレスを取得、メモしておく。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3664,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4660-1.jpg" alt="" class="wp-image-3664" /></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>SGP200Wの設定</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>SGP200Wに接続するため、SGP200W本体側面に記載されたSSID/WPA keyに接続する。出荷状態のLAN側のデフォルトIPアドレスは<code>192.168.1.1</code>なので、ブラウザで<code><a href="http://192.168.1.1">http://192.168.1.1</a></code>にアクセスし、NURO説明書に記載のアカウント、パスワードを入力してログインする。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3727,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-26-16.50.39-1-1024x219.png" alt="" class="wp-image-3727" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>LAN &gt; LANホスト設定　で、プライマリIPアドレスを<code>192.168.2.1</code>に変更して適用し、<code><a href="http://192.168.2.1">http://192.168.2.1</a></code>にログインし直す。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3787,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-26-16.31.13-1-1024x385.png" alt="" class="wp-image-3787" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>LAN &gt; DHCPサーバ設定 で、IPアドレスの開始と終了を適宜設定する。<br>（<code>192.168.1.200</code>以上は将来別用途を想定して予約）</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4748,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-13.27.09-1-1024x539.png" alt="" class="wp-image-4748" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>LAN &gt; DHCPスタティックIP設定 で、RTX830のWAN側MACアドレスを<code>192.168.2.2</code>に割り当てる。<br>（SGP200W DHCPアドレスrange外のアドレスを割り当てた）</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3742,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-26-16.35.05-1024x373.png" alt="" class="wp-image-3742" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>転送ルール &gt; DMZ設定 で新規作成ボタンを押し、DMZを有効にするにチェックを入れ、WAN名は選択肢が1個しかないのでそれを選択、DHCPスタティックIP設定でRTX830に割り当てた<code>192.168.2.2</code>をホストアドレスとして入力し、適用する。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3822,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-26-16.44.19-1024x447.png" alt="" class="wp-image-3822" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>ここまで来たら、RTX830のWANポートと、SGP200WのLANポートをCAT 5e以上のLANケーブルで接続する。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>RTX830の設定</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>再び<code>192.168.1.0/24</code>下にあるPCでブラウザ起動し、RTX830管理画面　<code><a href="http://192.168.1.1">http://192.168.1.1</a></code> を開き、かんたん設定 &gt; プロバイダー接続 を選択、新規ボタンを押す。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ここで、設定の一覧に既存のWANインタフェース設定がある場合は、後工程で選択肢がグレーアウトしていることがあるので、削除する。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3942,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4661.jpg" alt="" class="wp-image-3942" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>削除した場合はこうなる。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4034,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4674.jpg" alt="" class="wp-image-4034" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>新規ボタンを押した後に表示される画面で、WANを選択して次へ。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4051,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4675.jpg" alt="" class="wp-image-4051" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>回線状況を自動判別してくれる。しばらく待った後、DHCP利用可能と表示されたら次へ。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4058,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4677.jpg" alt="" class="wp-image-4058" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>DHCPによる接続を選択して、次へ。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4078,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4678.jpg" alt="" class="wp-image-4078" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>設定名を入力し、DHCPクライアントを選択して次へ。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4095,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4679.jpg" alt="" class="wp-image-4095" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>DNSサーバアドレスを指定しない (指定したい場合は入力) を選択して次へ。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4109,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4680.jpg" alt="" class="wp-image-4109" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>推奨のIPフィルターを設定、または設定しないを選択して次へ。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4125,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4681.jpg" alt="" class="wp-image-4125" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>設定内容の確認画面が表示されるので、確認後、設定の確定ボタンを押す。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4141,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4682.jpg" alt="" class="wp-image-4141" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>設定が確定する。この時点では接続状態が<code>0.0.0.0</code>と表示されているが、画面更新すると、SGP200Wで設定した固定IPが反映されたことを確認できる。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4218,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4683-1.jpg" alt="" class="wp-image-4218" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":4221,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4684-1.jpg" alt="" class="wp-image-4221" /></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":4} -->
<h4>VPN(L2TP/IPsec)設定</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>事前に設定済みだったVPN設定手順も記載しておく。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>かんたん設定 &gt; VPN &gt; リモートアクセス を選択、共通設定の設定ボタンを押す。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4239,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4685-2.jpg" alt="" class="wp-image-4239" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>以下にチェックを入れて、認証鍵 (pre-shared key) に任意の文字列を入力する。後でPC等からVPN接続する際に使用するので、入力した値を覚えておく。認証/暗号アルゴリズム、方式は以下に示す値を選択し (全てを検証しきれていない) 、次へを押して、設定を確定する。</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>L2TP/IPsecを使用する</li></ul>
<!-- /wp:list -->

<!-- wp:image {"id":4263,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4690.jpg" alt="" class="wp-image-4263" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>次に、登録ユーザの追加、変更設定ボタンを押す。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4323,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4685.jpg" alt="" class="wp-image-4323" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>ユーザ名とパスワードを入力して次へを押し、設定を確定する。入力した値を覚えておく。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4334,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/IMG_4688.jpg" alt="" class="wp-image-4334" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>VPN接続確認</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>macOS Big Sur 11.6.4環境でのみ確認。<br>話は逸れるが、Montereyへのアップデートはいつになることやら…</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/twitter {"url":"https:\/\/twitter.com\/applechinfo\/status\/1477531286378061824?s=20\u0026amp;t=fOyUTxyiQpDGSuRgwdXfPA","type":"rich","providerNameSlug":"twitter","className":""} -->
<figure class="wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter"><div class="wp-block-embed__wrapper">
https://twitter.com/applechinfo/status/1477531286378061824?s=20&amp;t=fOyUTxyiQpDGSuRgwdXfPA
</div></figure>
<!-- /wp:core-embed/twitter -->

<!-- wp:paragraph -->
<p>自宅ネットワーク外から接続するため、スマホにHotspot接続する。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4389,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-13.46.46.png" alt="" class="wp-image-4389" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>システム環境設定のネットワークを開き、</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4383,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-13.58.13-1010x1024.png" alt="" class="wp-image-4383" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>VPNインターフェイス (VPNタイプ: L2TP over IPSec) を追加、作成する。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4417,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-15.14.44-1024x903.png" alt="" class="wp-image-4417" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>作成したVPN接続インターフェイスを選択して、構成はデフォルトを選択、サーバアドレス、アカウント名を入力する。<br>サーバアドレスは、SGP200W管理画面に表示されるWAN側IPアドレスを入力する。アカウント名は、RTX830のVPN(L2TP/IPsec)設定で設定したユーザ名を入力して、認証設定ボタンを押す。<br>DDNSサービスを利用している場合は、それをサーバアドレスとして入力する。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4864,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-15.11.52-1-1024x903.png" alt="" class="wp-image-4864" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":4454,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-15.18.05-1024x272.png" alt="" class="wp-image-4454" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>ユーザ認証パスワード、コンピュータ認証共有シークレットには、それぞれ以下を入力してOKボタンを押す。</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>RTX830のVPN(L2TP/IPsec)登録ユーザ設定のパスワード</li><li>RTX830のVPN(L2TP/IPsec)共通設定の認証鍵 (pre-shared key) </li></ul>
<!-- /wp:list -->

<!-- wp:image {"id":4513,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-13.52.02-1024x903.png" alt="" class="wp-image-4513" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>その後、接続ボタンを押すと、</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4848,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-15.11.52-2-1-1024x903.png" alt="" class="wp-image-4848" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>以下のように接続される。RTX830のDHCPで割り当てられたIPアドレスが表示されることが確認できる。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4845,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-13.52.26-1024x903.png" alt="" class="wp-image-4845" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>この状態で、例えば <code>ssh -i ~/.ssh/id_ecdsa takashi@192.168.1.5</code> 等とすれば、以下のようにVPN経由で自宅サーバにログインできる。</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":4584,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://tech.blog.uribou.me/wp-content/uploads/sites/2/2022/02/スクリーンショット-2022-02-27-13.55.33-1024x781.png" alt="" class="wp-image-4584" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>まとめ</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>設定手順メモのつもりが、かなりのボリュームになってしまった…。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考サイト</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://mono96.jp/network/yamaha/41783/">Nuro光 + RTX1200 で VPNが使えるようにする（一部制限あり）- 逸般の誤家庭 向け情報</a></li><li><a href="https://4mo.co/nuro-onu-with-your-own-router/">NURO光でも自前ルーター(YAMAHA NVR500)を使う</a></li><li><a href="https://qiita.com/hellfire/items/e10bf16bfffdf21d30f6">ONUとルータがくっついてるやつをどうにかする</a></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3480</wp:post_id>
		<wp:post_date><![CDATA[2022-02-26 15:57:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-26 06:57:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nuro-rtx830]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="nuro"><![CDATA[NURO]]></category>
		<category domain="post_tag" nicename="rtx830"><![CDATA[RTX830]]></category>
		<category domain="post_tag" nicename="yamaha"><![CDATA[YAMAHA]]></category>
		<category domain="post_tag" nicename="%e3%82%a4%e3%83%b3%e3%82%bf%e3%83%bc%e3%83%8d%e3%83%83%e3%83%88"><![CDATA[インターネット]]></category>
		<category domain="post_tag" nicename="%e3%83%8d%e3%83%83%e3%83%88%e3%83%af%e3%83%bc%e3%82%af"><![CDATA[ネットワーク]]></category>
		<category domain="category" nicename="%e3%83%8d%e3%83%83%e3%83%88%e3%83%af%e3%83%bc%e3%82%af"><![CDATA[ネットワーク]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3481]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[NURO光 + RTX830でVPNが使えるようにする]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[外部から自宅へのL2TP/IPsec接続環境は維持したい。しかし、SGP200Wのモデム機能のみをRTX830に直結することはできない。
そこで、SGP200WのDMZ機能を使用し、外部からのアクセスをRTX830に向けることで、無事VPN接続できた。
その設定手順を忘れないうちにメモしておく。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[NURO,RTX830,VPN]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722605565]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3a77420ccaf4583e341d53404390d485]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" data-width="550" data-dnt="true"><p lang="ja" dir="ltr">Apple M1チップ搭載のMacをmacOS 12 Montereyへアップグレードすると、UVC対応のWebカメラやキャプチャーデバイスが検出できなくなる不具合が確認されているとして各メーカーが警告。 <a href="https://t.co/oHsH6ALAR0">https://t.co/oHsH6ALAR0</a> <a href="https://t.co/oO8zkFUlZo">pic.twitter.com/oO8zkFUlZo</a></p>&mdash; Appleちゃんねる (@applechinfo) <a href="https://twitter.com/applechinfo/status/1477531286378061824?ref_src=twsrc%5Etfw">January 2, 2022</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_3a77420ccaf4583e341d53404390d485]]></wp:meta_key>
		<wp:meta_value><![CDATA[1645948061]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-3480]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4854]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4855]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4858]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4859]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4860]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4861]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_included_reference]]></wp:meta_key>
		<wp:meta_value><![CDATA[4862]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>263</wp:comment_id>
			<wp:comment_author><![CDATA[Binance 註冊]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[9984354@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://accounts.binance.com/zh-TC/register?ref=53551167</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.84.85.11]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-05-22 22:06:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-05-22 13:06:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the title of your article matches the content lol. Just kidding, mainly because I had some doubts after reading the article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>ヒューマンアカデミー ロボット教室で使用するアプリに保存したプログラムをbackup/restoreするには</title>
		<link>https://tech.blog.uribou.me/human-academy-robot-tablet/</link>
		<pubDate>Sat, 02 Apr 2022 15:50:27 +0000</pubDate>
		<dc:creator><![CDATA[takashi]]></dc:creator>
		<guid isPermaLink="false">https://tech.blog.uribou.me/?p=4871</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>娘が通うロボット教室、ヒューマンアカデミー。晴れてミドルコースに進み、ロボットプログラミング専用タブレットをいただきました。</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/twitter {"url":"https:\/\/twitter.com\/human_CECoE\/status\/1509822092749189125?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1509822092749189125%7Ctwgr%5E%7Ctwcon%5Es1_\u0026amp;ref_url=https%3A%2F%2Fpublish.twitter.com%2F%3Fquery%3Dhttps3A2F2Ftwitter.com2Fhuman_CECoE2Fstatus2F1509822092749189125widget%3DTweet","type":"rich","providerNameSlug":"twitter","className":""} -->
<figure class="wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter"><div class="wp-block-embed__wrapper">
https://twitter.com/human_CECoE/status/1509822092749189125?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1509822092749189125%7Ctwgr%5E%7Ctwcon%5Es1_&amp;ref_url=https%3A%2F%2Fpublish.twitter.com%2F%3Fquery%3Dhttps3A2F2Ftwitter.com2Fhuman_CECoE2Fstatus2F1509822092749189125widget%3DTweet
</div></figure>
<!-- /wp:core-embed/twitter -->

<!-- wp:paragraph -->
<p>ただ、このタブレットにインストールされたロボットプログラミング用アプリ、作成したプログラムに名前を付けることができず、プログラムNoと保存した日付のみで管理する仕様のため、将来的に間違えて上書きする事故が確実に発生する…。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>せめて作成したプログラムのバックアップを取れないだろうか？と調べてみたら意外と簡単にできたので、その手順をメモすることにした。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>まず、Android StudioやSDK等をインストールして、adbコマンドを使用可能にしたら、以下コマンドを実行する。引数に指定するpackage名は、事前にadb shellでshellに入り、topコマンド等で調べた。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">adb backup -apk jp.co.vstone.myapplicationgl2</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>上記実行すると、コマンド実行したディレクトリ下に backup.ab ファイルが生成される。これを元にアプリとデータをリストアするには以下コマンドを実行すれば良いはずだが、その後もアプリが正常動作可能か確信がないため、怖くてやっていない。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ adb restore backup.ab</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>backup.ab がどんなファイルを内包しているか、気になる場合は以下コマンドを実行すれば良い。ただし、実行するにはJava Runtimeと<a href="https://github.com/nelenkov/android-backup-extractor">abe (android backup extractor)</a>が必要。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ java -jar abe.jar unpack backup.ab backup.tar ""
$ tar xvf backup.tar
$ tree apps
apps
└── jp.co.vstone.myapplicationgl2
    ├── _manifest
    ├── a
    │   └── RobotSchool.apk
    ├── f
    │   ├── PROGRAM01.SEQ
    │   ├── PROGRAM02.SEQ
    │   ├── PROGRAM03.SEQ
    │   ├── PROGRAM04.SEQ
    │   ├── PROGRAM05.SEQ
    │   ├── PROGRAM06.SEQ
    │   ├── PROGRAM07.SEQ
    │   ├── PROGRAM08.SEQ
    │   ├── PROGRAM09.SEQ
    │   └── TEMPLETE.SEQ
    └── sp
        └── jp.co.vstone.myapplicationgl2_preferences.xml

4 directories, 13 files</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>試しにプログラムNo.9を保存直後にバックアップしてみると、上記PROGRAM09.SEQが生成されたbackup.abが取得できたので、ちゃんと取れてそう。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ちなみに各ファイルは以下のようにhuman readableではないので、中身まで解析する気は全く無い。</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"shell"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">$ hexdump -C apps/jp.co.vstone.myapplicationgl2/f/PROGRAM02.SEQ 
00000000  ac ed 00 05 75 72 00 30  5b 4c 6a 70 2e 63 6f 2e  |....ur.0[Ljp.co.|
00000010  76 73 74 6f 6e 65 2e 6d  79 61 70 70 6c 69 63 61  |vstone.myapplica|
00000020  74 69 6f 6e 67 6c 32 2e  55 6e 64 6f 24 55 6e 64  |tiongl2.Undo$Und|
00000030  6f 42 75 66 66 65 72 3b  6b 98 7c 6e 9c 87 ea 38  |oBuffer;k.|n...8|
00000040  02 00 00 78 70 00 00 00  01 73 72 00 2d 6a 70 2e  |...xp....sr.-jp.|
00000050  63 6f 2e 76 73 74 6f 6e  65 2e 6d 79 61 70 70 6c  |co.vstone.myappl|
00000060  69 63 61 74 69 6f 6e 67  6c 32 2e 55 6e 64 6f 24  |icationgl2.Undo$|
00000070  55 6e 64 6f 42 75 66 66  65 72 56 d0 e5 86 8f 78  |UndoBufferV....x|
00000080  3c 93 02 00 09 49 00 05  67 72 6f 75 70 49 00 04  |&lt;....I..groupI..|
00000090  6e 65 78 74 46 00 02 74  68 5a 00 0b 75 73 65 4f  |nextF..thZ..useO|
000000a0  75 74 46 61 6c 73 65 46  00 01 78 46 00 01 79 5b  |utFalseF..xF..y[|
000000b0  00 05 63 68 69 6c 64 74  00 02 5b 49 5b 00 09 73  |..childt..[I[..s|
000000c0  6c 6f 74 49 6e 64 65 78  71 00 7e 00 03 4c 00 04  |lotIndexq.~..L..|
000000d0  74 79 70 65 74 00 12 4c  6a 61 76 61 2f 6c 61 6e  |typet..Ljava/lan|
000000e0  67 2f 53 74 72 69 6e 67  3b 78 70 00 00 00 00 ff  |g/String;xp.....|
000000f0  ff ff ff 00 00 00 00 00  42 4e 00 00 40 55 55 4d  |........BN..@UUM|
00000100  75 72 00 02 5b 49 4d ba  60 26 76 ea b2 a5 02 00  |ur..[IM.`&amp;v.....|
00000110  00 78 70 00 00 00 00 75  71 00 7e 00 06 00 00 00  |.xp....uq.~.....|
00000120  00 74 00 09 62 74 6e 5f  73 74 61 72 74           |.t..btn_start|
0000012d</pre>
<!-- /wp:enlighter/codeblock -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4871</wp:post_id>
		<wp:post_date><![CDATA[2022-04-03 00:50:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-02 15:50:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[human-academy-robot-tablet]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2"><![CDATA[ソフトウェア]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_comment_form_freeze]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[comment_form_freeze_message]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_ads_removed_in_page]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noindex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_nofollow]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[page_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[is_noamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_enable]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_name]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[the_review_rate]]></wp:meta_key>
		<wp:meta_value><![CDATA[2.5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_db2fde7a302542fcad074e85a4c3b83c]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" data-width="550" data-dnt="true"><p lang="ja" dir="ltr">／<br>プログラミング教育の目的や内容とは<br>＼<br>小学校のプログラミング教育必修化で子どもたちは何を学ぶのでしょうか？<br>プログラマーのような技術を身につけることではない、<br>小学校で学ぶプログラミング教育の内容とは？<a href="https://t.co/BHdioFwjol">https://t.co/BHdioFwjol</a><a href="https://twitter.com/hashtag/%E3%81%93%E3%81%A9%E3%82%82%E7%B7%8F%E7%A0%94?src=hash&amp;ref_src=twsrc%5Etfw">#こども総研</a> <a href="https://twitter.com/hashtag/%E6%95%99%E8%82%B2?src=hash&amp;ref_src=twsrc%5Etfw">#教育</a> <a href="https://twitter.com/hashtag/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0?src=hash&amp;ref_src=twsrc%5Etfw">#プログラミング</a> <a href="https://twitter.com/hashtag/%E3%83%AD%E3%83%9C%E3%83%83%E3%83%88?src=hash&amp;ref_src=twsrc%5Etfw">#ロボット</a> <a href="https://twitter.com/hashtag/%E5%B0%8F%E5%AD%A6%E7%94%9F?src=hash&amp;ref_src=twsrc%5Etfw">#小学生</a></p>&mdash; ヒューマンアカデミーこども教育総合研究所【公式】 (@human_CECoE) <a href="https://twitter.com/human_CECoE/status/1509822092749189125?ref_src=twsrc%5Etfw">April 1, 2022</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_db2fde7a302542fcad074e85a4c3b83c]]></wp:meta_key>
		<wp:meta_value><![CDATA[1648914861]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_following_users]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[update_level]]></wp:meta_key>
		<wp:meta_value><![CDATA[high]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_pinterest]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_engagement_total]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_nc_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1722447167]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[fitspresso coffee scam amazon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chasity_qui@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://fitspresso-reviews.shop/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.150.206.35]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-17 13:35:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-17 04:35:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your blog is so much more than just a collection of posts It's a community of like-minded individuals spreading optimism and kindness]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>206</wp:comment_id>
			<wp:comment_author><![CDATA[cerebrozen]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ismael_dolores@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://cerebrozen-reviews.shop/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.251.255.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-04 03:22:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-03 18:22:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I truly admired the work you've put in here. The design is refined, your authored material stylish, however, you seem to have acquired some trepidation about what you intend to present next. Undoubtedly, I'll revisit more regularly, similar to I have nearly all the time, in the event you sustain this rise.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>209</wp:comment_id>
			<wp:comment_author><![CDATA[zencortex reviews]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[olga_at@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://zencortex-reviews.shop/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.251.255.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-05 09:44:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-05 00:44:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This website is an absolute gem! The content is incredibly well-researched, engaging, and valuable. I particularly enjoyed the [specific section] which provided unique insights I haven't found elsewhere. Keep up the amazing work!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>216</wp:comment_id>
			<wp:comment_author><![CDATA[ZenCortex buy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kaitlin_animi@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://zencortex-reviews.shop/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.251.255.66]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-04-10 09:07:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-04-10 00:07:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been visiting this site for years, and it never fails to impress me with its fresh perspectives and wealth of knowledge. The attention to detail and commitment to quality is evident. This is a true asset for anyone seeking to learn and grow.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
				</channel>
</rss>
	